{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 774.026425,
                    "min": 587.645436,
                    "p50": 664.944134,
                    "p95": 774.026425,
                    "p99": 774.026425,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 308.41508799999997,
                    "min": 281.220935,
                    "p50": 306.025911,
                    "p95": 308.41508799999997,
                    "p99": 308.41508799999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 485.74697999999995,
                    "min": 451.733192,
                    "p50": 476.52092,
                    "p95": 485.74697999999995,
                    "p99": 485.74697999999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 429.235994,
                    "min": 378.438159,
                    "p50": 422.16340299999996,
                    "p95": 429.235994,
                    "p99": 429.235994,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 340.490979,
                    "min": 296.424831,
                    "p50": 329.66833299999996,
                    "p95": 340.490979,
                    "p99": 340.490979,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 392.38332199999996,
                    "min": 372.654026,
                    "p50": 385.038799,
                    "p95": 392.38332199999996,
                    "p99": 392.38332199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 452.210834,
                    "min": 432.940291,
                    "p50": 444.563916,
                    "p95": 452.210834,
                    "p99": 452.210834,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.81633499999998,
                    "min": 89.69140499999999,
                    "p50": 127.798048,
                    "p95": 129.81633499999998,
                    "p99": 129.81633499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.106676,
                    "min": 143.640985,
                    "p50": 158.246847,
                    "p95": 160.106676,
                    "p99": 160.106676,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 188.974706,
                    "min": 150.444355,
                    "p50": 180.67656599999998,
                    "p95": 188.974706,
                    "p99": 188.974706,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1189.157925,
                    "min": 590.4092519999999,
                    "p50": 637.126208,
                    "p95": 1189.157925,
                    "p99": 1189.157925,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 391.767947,
                    "min": 199.14584299999999,
                    "p50": 210.90276,
                    "p95": 391.767947,
                    "p99": 391.767947,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1054.6876909999999,
                    "min": 538.670022,
                    "p50": 554.864437,
                    "p95": 1054.6876909999999,
                    "p99": 1054.6876909999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 507.40996099999995,
                    "min": 236.430677,
                    "p50": 275.948933,
                    "p95": 507.40996099999995,
                    "p99": 507.40996099999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 451.068579,
                    "min": 226.05577599999998,
                    "p50": 243.530959,
                    "p95": 451.068579,
                    "p99": 451.068579,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.48755599999998,
                    "min": 106.53183,
                    "p50": 136.88502499999998,
                    "p95": 171.48755599999998,
                    "p99": 171.48755599999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 245.132917,
                    "min": 180.986325,
                    "p50": 200.664716,
                    "p95": 245.132917,
                    "p99": 245.132917,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 285.623702,
                    "min": 240.358793,
                    "p50": 256.928152,
                    "p95": 285.623702,
                    "p99": 285.623702,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 92.807372,
                    "min": 81.210853,
                    "p50": 85.642664,
                    "p95": 92.807372,
                    "p99": 92.807372,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 174.08256599999999,
                    "min": 122.232762,
                    "p50": 162.429528,
                    "p95": 174.08256599999999,
                    "p99": 174.08256599999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.808135,
                    "min": 211.117944,
                    "p50": 220.02399799999998,
                    "p95": 270.808135,
                    "p99": 270.808135,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 68.959448,
                    "min": 52.294998,
                    "p50": 60.674383,
                    "p95": 68.959448,
                    "p99": 68.959448,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.977015,
                    "min": 94.56022399999999,
                    "p50": 119.185971,
                    "p95": 140.977015,
                    "p99": 140.977015,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 136.459892,
                    "min": 106.955057,
                    "p50": 132.874896,
                    "p95": 136.459892,
                    "p99": 136.459892,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 417.172314,
                    "min": 362.76570399999997,
                    "p50": 390.50390999999996,
                    "p95": 417.172314,
                    "p99": 417.172314,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 504.57055099999997,
                    "min": 442.790329,
                    "p50": 483.204723,
                    "p95": 504.57055099999997,
                    "p99": 504.57055099999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 164.396061,
                    "min": 132.606943,
                    "p50": 138.619669,
                    "p95": 164.396061,
                    "p99": 164.396061,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1244.784369,
                    "min": 1092.342883,
                    "p50": 1142.639357,
                    "p95": 1244.784369,
                    "p99": 1244.784369,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.943202,
                    "min": 33.792325,
                    "p50": 48.448223999999996,
                    "p95": 51.943202,
                    "p99": 51.943202,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.878709,
                    "min": 64.29367599999999,
                    "p50": 95.72734299999999,
                    "p95": 104.878709,
                    "p99": 104.878709,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 592.9708089999999,
                    "min": 546.929548,
                    "p50": 580.62198,
                    "p95": 592.9708089999999,
                    "p99": 592.9708089999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 302.995808,
                    "min": 244.13616199999998,
                    "p50": 287.487056,
                    "p95": 302.995808,
                    "p99": 302.995808,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 244.439031,
                    "min": 216.093311,
                    "p50": 230.902355,
                    "p95": 244.439031,
                    "p99": 244.439031,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 263.022466,
                    "min": 243.384662,
                    "p50": 253.89156699999998,
                    "p95": 263.022466,
                    "p99": 263.022466,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 155.222891,
                    "min": 119.29875,
                    "p50": 150.791605,
                    "p95": 155.222891,
                    "p99": 155.222891,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 726.5091299999999,
                    "min": 695.4541929999999,
                    "p50": 704.3246829999999,
                    "p95": 726.5091299999999,
                    "p99": 726.5091299999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 445.027698,
                    "min": 412.02833799999996,
                    "p50": 428.807712,
                    "p95": 445.027698,
                    "p99": 445.027698,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 350.135466,
                    "min": 314.541923,
                    "p50": 327.949217,
                    "p95": 350.135466,
                    "p99": 350.135466,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 319.37888799999996,
                    "min": 294.898233,
                    "p50": 304.438498,
                    "p95": 319.37888799999996,
                    "p99": 319.37888799999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 199.91078199999998,
                    "min": 182.066619,
                    "p50": 193.910531,
                    "p95": 199.91078199999998,
                    "p99": 199.91078199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 500.651408,
                    "min": 462.582335,
                    "p50": 481.97802299999995,
                    "p95": 500.651408,
                    "p99": 500.651408,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 109.67713599999999,
                    "min": 93.703341,
                    "p50": 106.42042099999999,
                    "p95": 109.67713599999999,
                    "p99": 109.67713599999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 388.94845599999996,
                    "min": 333.20158299999997,
                    "p50": 372.406384,
                    "p95": 388.94845599999996,
                    "p99": 388.94845599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 226.76339399999998,
                    "min": 201.337108,
                    "p50": 217.59762999999998,
                    "p95": 226.76339399999998,
                    "p99": 226.76339399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 176.569256,
                    "min": 158.625916,
                    "p50": 172.433889,
                    "p95": 176.569256,
                    "p99": 176.569256,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.451974,
                    "min": 89.625633,
                    "p50": 124.940101,
                    "p95": 137.451974,
                    "p99": 137.451974,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 363.511355,
                    "min": 314.568489,
                    "p50": 341.041,
                    "p95": 363.511355,
                    "p99": 363.511355,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 723.783566,
                    "min": 694.1208909999999,
                    "p50": 710.1584839999999,
                    "p95": 723.783566,
                    "p99": 723.783566,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.62220299999998,
                    "min": 137.204465,
                    "p50": 155.615604,
                    "p95": 156.62220299999998,
                    "p99": 156.62220299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 512.0752699999999,
                    "min": 469.742848,
                    "p50": 505.427824,
                    "p95": 512.0752699999999,
                    "p99": 512.0752699999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 556.5015609999999,
                    "min": 523.5833,
                    "p50": 545.077262,
                    "p95": 556.5015609999999,
                    "p99": 556.5015609999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 196.99585299999998,
                    "min": 155.085864,
                    "p50": 194.128437,
                    "p95": 196.99585299999998,
                    "p99": 196.99585299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 462.238335,
                    "min": 425.267857,
                    "p50": 455.242216,
                    "p95": 462.238335,
                    "p99": 462.238335,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 625.995171,
                    "min": 592.459782,
                    "p50": 611.9393779999999,
                    "p95": 625.995171,
                    "p99": 625.995171,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 274.29559,
                    "min": 233.80569799999998,
                    "p50": 268.013626,
                    "p95": 274.29559,
                    "p99": 274.29559,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 394.123555,
                    "min": 371.82734,
                    "p50": 385.570682,
                    "p95": 394.123555,
                    "p99": 394.123555,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 353.293948,
                    "min": 335.16201,
                    "p50": 350.24478999999997,
                    "p95": 353.293948,
                    "p99": 353.293948,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 819.523957,
                    "min": 801.8271129999999,
                    "p50": 813.489249,
                    "p95": 819.523957,
                    "p99": 819.523957,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 434.01313799999997,
                    "min": 390.929627,
                    "p50": 425.608957,
                    "p95": 434.01313799999997,
                    "p99": 434.01313799999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 317.329282,
                    "min": 299.778679,
                    "p50": 310.990935,
                    "p95": 317.329282,
                    "p99": 317.329282,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 235.18278099999998,
                    "min": 221.35358699999998,
                    "p50": 233.942859,
                    "p95": 235.18278099999998,
                    "p99": 235.18278099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 583.8440889999999,
                    "min": 537.716577,
                    "p50": 579.63339,
                    "p95": 583.8440889999999,
                    "p99": 583.8440889999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 58.603704,
                    "min": 29.732018999999998,
                    "p50": 56.356604,
                    "p95": 58.603704,
                    "p99": 58.603704,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.840221,
                    "min": 25.239476999999997,
                    "p50": 27.278992,
                    "p95": 27.840221,
                    "p99": 27.840221,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 70.067138,
                    "min": 46.047857,
                    "p50": 62.293240999999995,
                    "p95": 70.067138,
                    "p99": 70.067138,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 138.86493,
                    "min": 105.624978,
                    "p50": 117.578164,
                    "p95": 138.86493,
                    "p99": 138.86493,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.982671999999997,
                    "min": 25.365644,
                    "p50": 26.862921,
                    "p95": 27.982671999999997,
                    "p99": 27.982671999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.449288,
                    "min": 24.922591,
                    "p50": 26.92006,
                    "p95": 27.449288,
                    "p99": 27.449288,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 55.763791,
                    "min": 36.522174,
                    "p50": 53.785745999999996,
                    "p95": 55.763791,
                    "p99": 55.763791,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 28.371232,
                    "min": 22.610227,
                    "p50": 27.023889,
                    "p95": 28.371232,
                    "p99": 28.371232,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.471787,
                    "min": 26.804544,
                    "p50": 27.052308999999997,
                    "p95": 28.471787,
                    "p99": 28.471787,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.819067,
                    "min": 24.317825,
                    "p50": 27.214225,
                    "p95": 27.819067,
                    "p99": 27.819067,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 36.886558,
                    "min": 35.053723999999995,
                    "p50": 36.287908,
                    "p95": 36.886558,
                    "p99": 36.886558,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.508023,
                    "min": 24.473262,
                    "p50": 27.036047999999997,
                    "p95": 81.508023,
                    "p99": 81.508023,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.704919,
                    "min": 21.220202999999998,
                    "p50": 26.669577999999998,
                    "p95": 27.704919,
                    "p99": 27.704919,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.472194,
                    "min": 25.637643999999998,
                    "p50": 27.102166,
                    "p95": 27.472194,
                    "p99": 27.472194,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 31.205023999999998,
                    "min": 26.690649,
                    "p50": 27.067636,
                    "p95": 31.205023999999998,
                    "p99": 31.205023999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 31.043287999999997,
                    "min": 26.290702999999997,
                    "p50": 27.475876,
                    "p95": 31.043287999999997,
                    "p99": 31.043287999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.199137,
                    "min": 25.205019,
                    "p50": 27.386858999999998,
                    "p95": 28.199137,
                    "p99": 28.199137,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 28.215241,
                    "min": 26.320396,
                    "p50": 27.04757,
                    "p95": 28.215241,
                    "p99": 28.215241,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.521364,
                    "min": 26.182047999999998,
                    "p50": 27.076535,
                    "p95": 27.521364,
                    "p99": 27.521364,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 189.616083,
                    "min": 178.200287,
                    "p50": 182.776156,
                    "p95": 189.616083,
                    "p99": 189.616083,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 95.285798,
                    "min": 52.810427999999995,
                    "p50": 79.654146,
                    "p95": 95.285798,
                    "p99": 95.285798,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 192.94596299999998,
                    "min": 146.19061499999998,
                    "p50": 183.48856999999998,
                    "p95": 192.94596299999998,
                    "p99": 192.94596299999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.67021799999999,
                    "min": 63.159333,
                    "p50": 89.507662,
                    "p95": 101.67021799999999,
                    "p99": 101.67021799999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 167.89481899999998,
                    "min": 119.82290499999999,
                    "p50": 147.723178,
                    "p95": 167.89481899999998,
                    "p99": 167.89481899999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 576.441196,
                    "min": 513.7760549999999,
                    "p50": 551.993248,
                    "p95": 576.441196,
                    "p99": 576.441196,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.35889699999998,
                    "min": 131.969944,
                    "p50": 145.226706,
                    "p95": 154.35889699999998,
                    "p99": 154.35889699999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 180.633859,
                    "min": 170.673839,
                    "p50": 176.45336,
                    "p95": 180.633859,
                    "p99": 180.633859,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 228.92999899999998,
                    "min": 179.53606,
                    "p50": 209.01504899999998,
                    "p95": 228.92999899999998,
                    "p99": 228.92999899999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 128.016309,
                    "min": 82.410845,
                    "p50": 123.24202899999999,
                    "p95": 128.016309,
                    "p99": 128.016309,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 467.25458199999997,
                    "min": 411.40081499999997,
                    "p50": 451.404589,
                    "p95": 467.25458199999997,
                    "p99": 467.25458199999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.44232199999999,
                    "min": 92.939394,
                    "p50": 112.859701,
                    "p95": 117.44232199999999,
                    "p99": 117.44232199999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 177.775214,
                    "min": 123.098969,
                    "p50": 165.00552299999998,
                    "p95": 177.775214,
                    "p99": 177.775214,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.937254,
                    "min": 324.544158,
                    "p50": 340.680408,
                    "p95": 365.937254,
                    "p99": 365.937254,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.683302,
                    "min": 41.775307,
                    "p50": 68.19587899999999,
                    "p95": 84.683302,
                    "p99": 84.683302,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1126.38509,
                    "min": 1004.2701559999999,
                    "p50": 1051.43595,
                    "p95": 1126.38509,
                    "p99": 1126.38509,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 72.12168199999999,
                    "min": 32.936285999999996,
                    "p50": 63.941812,
                    "p95": 72.12168199999999,
                    "p99": 72.12168199999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 199.267597,
                    "min": 160.603364,
                    "p50": 191.08624,
                    "p95": 199.267597,
                    "p99": 199.267597,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 233.25808999999998,
                    "min": 210.47736,
                    "p50": 222.355751,
                    "p95": 233.25808999999998,
                    "p99": 233.25808999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.871185999999998,
                    "min": 21.61683,
                    "p50": 27.283951,
                    "p95": 27.871185999999998,
                    "p99": 27.871185999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.951072999999997,
                    "min": 26.036096,
                    "p50": 27.244086,
                    "p95": 27.951072999999997,
                    "p99": 27.951072999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.576216,
                    "min": 19.329273,
                    "p50": 27.28897,
                    "p95": 27.576216,
                    "p99": 27.576216,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.830551,
                    "min": 26.94702,
                    "p50": 27.114434,
                    "p95": 27.830551,
                    "p99": 27.830551,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 28.086727999999997,
                    "min": 25.26744,
                    "p50": 26.934472,
                    "p95": 28.086727999999997,
                    "p99": 28.086727999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.896884999999997,
                    "min": 25.807433,
                    "p50": 26.91086,
                    "p95": 27.896884999999997,
                    "p99": 27.896884999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.423707999999998,
                    "min": 25.474269999999997,
                    "p50": 26.953788,
                    "p95": 27.423707999999998,
                    "p99": 27.423707999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.897147,
                    "min": 26.862876999999997,
                    "p50": 27.404027,
                    "p95": 27.897147,
                    "p99": 27.897147,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 65.556904,
                    "min": 51.149842,
                    "p50": 62.079037,
                    "p95": 65.556904,
                    "p99": 65.556904,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.540785,
                    "min": 25.688734,
                    "p50": 27.13815,
                    "p95": 27.540785,
                    "p99": 27.540785,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 31.058698999999997,
                    "min": 25.984976999999997,
                    "p50": 26.964091999999997,
                    "p95": 31.058698999999997,
                    "p99": 31.058698999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.623441999999997,
                    "min": 25.375684999999997,
                    "p50": 27.153153999999997,
                    "p95": 27.623441999999997,
                    "p99": 27.623441999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.766099999999998,
                    "min": 25.442749,
                    "p50": 27.100130999999998,
                    "p95": 27.766099999999998,
                    "p99": 27.766099999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 30.871983,
                    "min": 20.360017,
                    "p50": 27.237312,
                    "p95": 30.871983,
                    "p99": 30.871983,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 105.25004399999999,
                    "min": 76.549328,
                    "p50": 81.382442,
                    "p95": 105.25004399999999,
                    "p99": 105.25004399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 203.919132,
                    "min": 26.31316,
                    "p50": 27.199500999999998,
                    "p95": 203.919132,
                    "p99": 203.919132,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 51.576276,
                    "min": 27.99915,
                    "p50": 44.707401,
                    "p95": 51.576276,
                    "p99": 51.576276,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.505744999999997,
                    "min": 25.600566999999998,
                    "p50": 26.749195999999998,
                    "p95": 27.505744999999997,
                    "p99": 27.505744999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.539603999999997,
                    "min": 26.673419,
                    "p50": 27.121924999999997,
                    "p95": 27.539603999999997,
                    "p99": 27.539603999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.33438,
                    "min": 24.368945,
                    "p50": 27.076067,
                    "p95": 27.33438,
                    "p99": 27.33438,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 29.844172,
                    "min": 25.96068,
                    "p50": 27.180308,
                    "p95": 29.844172,
                    "p99": 29.844172,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.916967999999997,
                    "min": 25.378304,
                    "p50": 27.213354,
                    "p95": 27.916967999999997,
                    "p99": 27.916967999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.594872,
                    "min": 26.309558,
                    "p50": 27.191565999999998,
                    "p95": 27.594872,
                    "p99": 27.594872,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 41.319089,
                    "min": 26.718892,
                    "p50": 27.172704999999997,
                    "p95": 41.319089,
                    "p99": 41.319089,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.318035,
                    "min": 25.419542999999997,
                    "p50": 26.713535999999998,
                    "p95": 27.318035,
                    "p99": 27.318035,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.548613999999997,
                    "min": 22.869422999999998,
                    "p50": 26.933856,
                    "p95": 27.548613999999997,
                    "p99": 27.548613999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.261879999999998,
                    "min": 27.044155999999997,
                    "p50": 27.219123999999997,
                    "p95": 28.261879999999998,
                    "p99": 28.261879999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.580146,
                    "min": 26.793899,
                    "p50": 27.046508,
                    "p95": 27.580146,
                    "p99": 27.580146,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 27.883188999999998,
                    "min": 18.904684,
                    "p50": 27.425307,
                    "p95": 27.883188999999998,
                    "p99": 27.883188999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.634968999999998,
                    "min": 25.892417,
                    "p50": 27.085905,
                    "p95": 27.634968999999998,
                    "p99": 27.634968999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.713251999999997,
                    "min": 26.585468,
                    "p50": 27.264083,
                    "p95": 27.713251999999997,
                    "p99": 27.713251999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.911136,
                    "min": 24.642211999999997,
                    "p50": 27.153323999999998,
                    "p95": 27.911136,
                    "p99": 27.911136,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.635703999999997,
                    "min": 26.636398999999997,
                    "p50": 27.208752999999998,
                    "p95": 28.635703999999997,
                    "p99": 28.635703999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.398149,
                    "min": 26.606879,
                    "p50": 26.957538,
                    "p95": 27.398149,
                    "p99": 27.398149,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 55.057773999999995,
                    "min": 39.444736,
                    "p50": 49.659251999999995,
                    "p95": 55.057773999999995,
                    "p99": 55.057773999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.723609,
                    "min": 26.621048,
                    "p50": 27.39641,
                    "p95": 27.723609,
                    "p99": 27.723609,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 177.32151399999998,
                    "min": 26.542749999999998,
                    "p50": 27.071116,
                    "p95": 177.32151399999998,
                    "p99": 177.32151399999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.472875,
                    "min": 26.866425,
                    "p50": 27.247598,
                    "p95": 27.472875,
                    "p99": 27.472875,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.771467,
                    "min": 93.148241,
                    "p50": 132.942143,
                    "p95": 139.771467,
                    "p99": 139.771467,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 58.716179999999994,
                    "min": 54.044332,
                    "p50": 56.517185,
                    "p95": 58.716179999999994,
                    "p99": 58.716179999999994,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1034.873778,
                    "min": 955.117764,
                    "p50": 977.03166,
                    "p95": 1034.873778,
                    "p99": 1034.873778,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 233.44110899999998,
                    "min": 207.072169,
                    "p50": 226.291395,
                    "p95": 233.44110899999998,
                    "p99": 233.44110899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 106.11881699999999,
                    "min": 92.37205499999999,
                    "p50": 95.824112,
                    "p95": 106.11881699999999,
                    "p99": 106.11881699999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.385451,
                    "min": 37.942771,
                    "p50": 71.556058,
                    "p95": 78.385451,
                    "p99": 78.385451,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.939453,
                    "min": 55.522400999999995,
                    "p50": 98.567546,
                    "p95": 103.939453,
                    "p99": 103.939453,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 338.880898,
                    "min": 304.162537,
                    "p50": 322.037665,
                    "p95": 338.880898,
                    "p99": 338.880898,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 168.08981,
                    "min": 144.46581899999998,
                    "p50": 161.0854,
                    "p95": 168.08981,
                    "p99": 168.08981,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 151.748783,
                    "min": 124.282691,
                    "p50": 144.041801,
                    "p95": 151.748783,
                    "p99": 151.748783,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 433.76410999999996,
                    "min": 376.7322,
                    "p50": 419.58295899999996,
                    "p95": 433.76410999999996,
                    "p99": 433.76410999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 523.735848,
                    "min": 493.469514,
                    "p50": 503.131291,
                    "p95": 523.735848,
                    "p99": 523.735848,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 174.59855,
                    "min": 132.431988,
                    "p50": 171.188784,
                    "p95": 174.59855,
                    "p99": 174.59855,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 91.46226899999999,
                    "min": 46.940126,
                    "p50": 75.726615,
                    "p95": 91.46226899999999,
                    "p99": 91.46226899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 213.348562,
                    "min": 173.881472,
                    "p50": 201.743519,
                    "p95": 213.348562,
                    "p99": 213.348562,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 127.944481,
                    "min": 89.80886799999999,
                    "p50": 117.793708,
                    "p95": 127.944481,
                    "p99": 127.944481,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 157.404404,
                    "min": 117.852339,
                    "p50": 151.423703,
                    "p95": 157.404404,
                    "p99": 157.404404,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 192.750814,
                    "min": 146.569266,
                    "p50": 180.684026,
                    "p95": 192.750814,
                    "p99": 192.750814,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 119.673509,
                    "min": 75.024205,
                    "p50": 116.934404,
                    "p95": 119.673509,
                    "p99": 119.673509,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 789.678099,
                    "min": 738.3633719999999,
                    "p50": 757.835247,
                    "p95": 789.678099,
                    "p99": 789.678099,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 140.76788,
                    "min": 129.59305999999998,
                    "p50": 134.762223,
                    "p95": 140.76788,
                    "p99": 140.76788,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 257.175249,
                    "min": 236.482055,
                    "p50": 243.95757999999998,
                    "p95": 257.175249,
                    "p99": 257.175249,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 376.070607,
                    "min": 353.73027199999996,
                    "p50": 371.41472,
                    "p95": 376.070607,
                    "p99": 376.070607,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 165.092353,
                    "min": 119.51625899999999,
                    "p50": 147.788139,
                    "p95": 165.092353,
                    "p99": 165.092353,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 403.444414,
                    "min": 379.28747899999996,
                    "p50": 395.273419,
                    "p95": 403.444414,
                    "p99": 403.444414,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 235.39449499999998,
                    "min": 212.962449,
                    "p50": 228.493382,
                    "p95": 235.39449499999998,
                    "p99": 235.39449499999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 469.48781499999996,
                    "min": 433.886672,
                    "p50": 455.59297,
                    "p95": 469.48781499999996,
                    "p99": 469.48781499999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 183.482396,
                    "min": 144.799272,
                    "p50": 173.756574,
                    "p95": 183.482396,
                    "p99": 183.482396,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 286.69507699999997,
                    "min": 233.26375,
                    "p50": 277.167756,
                    "p95": 286.69507699999997,
                    "p99": 286.69507699999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1025.481938,
                    "min": 989.731507,
                    "p50": 1001.460838,
                    "p95": 1025.481938,
                    "p99": 1025.481938,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 312.684099,
                    "min": 279.894677,
                    "p50": 300.412053,
                    "p95": 312.684099,
                    "p99": 312.684099,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 215.19404799999998,
                    "min": 194.717691,
                    "p50": 203.181803,
                    "p95": 215.19404799999998,
                    "p99": 215.19404799999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 351.205538,
                    "min": 287.246993,
                    "p50": 326.769275,
                    "p95": 351.205538,
                    "p99": 351.205538,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 195.87167399999998,
                    "min": 102.075715,
                    "p50": 119.51675499999999,
                    "p95": 195.87167399999998,
                    "p99": 195.87167399999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 387.995381,
                    "min": 356.143758,
                    "p50": 376.141251,
                    "p95": 387.995381,
                    "p99": 387.995381,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 571.813396,
                    "min": 522.5781989999999,
                    "p50": 555.5166889999999,
                    "p95": 571.813396,
                    "p99": 571.813396,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1625.886777,
                    "min": 1345.971065,
                    "p50": 1476.127734,
                    "p95": 1625.886777,
                    "p99": 1625.886777,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.2031,
                    "min": 131.257532,
                    "p50": 156.195143,
                    "p95": 173.2031,
                    "p99": 173.2031,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 301.572843,
                    "min": 255.88085999999998,
                    "p50": 290.949117,
                    "p95": 301.572843,
                    "p99": 301.572843,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.782351,
                    "min": 214.267113,
                    "p50": 221.578451,
                    "p95": 261.782351,
                    "p99": 261.782351,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 465.449306,
                    "min": 424.868201,
                    "p50": 463.020508,
                    "p95": 465.449306,
                    "p99": 465.449306,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 427.35947,
                    "min": 402.25915499999996,
                    "p50": 411.84460099999995,
                    "p95": 427.35947,
                    "p99": 427.35947,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 567.7156249999999,
                    "min": 510.09872199999995,
                    "p50": 536.8048739999999,
                    "p95": 567.7156249999999,
                    "p99": 567.7156249999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 688.419591,
                    "min": 639.372982,
                    "p50": 667.498572,
                    "p95": 688.419591,
                    "p99": 688.419591,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 611.1064309999999,
                    "min": 549.788912,
                    "p50": 573.302462,
                    "p95": 611.1064309999999,
                    "p99": 611.1064309999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 528.7900579999999,
                    "min": 468.534636,
                    "p50": 485.634737,
                    "p95": 528.7900579999999,
                    "p99": 528.7900579999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 891.613357,
                    "min": 842.262889,
                    "p50": 870.064719,
                    "p95": 891.613357,
                    "p99": 891.613357,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 336.790781,
                    "min": 298.248046,
                    "p50": 328.374162,
                    "p95": 336.790781,
                    "p99": 336.790781,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.590175,
                    "min": 172.56697699999998,
                    "p50": 197.310465,
                    "p95": 210.590175,
                    "p99": 210.590175,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 804.261355,
                    "min": 738.288453,
                    "p50": 771.374646,
                    "p95": 804.261355,
                    "p99": 804.261355,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 369.722395,
                    "min": 340.740456,
                    "p50": 356.470174,
                    "p95": 369.722395,
                    "p99": 369.722395,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 641.535524,
                    "min": 594.164625,
                    "p50": 623.635781,
                    "p95": 641.535524,
                    "p99": 641.535524,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 904.504794,
                    "min": 847.62491,
                    "p50": 893.717191,
                    "p95": 904.504794,
                    "p99": 904.504794,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2052.13611,
                    "min": 1972.052324,
                    "p50": 2033.3512529999998,
                    "p95": 2052.13611,
                    "p99": 2052.13611,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2906.3268239999998,
                    "min": 2833.4667919999997,
                    "p50": 2874.664015,
                    "p95": 2906.3268239999998,
                    "p99": 2906.3268239999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5771.467756999999,
                    "min": 5659.274117999999,
                    "p50": 5712.608206999999,
                    "p95": 5771.467756999999,
                    "p99": 5771.467756999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1613.3492529999999,
                    "min": 1563.416859,
                    "p50": 1601.879733,
                    "p95": 1613.3492529999999,
                    "p99": 1613.3492529999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 753.2868609999999,
                    "min": 715.818712,
                    "p50": 738.586477,
                    "p95": 753.2868609999999,
                    "p99": 753.2868609999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 608.957539,
                    "min": 574.017132,
                    "p50": 597.163556,
                    "p95": 608.957539,
                    "p99": 608.957539,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1736.100209,
                    "min": 1710.481174,
                    "p50": 1726.18283,
                    "p95": 1736.100209,
                    "p99": 1736.100209,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4314.7405929999995,
                    "min": 4248.623434,
                    "p50": 4288.594183,
                    "p95": 4314.7405929999995,
                    "p99": 4314.7405929999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2538.931869,
                    "min": 2486.515966,
                    "p50": 2518.736672,
                    "p95": 2538.931869,
                    "p99": 2538.931869,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2185.434534,
                    "min": 2129.508497,
                    "p50": 2153.169848,
                    "p95": 2185.434534,
                    "p99": 2185.434534,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1189.683075,
                    "min": 1137.046326,
                    "p50": 1169.1793519999999,
                    "p95": 1189.683075,
                    "p99": 1189.683075,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1475.774766,
                    "min": 1419.553561,
                    "p50": 1433.7400209999998,
                    "p95": 1475.774766,
                    "p99": 1475.774766,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1047.418774,
                    "min": 997.4233469999999,
                    "p50": 1025.61633,
                    "p95": 1047.418774,
                    "p99": 1047.418774,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 470.73438,
                    "min": 432.90878499999997,
                    "p50": 466.559578,
                    "p95": 470.73438,
                    "p99": 470.73438,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1893.598867,
                    "min": 1847.593342,
                    "p50": 1875.469126,
                    "p95": 1893.598867,
                    "p99": 1893.598867,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1322.4073939999998,
                    "min": 1280.544005,
                    "p50": 1293.685209,
                    "p95": 1322.4073939999998,
                    "p99": 1322.4073939999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 438.056178,
                    "min": 394.846507,
                    "p50": 398.937705,
                    "p95": 438.056178,
                    "p99": 438.056178,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1323.0228339999999,
                    "min": 1277.746213,
                    "p50": 1302.677998,
                    "p95": 1323.0228339999999,
                    "p99": 1323.0228339999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2625.576266,
                    "min": 2608.598678,
                    "p50": 2618.6096319999997,
                    "p95": 2625.576266,
                    "p99": 2625.576266,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1465.6579729999999,
                    "min": 1411.725013,
                    "p50": 1429.9956789999999,
                    "p95": 1465.6579729999999,
                    "p99": 1465.6579729999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3835.7803559999998,
                    "min": 3768.8272829999996,
                    "p50": 3813.444673,
                    "p95": 3835.7803559999998,
                    "p99": 3835.7803559999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 823.295497,
                    "min": 776.286521,
                    "p50": 787.410527,
                    "p95": 823.295497,
                    "p99": 823.295497,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1216.3867109999999,
                    "min": 1166.723992,
                    "p50": 1193.210679,
                    "p95": 1216.3867109999999,
                    "p99": 1216.3867109999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5060.999361,
                    "min": 4959.616421,
                    "p50": 5031.196325,
                    "p95": 5060.999361,
                    "p99": 5060.999361,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 692.446068,
                    "min": 658.024043,
                    "p50": 666.3220249999999,
                    "p95": 692.446068,
                    "p99": 692.446068,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1752.3669519999999,
                    "min": 1697.79397,
                    "p50": 1722.4465719999998,
                    "p95": 1752.3669519999999,
                    "p99": 1752.3669519999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 932.0654529999999,
                    "min": 888.7724479999999,
                    "p50": 905.726423,
                    "p95": 932.0654529999999,
                    "p99": 932.0654529999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 558.491762,
                    "min": 514.330422,
                    "p50": 519.23702,
                    "p95": 558.491762,
                    "p99": 558.491762,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1980.21182,
                    "min": 1940.2836439999999,
                    "p50": 1965.968183,
                    "p95": 1980.21182,
                    "p99": 1980.21182,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1858.902646,
                    "min": 1810.8916009999998,
                    "p50": 1846.2864539999998,
                    "p95": 1858.902646,
                    "p99": 1858.902646,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2286.0713259999998,
                    "min": 2207.251359,
                    "p50": 2252.850284,
                    "p95": 2286.0713259999998,
                    "p99": 2286.0713259999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1062.383132,
                    "min": 1012.600291,
                    "p50": 1022.9435699999999,
                    "p95": 1062.383132,
                    "p99": 1062.383132,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1596.304962,
                    "min": 1531.971771,
                    "p50": 1560.9312029999999,
                    "p95": 1596.304962,
                    "p99": 1596.304962,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 107.570931,
                    "min": 67.986164,
                    "p50": 99.304679,
                    "p95": 107.570931,
                    "p99": 107.570931,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 88.238964,
                    "min": 48.058913999999994,
                    "p50": 81.26380499999999,
                    "p95": 88.238964,
                    "p99": 88.238964,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 127.29040699999999,
                    "min": 89.525459,
                    "p50": 115.254059,
                    "p95": 127.29040699999999,
                    "p99": 127.29040699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 170.571499,
                    "min": 132.03624299999998,
                    "p50": 132.961179,
                    "p95": 170.571499,
                    "p99": 170.571499,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 469.900271,
                    "min": 434.827227,
                    "p50": 458.10096899999996,
                    "p95": 469.900271,
                    "p99": 469.900271,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 213.948343,
                    "min": 208.04115199999998,
                    "p50": 211.531589,
                    "p95": 213.948343,
                    "p99": 213.948343,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 91.568225,
                    "min": 51.119381,
                    "p50": 79.530862,
                    "p95": 91.568225,
                    "p99": 91.568225,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.017501,
                    "min": 24.51078,
                    "p50": 30.102665,
                    "p95": 31.017501,
                    "p99": 31.017501,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 256.615014,
                    "min": 218.07132299999998,
                    "p50": 253.255836,
                    "p95": 256.615014,
                    "p99": 256.615014,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 63.387231,
                    "min": 34.468572,
                    "p50": 61.980425999999994,
                    "p95": 63.387231,
                    "p99": 63.387231,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 79.420857,
                    "min": 61.853977,
                    "p50": 71.635235,
                    "p95": 79.420857,
                    "p99": 79.420857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 83.259327,
                    "min": 42.919933,
                    "p50": 78.26793599999999,
                    "p95": 83.259327,
                    "p99": 83.259327,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 117.33635799999999,
                    "min": 79.31287499999999,
                    "p50": 105.822161,
                    "p95": 117.33635799999999,
                    "p99": 117.33635799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 53.662099999999995,
                    "min": 46.577853,
                    "p50": 47.616775,
                    "p95": 53.662099999999995,
                    "p99": 53.662099999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 55.003476,
                    "min": 29.868961,
                    "p50": 43.747532,
                    "p95": 55.003476,
                    "p99": 55.003476,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 109.082043,
                    "min": 95.57654099999999,
                    "p50": 106.62227999999999,
                    "p95": 109.082043,
                    "p99": 109.082043,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 94.769088,
                    "min": 55.518147,
                    "p50": 86.02703699999999,
                    "p95": 94.769088,
                    "p99": 94.769088,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 45.982988,
                    "min": 26.178364,
                    "p50": 27.119094,
                    "p95": 45.982988,
                    "p99": 45.982988,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 101.967743,
                    "min": 59.634034,
                    "p50": 62.002209,
                    "p95": 101.967743,
                    "p99": 101.967743,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2569.755231,
                    "min": 2532.0156079999997,
                    "p50": 2555.864252,
                    "p95": 2569.755231,
                    "p99": 2569.755231,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1058.377569,
                    "min": 1012.641453,
                    "p50": 1047.96301,
                    "p95": 1058.377569,
                    "p99": 1058.377569,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 774.604022,
                    "min": 718.726427,
                    "p50": 727.377887,
                    "p95": 774.604022,
                    "p99": 774.604022,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1771.96246,
                    "min": 1728.4117629999998,
                    "p50": 1741.916056,
                    "p95": 1771.96246,
                    "p99": 1771.96246,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1197.813706,
                    "min": 1158.344278,
                    "p50": 1174.2580759999998,
                    "p95": 1197.813706,
                    "p99": 1197.813706,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5807.238735999999,
                    "min": 5691.194662999999,
                    "p50": 5756.304131,
                    "p95": 5807.238735999999,
                    "p99": 5807.238735999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1632.452137,
                    "min": 1589.171369,
                    "p50": 1614.44958,
                    "p95": 1632.452137,
                    "p99": 1632.452137,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 914.71263,
                    "min": 869.76576,
                    "p50": 899.869198,
                    "p95": 914.71263,
                    "p99": 914.71263,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1929.1664389999999,
                    "min": 1886.0015879999999,
                    "p50": 1906.4800599999999,
                    "p95": 1929.1664389999999,
                    "p99": 1929.1664389999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4362.214711,
                    "min": 4259.2369739999995,
                    "p50": 4326.660758999999,
                    "p95": 4362.214711,
                    "p99": 4362.214711,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2209.726193,
                    "min": 2155.652247,
                    "p50": 2180.185032,
                    "p95": 2209.726193,
                    "p99": 2209.726193,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2940.3511909999997,
                    "min": 2834.117821,
                    "p50": 2900.125385,
                    "p95": 2940.3511909999997,
                    "p99": 2940.3511909999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 482.48587599999996,
                    "min": 453.727471,
                    "p50": 472.463999,
                    "p95": 482.48587599999996,
                    "p99": 482.48587599999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2068.7889729999997,
                    "min": 1999.6965309999998,
                    "p50": 2050.255986,
                    "p95": 2068.7889729999997,
                    "p99": 2068.7889729999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 621.979861,
                    "min": 584.421356,
                    "p50": 611.8261279999999,
                    "p95": 621.979861,
                    "p99": 621.979861,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1487.2618129999998,
                    "min": 1436.489365,
                    "p50": 1453.76426,
                    "p95": 1487.2618129999998,
                    "p99": 1487.2618129999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1346.1715649999999,
                    "min": 1297.684195,
                    "p50": 1307.606728,
                    "p95": 1346.1715649999999,
                    "p99": 1346.1715649999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2219.209063,
                    "min": 2160.22311,
                    "p50": 2194.800123,
                    "p95": 2219.209063,
                    "p99": 2219.209063,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 592.2759649999999,
                    "min": 581.750489,
                    "p50": 585.694783,
                    "p95": 592.2759649999999,
                    "p99": 592.2759649999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1337.706915,
                    "min": 1299.953431,
                    "p50": 1313.676915,
                    "p95": 1337.706915,
                    "p99": 1337.706915,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1939.4118039999998,
                    "min": 1871.037836,
                    "p50": 1900.527435,
                    "p95": 1939.4118039999998,
                    "p99": 1939.4118039999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1491.6437569999998,
                    "min": 1436.540163,
                    "p50": 1473.0139159999999,
                    "p95": 1491.6437569999998,
                    "p99": 1491.6437569999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1620.1431599999999,
                    "min": 1589.4663739999999,
                    "p50": 1618.1194719999999,
                    "p95": 1620.1431599999999,
                    "p99": 1620.1431599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2932.4147519999997,
                    "min": 2859.270177,
                    "p50": 2882.384079,
                    "p95": 2932.4147519999997,
                    "p99": 2932.4147519999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4365.422542,
                    "min": 4270.954462,
                    "p50": 4312.54901,
                    "p95": 4365.422542,
                    "p99": 4365.422542,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1782.486645,
                    "min": 1744.5581419999999,
                    "p50": 1761.376231,
                    "p95": 1782.486645,
                    "p99": 1782.486645,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 768.848797,
                    "min": 719.7893379999999,
                    "p50": 753.0441549999999,
                    "p95": 768.848797,
                    "p99": 768.848797,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 479.845943,
                    "min": 441.008473,
                    "p50": 475.24564699999996,
                    "p95": 479.845943,
                    "p99": 479.845943,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 913.8815669999999,
                    "min": 869.9087509999999,
                    "p50": 907.304461,
                    "p95": 913.8815669999999,
                    "p99": 913.8815669999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2567.501428,
                    "min": 2535.8895869999997,
                    "p50": 2561.18704,
                    "p95": 2567.501428,
                    "p99": 2567.501428,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1061.144957,
                    "min": 1008.8000949999999,
                    "p50": 1045.426551,
                    "p95": 1061.144957,
                    "p99": 1061.144957,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2043.751163,
                    "min": 2017.48795,
                    "p50": 2030.377106,
                    "p95": 2043.751163,
                    "p99": 2043.751163,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1197.5559839999999,
                    "min": 1155.686379,
                    "p50": 1186.818212,
                    "p95": 1197.5559839999999,
                    "p99": 1197.5559839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 758.645414,
                    "min": 690.931287,
                    "p50": 721.9220789999999,
                    "p95": 758.645414,
                    "p99": 758.645414,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 138.535687,
                    "min": 100.262773,
                    "p50": 126.491525,
                    "p95": 138.535687,
                    "p99": 138.535687,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 389.853189,
                    "min": 346.452835,
                    "p50": 383.583075,
                    "p95": 389.853189,
                    "p99": 389.853189,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 89.992897,
                    "min": 52.202152999999996,
                    "p50": 78.157218,
                    "p95": 89.992897,
                    "p99": 89.992897,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 59.306799999999996,
                    "min": 32.328316,
                    "p50": 58.144109,
                    "p95": 59.306799999999996,
                    "p99": 59.306799999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 124.28530199999999,
                    "min": 86.581929,
                    "p50": 113.00345499999999,
                    "p95": 124.28530199999999,
                    "p99": 124.28530199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 318.38811599999997,
                    "min": 277.371674,
                    "p50": 308.873711,
                    "p95": 318.38811599999997,
                    "p99": 318.38811599999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 144.209791,
                    "min": 106.78862799999999,
                    "p50": 133.455015,
                    "p95": 144.209791,
                    "p99": 144.209791,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 132.68625,
                    "min": 93.138998,
                    "p50": 123.391178,
                    "p95": 132.68625,
                    "p99": 132.68625,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 162.60308,
                    "min": 124.977274,
                    "p50": 148.29458499999998,
                    "p95": 162.60308,
                    "p99": 162.60308,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.063937,
                    "min": 38.597487,
                    "p50": 61.127979999999994,
                    "p95": 72.063937,
                    "p99": 72.063937,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.65768899999999,
                    "min": 82.136028,
                    "p50": 116.89765399999999,
                    "p95": 122.65768899999999,
                    "p99": 122.65768899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.968208,
                    "min": 25.311125,
                    "p50": 37.075336,
                    "p95": 47.968208,
                    "p99": 47.968208,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 98.373194,
                    "min": 59.122947999999994,
                    "p50": 85.29069299999999,
                    "p95": 98.373194,
                    "p99": 98.373194,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 84.985233,
                    "min": 72.386259,
                    "p50": 82.932036,
                    "p95": 84.985233,
                    "p99": 84.985233,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 105.28669,
                    "min": 95.032994,
                    "p50": 102.96057599999999,
                    "p95": 105.28669,
                    "p99": 105.28669,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 113.413856,
                    "min": 72.656607,
                    "p50": 106.610665,
                    "p95": 113.413856,
                    "p99": 113.413856,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 252.863588,
                    "min": 210.711041,
                    "p50": 230.948477,
                    "p95": 252.863588,
                    "p99": 252.863588,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 180.599033,
                    "min": 141.428969,
                    "p50": 168.632814,
                    "p95": 180.599033,
                    "p99": 180.599033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 45.734249,
                    "min": 21.319530999999998,
                    "p50": 27.002834,
                    "p95": 45.734249,
                    "p99": 45.734249,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 154.118596,
                    "min": 114.58492299999999,
                    "p50": 149.836607,
                    "p95": 154.118596,
                    "p99": 154.118596,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 111.973744,
                    "min": 85.985519,
                    "p50": 86.93031599999999,
                    "p95": 111.973744,
                    "p99": 111.973744,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 96.23648899999999,
                    "min": 58.364382,
                    "p50": 59.504580999999995,
                    "p95": 96.23648899999999,
                    "p99": 96.23648899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 58.760864999999995,
                    "min": 31.564933999999997,
                    "p50": 52.890744999999995,
                    "p95": 58.760864999999995,
                    "p99": 58.760864999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 314.031911,
                    "min": 274.879974,
                    "p50": 287.6621,
                    "p95": 314.031911,
                    "p99": 314.031911,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 184.53723,
                    "min": 143.256819,
                    "p50": 178.568353,
                    "p95": 184.53723,
                    "p99": 184.53723,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 69.968347,
                    "min": 36.808571,
                    "p50": 54.597265,
                    "p95": 69.968347,
                    "p99": 69.968347,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 82.109048,
                    "min": 42.264022999999995,
                    "p50": 78.261864,
                    "p95": 82.109048,
                    "p99": 82.109048,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 48.862072999999995,
                    "min": 47.193740999999996,
                    "p50": 47.882718999999994,
                    "p95": 48.862072999999995,
                    "p99": 48.862072999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 53.09639,
                    "min": 28.837322999999998,
                    "p50": 42.234669,
                    "p95": 53.09639,
                    "p99": 53.09639,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.780414999999998,
                    "min": 26.059874999999998,
                    "p50": 27.097195,
                    "p95": 27.780414999999998,
                    "p99": 27.780414999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 90.42327499999999,
                    "min": 51.813499,
                    "p50": 83.90638299999999,
                    "p95": 90.42327499999999,
                    "p99": 90.42327499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 64.496779,
                    "min": 34.109836,
                    "p50": 34.758956,
                    "p95": 64.496779,
                    "p99": 64.496779,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 84.161335,
                    "min": 45.31604,
                    "p50": 46.521736999999995,
                    "p95": 84.161335,
                    "p99": 84.161335,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 44.50823,
                    "min": 26.805386,
                    "p50": 42.293492,
                    "p95": 44.50823,
                    "p99": 44.50823,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 77.18495399999999,
                    "min": 39.504776,
                    "p50": 59.656479999999995,
                    "p95": 77.18495399999999,
                    "p99": 77.18495399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 38.854211,
                    "min": 27.713320999999997,
                    "p50": 32.283933,
                    "p95": 38.854211,
                    "p99": 38.854211,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.342147999999998,
                    "min": 26.51294,
                    "p50": 27.037374999999997,
                    "p95": 27.342147999999998,
                    "p99": 27.342147999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 156.799784,
                    "min": 121.49027,
                    "p50": 126.519961,
                    "p95": 156.799784,
                    "p99": 156.799784,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 95.38083499999999,
                    "min": 57.387055,
                    "p50": 84.10208899999999,
                    "p95": 95.38083499999999,
                    "p99": 95.38083499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 178.683439,
                    "min": 138.559056,
                    "p50": 175.922068,
                    "p95": 178.683439,
                    "p99": 178.683439,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 90.314458,
                    "min": 50.873355,
                    "p50": 76.210831,
                    "p95": 90.314458,
                    "p99": 90.314458,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.423869,
                    "min": 44.210398,
                    "p50": 75.578938,
                    "p95": 82.423869,
                    "p99": 82.423869,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 57.700457,
                    "min": 50.650372999999995,
                    "p50": 57.516866,
                    "p95": 57.700457,
                    "p99": 57.700457,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 136.317631,
                    "min": 97.66757899999999,
                    "p50": 129.377119,
                    "p95": 136.317631,
                    "p99": 136.317631,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 114.97220899999999,
                    "min": 77.715812,
                    "p50": 108.88069,
                    "p95": 114.97220899999999,
                    "p99": 114.97220899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 247.273237,
                    "min": 204.19176299999998,
                    "p50": 242.31202299999998,
                    "p95": 247.273237,
                    "p99": 247.273237,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 90.883467,
                    "min": 64.936525,
                    "p50": 81.43283799999999,
                    "p95": 90.883467,
                    "p99": 90.883467,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 705.635143,
                    "min": 670.918907,
                    "p50": 700.773961,
                    "p95": 705.635143,
                    "p99": 705.635143,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 79.720086,
                    "min": 63.386382999999995,
                    "p50": 70.229404,
                    "p95": 79.720086,
                    "p99": 79.720086,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 130.611254,
                    "min": 118.338302,
                    "p50": 129.609465,
                    "p95": 130.611254,
                    "p99": 130.611254,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 128.786882,
                    "min": 112.16856999999999,
                    "p50": 123.295648,
                    "p95": 128.786882,
                    "p99": 128.786882,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 293.733009,
                    "min": 271.773306,
                    "p50": 273.977046,
                    "p95": 293.733009,
                    "p99": 293.733009,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.776114,
                    "min": 26.642599999999998,
                    "p50": 36.370115999999996,
                    "p95": 51.776114,
                    "p99": 51.776114,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 142.462752,
                    "min": 105.108556,
                    "p50": 133.194153,
                    "p95": 142.462752,
                    "p99": 142.462752,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 109.187259,
                    "min": 73.35906,
                    "p50": 101.864404,
                    "p95": 109.187259,
                    "p99": 109.187259,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 385.096321,
                    "min": 338.080229,
                    "p50": 379.30512,
                    "p95": 385.096321,
                    "p99": 385.096321,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 570.055978,
                    "min": 525.847836,
                    "p50": 569.033449,
                    "p95": 570.055978,
                    "p99": 570.055978,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 483.717106,
                    "min": 451.576231,
                    "p50": 475.04256599999997,
                    "p95": 483.717106,
                    "p99": 483.717106,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 714.7960909999999,
                    "min": 674.580064,
                    "p50": 705.790344,
                    "p95": 714.7960909999999,
                    "p99": 714.7960909999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.512943,
                    "min": 223.465828,
                    "p50": 252.551763,
                    "p95": 261.512943,
                    "p99": 261.512943,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 337.245882,
                    "min": 299.906977,
                    "p50": 324.393712,
                    "p95": 337.245882,
                    "p99": 337.245882,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 638.089659,
                    "min": 597.788763,
                    "p50": 635.15267,
                    "p95": 638.089659,
                    "p99": 638.089659,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 414.204923,
                    "min": 374.163953,
                    "p50": 410.029405,
                    "p95": 414.204923,
                    "p99": 414.204923,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 766.3830389999999,
                    "min": 729.1554699999999,
                    "p50": 745.58987,
                    "p95": 766.3830389999999,
                    "p99": 766.3830389999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 264.537317,
                    "min": 223.490098,
                    "p50": 244.474742,
                    "p95": 264.537317,
                    "p99": 264.537317,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 623.013824,
                    "min": 589.253099,
                    "p50": 613.6817199999999,
                    "p95": 623.013824,
                    "p99": 623.013824,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 486.749687,
                    "min": 442.87578399999995,
                    "p50": 461.195696,
                    "p95": 486.749687,
                    "p99": 486.749687,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 553.60925,
                    "min": 516.179144,
                    "p50": 537.0385,
                    "p95": 553.60925,
                    "p99": 553.60925,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 707.078265,
                    "min": 658.2112179999999,
                    "p50": 699.961297,
                    "p95": 707.078265,
                    "p99": 707.078265,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 334.96946099999997,
                    "min": 296.78161,
                    "p50": 323.953508,
                    "p95": 334.96946099999997,
                    "p99": 334.96946099999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 408.82823099999996,
                    "min": 370.890221,
                    "p50": 389.246106,
                    "p95": 408.82823099999996,
                    "p99": 408.82823099999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 257.500243,
                    "min": 214.163601,
                    "p50": 247.609558,
                    "p95": 257.500243,
                    "p99": 257.500243,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 405.26548499999996,
                    "min": 356.62773599999997,
                    "p50": 396.487506,
                    "p95": 405.26548499999996,
                    "p99": 405.26548499999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 555.215348,
                    "min": 457.10067999999995,
                    "p50": 514.033183,
                    "p95": 555.215348,
                    "p99": 555.215348,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 375.880583,
                    "min": 315.837474,
                    "p50": 354.793641,
                    "p95": 375.880583,
                    "p99": 375.880583,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 721.1926179999999,
                    "min": 626.136683,
                    "p50": 694.482771,
                    "p95": 721.1926179999999,
                    "p99": 721.1926179999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 206.304916,
                    "min": 150.428385,
                    "p50": 168.166697,
                    "p95": 206.304916,
                    "p99": 206.304916,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 598.895322,
                    "min": 534.757314,
                    "p50": 590.3745279999999,
                    "p95": 598.895322,
                    "p99": 598.895322,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 489.637498,
                    "min": 438.357583,
                    "p50": 480.603206,
                    "p95": 489.637498,
                    "p99": 489.637498,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 324.21909,
                    "min": 272.48958999999996,
                    "p50": 291.178925,
                    "p95": 324.21909,
                    "p99": 324.21909,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 670.583384,
                    "min": 566.910077,
                    "p50": 641.883412,
                    "p95": 670.583384,
                    "p99": 670.583384,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 495.899166,
                    "min": 457.29403299999996,
                    "p50": 486.40086599999995,
                    "p95": 495.899166,
                    "p99": 495.899166,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 646.833096,
                    "min": 603.169553,
                    "p50": 611.9331999999999,
                    "p95": 646.833096,
                    "p99": 646.833096,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 194.89455999999998,
                    "min": 154.011508,
                    "p50": 168.503697,
                    "p95": 194.89455999999998,
                    "p99": 194.89455999999998,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.93654699999996,
                    "min": 304.946036,
                    "p50": 331.537422,
                    "p95": 344.93654699999996,
                    "p99": 344.93654699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 570.475187,
                    "min": 530.194168,
                    "p50": 565.468067,
                    "p95": 570.475187,
                    "p99": 570.475187,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 268.084483,
                    "min": 229.818546,
                    "p50": 256.22671199999996,
                    "p95": 268.084483,
                    "p99": 268.084483,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 420.00563999999997,
                    "min": 379.92598899999996,
                    "p50": 417.806949,
                    "p95": 420.00563999999997,
                    "p99": 420.00563999999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1162.500968,
                    "min": 1073.960388,
                    "p50": 1128.4179279999998,
                    "p95": 1162.500968,
                    "p99": 1162.500968,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 590.182881,
                    "min": 526.194433,
                    "p50": 569.716046,
                    "p95": 590.182881,
                    "p99": 590.182881,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 366.746476,
                    "min": 304.805229,
                    "p50": 348.699698,
                    "p95": 366.746476,
                    "p99": 366.746476,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1073.480697,
                    "min": 990.155143,
                    "p50": 1049.5014509999999,
                    "p95": 1073.480697,
                    "p99": 1073.480697,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 833.302379,
                    "min": 783.843592,
                    "p50": 812.670314,
                    "p95": 833.302379,
                    "p99": 833.302379,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 683.479171,
                    "min": 640.639692,
                    "p50": 667.631131,
                    "p95": 683.479171,
                    "p99": 683.479171,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 993.8146109999999,
                    "min": 946.1411529999999,
                    "p50": 967.343214,
                    "p95": 993.8146109999999,
                    "p99": 993.8146109999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 428.062459,
                    "min": 394.85792899999996,
                    "p50": 422.22189299999997,
                    "p95": 428.062459,
                    "p99": 428.062459,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 286.70507,
                    "min": 239.07729899999998,
                    "p50": 244.976419,
                    "p95": 286.70507,
                    "p99": 286.70507,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1462.3829899999998,
                    "min": 1376.8434889999999,
                    "p50": 1409.3467919999998,
                    "p95": 1462.3829899999998,
                    "p99": 1462.3829899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1219.213061,
                    "min": 1181.390153,
                    "p50": 1200.001074,
                    "p95": 1219.213061,
                    "p99": 1219.213061,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1641.264898,
                    "min": 1551.9760999999999,
                    "p50": 1602.8284649999998,
                    "p95": 1641.264898,
                    "p99": 1641.264898,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 766.2101269999999,
                    "min": 699.0058379999999,
                    "p50": 724.132832,
                    "p95": 766.2101269999999,
                    "p99": 766.2101269999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 907.557024,
                    "min": 857.079397,
                    "p50": 900.809447,
                    "p95": 907.557024,
                    "p99": 907.557024,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 518.2972129999999,
                    "min": 476.59348,
                    "p50": 507.716975,
                    "p95": 518.2972129999999,
                    "p99": 518.2972129999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 939.465779,
                    "min": 884.40004,
                    "p50": 921.059139,
                    "p95": 939.465779,
                    "p99": 939.465779,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 381.520855,
                    "min": 330.331093,
                    "p50": 358.468597,
                    "p95": 381.520855,
                    "p99": 381.520855,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1066.000977,
                    "min": 991.4129979999999,
                    "p50": 1018.7524109999999,
                    "p95": 1066.000977,
                    "p99": 1066.000977,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 723.4627959999999,
                    "min": 683.478626,
                    "p50": 713.6220109999999,
                    "p95": 723.4627959999999,
                    "p99": 723.4627959999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 309.616019,
                    "min": 275.35826099999997,
                    "p50": 303.646354,
                    "p95": 309.616019,
                    "p99": 309.616019,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 458.265656,
                    "min": 410.48103,
                    "p50": 445.31332599999996,
                    "p95": 458.265656,
                    "p99": 458.265656,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 857.988844,
                    "min": 779.906722,
                    "p50": 817.608402,
                    "p95": 857.988844,
                    "p99": 857.988844,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1003.6634899999999,
                    "min": 942.8157,
                    "p50": 976.3683719999999,
                    "p95": 1003.6634899999999,
                    "p99": 1003.6634899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1425.899986,
                    "min": 1361.218245,
                    "p50": 1385.741789,
                    "p95": 1425.899986,
                    "p99": 1425.899986,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 507.29220899999996,
                    "min": 463.56726899999995,
                    "p50": 490.594922,
                    "p95": 507.29220899999996,
                    "p99": 507.29220899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1255.8731249999998,
                    "min": 1193.836797,
                    "p50": 1220.678345,
                    "p95": 1255.8731249999998,
                    "p99": 1255.8731249999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 579.823134,
                    "min": 522.128068,
                    "p50": 554.0870709999999,
                    "p95": 579.823134,
                    "p99": 579.823134,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 789.6360999999999,
                    "min": 731.527066,
                    "p50": 768.1419539999999,
                    "p95": 789.6360999999999,
                    "p99": 789.6360999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 663.4345559999999,
                    "min": 610.1802279999999,
                    "p50": 641.525095,
                    "p95": 663.4345559999999,
                    "p99": 663.4345559999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 245.057652,
                    "min": 209.897616,
                    "p50": 232.329884,
                    "p95": 245.057652,
                    "p99": 245.057652,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 437.515335,
                    "min": 395.313005,
                    "p50": 406.560164,
                    "p95": 437.515335,
                    "p99": 437.515335,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 684.925901,
                    "min": 632.137562,
                    "p50": 675.7826269999999,
                    "p95": 684.925901,
                    "p99": 684.925901,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 604.5708629999999,
                    "min": 553.189025,
                    "p50": 586.0664429999999,
                    "p95": 604.5708629999999,
                    "p99": 604.5708629999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1430.266608,
                    "min": 1367.8429019999999,
                    "p50": 1410.664732,
                    "p95": 1430.266608,
                    "p99": 1430.266608,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1239.6990489999998,
                    "min": 1182.0027069999999,
                    "p50": 1211.603756,
                    "p95": 1239.6990489999998,
                    "p99": 1239.6990489999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 280.130849,
                    "min": 238.65602299999998,
                    "p50": 273.491133,
                    "p95": 280.130849,
                    "p99": 280.130849,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 928.806848,
                    "min": 861.2671479999999,
                    "p50": 897.6475039999999,
                    "p95": 928.806848,
                    "p99": 928.806848,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 851.131577,
                    "min": 785.4286619999999,
                    "p50": 818.792741,
                    "p95": 851.131577,
                    "p99": 851.131577,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 475.02761699999996,
                    "min": 306.625101,
                    "p50": 337.36563,
                    "p95": 475.02761699999996,
                    "p99": 475.02761699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1004.3123439999999,
                    "min": 938.904511,
                    "p50": 979.9147849999999,
                    "p95": 1004.3123439999999,
                    "p99": 1004.3123439999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 760.98308,
                    "min": 705.6549309999999,
                    "p50": 746.8782239999999,
                    "p95": 760.98308,
                    "p99": 760.98308,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1655.558389,
                    "min": 1555.133686,
                    "p50": 1584.740611,
                    "p95": 1655.558389,
                    "p99": 1655.558389,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1092.603242,
                    "min": 1049.519002,
                    "p50": 1088.52722,
                    "p95": 1092.603242,
                    "p99": 1092.603242,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 506.855355,
                    "min": 470.79340399999995,
                    "p50": 500.418799,
                    "p95": 506.855355,
                    "p99": 506.855355,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1064.854131,
                    "min": 1021.740428,
                    "p50": 1045.5964609999999,
                    "p95": 1064.854131,
                    "p99": 1064.854131,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1647.959449,
                    "min": 1534.6829109999999,
                    "p50": 1614.945653,
                    "p95": 1647.959449,
                    "p99": 1647.959449,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 360.230147,
                    "min": 318.374545,
                    "p50": 342.727359,
                    "p95": 360.230147,
                    "p99": 360.230147,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 762.6616879999999,
                    "min": 710.847986,
                    "p50": 746.9259959999999,
                    "p95": 762.6616879999999,
                    "p99": 762.6616879999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 846.579518,
                    "min": 779.007573,
                    "p50": 815.813145,
                    "p95": 846.579518,
                    "p99": 846.579518,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 918.208234,
                    "min": 868.775727,
                    "p50": 904.305353,
                    "p95": 918.208234,
                    "p99": 918.208234,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1449.709559,
                    "min": 1371.571735,
                    "p50": 1405.341659,
                    "p95": 1449.709559,
                    "p99": 1449.709559,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 992.8106319999999,
                    "min": 945.162248,
                    "p50": 970.982141,
                    "p95": 992.8106319999999,
                    "p99": 992.8106319999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1087.92219,
                    "min": 1028.13357,
                    "p50": 1054.742184,
                    "p95": 1087.92219,
                    "p99": 1087.92219,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 284.708954,
                    "min": 226.68872499999998,
                    "p50": 275.552684,
                    "p95": 284.708954,
                    "p99": 284.708954,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 517.677018,
                    "min": 460.00314899999995,
                    "p50": 477.19984999999997,
                    "p95": 517.677018,
                    "p99": 517.677018,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 445.10047399999996,
                    "min": 395.834143,
                    "p50": 417.774034,
                    "p95": 445.10047399999996,
                    "p99": 445.10047399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1221.04569,
                    "min": 1170.404116,
                    "p50": 1199.725469,
                    "p95": 1221.04569,
                    "p99": 1221.04569,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 675.463996,
                    "min": 627.78585,
                    "p50": 659.628938,
                    "p95": 675.463996,
                    "p99": 675.463996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1144.6416809999998,
                    "min": 1072.819949,
                    "p50": 1106.2385199999999,
                    "p95": 1144.6416809999998,
                    "p99": 1144.6416809999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 597.850388,
                    "min": 552.105633,
                    "p50": 586.83017,
                    "p95": 597.850388,
                    "p99": 597.850388,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 349.72263699999996,
                    "min": 323.489046,
                    "p50": 338.001199,
                    "p95": 349.72263699999996,
                    "p99": 349.72263699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.433483,
                    "min": 56.430704,
                    "p50": 91.981185,
                    "p95": 96.433483,
                    "p99": 96.433483,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1291.084247,
                    "min": 1214.480582,
                    "p50": 1272.943634,
                    "p95": 1291.084247,
                    "p99": 1291.084247,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 299.30668299999996,
                    "min": 260.63298,
                    "p50": 295.626756,
                    "p95": 299.30668299999996,
                    "p99": 299.30668299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 423.251085,
                    "min": 379.95642,
                    "p50": 399.12553099999997,
                    "p95": 423.251085,
                    "p99": 423.251085,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 184.351157,
                    "min": 133.268991,
                    "p50": 168.81239,
                    "p95": 184.351157,
                    "p99": 184.351157,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 551.134506,
                    "min": 490.40840399999996,
                    "p50": 500.298453,
                    "p95": 551.134506,
                    "p99": 551.134506,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.398963,
                    "min": 80.182503,
                    "p50": 105.36268299999999,
                    "p95": 119.398963,
                    "p99": 119.398963,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 144.99785799999998,
                    "min": 103.03372499999999,
                    "p50": 107.723715,
                    "p95": 144.99785799999998,
                    "p99": 144.99785799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 79.671538,
                    "min": 40.626897,
                    "p50": 74.43554499999999,
                    "p95": 79.671538,
                    "p99": 79.671538,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.077516,
                    "min": 117.36559,
                    "p50": 145.089229,
                    "p95": 156.077516,
                    "p99": 156.077516,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 131.281366,
                    "min": 90.563712,
                    "p50": 119.669316,
                    "p95": 131.281366,
                    "p99": 131.281366,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 187.287307,
                    "min": 145.378712,
                    "p50": 172.098706,
                    "p95": 187.287307,
                    "p99": 187.287307,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 207.322253,
                    "min": 166.023661,
                    "p50": 184.231116,
                    "p95": 207.322253,
                    "p99": 207.322253,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.394961,
                    "min": 159.617688,
                    "p50": 184.424082,
                    "p95": 201.394961,
                    "p99": 201.394961,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 668.055854,
                    "min": 623.046825,
                    "p50": 658.216913,
                    "p95": 668.055854,
                    "p99": 668.055854,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.34450299999999,
                    "min": 68.222481,
                    "p50": 104.92259299999999,
                    "p95": 106.34450299999999,
                    "p99": 106.34450299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 225.383028,
                    "min": 189.941248,
                    "p50": 219.682084,
                    "p95": 225.383028,
                    "p99": 225.383028,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 525.458501,
                    "min": 212.14861399999998,
                    "p50": 227.21253299999998,
                    "p95": 525.458501,
                    "p99": 525.458501,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 436.615124,
                    "min": 394.150969,
                    "p50": 431.61092399999995,
                    "p95": 436.615124,
                    "p99": 436.615124,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 623.350721,
                    "min": 82.97677999999999,
                    "p50": 112.520944,
                    "p95": 623.350721,
                    "p99": 623.350721,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 562.483194,
                    "min": 522.891257,
                    "p50": 554.216636,
                    "p95": 562.483194,
                    "p99": 562.483194,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 305.300936,
                    "min": 283.181282,
                    "p50": 303.070939,
                    "p95": 305.300936,
                    "p99": 305.300936,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 223.424971,
                    "min": 185.837282,
                    "p50": 214.61628499999998,
                    "p95": 223.424971,
                    "p99": 223.424971,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 239.40232999999998,
                    "min": 195.10040999999998,
                    "p50": 200.72062,
                    "p95": 239.40232999999998,
                    "p99": 239.40232999999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 204.722531,
                    "min": 172.869753,
                    "p50": 177.65828199999999,
                    "p95": 204.722531,
                    "p99": 204.722531,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.985892,
                    "min": 226.752212,
                    "p50": 234.17549599999998,
                    "p95": 270.985892,
                    "p99": 270.985892,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 79.428473,
                    "min": 42.08264,
                    "p50": 43.826299,
                    "p95": 79.428473,
                    "p99": 79.428473,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1329.4808739999999,
                    "min": 1307.969551,
                    "p50": 1316.9390429999999,
                    "p95": 1329.4808739999999,
                    "p99": 1329.4808739999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.798453,
                    "min": 55.293566999999996,
                    "p50": 77.891213,
                    "p95": 94.798453,
                    "p99": 94.798453,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.301929,
                    "min": 67.335214,
                    "p50": 107.151977,
                    "p95": 113.301929,
                    "p99": 113.301929,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.579117,
                    "min": 109.161041,
                    "p50": 135.41150199999998,
                    "p95": 149.579117,
                    "p99": 149.579117,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 200.19546499999998,
                    "min": 157.742506,
                    "p50": 175.164191,
                    "p95": 200.19546499999998,
                    "p99": 200.19546499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 158.915044,
                    "min": 121.09083799999999,
                    "p50": 153.796428,
                    "p95": 158.915044,
                    "p99": 158.915044,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 186.790222,
                    "min": 145.89023,
                    "p50": 148.64326499999999,
                    "p95": 186.790222,
                    "p99": 186.790222,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 129.530721,
                    "min": 93.745159,
                    "p50": 110.020232,
                    "p95": 129.530721,
                    "p99": 129.530721,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 173.51282999999998,
                    "min": 131.208405,
                    "p50": 160.90563,
                    "p95": 173.51282999999998,
                    "p99": 173.51282999999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 694.1910899999999,
                    "min": 638.233717,
                    "p50": 657.832775,
                    "p95": 694.1910899999999,
                    "p99": 694.1910899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 208.400334,
                    "min": 167.67844399999998,
                    "p50": 198.965783,
                    "p95": 208.400334,
                    "p99": 208.400334,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1248.778947,
                    "min": 1209.8529959999998,
                    "p50": 1228.94841,
                    "p95": 1248.778947,
                    "p99": 1248.778947,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 211.28319499999998,
                    "min": 177.817813,
                    "p50": 200.11910699999999,
                    "p95": 211.28319499999998,
                    "p99": 211.28319499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.683014,
                    "min": 118.259614,
                    "p50": 147.446488,
                    "p95": 156.683014,
                    "p99": 156.683014,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 253.53134699999998,
                    "min": 217.277513,
                    "p50": 223.03868899999998,
                    "p95": 253.53134699999998,
                    "p99": 253.53134699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 293.460901,
                    "min": 241.142227,
                    "p50": 281.112508,
                    "p95": 293.460901,
                    "p99": 293.460901,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.066958,
                    "min": 67.667036,
                    "p50": 101.65784,
                    "p95": 112.066958,
                    "p99": 112.066958,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 167.60478,
                    "min": 128.86708199999998,
                    "p50": 151.513799,
                    "p95": 167.60478,
                    "p99": 167.60478,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 127.262907,
                    "min": 87.29230299999999,
                    "p50": 123.311189,
                    "p95": 127.262907,
                    "p99": 127.262907,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 230.23438099999998,
                    "min": 193.13248099999998,
                    "p50": 209.00551,
                    "p95": 230.23438099999998,
                    "p99": 230.23438099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 189.616197,
                    "min": 149.159774,
                    "p50": 155.303854,
                    "p95": 189.616197,
                    "p99": 189.616197,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 533.005665,
                    "min": 477.584752,
                    "p50": 512.131665,
                    "p95": 533.005665,
                    "p99": 533.005665,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 399.581797,
                    "min": 362.386193,
                    "p50": 386.86960899999997,
                    "p95": 399.581797,
                    "p99": 399.581797,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 186.550141,
                    "min": 140.738385,
                    "p50": 156.27257799999998,
                    "p95": 186.550141,
                    "p99": 186.550141,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.48382,
                    "min": 39.353697,
                    "p50": 41.396083,
                    "p95": 76.48382,
                    "p99": 76.48382,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 144.136941,
                    "min": 120.26977,
                    "p50": 142.439411,
                    "p95": 144.136941,
                    "p99": 144.136941,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 92.736508,
                    "min": 53.317198999999995,
                    "p50": 89.454757,
                    "p95": 92.736508,
                    "p99": 92.736508,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.273912,
                    "min": 78.819,
                    "p50": 115.964029,
                    "p95": 119.273912,
                    "p99": 119.273912,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 675.1426849999999,
                    "min": 605.55488,
                    "p50": 651.789368,
                    "p95": 675.1426849999999,
                    "p99": 675.1426849999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 633.84524,
                    "min": 148.169205,
                    "p50": 179.599749,
                    "p95": 633.84524,
                    "p99": 633.84524,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.85257199999998,
                    "min": 96.901725,
                    "p50": 123.553945,
                    "p95": 135.85257199999998,
                    "p99": 135.85257199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.00200699999999,
                    "min": 57.667936,
                    "p50": 94.09004399999999,
                    "p95": 97.00200699999999,
                    "p99": 97.00200699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.379159,
                    "min": 109.16269,
                    "p50": 146.477626,
                    "p95": 152.379159,
                    "p99": 152.379159,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 311.490442,
                    "min": 270.65572099999997,
                    "p50": 298.371124,
                    "p95": 311.490442,
                    "p99": 311.490442,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 85.110248,
                    "min": 43.975783,
                    "p50": 45.064549,
                    "p95": 85.110248,
                    "p99": 85.110248,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1354.3106,
                    "min": 1316.296287,
                    "p50": 1332.4074269999999,
                    "p95": 1354.3106,
                    "p99": 1354.3106,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 274.981859,
                    "min": 234.20255999999998,
                    "p50": 240.169809,
                    "p95": 274.981859,
                    "p99": 274.981859,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.48711499999999,
                    "min": 70.477197,
                    "p50": 97.394988,
                    "p95": 109.48711499999999,
                    "p99": 109.48711499999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.694101,
                    "min": 132.772491,
                    "p50": 164.275623,
                    "p95": 177.694101,
                    "p99": 177.694101,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.791384,
                    "min": 190.132734,
                    "p50": 225.712471,
                    "p95": 227.791384,
                    "p99": 227.791384,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.60054699999999,
                    "min": 84.157057,
                    "p50": 110.21047,
                    "p95": 123.60054699999999,
                    "p99": 123.60054699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 200.61975099999998,
                    "min": 161.783089,
                    "p50": 165.193794,
                    "p95": 200.61975099999998,
                    "p99": 200.61975099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 727.096399,
                    "min": 662.804119,
                    "p50": 698.396584,
                    "p95": 727.096399,
                    "p99": 727.096399,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 446.114911,
                    "min": 402.721844,
                    "p50": 422.33142999999995,
                    "p95": 446.114911,
                    "p99": 446.114911,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 215.34855199999998,
                    "min": 174.613032,
                    "p50": 180.35878399999999,
                    "p95": 215.34855199999998,
                    "p99": 215.34855199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 162.62389399999998,
                    "min": 121.796675,
                    "p50": 149.436532,
                    "p95": 162.62389399999998,
                    "p99": 162.62389399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 244.337434,
                    "min": 201.590995,
                    "p50": 231.06508699999998,
                    "p95": 244.337434,
                    "p99": 244.337434,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 566.311006,
                    "min": 515.252228,
                    "p50": 543.258295,
                    "p95": 566.311006,
                    "p99": 566.311006,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 146.57621899999998,
                    "min": 130.08373899999998,
                    "p50": 137.268144,
                    "p95": 146.57621899999998,
                    "p99": 146.57621899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 227.511971,
                    "min": 183.56577,
                    "p50": 214.97807999999998,
                    "p95": 227.511971,
                    "p99": 227.511971,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 198.314402,
                    "min": 161.043254,
                    "p50": 191.95927,
                    "p95": 198.314402,
                    "p99": 198.314402,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.387018,
                    "min": 84.207717,
                    "p50": 120.600426,
                    "p95": 124.387018,
                    "p99": 124.387018,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 321.78637399999997,
                    "min": 287.509152,
                    "p50": 314.573338,
                    "p95": 321.78637399999997,
                    "p99": 321.78637399999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 99.86985,
                    "min": 58.2847,
                    "p50": 98.68216,
                    "p95": 99.86985,
                    "p99": 99.86985,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.669795,
                    "min": 110.797719,
                    "p50": 133.896435,
                    "p95": 154.669795,
                    "p99": 154.669795,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.955638,
                    "min": 144.32625099999998,
                    "p50": 170.51264899999998,
                    "p95": 185.955638,
                    "p99": 185.955638,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 256.468016,
                    "min": 217.40424299999998,
                    "p50": 251.82449,
                    "p95": 256.468016,
                    "p99": 256.468016,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 457.560166,
                    "min": 406.77383299999997,
                    "p50": 446.372555,
                    "p95": 457.560166,
                    "p99": 457.560166,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 216.645244,
                    "min": 164.682113,
                    "p50": 206.26044399999998,
                    "p95": 216.645244,
                    "p99": 216.645244,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.03669299999999,
                    "min": 124.935283,
                    "p50": 163.434375,
                    "p95": 171.03669299999999,
                    "p99": 171.03669299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 104.12615,
                    "min": 74.623305,
                    "p50": 86.082432,
                    "p95": 104.12615,
                    "p99": 104.12615,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 237.742585,
                    "min": 200.754878,
                    "p50": 230.899586,
                    "p95": 237.742585,
                    "p99": 237.742585,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 291.02536399999997,
                    "min": 237.65905899999998,
                    "p50": 269.56431499999997,
                    "p95": 291.02536399999997,
                    "p99": 291.02536399999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 601.2874419999999,
                    "min": 537.733696,
                    "p50": 582.623438,
                    "p95": 601.2874419999999,
                    "p99": 601.2874419999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 773.0793239999999,
                    "min": 678.979596,
                    "p50": 706.1241749999999,
                    "p95": 773.0793239999999,
                    "p99": 773.0793239999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1444.631246,
                    "min": 1390.9651669999998,
                    "p50": 1405.428438,
                    "p95": 1444.631246,
                    "p99": 1444.631246,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.50673599999999,
                    "min": 44.281279999999995,
                    "p50": 81.765829,
                    "p95": 84.50673599999999,
                    "p99": 84.50673599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 664.505282,
                    "min": 603.7371479999999,
                    "p50": 648.4373429999999,
                    "p95": 664.505282,
                    "p99": 664.505282,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 199.534783,
                    "min": 167.187763,
                    "p50": 169.306296,
                    "p95": 199.534783,
                    "p99": 199.534783,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 169.730187,
                    "min": 130.327037,
                    "p50": 157.158563,
                    "p95": 169.730187,
                    "p99": 169.730187,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 224.479672,
                    "min": 193.703452,
                    "p50": 218.077767,
                    "p95": 224.479672,
                    "p99": 224.479672,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 132.077409,
                    "min": 91.031677,
                    "p50": 125.551372,
                    "p95": 132.077409,
                    "p99": 132.077409,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.677724,
                    "min": 66.690756,
                    "p50": 83.166471,
                    "p95": 110.677724,
                    "p99": 110.677724,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.03701099999999,
                    "min": 41.761381,
                    "p50": 57.992763999999994,
                    "p95": 77.03701099999999,
                    "p99": 77.03701099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 177.63803199999998,
                    "min": 143.234436,
                    "p50": 168.389042,
                    "p95": 177.63803199999998,
                    "p99": 177.63803199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 250.152753,
                    "min": 213.241896,
                    "p50": 246.8113,
                    "p95": 250.152753,
                    "p99": 250.152753,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 113.868738,
                    "min": 72.498672,
                    "p50": 78.917288,
                    "p95": 113.868738,
                    "p99": 113.868738,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 134.01979699999998,
                    "min": 100.50126499999999,
                    "p50": 128.209557,
                    "p95": 134.01979699999998,
                    "p99": 134.01979699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 211.93898,
                    "min": 166.195585,
                    "p50": 206.944523,
                    "p95": 211.93898,
                    "p99": 211.93898,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 556.754567,
                    "min": 492.504036,
                    "p50": 517.507739,
                    "p95": 556.754567,
                    "p99": 556.754567,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 155.519634,
                    "min": 118.25497899999999,
                    "p50": 148.154116,
                    "p95": 155.519634,
                    "p99": 155.519634,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 299.014683,
                    "min": 249.119373,
                    "p50": 288.112035,
                    "p95": 299.014683,
                    "p99": 299.014683,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 195.45617,
                    "min": 154.563297,
                    "p50": 190.385592,
                    "p95": 195.45617,
                    "p99": 195.45617,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.691786,
                    "min": 49.97945,
                    "p50": 79.939413,
                    "p95": 80.691786,
                    "p99": 80.691786,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 411.71615199999997,
                    "min": 347.77482,
                    "p50": 380.25435799999997,
                    "p95": 411.71615199999997,
                    "p99": 411.71615199999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.368605,
                    "min": 212.065923,
                    "p50": 235.678721,
                    "p95": 247.368605,
                    "p99": 247.368605,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 179.52982599999999,
                    "min": 136.856516,
                    "p50": 173.67719699999998,
                    "p95": 179.52982599999999,
                    "p99": 179.52982599999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 246.425826,
                    "min": 212.812623,
                    "p50": 233.074556,
                    "p95": 246.425826,
                    "p99": 246.425826,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 940.562463,
                    "min": 848.664126,
                    "p50": 900.841558,
                    "p95": 940.562463,
                    "p99": 940.562463,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 626.197409,
                    "min": 565.732849,
                    "p50": 609.2452079999999,
                    "p95": 626.197409,
                    "p99": 626.197409,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 725.864242,
                    "min": 639.919509,
                    "p50": 688.907876,
                    "p95": 725.864242,
                    "p99": 725.864242,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 840.4932799999999,
                    "min": 748.3947089999999,
                    "p50": 765.5142089999999,
                    "p95": 840.4932799999999,
                    "p99": 840.4932799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 447.050114,
                    "min": 385.50316899999996,
                    "p50": 423.47779299999996,
                    "p95": 447.050114,
                    "p99": 447.050114,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 308.618701,
                    "min": 278.507247,
                    "p50": 296.994874,
                    "p95": 308.618701,
                    "p99": 308.618701,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 412.103656,
                    "min": 358.734713,
                    "p50": 405.954193,
                    "p95": 412.103656,
                    "p99": 412.103656,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 370.433834,
                    "min": 290.75998,
                    "p50": 326.748806,
                    "p95": 370.433834,
                    "p99": 370.433834,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 506.38177199999996,
                    "min": 445.112377,
                    "p50": 470.763214,
                    "p95": 506.38177199999996,
                    "p99": 506.38177199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 518.557473,
                    "min": 475.13385,
                    "p50": 498.277964,
                    "p95": 518.557473,
                    "p99": 518.557473,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 671.705683,
                    "min": 641.588412,
                    "p50": 651.580527,
                    "p95": 671.705683,
                    "p99": 671.705683,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 588.924129,
                    "min": 545.710343,
                    "p50": 579.571926,
                    "p95": 588.924129,
                    "p99": 588.924129,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 534.1222379999999,
                    "min": 469.01500699999997,
                    "p50": 501.94188599999995,
                    "p95": 534.1222379999999,
                    "p99": 534.1222379999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 641.240025,
                    "min": 590.033045,
                    "p50": 627.0326309999999,
                    "p95": 641.240025,
                    "p99": 641.240025,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 649.573313,
                    "min": 615.398645,
                    "p50": 648.153611,
                    "p95": 649.573313,
                    "p99": 649.573313,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.45898599999998,
                    "min": 167.88849299999998,
                    "p50": 199.212686,
                    "p95": 211.45898599999998,
                    "p99": 211.45898599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 255.88807899999998,
                    "min": 210.694845,
                    "p50": 246.74342399999998,
                    "p95": 255.88807899999998,
                    "p99": 255.88807899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 366.042424,
                    "min": 321.468841,
                    "p50": 329.94496,
                    "p95": 366.042424,
                    "p99": 366.042424,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 320.005315,
                    "min": 279.63542,
                    "p50": 304.148334,
                    "p95": 320.005315,
                    "p99": 320.005315,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 499.887094,
                    "min": 469.09072499999996,
                    "p50": 485.731429,
                    "p95": 499.887094,
                    "p99": 499.887094,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 186.947578,
                    "min": 138.766018,
                    "p50": 161.522683,
                    "p95": 186.947578,
                    "p99": 186.947578,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 420.21425,
                    "min": 362.138337,
                    "p50": 376.575541,
                    "p95": 420.21425,
                    "p99": 420.21425,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 824.647032,
                    "min": 767.4766999999999,
                    "p50": 799.47149,
                    "p95": 824.647032,
                    "p99": 824.647032,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 946.6503749999999,
                    "min": 879.554889,
                    "p50": 918.1986059999999,
                    "p95": 946.6503749999999,
                    "p99": 946.6503749999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 730.776695,
                    "min": 672.0234899999999,
                    "p50": 715.664815,
                    "p95": 730.776695,
                    "p99": 730.776695,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.27917399999995,
                    "min": 390.480773,
                    "p50": 411.187408,
                    "p95": 425.27917399999995,
                    "p99": 425.27917399999995,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 592.665876,
                    "min": 539.378456,
                    "p50": 582.687336,
                    "p95": 592.665876,
                    "p99": 592.665876,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 666.9031309999999,
                    "min": 618.264057,
                    "p50": 657.401617,
                    "p95": 666.9031309999999,
                    "p99": 666.9031309999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 605.004209,
                    "min": 543.14941,
                    "p50": 586.2177409999999,
                    "p95": 605.004209,
                    "p99": 605.004209,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 669.162976,
                    "min": 619.2712389999999,
                    "p50": 661.437267,
                    "p95": 669.162976,
                    "p99": 669.162976,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 783.078911,
                    "min": 721.50204,
                    "p50": 752.4413089999999,
                    "p95": 783.078911,
                    "p99": 783.078911,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 571.31105,
                    "min": 509.39379099999996,
                    "p50": 562.0966149999999,
                    "p95": 571.31105,
                    "p99": 571.31105,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 539.2577,
                    "min": 490.16414299999997,
                    "p50": 519.174491,
                    "p95": 539.2577,
                    "p99": 539.2577,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.44269699999998,
                    "min": 134.005198,
                    "p50": 145.332447,
                    "p95": 178.44269699999998,
                    "p99": 178.44269699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 860.830119,
                    "min": 806.068183,
                    "p50": 838.3732259999999,
                    "p95": 860.830119,
                    "p99": 860.830119,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 496.61877899999996,
                    "min": 405.729374,
                    "p50": 461.958514,
                    "p95": 496.61877899999996,
                    "p99": 496.61877899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 446.956098,
                    "min": 380.322256,
                    "p50": 435.46568299999996,
                    "p95": 446.956098,
                    "p99": 446.956098,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 308.98369099999996,
                    "min": 273.29112299999997,
                    "p50": 279.670622,
                    "p95": 308.98369099999996,
                    "p99": 308.98369099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 403.742276,
                    "min": 331.345753,
                    "p50": 390.666787,
                    "p95": 403.742276,
                    "p99": 403.742276,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 357.680798,
                    "min": 310.256331,
                    "p50": 322.931207,
                    "p95": 357.680798,
                    "p99": 357.680798,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 220.54026,
                    "min": 167.005439,
                    "p50": 186.732279,
                    "p95": 220.54026,
                    "p99": 220.54026,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.40814,
                    "min": 226.188271,
                    "p50": 237.702913,
                    "p95": 258.40814,
                    "p99": 258.40814,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 667.076903,
                    "min": 629.493652,
                    "p50": 648.360145,
                    "p95": 667.076903,
                    "p99": 667.076903,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 732.064897,
                    "min": 693.283042,
                    "p50": 705.5014199999999,
                    "p95": 732.064897,
                    "p99": 732.064897,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 574.39468,
                    "min": 537.419188,
                    "p50": 561.241731,
                    "p95": 574.39468,
                    "p99": 574.39468,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1074.373333,
                    "min": 736.573042,
                    "p50": 792.5334029999999,
                    "p95": 1074.373333,
                    "p99": 1074.373333,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.401601,
                    "min": 186.718992,
                    "p50": 207.767904,
                    "p95": 214.401601,
                    "p99": 214.401601,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 543.528633,
                    "min": 495.53157699999997,
                    "p50": 512.9876909999999,
                    "p95": 543.528633,
                    "p99": 543.528633,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 941.234056,
                    "min": 872.267602,
                    "p50": 902.292243,
                    "p95": 941.234056,
                    "p99": 941.234056,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 305.599383,
                    "min": 257.117374,
                    "p50": 294.018367,
                    "p95": 305.599383,
                    "p99": 305.599383,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.42774699999995,
                    "min": 340.705484,
                    "p50": 381.21725599999996,
                    "p95": 415.42774699999995,
                    "p99": 415.42774699999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 366.408464,
                    "min": 322.628837,
                    "p50": 350.97660199999996,
                    "p95": 366.408464,
                    "p99": 366.408464,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 704.543736,
                    "min": 215.24587599999998,
                    "p50": 257.092915,
                    "p95": 704.543736,
                    "p99": 704.543736,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 444.44195299999996,
                    "min": 388.549384,
                    "p50": 433.03167199999996,
                    "p95": 444.44195299999996,
                    "p99": 444.44195299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 509.19899399999997,
                    "min": 447.39861299999995,
                    "p50": 487.048281,
                    "p95": 509.19899399999997,
                    "p99": 509.19899399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 179.67044199999998,
                    "min": 136.99579599999998,
                    "p50": 172.850733,
                    "p95": 179.67044199999998,
                    "p99": 179.67044199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 642.616805,
                    "min": 580.275139,
                    "p50": 637.209807,
                    "p95": 642.616805,
                    "p99": 642.616805,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 701.36579,
                    "min": 631.7087409999999,
                    "p50": 673.3864229999999,
                    "p95": 701.36579,
                    "p99": 701.36579,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 439.23721,
                    "min": 381.19654499999996,
                    "p50": 397.486813,
                    "p95": 439.23721,
                    "p99": 439.23721,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.602305,
                    "min": 468.934976,
                    "p50": 506.36220899999995,
                    "p95": 516.602305,
                    "p99": 516.602305,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 340.568516,
                    "min": 297.63903799999997,
                    "p50": 335.582177,
                    "p95": 340.568516,
                    "p99": 340.568516,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.966528,
                    "min": 255.07696099999998,
                    "p50": 292.918812,
                    "p95": 299.966528,
                    "p99": 299.966528,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 480.986605,
                    "min": 428.35560999999996,
                    "p50": 462.14662899999996,
                    "p95": 480.986605,
                    "p99": 480.986605,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.15588499999998,
                    "min": 129.725797,
                    "p50": 155.825012,
                    "p95": 169.15588499999998,
                    "p99": 169.15588499999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 222.91722399999998,
                    "min": 171.336539,
                    "p50": 211.114298,
                    "p95": 222.91722399999998,
                    "p99": 222.91722399999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 377.436375,
                    "min": 336.944084,
                    "p50": 369.85526999999996,
                    "p95": 377.436375,
                    "p99": 377.436375,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.94773399999997,
                    "min": 212.82423599999998,
                    "p50": 229.227331,
                    "p95": 259.94773399999997,
                    "p99": 259.94773399999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 918.7340969999999,
                    "min": 847.809805,
                    "p50": 868.217815,
                    "p95": 918.7340969999999,
                    "p99": 918.7340969999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 568.0588769999999,
                    "min": 508.37003,
                    "p50": 539.5331719999999,
                    "p95": 568.0588769999999,
                    "p99": 568.0588769999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 798.4401819999999,
                    "min": 742.32827,
                    "p50": 772.0523109999999,
                    "p95": 798.4401819999999,
                    "p99": 798.4401819999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 650.6074209999999,
                    "min": 588.811963,
                    "p50": 620.3898009999999,
                    "p95": 650.6074209999999,
                    "p99": 650.6074209999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 600.5825649999999,
                    "min": 547.916461,
                    "p50": 589.6294439999999,
                    "p95": 600.5825649999999,
                    "p99": 600.5825649999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1329.4890699999999,
                    "min": 1266.5571889999999,
                    "p50": 1309.869835,
                    "p95": 1329.4890699999999,
                    "p99": 1329.4890699999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 581.205916,
                    "min": 508.26356699999997,
                    "p50": 544.447453,
                    "p95": 581.205916,
                    "p99": 581.205916,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1005.7815899999999,
                    "min": 375.631404,
                    "p50": 414.243631,
                    "p95": 1005.7815899999999,
                    "p99": 1005.7815899999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 498.96811199999996,
                    "min": 441.825514,
                    "p50": 472.65462099999996,
                    "p95": 498.96811199999996,
                    "p99": 498.96811199999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 762.203135,
                    "min": 677.370246,
                    "p50": 716.298816,
                    "p95": 762.203135,
                    "p99": 762.203135,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 672.7760949999999,
                    "min": 592.9959309999999,
                    "p50": 632.7143219999999,
                    "p95": 672.7760949999999,
                    "p99": 672.7760949999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 458.694287,
                    "min": 438.197068,
                    "p50": 445.09716,
                    "p95": 458.694287,
                    "p99": 458.694287,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.132272,
                    "min": 105.143779,
                    "p50": 131.797315,
                    "p95": 155.132272,
                    "p99": 155.132272,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 178.85857199999998,
                    "min": 139.444568,
                    "p50": 169.60782999999998,
                    "p95": 178.85857199999998,
                    "p99": 178.85857199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 399.768563,
                    "min": 341.874014,
                    "p50": 378.128107,
                    "p95": 399.768563,
                    "p99": 399.768563,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 244.98485599999998,
                    "min": 206.354815,
                    "p50": 221.406453,
                    "p95": 244.98485599999998,
                    "p99": 244.98485599999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 364.840081,
                    "min": 307.779376,
                    "p50": 344.031791,
                    "p95": 364.840081,
                    "p99": 364.840081,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.1342,
                    "min": 172.442755,
                    "p50": 203.450166,
                    "p95": 231.1342,
                    "p99": 231.1342,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 537.879334,
                    "min": 477.008375,
                    "p50": 512.910252,
                    "p95": 537.879334,
                    "p99": 537.879334,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 321.340735,
                    "min": 273.60215,
                    "p50": 306.124128,
                    "p95": 321.340735,
                    "p99": 321.340735,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 285.93956499999996,
                    "min": 239.76916899999998,
                    "p50": 280.072843,
                    "p95": 285.93956499999996,
                    "p99": 285.93956499999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 358.71484799999996,
                    "min": 315.972066,
                    "p50": 332.195831,
                    "p95": 358.71484799999996,
                    "p99": 358.71484799999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 174.603151,
                    "min": 128.827494,
                    "p50": 165.452385,
                    "p95": 174.603151,
                    "p99": 174.603151,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1055.94597,
                    "min": 253.486001,
                    "p50": 292.986294,
                    "p95": 1055.94597,
                    "p99": 1055.94597,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 275.95905,
                    "min": 241.633667,
                    "p50": 259.024607,
                    "p95": 275.95905,
                    "p99": 275.95905,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 230.73925,
                    "min": 190.721454,
                    "p50": 203.56925999999999,
                    "p95": 230.73925,
                    "p99": 230.73925,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 516.761356,
                    "min": 473.044109,
                    "p50": 501.70228299999997,
                    "p95": 516.761356,
                    "p99": 516.761356,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 440.099376,
                    "min": 409.346721,
                    "p50": 410.866964,
                    "p95": 440.099376,
                    "p99": 440.099376,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 700.9543219999999,
                    "min": 627.598027,
                    "p50": 670.2146309999999,
                    "p95": 700.9543219999999,
                    "p99": 700.9543219999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1041.64422,
                    "min": 967.1695589999999,
                    "p50": 982.836327,
                    "p95": 1041.64422,
                    "p99": 1041.64422,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 426.336212,
                    "min": 378.176836,
                    "p50": 402.64300299999996,
                    "p95": 426.336212,
                    "p99": 426.336212,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 204.74735199999998,
                    "min": 160.255071,
                    "p50": 187.988915,
                    "p95": 204.74735199999998,
                    "p99": 204.74735199999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 405.112907,
                    "min": 348.424292,
                    "p50": 373.194325,
                    "p95": 405.112907,
                    "p99": 405.112907,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 135.511713,
                    "min": 97.581386,
                    "p50": 129.051928,
                    "p95": 135.511713,
                    "p99": 135.511713,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 491.977554,
                    "min": 438.83784199999997,
                    "p50": 478.34835899999996,
                    "p95": 491.977554,
                    "p99": 491.977554,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 625.411795,
                    "min": 561.300836,
                    "p50": 585.180063,
                    "p95": 625.411795,
                    "p99": 625.411795,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 344.470021,
                    "min": 285.971386,
                    "p50": 323.720547,
                    "p95": 344.470021,
                    "p99": 344.470021,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1001.2066149999999,
                    "min": 975.0345219999999,
                    "p50": 982.7730829999999,
                    "p95": 1001.2066149999999,
                    "p99": 1001.2066149999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 263.437701,
                    "min": 221.863904,
                    "p50": 252.660893,
                    "p95": 263.437701,
                    "p99": 263.437701,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 188.753739,
                    "min": 149.08473999999998,
                    "p50": 182.722039,
                    "p95": 188.753739,
                    "p99": 188.753739,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 336.186172,
                    "min": 294.56271,
                    "p50": 324.208089,
                    "p95": 336.186172,
                    "p99": 336.186172,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 127.90255699999999,
                    "min": 101.584032,
                    "p50": 126.306725,
                    "p95": 127.90255699999999,
                    "p99": 127.90255699999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 524.54973,
                    "min": 489.96831299999997,
                    "p50": 501.003476,
                    "p95": 524.54973,
                    "p99": 524.54973,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 404.326468,
                    "min": 368.540166,
                    "p50": 395.563679,
                    "p95": 404.326468,
                    "p99": 404.326468,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 383.30373,
                    "min": 342.95708199999996,
                    "p50": 363.659795,
                    "p95": 383.30373,
                    "p99": 383.30373,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 107.276348,
                    "min": 76.614448,
                    "p50": 77.73014599999999,
                    "p95": 107.276348,
                    "p99": 107.276348,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 164.599839,
                    "min": 124.773687,
                    "p50": 160.747281,
                    "p95": 164.599839,
                    "p99": 164.599839,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 464.52797599999997,
                    "min": 432.171787,
                    "p50": 457.13926599999996,
                    "p95": 464.52797599999997,
                    "p99": 464.52797599999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 235.422102,
                    "min": 197.656728,
                    "p50": 224.896975,
                    "p95": 235.422102,
                    "p99": 235.422102,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 310.63165699999996,
                    "min": 270.116951,
                    "p50": 274.232375,
                    "p95": 310.63165699999996,
                    "p99": 310.63165699999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 211.524128,
                    "min": 174.14143299999998,
                    "p50": 201.11338899999998,
                    "p95": 211.524128,
                    "p99": 211.524128,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 359.093552,
                    "min": 319.72171599999996,
                    "p50": 322.718793,
                    "p95": 359.093552,
                    "p99": 359.093552,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 772.939798,
                    "min": 732.4355069999999,
                    "p50": 760.851009,
                    "p95": 772.939798,
                    "p99": 772.939798,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1260.992553,
                    "min": 1214.382623,
                    "p50": 1256.625677,
                    "p95": 1260.992553,
                    "p99": 1260.992553,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 289.74987999999996,
                    "min": 247.73540899999998,
                    "p50": 283.969233,
                    "p95": 289.74987999999996,
                    "p99": 289.74987999999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 153.17047,
                    "min": 113.591825,
                    "p50": 152.11440199999998,
                    "p95": 153.17047,
                    "p99": 153.17047,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 358.497804,
                    "min": 322.10916399999996,
                    "p50": 346.68017499999996,
                    "p95": 358.497804,
                    "p99": 358.497804,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 524.2239509999999,
                    "min": 475.11002499999995,
                    "p50": 511.668974,
                    "p95": 524.2239509999999,
                    "p99": 524.2239509999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 832.9057329999999,
                    "min": 799.195383,
                    "p50": 825.348609,
                    "p95": 832.9057329999999,
                    "p99": 832.9057329999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 676.953315,
                    "min": 639.4146089999999,
                    "p50": 661.8276139999999,
                    "p95": 676.953315,
                    "p99": 676.953315,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 169.742328,
                    "min": 129.97852799999998,
                    "p50": 131.999847,
                    "p95": 169.742328,
                    "p99": 169.742328,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 320.582632,
                    "min": 283.140295,
                    "p50": 314.317549,
                    "p95": 320.582632,
                    "p99": 320.582632,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 136.71192,
                    "min": 99.479421,
                    "p50": 125.446861,
                    "p95": 136.71192,
                    "p99": 136.71192,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 266.798672,
                    "min": 224.22878799999998,
                    "p50": 253.424154,
                    "p95": 266.798672,
                    "p99": 266.798672,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 282.757255,
                    "min": 240.788885,
                    "p50": 255.68721699999998,
                    "p95": 282.757255,
                    "p99": 282.757255,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 107.96700899999999,
                    "min": 67.370391,
                    "p50": 105.42303,
                    "p95": 107.96700899999999,
                    "p99": 107.96700899999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 214.59428799999998,
                    "min": 178.699954,
                    "p50": 205.215755,
                    "p95": 214.59428799999998,
                    "p99": 214.59428799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 233.594327,
                    "min": 195.575413,
                    "p50": 224.396918,
                    "p95": 233.594327,
                    "p99": 233.594327,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 120.518858,
                    "min": 83.745193,
                    "p50": 109.62574699999999,
                    "p95": 120.518858,
                    "p99": 120.518858,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.632616,
                    "min": 51.130886999999994,
                    "p50": 76.91004099999999,
                    "p95": 89.632616,
                    "p99": 89.632616,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 249.053263,
                    "min": 208.51783999999998,
                    "p50": 234.32181,
                    "p95": 249.053263,
                    "p99": 249.053263,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 200.799953,
                    "min": 163.78588,
                    "p50": 194.255301,
                    "p95": 200.799953,
                    "p99": 200.799953,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 185.841695,
                    "min": 146.27156,
                    "p50": 169.372255,
                    "p95": 185.841695,
                    "p99": 185.841695,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 380.39624499999996,
                    "min": 325.79121299999997,
                    "p50": 360.228228,
                    "p95": 380.39624499999996,
                    "p99": 380.39624499999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 574.250359,
                    "min": 503.23826499999996,
                    "p50": 531.203974,
                    "p95": 574.250359,
                    "p99": 574.250359,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 493.74455,
                    "min": 445.40684699999997,
                    "p50": 488.79146099999997,
                    "p95": 493.74455,
                    "p99": 493.74455,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 141.342514,
                    "min": 111.003675,
                    "p50": 117.854608,
                    "p95": 141.342514,
                    "p99": 141.342514,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 802.475243,
                    "min": 714.9641869999999,
                    "p50": 760.2956879999999,
                    "p95": 802.475243,
                    "p99": 802.475243,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 345.29362499999996,
                    "min": 288.250833,
                    "p50": 305.794418,
                    "p95": 345.29362499999996,
                    "p99": 345.29362499999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.555422,
                    "min": 182.16679299999998,
                    "p50": 214.70015999999998,
                    "p95": 231.555422,
                    "p99": 231.555422,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 461.78622199999995,
                    "min": 395.26077699999996,
                    "p50": 437.337472,
                    "p95": 461.78622199999995,
                    "p99": 461.78622199999995,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 266.379214,
                    "min": 216.941499,
                    "p50": 229.925199,
                    "p95": 266.379214,
                    "p99": 266.379214,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 708.149829,
                    "min": 626.399917,
                    "p50": 688.3307,
                    "p95": 708.149829,
                    "p99": 708.149829,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 194.164608,
                    "min": 154.740228,
                    "p50": 188.90176699999998,
                    "p95": 194.164608,
                    "p99": 194.164608,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 614.4355969999999,
                    "min": 536.969789,
                    "p50": 587.555475,
                    "p95": 614.4355969999999,
                    "p99": 614.4355969999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 308.855824,
                    "min": 249.97704199999998,
                    "p50": 298.33599599999997,
                    "p95": 308.855824,
                    "p99": 308.855824,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 543.7047259999999,
                    "min": 466.522872,
                    "p50": 521.993356,
                    "p95": 543.7047259999999,
                    "p99": 543.7047259999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 426.109967,
                    "min": 363.152069,
                    "p50": 393.363812,
                    "p95": 426.109967,
                    "p99": 426.109967,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 250.408312,
                    "min": 203.13507199999998,
                    "p50": 237.495091,
                    "p95": 250.408312,
                    "p99": 250.408312,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 685.6221449999999,
                    "min": 620.600635,
                    "p50": 637.409999,
                    "p95": 685.6221449999999,
                    "p99": 685.6221449999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 410.001,
                    "min": 387.693463,
                    "p50": 399.093667,
                    "p95": 410.001,
                    "p99": 410.001,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 567.436934,
                    "min": 514.085394,
                    "p50": 561.909274,
                    "p95": 567.436934,
                    "p99": 567.436934,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 899.611634,
                    "min": 802.9664829999999,
                    "p50": 834.130693,
                    "p95": 899.611634,
                    "p99": 899.611634,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 513.4736839999999,
                    "min": 449.13671899999997,
                    "p50": 478.215443,
                    "p95": 513.4736839999999,
                    "p99": 513.4736839999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 608.6298009999999,
                    "min": 557.815016,
                    "p50": 589.8482,
                    "p95": 608.6298009999999,
                    "p99": 608.6298009999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1324.882234,
                    "min": 1196.086991,
                    "p50": 1223.2980089999999,
                    "p95": 1324.882234,
                    "p99": 1324.882234,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 329.840581,
                    "min": 283.12967599999996,
                    "p50": 315.377428,
                    "p95": 329.840581,
                    "p99": 329.840581,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 166.69064799999998,
                    "min": 124.445146,
                    "p50": 159.525522,
                    "p95": 166.69064799999998,
                    "p99": 166.69064799999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 456.00845599999997,
                    "min": 399.24008599999996,
                    "p50": 430.28936699999997,
                    "p95": 456.00845599999997,
                    "p99": 456.00845599999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 289.54574099999996,
                    "min": 241.750174,
                    "p50": 263.40851,
                    "p95": 289.54574099999996,
                    "p99": 289.54574099999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 207.503833,
                    "min": 163.88770399999999,
                    "p50": 197.668769,
                    "p95": 207.503833,
                    "p99": 207.503833,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 766.705609,
                    "min": 320.62138,
                    "p50": 358.891146,
                    "p95": 766.705609,
                    "p99": 766.705609,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 784.7162559999999,
                    "min": 697.092095,
                    "p50": 735.305977,
                    "p95": 784.7162559999999,
                    "p99": 784.7162559999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 544.366884,
                    "min": 480.30476899999996,
                    "p50": 502.24265699999995,
                    "p95": 544.366884,
                    "p99": 544.366884,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 532.357516,
                    "min": 450.615619,
                    "p50": 498.13573499999995,
                    "p95": 532.357516,
                    "p99": 532.357516,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 574.864196,
                    "min": 520.2220189999999,
                    "p50": 570.294596,
                    "p95": 574.864196,
                    "p99": 574.864196,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 609.115803,
                    "min": 573.491916,
                    "p50": 604.269579,
                    "p95": 609.115803,
                    "p99": 609.115803,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 402.697972,
                    "min": 348.166676,
                    "p50": 378.330409,
                    "p95": 402.697972,
                    "p99": 402.697972,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 276.872705,
                    "min": 249.20175899999998,
                    "p50": 263.335303,
                    "p95": 276.872705,
                    "p99": 276.872705,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 343.36947799999996,
                    "min": 305.095163,
                    "p50": 335.493029,
                    "p95": 343.36947799999996,
                    "p99": 343.36947799999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.20882,
                    "min": 152.605473,
                    "p50": 187.88548,
                    "p95": 193.20882,
                    "p99": 193.20882,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 230.38633399999998,
                    "min": 194.212417,
                    "p50": 223.279757,
                    "p95": 230.38633399999998,
                    "p99": 230.38633399999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 422.859893,
                    "min": 378.904806,
                    "p50": 411.611359,
                    "p95": 422.859893,
                    "p99": 422.859893,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 318.358092,
                    "min": 284.201208,
                    "p50": 305.014496,
                    "p95": 318.358092,
                    "p99": 318.358092,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 827.973441,
                    "min": 739.015937,
                    "p50": 794.396074,
                    "p95": 827.973441,
                    "p99": 827.973441,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 466.146841,
                    "min": 420.946525,
                    "p50": 458.36112199999997,
                    "p95": 466.146841,
                    "p99": 466.146841,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 712.379048,
                    "min": 668.992068,
                    "p50": 702.543321,
                    "p95": 712.379048,
                    "p99": 712.379048,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.188758,
                    "min": 117.866866,
                    "p50": 151.466746,
                    "p95": 157.188758,
                    "p99": 157.188758,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 540.521048,
                    "min": 494.61519899999996,
                    "p50": 514.897175,
                    "p95": 540.521048,
                    "p99": 540.521048,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 470.020049,
                    "min": 322.146489,
                    "p50": 364.34720599999997,
                    "p95": 470.020049,
                    "p99": 470.020049,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 238.74248999999998,
                    "min": 167.658162,
                    "p50": 187.214674,
                    "p95": 238.74248999999998,
                    "p99": 238.74248999999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 196.485525,
                    "min": 107.68349599999999,
                    "p50": 149.772434,
                    "p95": 196.485525,
                    "p99": 196.485525,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.973374,
                    "min": 85.06033699999999,
                    "p50": 118.382672,
                    "p95": 153.973374,
                    "p99": 153.973374,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 523.120316,
                    "min": 357.53479,
                    "p50": 383.67293,
                    "p95": 523.120316,
                    "p99": 523.120316,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 583.469551,
                    "min": 390.571886,
                    "p50": 432.345425,
                    "p95": 583.469551,
                    "p99": 583.469551,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 383.518508,
                    "min": 240.773674,
                    "p50": 252.826396,
                    "p95": 383.518508,
                    "p99": 383.518508,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 777.677913,
                    "min": 517.3259889999999,
                    "p50": 560.217722,
                    "p95": 777.677913,
                    "p99": 777.677913,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 427.747841,
                    "min": 262.508199,
                    "p50": 313.62435899999997,
                    "p95": 427.747841,
                    "p99": 427.747841,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 275.339546,
                    "min": 184.505348,
                    "p50": 225.83924,
                    "p95": 275.339546,
                    "p99": 275.339546,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 711.1554219999999,
                    "min": 460.06552899999997,
                    "p50": 507.186585,
                    "p95": 711.1554219999999,
                    "p99": 711.1554219999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 578.043183,
                    "min": 363.334382,
                    "p50": 392.11828499999996,
                    "p95": 578.043183,
                    "p99": 578.043183,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 236.56993699999998,
                    "min": 133.196686,
                    "p50": 162.746486,
                    "p95": 236.56993699999998,
                    "p99": 236.56993699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 447.935048,
                    "min": 209.76029599999998,
                    "p50": 242.58806299999998,
                    "p95": 447.935048,
                    "p99": 447.935048,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1173.575418,
                    "min": 781.1850589999999,
                    "p50": 837.2808769999999,
                    "p95": 1173.575418,
                    "p99": 1173.575418,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 452.76732499999997,
                    "min": 288.972462,
                    "p50": 306.811878,
                    "p95": 452.76732499999997,
                    "p99": 452.76732499999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1572.3470379999999,
                    "min": 1040.162715,
                    "p50": 1109.242956,
                    "p95": 1572.3470379999999,
                    "p99": 1572.3470379999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 468.94323399999996,
                    "min": 425.939147,
                    "p50": 441.774843,
                    "p95": 468.94323399999996,
                    "p99": 468.94323399999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.388437,
                    "min": 217.348988,
                    "p50": 252.612451,
                    "p95": 259.388437,
                    "p99": 259.388437,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 914.0759939999999,
                    "min": 853.504521,
                    "p50": 860.910319,
                    "p95": 914.0759939999999,
                    "p99": 914.0759939999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 666.653682,
                    "min": 600.7997429999999,
                    "p50": 636.3689989999999,
                    "p95": 666.653682,
                    "p99": 666.653682,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.02338599999996,
                    "min": 259.14606299999997,
                    "p50": 286.59680199999997,
                    "p95": 299.02338599999996,
                    "p99": 299.02338599999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 701.584584,
                    "min": 638.293967,
                    "p50": 677.1314269999999,
                    "p95": 701.584584,
                    "p99": 701.584584,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 351.255994,
                    "min": 301.43933799999996,
                    "p50": 329.01979,
                    "p95": 351.255994,
                    "p99": 351.255994,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 570.3725109999999,
                    "min": 516.430582,
                    "p50": 539.731494,
                    "p95": 570.3725109999999,
                    "p99": 570.3725109999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 438.79168699999997,
                    "min": 383.97428199999996,
                    "p50": 415.798249,
                    "p95": 438.79168699999997,
                    "p99": 438.79168699999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 619.881345,
                    "min": 556.217728,
                    "p50": 587.885225,
                    "p95": 619.881345,
                    "p99": 619.881345,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 810.856416,
                    "min": 741.7152259999999,
                    "p50": 784.509914,
                    "p95": 810.856416,
                    "p99": 810.856416,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 393.34673999999995,
                    "min": 339.671562,
                    "p50": 347.58516399999996,
                    "p95": 393.34673999999995,
                    "p99": 393.34673999999995,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 511.867368,
                    "min": 467.494899,
                    "p50": 505.59700899999996,
                    "p95": 511.867368,
                    "p99": 511.867368,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.54046699999998,
                    "min": 131.656935,
                    "p50": 169.58123999999998,
                    "p95": 175.54046699999998,
                    "p99": 175.54046699999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 212.555736,
                    "min": 172.997735,
                    "p50": 181.888131,
                    "p95": 212.555736,
                    "p99": 212.555736,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 388.003463,
                    "min": 361.712197,
                    "p50": 376.718125,
                    "p95": 388.003463,
                    "p99": 388.003463,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.036778,
                    "min": 146.816712,
                    "p50": 159.317669,
                    "p95": 185.036778,
                    "p99": 185.036778,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 474.534925,
                    "min": 432.07201,
                    "p50": 442.223526,
                    "p95": 474.534925,
                    "p99": 474.534925,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 543.55314,
                    "min": 503.73474999999996,
                    "p50": 535.838001,
                    "p95": 543.55314,
                    "p99": 543.55314,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.140708,
                    "min": 182.324838,
                    "p50": 183.32905499999998,
                    "p95": 222.140708,
                    "p99": 222.140708,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 364.710652,
                    "min": 325.812319,
                    "p50": 349.442638,
                    "p95": 364.710652,
                    "p99": 364.710652,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 329.939508,
                    "min": 293.665469,
                    "p50": 324.502621,
                    "p95": 329.939508,
                    "p99": 329.939508,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 255.147447,
                    "min": 218.01800699999998,
                    "p50": 238.629119,
                    "p95": 255.147447,
                    "p99": 255.147447,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.815841,
                    "min": 111.105182,
                    "p50": 112.295081,
                    "p95": 148.815841,
                    "p99": 148.815841,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 670.079668,
                    "min": 628.214297,
                    "p50": 657.745023,
                    "p95": 670.079668,
                    "p99": 670.079668,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 437.309684,
                    "min": 393.709617,
                    "p50": 434.16509199999996,
                    "p95": 437.309684,
                    "p99": 437.309684,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 507.704255,
                    "min": 466.012754,
                    "p50": 493.16601399999996,
                    "p95": 507.704255,
                    "p99": 507.704255,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 759.831921,
                    "min": 712.072234,
                    "p50": 729.923603,
                    "p95": 759.831921,
                    "p99": 759.831921,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 577.824378,
                    "min": 537.042067,
                    "p50": 567.7771769999999,
                    "p95": 577.824378,
                    "p99": 577.824378,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.523635,
                    "min": 253.55294899999998,
                    "p50": 256.206252,
                    "p95": 286.523635,
                    "p99": 286.523635,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 718.829984,
                    "min": 652.822091,
                    "p50": 682.453541,
                    "p95": 718.829984,
                    "p99": 718.829984,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 404.41247799999996,
                    "min": 362.814034,
                    "p50": 389.90416,
                    "p95": 404.41247799999996,
                    "p99": 404.41247799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 565.535708,
                    "min": 509.272918,
                    "p50": 514.6737009999999,
                    "p95": 565.535708,
                    "p99": 565.535708,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 599.386522,
                    "min": 540.775166,
                    "p50": 574.110452,
                    "p95": 599.386522,
                    "p99": 599.386522,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 803.4381569999999,
                    "min": 729.070731,
                    "p50": 743.931289,
                    "p95": 803.4381569999999,
                    "p99": 803.4381569999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 438.649863,
                    "min": 402.325339,
                    "p50": 425.472381,
                    "p95": 438.649863,
                    "p99": 438.649863,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 259.5875,
                    "min": 221.86912199999998,
                    "p50": 256.836639,
                    "p95": 259.5875,
                    "p99": 259.5875,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 344.904399,
                    "min": 292.782491,
                    "p50": 315.809507,
                    "p95": 344.904399,
                    "p99": 344.904399,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 533.813859,
                    "min": 473.624735,
                    "p50": 509.192589,
                    "p95": 533.813859,
                    "p99": 533.813859,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 499.85895899999997,
                    "min": 437.282082,
                    "p50": 473.50174,
                    "p95": 499.85895899999997,
                    "p99": 499.85895899999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1163.5146009999999,
                    "min": 1090.3274529999999,
                    "p50": 1123.1414849999999,
                    "p95": 1163.5146009999999,
                    "p99": 1163.5146009999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 309.830136,
                    "min": 256.407282,
                    "p50": 293.862301,
                    "p95": 309.830136,
                    "p99": 309.830136,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.86814999999999,
                    "min": 112.33289699999999,
                    "p50": 134.189717,
                    "p95": 149.86814999999999,
                    "p99": 149.86814999999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 229.541516,
                    "min": 182.679366,
                    "p50": 186.13508399999998,
                    "p95": 229.541516,
                    "p99": 229.541516,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 363.537045,
                    "min": 329.550415,
                    "p50": 356.963216,
                    "p95": 363.537045,
                    "p99": 363.537045,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.939819,
                    "min": 148.816979,
                    "p50": 154.910352,
                    "p95": 184.939819,
                    "p99": 184.939819,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 740.4725629999999,
                    "min": 681.7128379999999,
                    "p50": 699.350605,
                    "p95": 740.4725629999999,
                    "p99": 740.4725629999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 367.06800699999997,
                    "min": 312.43541899999997,
                    "p50": 326.549775,
                    "p95": 367.06800699999997,
                    "p99": 367.06800699999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.298528,
                    "min": 136.561554,
                    "p50": 153.05326399999998,
                    "p95": 178.298528,
                    "p99": 178.298528,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.4063,
                    "min": 179.12410599999998,
                    "p50": 209.331436,
                    "p95": 223.4063,
                    "p99": 223.4063,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 495.254771,
                    "min": 446.08757299999996,
                    "p50": 484.89030099999997,
                    "p95": 495.254771,
                    "p99": 495.254771,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 316.174552,
                    "min": 276.56071499999996,
                    "p50": 313.750482,
                    "p95": 316.174552,
                    "p99": 316.174552,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 953.3960159999999,
                    "min": 885.834381,
                    "p50": 913.399359,
                    "p95": 953.3960159999999,
                    "p99": 953.3960159999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 269.16037,
                    "min": 225.13203,
                    "p50": 233.18157399999998,
                    "p95": 269.16037,
                    "p99": 269.16037,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 542.277369,
                    "min": 501.71978199999995,
                    "p50": 526.387849,
                    "p95": 542.277369,
                    "p99": 542.277369,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 409.254275,
                    "min": 359.88793999999996,
                    "p50": 387.685144,
                    "p95": 409.254275,
                    "p99": 409.254275,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 594.3676439999999,
                    "min": 565.0943169999999,
                    "p50": 584.8771839999999,
                    "p95": 594.3676439999999,
                    "p99": 594.3676439999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 616.363251,
                    "min": 593.570513,
                    "p50": 599.658017,
                    "p95": 616.363251,
                    "p99": 616.363251,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 855.755096,
                    "min": 772.42471,
                    "p50": 822.328859,
                    "p95": 855.755096,
                    "p99": 855.755096,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 686.8521149999999,
                    "min": 616.340252,
                    "p50": 672.785852,
                    "p95": 686.8521149999999,
                    "p99": 686.8521149999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 450.20422099999996,
                    "min": 398.72293299999995,
                    "p50": 430.014216,
                    "p95": 450.20422099999996,
                    "p99": 450.20422099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 187.189209,
                    "min": 147.395015,
                    "p50": 172.472354,
                    "p95": 187.189209,
                    "p99": 187.189209,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 579.8091539999999,
                    "min": 530.39489,
                    "p50": 574.911867,
                    "p95": 579.8091539999999,
                    "p99": 579.8091539999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 444.13361,
                    "min": 399.635311,
                    "p50": 403.125334,
                    "p95": 444.13361,
                    "p99": 444.13361,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 366.821266,
                    "min": 330.098619,
                    "p50": 355.56695099999996,
                    "p95": 366.821266,
                    "p99": 366.821266,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 264.93951,
                    "min": 219.614519,
                    "p50": 251.972083,
                    "p95": 264.93951,
                    "p99": 264.93951,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.95970499999999,
                    "min": 112.59003299999999,
                    "p50": 141.39755399999999,
                    "p95": 148.95970499999999,
                    "p99": 148.95970499999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.457847,
                    "min": 185.973041,
                    "p50": 219.66873099999998,
                    "p95": 223.457847,
                    "p99": 223.457847,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 557.126765,
                    "min": 505.28112999999996,
                    "p50": 519.640945,
                    "p95": 557.126765,
                    "p99": 557.126765,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 679.495894,
                    "min": 632.965645,
                    "p50": 655.610865,
                    "p95": 679.495894,
                    "p99": 679.495894,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 295.08419,
                    "min": 255.236721,
                    "p50": 281.73981499999996,
                    "p95": 295.08419,
                    "p99": 295.08419,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 406.42610099999996,
                    "min": 366.095008,
                    "p50": 395.027171,
                    "p95": 406.42610099999996,
                    "p99": 406.42610099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 767.03287,
                    "min": 726.165637,
                    "p50": 742.132441,
                    "p95": 767.03287,
                    "p99": 767.03287,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 478.322476,
                    "min": 439.412304,
                    "p50": 452.13149999999996,
                    "p95": 478.322476,
                    "p99": 478.322476,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 331.855321,
                    "min": 295.34352,
                    "p50": 325.51597799999996,
                    "p95": 331.855321,
                    "p99": 331.855321,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 511.469538,
                    "min": 460.903086,
                    "p50": 504.270004,
                    "p95": 511.469538,
                    "p99": 511.469538,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1301.577389,
                    "min": 1220.47374,
                    "p50": 1246.189993,
                    "p95": 1301.577389,
                    "p99": 1301.577389,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 681.382898,
                    "min": 638.0990909999999,
                    "p50": 673.2937909999999,
                    "p95": 681.382898,
                    "p99": 681.382898,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 878.341314,
                    "min": 815.152517,
                    "p50": 838.402374,
                    "p95": 878.341314,
                    "p99": 878.341314,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 942.4794579999999,
                    "min": 875.672683,
                    "p50": 899.286846,
                    "p95": 942.4794579999999,
                    "p99": 942.4794579999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1183.7524059999998,
                    "min": 1112.897698,
                    "p50": 1167.9403889999999,
                    "p95": 1183.7524059999998,
                    "p99": 1183.7524059999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1121.585752,
                    "min": 1032.3255159999999,
                    "p50": 1092.026433,
                    "p95": 1121.585752,
                    "p99": 1121.585752,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 364.420977,
                    "min": 322.059737,
                    "p50": 344.58502899999996,
                    "p95": 364.420977,
                    "p99": 364.420977,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 795.150138,
                    "min": 716.760694,
                    "p50": 756.770764,
                    "p95": 795.150138,
                    "p99": 795.150138,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1045.124936,
                    "min": 956.8680099999999,
                    "p50": 997.8624719999999,
                    "p95": 1045.124936,
                    "p99": 1045.124936,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1488.736087,
                    "min": 1409.602561,
                    "p50": 1452.7064189999999,
                    "p95": 1488.736087,
                    "p99": 1488.736087,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 458.26003099999997,
                    "min": 400.777872,
                    "p50": 438.146573,
                    "p95": 458.26003099999997,
                    "p99": 458.26003099999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 623.570292,
                    "min": 560.038194,
                    "p50": 603.7594889999999,
                    "p95": 623.570292,
                    "p99": 623.570292,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 278.881531,
                    "min": 240.296142,
                    "p50": 267.221323,
                    "p95": 278.881531,
                    "p99": 278.881531,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 532.652385,
                    "min": 477.899385,
                    "p50": 500.549193,
                    "p95": 532.652385,
                    "p99": 532.652385,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1713.636662,
                    "min": 1602.999774,
                    "p50": 1640.5384279999998,
                    "p95": 1713.636662,
                    "p99": 1713.636662,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1686.3511569999998,
                    "min": 1600.1795519999998,
                    "p50": 1646.4731259999999,
                    "p95": 1686.3511569999998,
                    "p99": 1686.3511569999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1180.167612,
                    "min": 1130.233487,
                    "p50": 1163.467862,
                    "p95": 1180.167612,
                    "p99": 1180.167612,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1009.61113,
                    "min": 961.4289239999999,
                    "p50": 1002.055357,
                    "p95": 1009.61113,
                    "p99": 1009.61113,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 780.29063,
                    "min": 718.0600469999999,
                    "p50": 758.2162569999999,
                    "p95": 780.29063,
                    "p99": 780.29063,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 700.647168,
                    "min": 637.422689,
                    "p50": 669.846631,
                    "p95": 700.647168,
                    "p99": 700.647168,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 544.478629,
                    "min": 480.017007,
                    "p50": 508.70839099999995,
                    "p95": 544.478629,
                    "p99": 544.478629,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1127.033812,
                    "min": 1030.03228,
                    "p50": 1092.0313119999998,
                    "p95": 1127.033812,
                    "p99": 1127.033812,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 378.816776,
                    "min": 322.175755,
                    "p50": 356.9976,
                    "p95": 378.816776,
                    "p99": 378.816776,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 948.8838549999999,
                    "min": 880.030259,
                    "p50": 932.9334359999999,
                    "p95": 948.8838549999999,
                    "p99": 948.8838549999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 438.94286,
                    "min": 413.74811,
                    "p50": 425.783578,
                    "p95": 438.94286,
                    "p99": 438.94286,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1502.1648109999999,
                    "min": 1387.182395,
                    "p50": 1453.5594059999999,
                    "p95": 1502.1648109999999,
                    "p99": 1502.1648109999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 291.815722,
                    "min": 241.012669,
                    "p50": 278.272402,
                    "p95": 291.815722,
                    "p99": 291.815722,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 623.459783,
                    "min": 559.355057,
                    "p50": 589.346981,
                    "p95": 623.459783,
                    "p99": 623.459783,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1270.501877,
                    "min": 1216.786793,
                    "p50": 1241.191044,
                    "p95": 1270.501877,
                    "p99": 1270.501877,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 865.706648,
                    "min": 798.604796,
                    "p50": 827.0261979999999,
                    "p95": 865.706648,
                    "p99": 865.706648,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 968.220971,
                    "min": 882.429761,
                    "p50": 904.63934,
                    "p95": 968.220971,
                    "p99": 968.220971,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 543.747422,
                    "min": 482.04744,
                    "p50": 499.964976,
                    "p95": 543.747422,
                    "p99": 543.747422,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 458.765381,
                    "min": 399.681226,
                    "p50": 432.719359,
                    "p95": 458.765381,
                    "p99": 458.765381,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 842.3347689999999,
                    "min": 792.045717,
                    "p50": 820.124055,
                    "p95": 842.3347689999999,
                    "p99": 842.3347689999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1679.416101,
                    "min": 1585.71054,
                    "p50": 1626.5997949999999,
                    "p95": 1679.416101,
                    "p99": 1679.416101,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 376.14749,
                    "min": 322.30346299999997,
                    "p50": 357.367962,
                    "p95": 376.14749,
                    "p99": 376.14749,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 621.0570809999999,
                    "min": 568.5474439999999,
                    "p50": 597.6712279999999,
                    "p95": 621.0570809999999,
                    "p99": 621.0570809999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 293.534331,
                    "min": 241.986382,
                    "p50": 261.307745,
                    "p95": 293.534331,
                    "p99": 293.534331,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1294.9324319999998,
                    "min": 1192.3315169999998,
                    "p50": 1243.3715889999999,
                    "p95": 1294.9324319999998,
                    "p99": 1294.9324319999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1201.710871,
                    "min": 1123.5576859999999,
                    "p50": 1149.89799,
                    "p95": 1201.710871,
                    "p99": 1201.710871,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1043.4060379999999,
                    "min": 943.8727729999999,
                    "p50": 997.588857,
                    "p95": 1043.4060379999999,
                    "p99": 1043.4060379999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1106.783214,
                    "min": 1055.555184,
                    "p50": 1096.191948,
                    "p95": 1106.783214,
                    "p99": 1106.783214,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 795.5148469999999,
                    "min": 711.248235,
                    "p50": 742.4538359999999,
                    "p95": 795.5148469999999,
                    "p99": 795.5148469999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1510.3470499999999,
                    "min": 1382.638274,
                    "p50": 1451.836102,
                    "p95": 1510.3470499999999,
                    "p99": 1510.3470499999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 696.65393,
                    "min": 633.572359,
                    "p50": 683.403703,
                    "p95": 696.65393,
                    "p99": 696.65393,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 413.438206,
                    "min": 346.631896,
                    "p50": 382.34196099999997,
                    "p95": 413.438206,
                    "p99": 413.438206,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 232.821393,
                    "min": 193.92046,
                    "p50": 226.438771,
                    "p95": 232.821393,
                    "p99": 232.821393,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 500.844944,
                    "min": 414.799463,
                    "p50": 435.339493,
                    "p95": 500.844944,
                    "p99": 500.844944,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 553.552048,
                    "min": 468.21270999999996,
                    "p50": 504.774336,
                    "p95": 553.552048,
                    "p99": 553.552048,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 121.82458199999999,
                    "min": 84.572851,
                    "p50": 111.535257,
                    "p95": 121.82458199999999,
                    "p99": 121.82458199999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 403.292945,
                    "min": 315.154864,
                    "p50": 353.218036,
                    "p95": 403.292945,
                    "p99": 403.292945,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 226.13371899999999,
                    "min": 159.83282499999999,
                    "p50": 198.375073,
                    "p95": 226.13371899999999,
                    "p99": 226.13371899999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 168.523976,
                    "min": 110.137896,
                    "p50": 125.103895,
                    "p95": 168.523976,
                    "p99": 168.523976,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 967.481959,
                    "min": 790.877309,
                    "p50": 822.1942459999999,
                    "p95": 967.481959,
                    "p99": 967.481959,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 310.642945,
                    "min": 242.295232,
                    "p50": 280.29659,
                    "p95": 310.642945,
                    "p99": 310.642945,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 395.45631299999997,
                    "min": 314.840827,
                    "p50": 333.631391,
                    "p95": 395.45631299999997,
                    "p99": 395.45631299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 446.314367,
                    "min": 374.851134,
                    "p50": 404.65707799999996,
                    "p95": 446.314367,
                    "p99": 446.314367,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 180.447033,
                    "min": 136.991347,
                    "p50": 140.384735,
                    "p95": 180.447033,
                    "p99": 180.447033,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1590.894609,
                    "min": 1309.438616,
                    "p50": 1342.531013,
                    "p95": 1590.894609,
                    "p99": 1590.894609,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 639.309999,
                    "min": 518.621993,
                    "p50": 560.979482,
                    "p95": 639.309999,
                    "p99": 639.309999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 319.048091,
                    "min": 268.882022,
                    "p50": 295.895219,
                    "p95": 319.048091,
                    "p99": 319.048091,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 296.163641,
                    "min": 219.63794099999998,
                    "p50": 244.745576,
                    "p95": 296.163641,
                    "p99": 296.163641,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1263.067841,
                    "min": 1061.754805,
                    "p50": 1104.1952019999999,
                    "p95": 1263.067841,
                    "p99": 1263.067841,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 824.346112,
                    "min": 767.76955,
                    "p50": 793.049314,
                    "p95": 824.346112,
                    "p99": 824.346112,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 275.622148,
                    "min": 236.81482599999998,
                    "p50": 263.287564,
                    "p95": 275.622148,
                    "p99": 275.622148,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 549.929383,
                    "min": 508.61220399999996,
                    "p50": 537.329128,
                    "p95": 549.929383,
                    "p99": 549.929383,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 395.63318699999996,
                    "min": 350.08872399999996,
                    "p50": 368.37877399999996,
                    "p95": 395.63318699999996,
                    "p99": 395.63318699999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 424.899341,
                    "min": 392.71462499999996,
                    "p50": 398.547739,
                    "p95": 424.899341,
                    "p99": 424.899341,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.50519,
                    "min": 121.989944,
                    "p50": 139.702448,
                    "p95": 157.50519,
                    "p99": 157.50519,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 468.995637,
                    "min": 427.18098899999995,
                    "p50": 451.511673,
                    "p95": 468.995637,
                    "p99": 468.995637,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 240.160992,
                    "min": 196.77528099999998,
                    "p50": 236.126071,
                    "p95": 240.160992,
                    "p99": 240.160992,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 592.759987,
                    "min": 553.719796,
                    "p50": 575.34033,
                    "p95": 592.759987,
                    "p99": 592.759987,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 351.155121,
                    "min": 311.57737499999996,
                    "p50": 319.600639,
                    "p95": 351.155121,
                    "p99": 351.155121,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 721.892665,
                    "min": 675.705439,
                    "p50": 694.398225,
                    "p95": 721.892665,
                    "p99": 721.892665,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 503.28837999999996,
                    "min": 464.58394799999996,
                    "p50": 477.55926999999997,
                    "p95": 503.28837999999996,
                    "p99": 503.28837999999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 318.065604,
                    "min": 271.43266,
                    "p50": 313.873359,
                    "p95": 318.065604,
                    "p99": 318.065604,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 200.372975,
                    "min": 159.606415,
                    "p50": 190.436999,
                    "p95": 200.372975,
                    "p99": 200.372975,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 627.120915,
                    "min": 579.8368019999999,
                    "p50": 618.334271,
                    "p95": 627.120915,
                    "p99": 627.120915,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1214.767646,
                    "min": 1165.1674,
                    "p50": 1185.15202,
                    "p95": 1214.767646,
                    "p99": 1214.767646,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 252.43400699999998,
                    "min": 215.949558,
                    "p50": 221.437336,
                    "p95": 252.43400699999998,
                    "p99": 252.43400699999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 275.19741,
                    "min": 237.30166899999998,
                    "p50": 262.759318,
                    "p95": 275.19741,
                    "p99": 275.19741,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 159.28641199999998,
                    "min": 122.063942,
                    "p50": 153.53971199999998,
                    "p95": 159.28641199999998,
                    "p99": 159.28641199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 238.771097,
                    "min": 191.48982999999998,
                    "p50": 226.27963599999998,
                    "p95": 238.771097,
                    "p99": 238.771097,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 368.994178,
                    "min": 330.716531,
                    "p50": 364.029806,
                    "p95": 368.994178,
                    "p99": 368.994178,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.890299,
                    "min": 73.349068,
                    "p50": 99.800725,
                    "p95": 116.890299,
                    "p99": 116.890299,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 746.5102079999999,
                    "min": 717.025193,
                    "p50": 740.762628,
                    "p95": 746.5102079999999,
                    "p99": 746.5102079999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 305.11091799999997,
                    "min": 262.21271,
                    "p50": 285.821652,
                    "p95": 305.11091799999997,
                    "p99": 305.11091799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 348.5593,
                    "min": 307.374998,
                    "p50": 336.686903,
                    "p95": 348.5593,
                    "p99": 348.5593,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.037568,
                    "min": 142.769576,
                    "p50": 177.763421,
                    "p95": 185.037568,
                    "p99": 185.037568,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 455.62956299999996,
                    "min": 413.850648,
                    "p50": 424.106243,
                    "p95": 455.62956299999996,
                    "p99": 455.62956299999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 318.089782,
                    "min": 285.681145,
                    "p50": 292.253239,
                    "p95": 318.089782,
                    "p99": 318.089782,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 207.697918,
                    "min": 166.96521099999998,
                    "p50": 198.229716,
                    "p95": 207.697918,
                    "p99": 207.697918,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 989.053405,
                    "min": 940.65978,
                    "p50": 963.49676,
                    "p95": 989.053405,
                    "p99": 989.053405,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.591656,
                    "min": 98.20880799999999,
                    "p50": 128.629178,
                    "p95": 137.591656,
                    "p99": 137.591656,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 399.940184,
                    "min": 358.29324499999996,
                    "p50": 392.450162,
                    "p95": 399.940184,
                    "p99": 399.940184,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 517.868083,
                    "min": 472.298502,
                    "p50": 507.216414,
                    "p95": 517.868083,
                    "p99": 517.868083,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 655.8753879999999,
                    "min": 605.383569,
                    "p50": 651.3600279999999,
                    "p95": 655.8753879999999,
                    "p99": 655.8753879999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 563.838079,
                    "min": 503.704322,
                    "p50": 538.871216,
                    "p95": 563.838079,
                    "p99": 563.838079,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 866.3133899999999,
                    "min": 841.1375099999999,
                    "p50": 856.08466,
                    "p95": 866.3133899999999,
                    "p99": 866.3133899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 804.224488,
                    "min": 750.3303149999999,
                    "p50": 758.122127,
                    "p95": 804.224488,
                    "p99": 804.224488,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 607.505489,
                    "min": 552.8036069999999,
                    "p50": 593.588094,
                    "p95": 607.505489,
                    "p99": 607.505489,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 744.258202,
                    "min": 669.9963799999999,
                    "p50": 703.795789,
                    "p95": 744.258202,
                    "p99": 744.258202,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 834.70898,
                    "min": 762.493646,
                    "p50": 811.572909,
                    "p95": 834.70898,
                    "p99": 834.70898,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 251.674962,
                    "min": 201.663298,
                    "p50": 205.367569,
                    "p95": 251.674962,
                    "p99": 251.674962,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 298.54222,
                    "min": 251.44050299999998,
                    "p50": 254.34545799999998,
                    "p95": 298.54222,
                    "p99": 298.54222,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.389909,
                    "min": 301.084205,
                    "p50": 318.251423,
                    "p95": 344.389909,
                    "p99": 344.389909,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1152.469011,
                    "min": 1079.887115,
                    "p50": 1124.780976,
                    "p95": 1152.469011,
                    "p99": 1152.469011,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 402.671569,
                    "min": 339.18165,
                    "p50": 395.308816,
                    "p95": 402.671569,
                    "p99": 402.671569,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1035.026564,
                    "min": 972.1552039999999,
                    "p50": 1012.8569829999999,
                    "p95": 1035.026564,
                    "p99": 1035.026564,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 505.48963299999997,
                    "min": 449.71599399999997,
                    "p50": 487.127481,
                    "p95": 505.48963299999997,
                    "p99": 505.48963299999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 443.335947,
                    "min": 402.46919399999996,
                    "p50": 414.630175,
                    "p95": 443.335947,
                    "p99": 443.335947,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 173.57829099999998,
                    "min": 150.797024,
                    "p50": 153.498491,
                    "p95": 173.57829099999998,
                    "p99": 173.57829099999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 264.798152,
                    "min": 223.86142999999998,
                    "p50": 239.665536,
                    "p95": 264.798152,
                    "p99": 264.798152,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 313.595056,
                    "min": 260.18201899999997,
                    "p50": 301.23432299999996,
                    "p95": 313.595056,
                    "p99": 313.595056,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.970309,
                    "min": 68.32695,
                    "p50": 100.925247,
                    "p95": 115.970309,
                    "p99": 115.970309,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 199.675424,
                    "min": 167.217289,
                    "p50": 177.182303,
                    "p95": 199.675424,
                    "p99": 199.675424,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 311.906541,
                    "min": 234.78269699999998,
                    "p50": 266.072493,
                    "p95": 311.906541,
                    "p99": 311.906541,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.416964,
                    "min": 62.281661,
                    "p50": 80.745612,
                    "p95": 91.416964,
                    "p99": 91.416964,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 148.61676,
                    "min": 114.96999299999999,
                    "p50": 127.84701299999999,
                    "p95": 148.61676,
                    "p99": 148.61676,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 163.764054,
                    "min": 110.536564,
                    "p50": 139.413715,
                    "p95": 163.764054,
                    "p99": 163.764054,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 467.221305,
                    "min": 386.323581,
                    "p50": 422.55281399999996,
                    "p95": 467.221305,
                    "p99": 467.221305,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 564.1707749999999,
                    "min": 532.071412,
                    "p50": 541.102821,
                    "p95": 564.1707749999999,
                    "p99": 564.1707749999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 202.333652,
                    "min": 177.906093,
                    "p50": 196.39716099999998,
                    "p95": 202.333652,
                    "p99": 202.333652,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1372.142629,
                    "min": 1213.6551789999999,
                    "p50": 1311.652811,
                    "p95": 1372.142629,
                    "p99": 1372.142629,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 85.135866,
                    "min": 62.094086999999995,
                    "p50": 64.76149699999999,
                    "p95": 85.135866,
                    "p99": 85.135866,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 139.683384,
                    "min": 106.02373,
                    "p50": 125.955451,
                    "p95": 139.683384,
                    "p99": 139.683384,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 688.7965429999999,
                    "min": 623.30855,
                    "p50": 641.537103,
                    "p95": 688.7965429999999,
                    "p99": 688.7965429999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 570.12599,
                    "min": 493.22299,
                    "p50": 517.636073,
                    "p95": 570.12599,
                    "p99": 570.12599,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 489.20879299999996,
                    "min": 414.15007699999995,
                    "p50": 452.916255,
                    "p95": 489.20879299999996,
                    "p99": 489.20879299999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 559.822226,
                    "min": 447.97311199999996,
                    "p50": 458.230815,
                    "p95": 559.822226,
                    "p99": 559.822226,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 290.52081499999997,
                    "min": 244.48448499999998,
                    "p50": 261.078856,
                    "p95": 290.52081499999997,
                    "p99": 290.52081499999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1316.885396,
                    "min": 1253.09698,
                    "p50": 1291.2878389999998,
                    "p95": 1316.885396,
                    "p99": 1316.885396,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 780.8015399999999,
                    "min": 710.848859,
                    "p50": 749.2525469999999,
                    "p95": 780.8015399999999,
                    "p99": 780.8015399999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 611.4712069999999,
                    "min": 557.600194,
                    "p50": 569.7091419999999,
                    "p95": 611.4712069999999,
                    "p99": 611.4712069999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 582.483764,
                    "min": 515.2770939999999,
                    "p50": 530.661931,
                    "p95": 582.483764,
                    "p99": 582.483764,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 371.510691,
                    "min": 290.899992,
                    "p50": 329.102686,
                    "p95": 371.510691,
                    "p99": 371.510691,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 887.868833,
                    "min": 800.4260469999999,
                    "p50": 850.093805,
                    "p95": 887.868833,
                    "p99": 887.868833,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.683773,
                    "min": 161.164375,
                    "p50": 169.815034,
                    "p95": 175.683773,
                    "p99": 175.683773,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 666.419168,
                    "min": 625.653864,
                    "p50": 646.54595,
                    "p95": 666.419168,
                    "p99": 666.419168,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 418.578962,
                    "min": 360.01825199999996,
                    "p50": 367.258071,
                    "p95": 418.578962,
                    "p99": 418.578962,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 321.91234399999996,
                    "min": 281.12622799999997,
                    "p50": 286.740346,
                    "p95": 321.91234399999996,
                    "p99": 321.91234399999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 233.18539199999998,
                    "min": 208.546233,
                    "p50": 211.820326,
                    "p95": 233.18539199999998,
                    "p99": 233.18539199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 620.435936,
                    "min": 602.294029,
                    "p50": 613.013101,
                    "p95": 620.435936,
                    "p99": 620.435936,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1214.536876,
                    "min": 1116.544923,
                    "p50": 1141.218668,
                    "p95": 1214.536876,
                    "p99": 1214.536876,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 278.107691,
                    "min": 196.528829,
                    "p50": 236.62902599999998,
                    "p95": 278.107691,
                    "p99": 278.107691,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 846.3904349999999,
                    "min": 786.2715589999999,
                    "p50": 799.9633729999999,
                    "p95": 846.3904349999999,
                    "p99": 846.3904349999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 892.904544,
                    "min": 821.494382,
                    "p50": 858.515596,
                    "p95": 892.904544,
                    "p99": 892.904544,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.326364,
                    "min": 295.81237999999996,
                    "p50": 303.832143,
                    "p95": 336.326364,
                    "p99": 336.326364,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 781.0653709999999,
                    "min": 716.926999,
                    "p50": 731.86668,
                    "p95": 781.0653709999999,
                    "p99": 781.0653709999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1032.827123,
                    "min": 973.046525,
                    "p50": 988.540252,
                    "p95": 1032.827123,
                    "p99": 1032.827123,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 429.11650399999996,
                    "min": 414.222426,
                    "p50": 421.29722499999997,
                    "p95": 429.11650399999996,
                    "p99": 429.11650399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 660.276223,
                    "min": 609.0316839999999,
                    "p50": 615.7636309999999,
                    "p95": 660.276223,
                    "p99": 660.276223,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 614.396848,
                    "min": 543.8216639999999,
                    "p50": 550.550332,
                    "p95": 614.396848,
                    "p99": 614.396848,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1357.946563,
                    "min": 1277.515618,
                    "p50": 1311.013365,
                    "p95": 1357.946563,
                    "p99": 1357.946563,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 726.8907939999999,
                    "min": 664.2586339999999,
                    "p50": 673.7586719999999,
                    "p95": 726.8907939999999,
                    "p99": 726.8907939999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 531.743689,
                    "min": 473.34115199999997,
                    "p50": 489.09822299999996,
                    "p95": 531.743689,
                    "p99": 531.743689,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 403.418856,
                    "min": 355.232097,
                    "p50": 360.415444,
                    "p95": 403.418856,
                    "p99": 403.418856,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 964.313995,
                    "min": 906.176658,
                    "p50": 917.873887,
                    "p95": 964.313995,
                    "p99": 964.313995,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 144.949616,
                    "min": 86.424848,
                    "p50": 126.873357,
                    "p95": 144.949616,
                    "p99": 144.949616,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 41.988758,
                    "min": 26.867642,
                    "p50": 29.784806,
                    "p95": 41.988758,
                    "p99": 41.988758,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 289.467686,
                    "min": 212.15149399999999,
                    "p50": 250.580039,
                    "p95": 289.467686,
                    "p99": 289.467686,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 427.10832,
                    "min": 374.76111499999996,
                    "p50": 404.105034,
                    "p95": 427.10832,
                    "p99": 427.10832,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 112.23373699999999,
                    "min": 91.00477599999999,
                    "p50": 95.553191,
                    "p95": 112.23373699999999,
                    "p99": 112.23373699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 51.223256,
                    "min": 44.598703,
                    "p50": 48.92003,
                    "p95": 51.223256,
                    "p99": 51.223256,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 211.524902,
                    "min": 180.308808,
                    "p50": 196.205865,
                    "p95": 211.524902,
                    "p99": 211.524902,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 40.532952,
                    "min": 27.055118999999998,
                    "p50": 36.094896,
                    "p95": 40.532952,
                    "p99": 40.532952,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 47.433144,
                    "min": 41.454232,
                    "p50": 44.757073999999996,
                    "p95": 47.433144,
                    "p99": 47.433144,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 115.517344,
                    "min": 99.055487,
                    "p50": 109.862954,
                    "p95": 115.517344,
                    "p99": 115.517344,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 206.050851,
                    "min": 147.64042799999999,
                    "p50": 167.27890399999998,
                    "p95": 206.050851,
                    "p99": 206.050851,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 33.961664,
                    "min": 25.378923,
                    "p50": 27.033835,
                    "p95": 33.961664,
                    "p99": 33.961664,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 95.826787,
                    "min": 81.87462699999999,
                    "p50": 84.88644599999999,
                    "p95": 95.826787,
                    "p99": 95.826787,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 121.155007,
                    "min": 52.718337,
                    "p50": 100.41886099999999,
                    "p95": 121.155007,
                    "p99": 121.155007,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 61.597561,
                    "min": 50.635047,
                    "p50": 54.559618,
                    "p95": 61.597561,
                    "p99": 61.597561,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 66.07090699999999,
                    "min": 53.570623,
                    "p50": 59.729357,
                    "p95": 66.07090699999999,
                    "p99": 66.07090699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 113.33748999999999,
                    "min": 91.659069,
                    "p50": 95.010277,
                    "p95": 113.33748999999999,
                    "p99": 113.33748999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 81.928748,
                    "min": 63.891253999999996,
                    "p50": 69.552553,
                    "p95": 81.928748,
                    "p99": 81.928748,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 87.94420699999999,
                    "min": 73.616497,
                    "p50": 83.48227399999999,
                    "p95": 87.94420699999999,
                    "p99": 87.94420699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 331.021303,
                    "min": 292.448606,
                    "p50": 318.613971,
                    "p95": 331.021303,
                    "p99": 331.021303,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 206.25590599999998,
                    "min": 171.798902,
                    "p50": 201.41554599999998,
                    "p95": 206.25590599999998,
                    "p99": 206.25590599999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 516.2396259999999,
                    "min": 464.372123,
                    "p50": 480.737144,
                    "p95": 516.2396259999999,
                    "p99": 516.2396259999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 266.55539699999997,
                    "min": 222.10810899999998,
                    "p50": 234.00869899999998,
                    "p95": 266.55539699999997,
                    "p99": 266.55539699999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 387.462109,
                    "min": 337.76811699999996,
                    "p50": 380.09708,
                    "p95": 387.462109,
                    "p99": 387.462109,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1574.5040549999999,
                    "min": 1502.0438199999999,
                    "p50": 1543.6268969999999,
                    "p95": 1574.5040549999999,
                    "p99": 1574.5040549999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 419.273618,
                    "min": 347.46196699999996,
                    "p50": 357.74593899999996,
                    "p95": 419.273618,
                    "p99": 419.273618,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 467.416672,
                    "min": 433.87681599999996,
                    "p50": 443.15363499999995,
                    "p95": 467.416672,
                    "p99": 467.416672,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 593.2435839999999,
                    "min": 572.275821,
                    "p50": 580.535742,
                    "p95": 593.2435839999999,
                    "p99": 593.2435839999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 302.506863,
                    "min": 288.655625,
                    "p50": 293.036355,
                    "p95": 302.506863,
                    "p99": 302.506863,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1288.526416,
                    "min": 1241.993061,
                    "p50": 1259.1297029999998,
                    "p95": 1288.526416,
                    "p99": 1288.526416,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 265.158095,
                    "min": 252.730496,
                    "p50": 260.411798,
                    "p95": 265.158095,
                    "p99": 265.158095,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 448.79972599999996,
                    "min": 400.021481,
                    "p50": 413.875335,
                    "p95": 448.79972599999996,
                    "p99": 448.79972599999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 978.01,
                    "min": 935.2563269999999,
                    "p50": 954.3364469999999,
                    "p95": 978.01,
                    "p99": 978.01,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 241.34157,
                    "min": 159.06083999999998,
                    "p50": 172.642998,
                    "p95": 241.34157,
                    "p99": 241.34157,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3107.786071,
                    "min": 3026.4372249999997,
                    "p50": 3046.322851,
                    "p95": 3107.786071,
                    "p99": 3107.786071,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 142.222429,
                    "min": 140.612914,
                    "p50": 141.900804,
                    "p95": 142.222429,
                    "p99": 142.222429,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 518.418847,
                    "min": 497.73117399999995,
                    "p50": 505.429892,
                    "p95": 518.418847,
                    "p99": 518.418847,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 659.5344799999999,
                    "min": 637.876569,
                    "p50": 651.3459809999999,
                    "p95": 659.5344799999999,
                    "p99": 659.5344799999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 41.598872,
                    "min": 33.762499,
                    "p50": 35.673057,
                    "p95": 41.598872,
                    "p99": 41.598872,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 58.902128,
                    "min": 42.928716,
                    "p50": 46.981513,
                    "p95": 58.902128,
                    "p99": 58.902128,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.194706999999998,
                    "min": 21.922632999999998,
                    "p50": 26.913031,
                    "p95": 27.194706999999998,
                    "p99": 27.194706999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 45.464833999999996,
                    "min": 38.52863,
                    "p50": 40.736987,
                    "p95": 45.464833999999996,
                    "p99": 45.464833999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 59.248501999999995,
                    "min": 47.466421,
                    "p50": 55.324202,
                    "p95": 59.248501999999995,
                    "p99": 59.248501999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 137.818173,
                    "min": 106.73748599999999,
                    "p50": 116.523305,
                    "p95": 137.818173,
                    "p99": 137.818173,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 59.011661,
                    "min": 37.577005,
                    "p50": 57.042351999999994,
                    "p95": 59.011661,
                    "p99": 59.011661,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 39.267039,
                    "min": 32.58009,
                    "p50": 35.087973999999996,
                    "p95": 39.267039,
                    "p99": 39.267039,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 166.872435,
                    "min": 142.38581,
                    "p50": 160.216161,
                    "p95": 166.872435,
                    "p99": 166.872435,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 46.832170999999995,
                    "min": 36.69754,
                    "p50": 41.387862999999996,
                    "p95": 46.832170999999995,
                    "p99": 46.832170999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.916356999999998,
                    "min": 21.933937999999998,
                    "p50": 26.665468999999998,
                    "p95": 29.916356999999998,
                    "p99": 29.916356999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 56.08264,
                    "min": 40.35629,
                    "p50": 53.114126999999996,
                    "p95": 56.08264,
                    "p99": 56.08264,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 37.302189999999996,
                    "min": 24.702928,
                    "p50": 27.842394,
                    "p95": 37.302189999999996,
                    "p99": 37.302189999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 68.840383,
                    "min": 63.253840999999994,
                    "p50": 66.18312999999999,
                    "p95": 68.840383,
                    "p99": 68.840383,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 339.890837,
                    "min": 246.77110499999998,
                    "p50": 306.474411,
                    "p95": 339.890837,
                    "p99": 339.890837,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 34.086891,
                    "min": 28.995983,
                    "p50": 30.853551999999997,
                    "p95": 34.086891,
                    "p99": 34.086891,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 145.34576199999998,
                    "min": 124.243799,
                    "p50": 133.191001,
                    "p95": 145.34576199999998,
                    "p99": 145.34576199999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 88.184242,
                    "min": 56.042167,
                    "p50": 81.957887,
                    "p95": 88.184242,
                    "p99": 88.184242,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 55.54629,
                    "min": 46.580718,
                    "p50": 49.979411,
                    "p95": 55.54629,
                    "p99": 55.54629,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 85.698917,
                    "min": 67.85992999999999,
                    "p50": 69.16823,
                    "p95": 85.698917,
                    "p99": 85.698917,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.38985,
                    "min": 26.221898,
                    "p50": 27.207162999999998,
                    "p95": 27.38985,
                    "p99": 27.38985,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.333091,
                    "min": 26.444260999999997,
                    "p50": 26.67747,
                    "p95": 27.333091,
                    "p99": 27.333091,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.415155,
                    "min": 26.754547,
                    "p50": 27.108853,
                    "p95": 27.415155,
                    "p99": 27.415155,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.287633,
                    "min": 26.641545999999998,
                    "p50": 26.873165,
                    "p95": 27.287633,
                    "p99": 27.287633,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.116196,
                    "min": 21.89118,
                    "p50": 26.67393,
                    "p95": 27.116196,
                    "p99": 27.116196,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.453889,
                    "min": 24.958987,
                    "p50": 26.856832999999998,
                    "p95": 27.453889,
                    "p99": 27.453889,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.079639,
                    "min": 23.804693,
                    "p50": 26.588959,
                    "p95": 27.079639,
                    "p99": 27.079639,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.369867,
                    "min": 26.277835999999997,
                    "p50": 26.678821,
                    "p95": 27.369867,
                    "p99": 27.369867,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 67.549686,
                    "min": 55.077625,
                    "p50": 58.576066999999995,
                    "p95": 67.549686,
                    "p99": 67.549686,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 30.786143,
                    "min": 25.184821,
                    "p50": 27.070256999999998,
                    "p95": 30.786143,
                    "p99": 30.786143,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 48.616547999999995,
                    "min": 42.508683,
                    "p50": 43.395724,
                    "p95": 48.616547999999995,
                    "p99": 48.616547999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 32.329634,
                    "min": 30.297642999999997,
                    "p50": 32.00712,
                    "p95": 32.329634,
                    "p99": 32.329634,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.349344,
                    "min": 26.646691999999998,
                    "p50": 27.439346,
                    "p95": 28.349344,
                    "p99": 28.349344,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.291242,
                    "min": 26.094996,
                    "p50": 26.714969,
                    "p95": 27.291242,
                    "p99": 27.291242,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 129.598929,
                    "min": 102.256841,
                    "p50": 118.045176,
                    "p95": 129.598929,
                    "p99": 129.598929,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.148107,
                    "min": 20.696081,
                    "p50": 26.586731999999998,
                    "p95": 27.148107,
                    "p99": 27.148107,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 32.652186,
                    "min": 26.470616,
                    "p50": 27.105013,
                    "p95": 32.652186,
                    "p99": 32.652186,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.137946,
                    "min": 24.957114999999998,
                    "p50": 26.620386,
                    "p95": 27.137946,
                    "p99": 27.137946,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 355.540377,
                    "min": 322.459201,
                    "p50": 329.407284,
                    "p95": 355.540377,
                    "p99": 355.540377,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.61022,
                    "min": 127.74192799999999,
                    "p50": 135.020994,
                    "p95": 145.61022,
                    "p99": 145.61022,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2830.658974,
                    "min": 2752.046116,
                    "p50": 2783.5891189999998,
                    "p95": 2830.658974,
                    "p99": 2830.658974,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 613.030488,
                    "min": 594.772466,
                    "p50": 605.737293,
                    "p95": 613.030488,
                    "p99": 613.030488,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 289.17479399999996,
                    "min": 236.60303399999998,
                    "p50": 252.30961299999998,
                    "p95": 289.17479399999996,
                    "p99": 289.17479399999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 167.819944,
                    "min": 153.439833,
                    "p50": 162.06250599999998,
                    "p95": 167.819944,
                    "p99": 167.819944,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 226.49212599999998,
                    "min": 175.970983,
                    "p50": 217.342165,
                    "p95": 226.49212599999998,
                    "p99": 226.49212599999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 907.3794909999999,
                    "min": 857.115451,
                    "p50": 877.480014,
                    "p95": 907.3794909999999,
                    "p99": 907.3794909999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 412.62880099999995,
                    "min": 397.647636,
                    "p50": 407.461927,
                    "p95": 412.62880099999995,
                    "p99": 412.62880099999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 363.824892,
                    "min": 349.537877,
                    "p50": 355.22272699999996,
                    "p95": 363.824892,
                    "p99": 363.824892,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1172.37689,
                    "min": 1134.9709269999998,
                    "p50": 1157.775878,
                    "p95": 1172.37689,
                    "p99": 1172.37689,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1439.707017,
                    "min": 1374.885622,
                    "p50": 1423.779092,
                    "p95": 1439.707017,
                    "p99": 1439.707017,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 468.895431,
                    "min": 428.348971,
                    "p50": 439.186678,
                    "p95": 468.895431,
                    "p99": 468.895431,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.018421,
                    "min": 182.614816,
                    "p50": 190.079949,
                    "p95": 223.018421,
                    "p99": 223.018421,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 549.312453,
                    "min": 516.952374,
                    "p50": 533.922369,
                    "p95": 549.312453,
                    "p99": 549.312453,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 318.498945,
                    "min": 298.418483,
                    "p50": 301.285039,
                    "p95": 318.498945,
                    "p99": 318.498945,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 407.734311,
                    "min": 376.13122899999996,
                    "p50": 391.381773,
                    "p95": 407.734311,
                    "p99": 407.734311,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 479.74663899999996,
                    "min": 453.874467,
                    "p50": 457.307837,
                    "p95": 479.74663899999996,
                    "p99": 479.74663899999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 287.68683,
                    "min": 266.14137,
                    "p50": 272.14721099999997,
                    "p95": 287.68683,
                    "p99": 287.68683,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2104.944817,
                    "min": 1862.371036,
                    "p50": 1913.8075299999998,
                    "p95": 2104.944817,
                    "p99": 2104.944817,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 350.587314,
                    "min": 288.417525,
                    "p50": 325.629396,
                    "p95": 350.587314,
                    "p99": 350.587314,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 673.502724,
                    "min": 575.050022,
                    "p50": 653.419354,
                    "p95": 673.502724,
                    "p99": 673.502724,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 984.864324,
                    "min": 873.179714,
                    "p50": 925.53566,
                    "p95": 984.864324,
                    "p99": 984.864324,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 385.176923,
                    "min": 336.143842,
                    "p50": 351.526612,
                    "p95": 385.176923,
                    "p99": 385.176923,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1131.496661,
                    "min": 950.428954,
                    "p50": 1038.7501029999999,
                    "p95": 1131.496661,
                    "p99": 1131.496661,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 614.3136499999999,
                    "min": 506.213712,
                    "p50": 534.780897,
                    "p95": 614.3136499999999,
                    "p99": 614.3136499999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1230.004657,
                    "min": 1102.1032209999998,
                    "p50": 1123.503604,
                    "p95": 1230.004657,
                    "p99": 1230.004657,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 527.733064,
                    "min": 397.297196,
                    "p50": 410.594324,
                    "p95": 527.733064,
                    "p99": 527.733064,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 727.243628,
                    "min": 670.904402,
                    "p50": 682.453412,
                    "p95": 727.243628,
                    "p99": 727.243628,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2580.394281,
                    "min": 2432.6402399999997,
                    "p50": 2535.428203,
                    "p95": 2580.394281,
                    "p99": 2580.394281,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 753.818573,
                    "min": 686.769957,
                    "p50": 735.232123,
                    "p95": 753.818573,
                    "p99": 753.818573,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 550.170302,
                    "min": 439.456824,
                    "p50": 494.645287,
                    "p95": 550.170302,
                    "p99": 550.170302,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 833.1347549999999,
                    "min": 739.194453,
                    "p50": 806.890172,
                    "p95": 833.1347549999999,
                    "p99": 833.1347549999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.876357,
                    "min": 215.732712,
                    "p50": 226.56593099999998,
                    "p95": 257.876357,
                    "p99": 257.876357,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1012.626146,
                    "min": 837.109438,
                    "p50": 857.482355,
                    "p95": 1012.626146,
                    "p99": 1012.626146,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1354.821901,
                    "min": 1259.6550849999999,
                    "p50": 1309.912313,
                    "p95": 1354.821901,
                    "p99": 1354.821901,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3211.7445159999997,
                    "min": 3013.5601739999997,
                    "p50": 3120.1845909999997,
                    "p95": 3211.7445159999997,
                    "p99": 3211.7445159999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 301.411449,
                    "min": 252.337405,
                    "p50": 256.954191,
                    "p95": 301.411449,
                    "p99": 301.411449,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 461.054629,
                    "min": 418.05819199999996,
                    "p50": 454.194929,
                    "p95": 461.054629,
                    "p99": 461.054629,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 423.929349,
                    "min": 386.35005,
                    "p50": 393.29068,
                    "p95": 423.929349,
                    "p99": 423.929349,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 736.080656,
                    "min": 689.070402,
                    "p50": 728.614964,
                    "p95": 736.080656,
                    "p99": 736.080656,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 757.354022,
                    "min": 659.31179,
                    "p50": 679.782395,
                    "p95": 757.354022,
                    "p99": 757.354022,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 949.8182469999999,
                    "min": 849.0786089999999,
                    "p50": 858.923062,
                    "p95": 949.8182469999999,
                    "p99": 949.8182469999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1104.153122,
                    "min": 1027.055717,
                    "p50": 1059.7804039999999,
                    "p95": 1104.153122,
                    "p99": 1104.153122,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1009.869641,
                    "min": 892.439852,
                    "p50": 975.441788,
                    "p95": 1009.869641,
                    "p99": 1009.869641,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 847.841913,
                    "min": 785.8464769999999,
                    "p50": 796.857814,
                    "p95": 847.841913,
                    "p99": 847.841913,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1427.3661,
                    "min": 1371.93182,
                    "p50": 1386.057405,
                    "p95": 1427.3661,
                    "p99": 1427.3661,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 573.13743,
                    "min": 508.337289,
                    "p50": 522.8008209999999,
                    "p95": 573.13743,
                    "p99": 573.13743,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 364.778998,
                    "min": 315.089119,
                    "p50": 319.26689999999996,
                    "p95": 364.778998,
                    "p99": 364.778998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1245.7441649999998,
                    "min": 1218.850301,
                    "p50": 1230.857958,
                    "p95": 1245.7441649999998,
                    "p99": 1245.7441649999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 656.255821,
                    "min": 585.479169,
                    "p50": 632.0482989999999,
                    "p95": 656.255821,
                    "p99": 656.255821,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1035.5249609999998,
                    "min": 988.0842339999999,
                    "p50": 1004.9073239999999,
                    "p95": 1035.5249609999998,
                    "p99": 1035.5249609999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 341.81994299999997,
                    "min": 271.37133,
                    "p50": 299.291511,
                    "p95": 341.81994299999997,
                    "p99": 341.81994299999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 672.713159,
                    "min": 623.464801,
                    "p50": 632.388954,
                    "p95": 672.713159,
                    "p99": 672.713159,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 922.778056,
                    "min": 869.996862,
                    "p50": 881.989691,
                    "p95": 922.778056,
                    "p99": 922.778056,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1774.2183539999999,
                    "min": 1680.580864,
                    "p50": 1711.9793479999998,
                    "p95": 1774.2183539999999,
                    "p99": 1774.2183539999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 572.03855,
                    "min": 496.36729099999997,
                    "p50": 509.07433599999996,
                    "p95": 572.03855,
                    "p99": 572.03855,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 278.55053599999997,
                    "min": 248.738092,
                    "p50": 260.25102,
                    "p95": 278.55053599999997,
                    "p99": 278.55053599999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.712215,
                    "min": 207.59753899999998,
                    "p50": 215.768332,
                    "p95": 223.712215,
                    "p99": 223.712215,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 590.61771,
                    "min": 535.700829,
                    "p50": 551.94125,
                    "p95": 590.61771,
                    "p99": 590.61771,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1319.18652,
                    "min": 1278.9579079999999,
                    "p50": 1299.489689,
                    "p95": 1319.18652,
                    "p99": 1319.18652,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 810.859479,
                    "min": 767.800758,
                    "p50": 777.7109869999999,
                    "p95": 810.859479,
                    "p99": 810.859479,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 683.596059,
                    "min": 650.43251,
                    "p50": 675.056037,
                    "p95": 683.596059,
                    "p99": 683.596059,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 441.534225,
                    "min": 376.441853,
                    "p50": 383.65849099999997,
                    "p95": 441.534225,
                    "p99": 441.534225,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 490.164469,
                    "min": 457.286857,
                    "p50": 469.592903,
                    "p95": 490.164469,
                    "p99": 490.164469,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 363.499637,
                    "min": 329.57626899999997,
                    "p50": 344.98623499999997,
                    "p95": 363.499637,
                    "p99": 363.499637,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.927913,
                    "min": 175.38020899999998,
                    "p50": 178.253392,
                    "p95": 198.927913,
                    "p99": 198.927913,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 659.001732,
                    "min": 587.5571,
                    "p50": 599.173046,
                    "p95": 659.001732,
                    "p99": 659.001732,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 433.741537,
                    "min": 414.42192,
                    "p50": 425.287192,
                    "p95": 433.741537,
                    "p99": 433.741537,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 695.397218,
                    "min": 638.735611,
                    "p50": 664.444935,
                    "p95": 695.397218,
                    "p99": 695.397218,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2102.043402,
                    "min": 2030.3201259999998,
                    "p50": 2046.607311,
                    "p95": 2102.043402,
                    "p99": 2102.043402,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4148.058738,
                    "min": 4079.704499,
                    "p50": 4112.6650549999995,
                    "p95": 4148.058738,
                    "p99": 4148.058738,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2310.4305369999997,
                    "min": 2244.8753899999997,
                    "p50": 2273.970569,
                    "p95": 2310.4305369999997,
                    "p99": 2310.4305369999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 6015.577084,
                    "min": 5892.059522,
                    "p50": 5994.5930149999995,
                    "p95": 6015.577084,
                    "p99": 6015.577084,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1301.5887289999998,
                    "min": 1234.064966,
                    "p50": 1262.231697,
                    "p95": 1301.5887289999998,
                    "p99": 1301.5887289999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1870.082481,
                    "min": 1834.423806,
                    "p50": 1857.1343909999998,
                    "p95": 1870.082481,
                    "p99": 1870.082481,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7986.991623999999,
                    "min": 7809.917587,
                    "p50": 7923.926093,
                    "p95": 7986.991623999999,
                    "p99": 7986.991623999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1089.2040749999999,
                    "min": 1063.015433,
                    "p50": 1081.025533,
                    "p95": 1089.2040749999999,
                    "p99": 1089.2040749999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2740.92631,
                    "min": 2670.2976879999997,
                    "p50": 2699.999824,
                    "p95": 2740.92631,
                    "p99": 2740.92631,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1515.998973,
                    "min": 1431.012427,
                    "p50": 1449.960599,
                    "p95": 1515.998973,
                    "p99": 1515.998973,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 904.010096,
                    "min": 845.1420109999999,
                    "p50": 859.404939,
                    "p95": 904.010096,
                    "p99": 904.010096,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3112.85831,
                    "min": 3059.4961369999996,
                    "p50": 3099.904067,
                    "p95": 3112.85831,
                    "p99": 3112.85831,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2968.1696819999997,
                    "min": 2833.0440559999997,
                    "p50": 2886.606003,
                    "p95": 2968.1696819999997,
                    "p99": 2968.1696819999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3558.961277,
                    "min": 3461.909498,
                    "p50": 3537.681564,
                    "p95": 3558.961277,
                    "p99": 3558.961277,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1670.286248,
                    "min": 1624.6004309999998,
                    "p50": 1642.379993,
                    "p95": 1670.286248,
                    "p99": 1670.286248,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2515.10923,
                    "min": 2430.820236,
                    "p50": 2454.086275,
                    "p95": 2515.10923,
                    "p99": 2515.10923,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 755.9010619999999,
                    "min": 698.481358,
                    "p50": 715.949473,
                    "p95": 755.9010619999999,
                    "p99": 755.9010619999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 581.38415,
                    "min": 486.82496999999995,
                    "p50": 527.278239,
                    "p95": 581.38415,
                    "p99": 581.38415,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1039.737112,
                    "min": 995.4182189999999,
                    "p50": 1007.478975,
                    "p95": 1039.737112,
                    "p99": 1039.737112,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1550.5749939999998,
                    "min": 1463.205776,
                    "p50": 1480.888923,
                    "p95": 1550.5749939999998,
                    "p99": 1550.5749939999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4936.522132,
                    "min": 4820.024582,
                    "p50": 4861.496778,
                    "p95": 4936.522132,
                    "p99": 4936.522132,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2030.9585399999999,
                    "min": 1947.236582,
                    "p50": 2006.727036,
                    "p95": 2030.9585399999999,
                    "p99": 2030.9585399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 645.09386,
                    "min": 569.070657,
                    "p50": 575.587347,
                    "p95": 645.09386,
                    "p99": 645.09386,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.389026,
                    "min": 195.389342,
                    "p50": 198.743338,
                    "p95": 248.389026,
                    "p99": 248.389026,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2550.918447,
                    "min": 2403.360296,
                    "p50": 2485.24955,
                    "p95": 2550.918447,
                    "p99": 2550.918447,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 391.69345799999996,
                    "min": 375.23690899999997,
                    "p50": 382.257384,
                    "p95": 391.69345799999996,
                    "p99": 391.69345799999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 472.703942,
                    "min": 425.01406499999996,
                    "p50": 443.310338,
                    "p95": 472.703942,
                    "p99": 472.703942,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 509.993993,
                    "min": 457.620072,
                    "p50": 468.985778,
                    "p95": 509.993993,
                    "p99": 509.993993,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 943.047328,
                    "min": 860.853338,
                    "p50": 888.673645,
                    "p95": 943.047328,
                    "p99": 943.047328,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 296.02887499999997,
                    "min": 281.549155,
                    "p50": 287.621791,
                    "p95": 296.02887499999997,
                    "p99": 296.02887499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 371.223501,
                    "min": 329.59193999999997,
                    "p50": 336.22159,
                    "p95": 371.223501,
                    "p99": 371.223501,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 805.0329969999999,
                    "min": 757.6958629999999,
                    "p50": 773.0083999999999,
                    "p95": 805.0329969999999,
                    "p99": 805.0329969999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 674.041844,
                    "min": 611.5282109999999,
                    "p50": 622.1946409999999,
                    "p95": 674.041844,
                    "p99": 674.041844,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 276.285569,
                    "min": 236.48135599999998,
                    "p50": 246.338236,
                    "p95": 276.285569,
                    "p99": 276.285569,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 710.998941,
                    "min": 615.6285799999999,
                    "p50": 667.772958,
                    "p95": 710.998941,
                    "p99": 710.998941,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2142.817702,
                    "min": 2047.608685,
                    "p50": 2108.535363,
                    "p95": 2142.817702,
                    "p99": 2142.817702,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 896.52406,
                    "min": 852.389069,
                    "p50": 862.208495,
                    "p95": 896.52406,
                    "p99": 896.52406,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 674.742298,
                    "min": 625.482393,
                    "p50": 631.955204,
                    "p95": 674.742298,
                    "p99": 674.742298,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1479.0130299999998,
                    "min": 1425.680781,
                    "p50": 1440.086466,
                    "p95": 1479.0130299999998,
                    "p99": 1479.0130299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1021.986105,
                    "min": 962.0684809999999,
                    "p50": 969.3467609999999,
                    "p95": 1021.986105,
                    "p99": 1021.986105,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4766.747668999999,
                    "min": 4647.580183,
                    "p50": 4686.557912,
                    "p95": 4766.747668999999,
                    "p99": 4766.747668999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1363.2726499999999,
                    "min": 1290.289297,
                    "p50": 1330.469069,
                    "p95": 1363.2726499999999,
                    "p99": 1363.2726499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 815.183057,
                    "min": 737.614651,
                    "p50": 747.0039409999999,
                    "p95": 815.183057,
                    "p99": 815.183057,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1664.401826,
                    "min": 1519.715129,
                    "p50": 1571.468344,
                    "p95": 1664.401826,
                    "p99": 1664.401826,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3615.2707779999996,
                    "min": 3456.505064,
                    "p50": 3517.510715,
                    "p95": 3615.2707779999996,
                    "p99": 3615.2707779999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1816.551784,
                    "min": 1727.5758859999999,
                    "p50": 1773.623124,
                    "p95": 1816.551784,
                    "p99": 1816.551784,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2406.51051,
                    "min": 2337.080474,
                    "p50": 2373.491113,
                    "p95": 2406.51051,
                    "p99": 2406.51051,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 446.30999199999997,
                    "min": 389.791651,
                    "p50": 397.92742899999996,
                    "p95": 446.30999199999997,
                    "p99": 446.30999199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1707.315871,
                    "min": 1639.9583659999998,
                    "p50": 1699.632516,
                    "p95": 1707.315871,
                    "p99": 1707.315871,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 538.8935829999999,
                    "min": 500.156948,
                    "p50": 513.671502,
                    "p95": 538.8935829999999,
                    "p99": 538.8935829999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1240.5533599999999,
                    "min": 1197.2554089999999,
                    "p50": 1209.908817,
                    "p95": 1240.5533599999999,
                    "p99": 1240.5533599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1121.075235,
                    "min": 1075.7582029999999,
                    "p50": 1092.993874,
                    "p95": 1121.075235,
                    "p99": 1121.075235,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1833.265021,
                    "min": 1748.085789,
                    "p50": 1778.3622329999998,
                    "p95": 1833.265021,
                    "p99": 1833.265021,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 547.967625,
                    "min": 492.25807799999995,
                    "p50": 506.84736699999996,
                    "p95": 547.967625,
                    "p99": 547.967625,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1130.633363,
                    "min": 1073.970007,
                    "p50": 1086.535582,
                    "p95": 1130.633363,
                    "p99": 1130.633363,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1597.9941669999998,
                    "min": 1529.8913579999999,
                    "p50": 1576.85718,
                    "p95": 1597.9941669999998,
                    "p99": 1597.9941669999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1243.327601,
                    "min": 1195.3982079999998,
                    "p50": 1206.6725569999999,
                    "p95": 1243.327601,
                    "p99": 1243.327601,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1339.019539,
                    "min": 1272.9048209999999,
                    "p50": 1316.760617,
                    "p95": 1339.019539,
                    "p99": 1339.019539,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2432.999348,
                    "min": 2327.65588,
                    "p50": 2383.3332379999997,
                    "p95": 2432.999348,
                    "p99": 2432.999348,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3879.804902,
                    "min": 3466.2822419999998,
                    "p50": 3520.433119,
                    "p95": 3879.804902,
                    "p99": 3879.804902,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1467.756981,
                    "min": 1417.947981,
                    "p50": 1444.953977,
                    "p95": 1467.756981,
                    "p99": 1467.756981,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 675.689799,
                    "min": 624.546694,
                    "p50": 630.763154,
                    "p95": 675.689799,
                    "p99": 675.689799,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 417.29378299999996,
                    "min": 385.19068599999997,
                    "p50": 395.069369,
                    "p95": 417.29378299999996,
                    "p99": 417.29378299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 801.072941,
                    "min": 734.0427129999999,
                    "p50": 781.993085,
                    "p95": 801.072941,
                    "p99": 801.072941,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2114.601236,
                    "min": 2041.161752,
                    "p50": 2086.083944,
                    "p95": 2114.601236,
                    "p99": 2114.601236,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 921.867934,
                    "min": 850.85875,
                    "p50": 864.805112,
                    "p95": 921.867934,
                    "p99": 921.867934,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1711.463587,
                    "min": 1648.359056,
                    "p50": 1700.930245,
                    "p95": 1711.463587,
                    "p99": 1711.463587,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1023.8485619999999,
                    "min": 965.61127,
                    "p50": 977.0429469999999,
                    "p95": 1023.8485619999999,
                    "p99": 1023.8485619999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10834.956875,
                    "min": 10751.777409,
                    "p50": 10791.691581,
                    "p95": 10834.956875,
                    "p99": 10834.956875,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1651.9856479999999,
                    "min": 1542.6105989999999,
                    "p50": 1561.473802,
                    "p95": 1651.9856479999999,
                    "p99": 1651.9856479999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5464.169841999999,
                    "min": 5381.721434,
                    "p50": 5423.483609999999,
                    "p95": 5464.169841999999,
                    "p99": 5464.169841999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 890.513685,
                    "min": 796.3893889999999,
                    "p50": 818.817384,
                    "p95": 890.513685,
                    "p99": 890.513685,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 489.22099699999995,
                    "min": 462.98630499999996,
                    "p50": 483.947101,
                    "p95": 489.22099699999995,
                    "p99": 489.22099699999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1387.463247,
                    "min": 1324.518861,
                    "p50": 1346.617334,
                    "p95": 1387.463247,
                    "p99": 1387.463247,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4426.790109,
                    "min": 4311.676012,
                    "p50": 4361.642981999999,
                    "p95": 4426.790109,
                    "p99": 4426.790109,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1721.722446,
                    "min": 1635.748952,
                    "p50": 1665.119319,
                    "p95": 1721.722446,
                    "p99": 1721.722446,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1490.1760709999999,
                    "min": 1424.978537,
                    "p50": 1460.681658,
                    "p95": 1490.1760709999999,
                    "p99": 1490.1760709999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1965.4495519999998,
                    "min": 1906.968322,
                    "p50": 1947.1920189999998,
                    "p95": 1965.4495519999998,
                    "p99": 1965.4495519999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 613.24888,
                    "min": 573.723678,
                    "p50": 594.152426,
                    "p95": 613.24888,
                    "p99": 613.24888,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1281.663057,
                    "min": 1220.95883,
                    "p50": 1232.081051,
                    "p95": 1281.663057,
                    "p99": 1281.663057,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 375.990302,
                    "min": 366.190703,
                    "p50": 371.590668,
                    "p95": 375.990302,
                    "p99": 375.990302,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 960.7727639999999,
                    "min": 862.2783609999999,
                    "p50": 917.735876,
                    "p95": 960.7727639999999,
                    "p99": 960.7727639999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 747.01213,
                    "min": 689.286629,
                    "p50": 699.5052079999999,
                    "p95": 747.01213,
                    "p99": 747.01213,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1071.813066,
                    "min": 1004.696839,
                    "p50": 1020.002258,
                    "p95": 1071.813066,
                    "p99": 1071.813066,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1161.1318139999998,
                    "min": 1113.86467,
                    "p50": 1122.797667,
                    "p95": 1161.1318139999998,
                    "p99": 1161.1318139999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3318.7643669999998,
                    "min": 3243.052122,
                    "p50": 3281.262371,
                    "p95": 3318.7643669999998,
                    "p99": 3318.7643669999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2240.458545,
                    "min": 2179.9515859999997,
                    "p50": 2192.91819,
                    "p95": 2240.458545,
                    "p99": 2240.458545,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 371.485362,
                    "min": 319.90483,
                    "p50": 333.380456,
                    "p95": 371.485362,
                    "p99": 371.485362,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1970.102569,
                    "min": 1875.7720439999998,
                    "p50": 1942.5761739999998,
                    "p95": 1970.102569,
                    "p99": 1970.102569,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1485.243863,
                    "min": 1427.813964,
                    "p50": 1440.826967,
                    "p95": 1485.243863,
                    "p99": 1485.243863,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1050.061351,
                    "min": 932.3622959999999,
                    "p50": 977.164417,
                    "p95": 1050.061351,
                    "p99": 1050.061351,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 562.676432,
                    "min": 511.539703,
                    "p50": 522.320301,
                    "p95": 562.676432,
                    "p99": 562.676432,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4809.7173299999995,
                    "min": 4705.126346,
                    "p50": 4737.365682,
                    "p95": 4809.7173299999995,
                    "p99": 4809.7173299999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2445.043581,
                    "min": 2379.161622,
                    "p50": 2414.682207,
                    "p95": 2445.043581,
                    "p99": 2445.043581,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 655.643349,
                    "min": 572.717265,
                    "p50": 617.751362,
                    "p95": 655.643349,
                    "p99": 655.643349,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 830.74888,
                    "min": 652.686343,
                    "p50": 707.8839849999999,
                    "p95": 830.74888,
                    "p99": 830.74888,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 461.92231799999996,
                    "min": 414.39565,
                    "p50": 425.39415099999997,
                    "p95": 461.92231799999996,
                    "p99": 461.92231799999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 508.91094599999997,
                    "min": 451.9367,
                    "p50": 471.539789,
                    "p95": 508.91094599999997,
                    "p99": 508.91094599999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 278.57597699999997,
                    "min": 231.28324999999998,
                    "p50": 237.811756,
                    "p95": 278.57597699999997,
                    "p99": 278.57597699999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 922.8741339999999,
                    "min": 852.698148,
                    "p50": 863.187162,
                    "p95": 922.8741339999999,
                    "p99": 922.8741339999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 609.246149,
                    "min": 555.215293,
                    "p50": 564.0629,
                    "p95": 609.246149,
                    "p99": 609.246149,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 791.7250449999999,
                    "min": 743.7483219999999,
                    "p50": 774.193134,
                    "p95": 791.7250449999999,
                    "p99": 791.7250449999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 388.50334699999996,
                    "min": 350.856494,
                    "p50": 377.75375099999997,
                    "p95": 388.50334699999996,
                    "p99": 388.50334699999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 685.427832,
                    "min": 643.933694,
                    "p50": 657.951823,
                    "p95": 685.427832,
                    "p99": 685.427832,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 317.03256999999996,
                    "min": 267.62377399999997,
                    "p50": 283.22384,
                    "p95": 317.03256999999996,
                    "p99": 317.03256999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 191.55664399999998,
                    "min": 181.502812,
                    "p50": 189.24593199999998,
                    "p95": 191.55664399999998,
                    "p99": 191.55664399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2033.382738,
                    "min": 1897.9265679999999,
                    "p50": 1957.453523,
                    "p95": 2033.382738,
                    "p99": 2033.382738,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 962.3908319999999,
                    "min": 880.2476019999999,
                    "p50": 913.003261,
                    "p95": 962.3908319999999,
                    "p99": 962.3908319999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2253.739454,
                    "min": 2175.350936,
                    "p50": 2215.472194,
                    "p95": 2253.739454,
                    "p99": 2253.739454,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 851.567454,
                    "min": 784.7965439999999,
                    "p50": 807.88879,
                    "p95": 851.567454,
                    "p99": 851.567454,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 743.8014459999999,
                    "min": 680.216083,
                    "p50": 699.085256,
                    "p95": 743.8014459999999,
                    "p99": 743.8014459999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 489.973011,
                    "min": 472.41397,
                    "p50": 476.24860099999995,
                    "p95": 489.973011,
                    "p99": 489.973011,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1558.7146349999998,
                    "min": 1520.88114,
                    "p50": 1542.993786,
                    "p95": 1558.7146349999998,
                    "p99": 1558.7146349999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1275.661705,
                    "min": 1208.5529729999998,
                    "p50": 1226.340473,
                    "p95": 1275.661705,
                    "p99": 1275.661705,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3345.993142,
                    "min": 3221.31598,
                    "p50": 3288.342208,
                    "p95": 3345.993142,
                    "p99": 3345.993142,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1094.1729,
                    "min": 1006.095367,
                    "p50": 1023.109607,
                    "p95": 1094.1729,
                    "p99": 1094.1729,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 11833.792511,
                    "min": 10692.330845999999,
                    "p50": 10813.350527999999,
                    "p95": 11833.792511,
                    "p99": 11833.792511,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 621.176125,
                    "min": 542.053265,
                    "p50": 587.667651,
                    "p95": 621.176125,
                    "p99": 621.176125,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1470.269804,
                    "min": 1428.255985,
                    "p50": 1451.734326,
                    "p95": 1470.269804,
                    "p99": 1470.269804,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1379.256745,
                    "min": 1326.823963,
                    "p50": 1347.17082,
                    "p95": 1379.256745,
                    "p99": 1379.256745,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4433.7532519999995,
                    "min": 4324.319385,
                    "p50": 4362.430125,
                    "p95": 4433.7532519999995,
                    "p99": 4433.7532519999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 389.044016,
                    "min": 360.994817,
                    "p50": 376.11380499999996,
                    "p95": 389.044016,
                    "p99": 389.044016,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1710.26108,
                    "min": 1649.634147,
                    "p50": 1667.872291,
                    "p95": 1710.26108,
                    "p99": 1710.26108,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1139.327263,
                    "min": 1114.560817,
                    "p50": 1121.458204,
                    "p95": 1139.327263,
                    "p99": 1139.327263,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5512.898238,
                    "min": 5402.720717,
                    "p50": 5425.994446,
                    "p95": 5512.898238,
                    "p99": 5512.898238,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 689.091627,
                    "min": 671.7208019999999,
                    "p50": 680.6098489999999,
                    "p95": 689.091627,
                    "p99": 689.091627,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 593.1045809999999,
                    "min": 578.187814,
                    "p50": 588.224961,
                    "p95": 593.1045809999999,
                    "p99": 593.1045809999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 901.32916,
                    "min": 849.593751,
                    "p50": 857.523689,
                    "p95": 901.32916,
                    "p99": 901.32916,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 353.68742699999996,
                    "min": 306.280737,
                    "p50": 310.871468,
                    "p95": 353.68742699999996,
                    "p99": 353.68742699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 428.821732,
                    "min": 399.75897799999996,
                    "p50": 406.251709,
                    "p95": 428.821732,
                    "p99": 428.821732,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 771.619827,
                    "min": 756.505224,
                    "p50": 764.1691519999999,
                    "p95": 771.619827,
                    "p99": 771.619827,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 504.72840399999995,
                    "min": 482.618002,
                    "p50": 498.078916,
                    "p95": 504.72840399999995,
                    "p99": 504.72840399999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 907.6814559999999,
                    "min": 888.0498279999999,
                    "p50": 903.22241,
                    "p95": 907.6814559999999,
                    "p99": 907.6814559999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 316.25753299999997,
                    "min": 299.368165,
                    "p50": 305.342173,
                    "p95": 316.25753299999997,
                    "p99": 316.25753299999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 736.758022,
                    "min": 686.003648,
                    "p50": 727.8220279999999,
                    "p95": 736.758022,
                    "p99": 736.758022,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 581.624818,
                    "min": 558.642254,
                    "p50": 565.9459949999999,
                    "p95": 581.624818,
                    "p99": 581.624818,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 680.345469,
                    "min": 636.670994,
                    "p50": 645.790855,
                    "p95": 680.345469,
                    "p99": 680.345469,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 819.734921,
                    "min": 801.8113539999999,
                    "p50": 811.175447,
                    "p95": 819.734921,
                    "p99": 819.734921,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 397.68593799999996,
                    "min": 382.452344,
                    "p50": 388.865194,
                    "p95": 397.68593799999996,
                    "p99": 397.68593799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.562297,
                    "min": 468.147901,
                    "p50": 472.540099,
                    "p95": 479.562297,
                    "p99": 479.562297,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 233.31187,
                    "min": 174.561478,
                    "p50": 186.006102,
                    "p95": 233.31187,
                    "p99": 233.31187,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 393.167517,
                    "min": 283.624309,
                    "p50": 327.582975,
                    "p95": 393.167517,
                    "p99": 393.167517,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 392.928811,
                    "min": 371.312004,
                    "p50": 385.980476,
                    "p95": 392.928811,
                    "p99": 392.928811,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 302.88244,
                    "min": 240.890368,
                    "p50": 276.309131,
                    "p95": 302.88244,
                    "p99": 302.88244,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 525.8658859999999,
                    "min": 471.655494,
                    "p50": 484.212859,
                    "p95": 525.8658859999999,
                    "p99": 525.8658859999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 171.61276999999998,
                    "min": 145.598683,
                    "p50": 149.265521,
                    "p95": 171.61276999999998,
                    "p99": 171.61276999999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 435.953259,
                    "min": 412.349108,
                    "p50": 420.430455,
                    "p95": 435.953259,
                    "p99": 435.953259,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 365.68348599999996,
                    "min": 309.834056,
                    "p50": 351.305159,
                    "p95": 365.68348599999996,
                    "p99": 365.68348599999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 318.115842,
                    "min": 209.65492,
                    "p50": 257.833906,
                    "p95": 318.115842,
                    "p99": 318.115842,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 476.053998,
                    "min": 435.67805899999996,
                    "p50": 450.78648999999996,
                    "p95": 476.053998,
                    "p99": 476.053998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 680.5431189999999,
                    "min": 595.3873689999999,
                    "p50": 599.248934,
                    "p95": 680.5431189999999,
                    "p99": 680.5431189999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 781.50274,
                    "min": 754.39305,
                    "p50": 774.8307209999999,
                    "p95": 781.50274,
                    "p99": 781.50274,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 251.349371,
                    "min": 221.88785399999998,
                    "p50": 232.484599,
                    "p95": 251.349371,
                    "p99": 251.349371,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 420.462224,
                    "min": 407.45059599999996,
                    "p50": 413.38012,
                    "p95": 420.462224,
                    "p99": 420.462224,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 693.646675,
                    "min": 684.706956,
                    "p50": 691.766792,
                    "p95": 693.646675,
                    "p99": 693.646675,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 353.359445,
                    "min": 321.91567599999996,
                    "p50": 333.554036,
                    "p95": 353.359445,
                    "p99": 353.359445,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 511.820064,
                    "min": 495.98761299999995,
                    "p50": 502.78288,
                    "p95": 511.820064,
                    "p99": 511.820064,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 377.015093,
                    "min": 324.06242599999996,
                    "p50": 365.471274,
                    "p95": 377.015093,
                    "p99": 377.015093,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 233.58719499999998,
                    "min": 185.637213,
                    "p50": 193.822812,
                    "p95": 233.58719499999998,
                    "p99": 233.58719499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 157.648616,
                    "min": 127.735312,
                    "p50": 131.572327,
                    "p95": 157.648616,
                    "p99": 157.648616,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 359.518153,
                    "min": 294.014418,
                    "p50": 313.43922,
                    "p95": 359.518153,
                    "p99": 359.518153,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 302.92731299999997,
                    "min": 245.960982,
                    "p50": 253.377566,
                    "p95": 302.92731299999997,
                    "p99": 302.92731299999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 254.083922,
                    "min": 207.103144,
                    "p50": 227.54692599999998,
                    "p95": 254.083922,
                    "p99": 254.083922,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 414.622149,
                    "min": 288.80956399999997,
                    "p50": 339.07845299999997,
                    "p95": 414.622149,
                    "p99": 414.622149,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 181.702644,
                    "min": 145.495705,
                    "p50": 150.333924,
                    "p95": 181.702644,
                    "p99": 181.702644,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 132.478735,
                    "min": 62.667082,
                    "p50": 102.193174,
                    "p95": 132.478735,
                    "p99": 132.478735,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 491.001223,
                    "min": 389.82908799999996,
                    "p50": 437.327315,
                    "p95": 491.001223,
                    "p99": 491.001223,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 384.562914,
                    "min": 344.797075,
                    "p50": 361.267525,
                    "p95": 384.562914,
                    "p99": 384.562914,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 476.99915699999997,
                    "min": 431.90103999999997,
                    "p50": 459.60027499999995,
                    "p95": 476.99915699999997,
                    "p99": 476.99915699999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 263.644883,
                    "min": 222.841244,
                    "p50": 230.54778199999998,
                    "p95": 263.644883,
                    "p99": 263.644883,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 353.30103399999996,
                    "min": 262.728364,
                    "p50": 305.318288,
                    "p95": 353.30103399999996,
                    "p99": 353.30103399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 218.275272,
                    "min": 167.01975199999998,
                    "p50": 213.94234899999998,
                    "p95": 218.275272,
                    "p99": 218.275272,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 336.72572099999996,
                    "min": 290.537019,
                    "p50": 324.090425,
                    "p95": 336.72572099999996,
                    "p99": 336.72572099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 178.50579299999998,
                    "min": 144.644429,
                    "p50": 148.50249599999998,
                    "p95": 178.50579299999998,
                    "p99": 178.50579299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 381.06535399999996,
                    "min": 328.40155699999997,
                    "p50": 370.603936,
                    "p95": 381.06535399999996,
                    "p99": 381.06535399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 308.795344,
                    "min": 240.85143,
                    "p50": 259.118495,
                    "p95": 308.795344,
                    "p99": 308.795344,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 177.010816,
                    "min": 123.588096,
                    "p50": 145.486028,
                    "p95": 177.010816,
                    "p99": 177.010816,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.34268899999998,
                    "min": 153.661972,
                    "p50": 180.12791199999998,
                    "p95": 193.34268899999998,
                    "p99": 193.34268899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 331.39960099999996,
                    "min": 273.811309,
                    "p50": 282.648028,
                    "p95": 331.39960099999996,
                    "p99": 331.39960099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 372.819258,
                    "min": 316.11239,
                    "p50": 364.995855,
                    "p95": 372.819258,
                    "p99": 372.819258,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 488.36848999999995,
                    "min": 434.948045,
                    "p50": 476.39154099999996,
                    "p95": 488.36848999999995,
                    "p99": 488.36848999999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 224.030643,
                    "min": 179.823825,
                    "p50": 200.23432499999998,
                    "p95": 224.030643,
                    "p99": 224.030643,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 430.221097,
                    "min": 374.19293899999997,
                    "p50": 388.567342,
                    "p95": 430.221097,
                    "p99": 430.221097,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 249.13779,
                    "min": 190.382892,
                    "p50": 200.77278099999998,
                    "p95": 249.13779,
                    "p99": 249.13779,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 296.907981,
                    "min": 221.115149,
                    "p50": 259.488275,
                    "p95": 296.907981,
                    "p99": 296.907981,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 264.884439,
                    "min": 213.85646699999998,
                    "p50": 221.206963,
                    "p95": 264.884439,
                    "p99": 264.884439,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 124.70561699999999,
                    "min": 99.53877299999999,
                    "p50": 113.31434999999999,
                    "p95": 124.70561699999999,
                    "p99": 124.70561699999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 196.48672399999998,
                    "min": 142.775788,
                    "p50": 156.450298,
                    "p95": 196.48672399999998,
                    "p99": 196.48672399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 262.43845999999996,
                    "min": 201.600978,
                    "p50": 245.58314199999998,
                    "p95": 262.43845999999996,
                    "p99": 262.43845999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.46701299999998,
                    "min": 182.41100699999998,
                    "p50": 190.763305,
                    "p95": 218.46701299999998,
                    "p99": 218.46701299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 458.40311599999995,
                    "min": 384.17848,
                    "p50": 436.76523599999996,
                    "p95": 458.40311599999995,
                    "p99": 458.40311599999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 385.065414,
                    "min": 340.380864,
                    "p50": 373.85673099999997,
                    "p95": 385.065414,
                    "p99": 385.065414,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.661359,
                    "min": 90.325694,
                    "p50": 127.17043299999999,
                    "p95": 131.661359,
                    "p99": 131.661359,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 337.24949399999997,
                    "min": 260.679329,
                    "p50": 278.825569,
                    "p95": 337.24949399999997,
                    "p99": 337.24949399999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 306.170001,
                    "min": 238.598985,
                    "p50": 257.538555,
                    "p95": 306.170001,
                    "p99": 306.170001,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.842748,
                    "min": 127.394746,
                    "p50": 131.06194499999998,
                    "p95": 159.842748,
                    "p99": 159.842748,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 293.7047,
                    "min": 265.276712,
                    "p50": 286.09430399999997,
                    "p95": 293.7047,
                    "p99": 293.7047,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 295.06406499999997,
                    "min": 223.376745,
                    "p50": 256.412719,
                    "p95": 295.06406499999997,
                    "p99": 295.06406499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 556.794733,
                    "min": 451.201321,
                    "p50": 496.205249,
                    "p95": 556.794733,
                    "p99": 556.794733,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 370.434909,
                    "min": 322.120158,
                    "p50": 333.63548099999997,
                    "p95": 370.434909,
                    "p99": 370.434909,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 177.45763499999998,
                    "min": 159.46867899999998,
                    "p50": 172.08876899999998,
                    "p95": 177.45763499999998,
                    "p99": 177.45763499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 346.04758999999996,
                    "min": 298.05392,
                    "p50": 308.061851,
                    "p95": 346.04758999999996,
                    "p99": 346.04758999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 538.885854,
                    "min": 458.416953,
                    "p50": 483.90633299999996,
                    "p95": 538.885854,
                    "p99": 538.885854,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.81597499999998,
                    "min": 129.034447,
                    "p50": 131.79909,
                    "p95": 184.81597499999998,
                    "p99": 184.81597499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 297.46543399999996,
                    "min": 216.334675,
                    "p50": 230.634954,
                    "p95": 297.46543399999996,
                    "p99": 297.46543399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 308.40939199999997,
                    "min": 205.506182,
                    "p50": 268.599025,
                    "p95": 308.40939199999997,
                    "p99": 308.40939199999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 309.72119,
                    "min": 253.95367499999998,
                    "p50": 277.903844,
                    "p95": 309.72119,
                    "p99": 309.72119,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 484.472335,
                    "min": 411.65734799999996,
                    "p50": 437.029342,
                    "p95": 484.472335,
                    "p99": 484.472335,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 332.800184,
                    "min": 279.944365,
                    "p50": 295.411761,
                    "p95": 332.800184,
                    "p99": 332.800184,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 356.325129,
                    "min": 303.81032899999997,
                    "p50": 353.64925,
                    "p95": 356.325129,
                    "p99": 356.325129,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.383257,
                    "min": 99.275852,
                    "p50": 113.166415,
                    "p95": 131.383257,
                    "p99": 131.383257,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 214.284564,
                    "min": 166.799998,
                    "p50": 171.555412,
                    "p95": 214.284564,
                    "p99": 214.284564,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 185.321088,
                    "min": 137.43390399999998,
                    "p50": 170.97942799999998,
                    "p95": 185.321088,
                    "p99": 185.321088,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 460.684442,
                    "min": 351.05747299999996,
                    "p50": 393.508575,
                    "p95": 460.684442,
                    "p99": 460.684442,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 236.266439,
                    "min": 203.75903,
                    "p50": 230.162352,
                    "p95": 236.266439,
                    "p99": 236.266439,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 375.29677699999996,
                    "min": 329.519812,
                    "p50": 338.49773799999997,
                    "p95": 375.29677699999996,
                    "p99": 375.29677699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 225.653258,
                    "min": 183.57755899999998,
                    "p50": 216.05516599999999,
                    "p95": 225.653258,
                    "p99": 225.653258,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 217.333532,
                    "min": 202.76028,
                    "p50": 213.087073,
                    "p95": 217.333532,
                    "p99": 217.333532,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 79.70819,
                    "min": 75.335785,
                    "p50": 75.663905,
                    "p95": 79.70819,
                    "p99": 79.70819,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1107.259642,
                    "min": 1003.7104129999999,
                    "p50": 1035.8033229999999,
                    "p95": 1107.259642,
                    "p99": 1107.259642,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 270.596431,
                    "min": 230.610416,
                    "p50": 238.25125599999998,
                    "p95": 270.596431,
                    "p99": 270.596431,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 366.11499499999996,
                    "min": 320.540685,
                    "p50": 336.886807,
                    "p95": 366.11499499999996,
                    "p99": 366.11499499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.885099,
                    "min": 97.261838,
                    "p50": 137.995321,
                    "p95": 166.885099,
                    "p99": 166.885099,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 491.610329,
                    "min": 417.04417,
                    "p50": 444.16479499999997,
                    "p95": 491.610329,
                    "p99": 491.610329,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 120.00117499999999,
                    "min": 89.163595,
                    "p50": 100.100449,
                    "p95": 120.00117499999999,
                    "p99": 120.00117499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 157.47652399999998,
                    "min": 119.853552,
                    "p50": 142.62730399999998,
                    "p95": 157.47652399999998,
                    "p99": 157.47652399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.265101,
                    "min": 57.517157999999995,
                    "p50": 58.383404,
                    "p95": 64.265101,
                    "p99": 64.265101,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 136.342042,
                    "min": 133.096567,
                    "p50": 133.78273199999998,
                    "p95": 136.342042,
                    "p99": 136.342042,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.236665,
                    "min": 102.63774099999999,
                    "p50": 120.071597,
                    "p95": 136.236665,
                    "p99": 136.236665,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 188.279223,
                    "min": 151.279709,
                    "p50": 154.101882,
                    "p95": 188.279223,
                    "p99": 188.279223,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 199.193916,
                    "min": 169.09376699999999,
                    "p50": 173.617124,
                    "p95": 199.193916,
                    "p99": 199.193916,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 212.38615099999998,
                    "min": 142.209033,
                    "p50": 161.032285,
                    "p95": 212.38615099999998,
                    "p99": 212.38615099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 582.3802559999999,
                    "min": 491.896817,
                    "p50": 551.698984,
                    "p95": 582.3802559999999,
                    "p99": 582.3802559999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.35056399999999,
                    "min": 89.34852,
                    "p50": 91.29433,
                    "p95": 97.35056399999999,
                    "p99": 97.35056399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 241.13017699999997,
                    "min": 164.13258399999998,
                    "p50": 182.06348,
                    "p95": 241.13017699999997,
                    "p99": 241.13017699999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 241.89147599999998,
                    "min": 175.334171,
                    "p50": 195.825935,
                    "p95": 241.89147599999998,
                    "p99": 241.89147599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 419.114738,
                    "min": 405.27361299999995,
                    "p50": 412.348418,
                    "p95": 419.114738,
                    "p99": 419.114738,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 133.094248,
                    "min": 116.660004,
                    "p50": 125.051237,
                    "p95": 133.094248,
                    "p99": 133.094248,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 579.853798,
                    "min": 526.997752,
                    "p50": 540.734771,
                    "p95": 579.853798,
                    "p99": 579.853798,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 301.454295,
                    "min": 285.907723,
                    "p50": 293.740408,
                    "p95": 301.454295,
                    "p99": 301.454295,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 241.57957499999998,
                    "min": 212.747095,
                    "p50": 221.56995999999998,
                    "p95": 241.57957499999998,
                    "p99": 241.57957499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 239.69710099999998,
                    "min": 226.362317,
                    "p50": 233.66878699999998,
                    "p95": 239.69710099999998,
                    "p99": 239.69710099999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 215.016764,
                    "min": 200.048823,
                    "p50": 207.91694199999998,
                    "p95": 215.016764,
                    "p99": 215.016764,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 276.445862,
                    "min": 260.10393,
                    "p50": 266.227605,
                    "p95": 276.445862,
                    "p99": 276.445862,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.342618,
                    "min": 74.728724,
                    "p50": 74.971008,
                    "p95": 84.342618,
                    "p99": 84.342618,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1300.785965,
                    "min": 1243.828912,
                    "p50": 1262.784046,
                    "p95": 1300.785965,
                    "p99": 1300.785965,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.870077,
                    "min": 84.46828099999999,
                    "p50": 92.798857,
                    "p95": 93.870077,
                    "p99": 93.870077,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 117.26576999999999,
                    "min": 96.51475699999999,
                    "p50": 112.179801,
                    "p95": 117.26576999999999,
                    "p99": 117.26576999999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.815707,
                    "min": 146.596058,
                    "p50": 148.713989,
                    "p95": 152.815707,
                    "p99": 152.815707,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 232.917475,
                    "min": 157.522529,
                    "p50": 197.844187,
                    "p95": 232.917475,
                    "p99": 232.917475,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 168.98984199999998,
                    "min": 159.320775,
                    "p50": 165.682417,
                    "p95": 168.98984199999998,
                    "p99": 168.98984199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.37875,
                    "min": 181.920804,
                    "p50": 187.052885,
                    "p95": 193.37875,
                    "p99": 193.37875,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.779578,
                    "min": 131.717396,
                    "p50": 138.767448,
                    "p95": 145.779578,
                    "p99": 145.779578,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.18042599999998,
                    "min": 169.997671,
                    "p50": 172.03951899999998,
                    "p95": 177.18042599999998,
                    "p99": 177.18042599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 672.952532,
                    "min": 646.365727,
                    "p50": 662.521629,
                    "p95": 672.952532,
                    "p99": 672.952532,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 211.77934399999998,
                    "min": 168.23428199999998,
                    "p50": 179.73896299999998,
                    "p95": 211.77934399999998,
                    "p99": 211.77934399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1152.933331,
                    "min": 1061.01262,
                    "p50": 1097.897421,
                    "p95": 1152.933331,
                    "p99": 1152.933331,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 196.112685,
                    "min": 162.581145,
                    "p50": 186.73649799999998,
                    "p95": 196.112685,
                    "p99": 196.112685,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.902298,
                    "min": 137.796629,
                    "p50": 140.643156,
                    "p95": 167.902298,
                    "p99": 167.902298,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 240.32599199999999,
                    "min": 209.506439,
                    "p50": 220.04098499999998,
                    "p95": 240.32599199999999,
                    "p99": 240.32599199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 315.86037999999996,
                    "min": 244.380059,
                    "p50": 250.34652799999998,
                    "p95": 315.86037999999996,
                    "p99": 315.86037999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 101.732568,
                    "min": 90.406663,
                    "p50": 93.06828999999999,
                    "p95": 101.732568,
                    "p99": 101.732568,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 188.52552,
                    "min": 131.492461,
                    "p50": 148.855785,
                    "p95": 188.52552,
                    "p99": 188.52552,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.105868,
                    "min": 97.740352,
                    "p50": 122.024397,
                    "p95": 139.105868,
                    "p99": 139.105868,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 244.20357199999998,
                    "min": 195.35598,
                    "p50": 197.56532299999998,
                    "p95": 244.20357199999998,
                    "p99": 244.20357199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.76379799999998,
                    "min": 159.278164,
                    "p50": 168.244709,
                    "p95": 201.76379799999998,
                    "p99": 201.76379799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 496.06642999999997,
                    "min": 423.047448,
                    "p50": 446.48434899999995,
                    "p95": 496.06642999999997,
                    "p99": 496.06642999999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 383.11071,
                    "min": 327.58970899999997,
                    "p50": 353.70584199999996,
                    "p95": 383.11071,
                    "p99": 383.11071,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 198.202218,
                    "min": 118.872017,
                    "p50": 159.938267,
                    "p95": 198.202218,
                    "p99": 198.202218,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 65.885316,
                    "min": 56.923623,
                    "p50": 61.208859999999994,
                    "p95": 65.885316,
                    "p99": 65.885316,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 168.637697,
                    "min": 90.776962,
                    "p50": 129.438427,
                    "p95": 168.637697,
                    "p99": 168.637697,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.797313,
                    "min": 74.56947,
                    "p50": 80.09441,
                    "p95": 81.797313,
                    "p99": 81.797313,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.65700799999999,
                    "min": 96.99712199999999,
                    "p50": 103.302821,
                    "p95": 124.65700799999999,
                    "p99": 124.65700799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 578.952448,
                    "min": 534.832172,
                    "p50": 565.763915,
                    "p95": 578.952448,
                    "p99": 578.952448,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 231.307862,
                    "min": 178.491996,
                    "p50": 198.179871,
                    "p95": 231.307862,
                    "p99": 231.307862,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 141.783325,
                    "min": 101.92366899999999,
                    "p50": 133.581387,
                    "p95": 141.783325,
                    "p99": 141.783325,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.8599,
                    "min": 82.65111399999999,
                    "p50": 91.321866,
                    "p95": 96.8599,
                    "p99": 96.8599,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.232124,
                    "min": 121.751757,
                    "p50": 147.85378599999999,
                    "p95": 152.232124,
                    "p99": 152.232124,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 297.097835,
                    "min": 275.98191099999997,
                    "p50": 288.606646,
                    "p95": 297.097835,
                    "p99": 297.097835,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.163056,
                    "min": 73.034184,
                    "p50": 73.529437,
                    "p95": 83.163056,
                    "p99": 83.163056,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1258.758116,
                    "min": 1218.654458,
                    "p50": 1228.016603,
                    "p95": 1258.758116,
                    "p99": 1258.758116,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 268.135196,
                    "min": 247.168243,
                    "p50": 259.188734,
                    "p95": 268.135196,
                    "p99": 268.135196,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 129.721709,
                    "min": 101.17894199999999,
                    "p50": 109.813745,
                    "p95": 129.721709,
                    "p99": 129.721709,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 209.563742,
                    "min": 168.869612,
                    "p50": 177.322184,
                    "p95": 209.563742,
                    "p99": 209.563742,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 228.068049,
                    "min": 207.032209,
                    "p50": 216.349417,
                    "p95": 228.068049,
                    "p99": 228.068049,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.18733999999999,
                    "min": 113.180928,
                    "p50": 123.01963599999999,
                    "p95": 127.18733999999999,
                    "p99": 127.18733999999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 230.259759,
                    "min": 189.025356,
                    "p50": 197.676597,
                    "p95": 230.259759,
                    "p99": 230.259759,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 695.696345,
                    "min": 639.9052919999999,
                    "p50": 646.1268729999999,
                    "p95": 695.696345,
                    "p99": 695.696345,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 428.529514,
                    "min": 397.717702,
                    "p50": 409.448959,
                    "p95": 428.529514,
                    "p99": 428.529514,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 213.74651599999999,
                    "min": 197.250306,
                    "p50": 204.13965,
                    "p95": 213.74651599999999,
                    "p99": 213.74651599999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.13314,
                    "min": 156.59833799999998,
                    "p50": 157.913049,
                    "p95": 163.13314,
                    "p99": 163.13314,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 245.762192,
                    "min": 214.472369,
                    "p50": 227.72990199999998,
                    "p95": 245.762192,
                    "p99": 245.762192,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 550.537006,
                    "min": 510.48299899999995,
                    "p50": 526.150525,
                    "p95": 550.537006,
                    "p99": 550.537006,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 156.154649,
                    "min": 108.924077,
                    "p50": 135.669251,
                    "p95": 156.154649,
                    "p99": 156.154649,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 205.58910799999998,
                    "min": 187.592794,
                    "p50": 195.89921199999998,
                    "p95": 205.58910799999998,
                    "p99": 205.58910799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 176.563624,
                    "min": 170.16226699999999,
                    "p50": 173.742773,
                    "p95": 176.563624,
                    "p99": 176.563624,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 120.981956,
                    "min": 102.120542,
                    "p50": 117.31549299999999,
                    "p95": 120.981956,
                    "p99": 120.981956,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 360.075179,
                    "min": 264.349314,
                    "p50": 272.41639499999997,
                    "p95": 360.075179,
                    "p99": 360.075179,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.670334,
                    "min": 88.22344799999999,
                    "p50": 90.51489699999999,
                    "p95": 96.670334,
                    "p99": 96.670334,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 169.379298,
                    "min": 138.01640799999998,
                    "p50": 158.368109,
                    "p95": 169.379298,
                    "p99": 169.379298,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 171.083451,
                    "min": 144.572759,
                    "p50": 161.165294,
                    "p95": 171.083451,
                    "p99": 171.083451,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 245.967985,
                    "min": 219.09481399999999,
                    "p50": 228.97535399999998,
                    "p95": 245.967985,
                    "p99": 245.967985,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 455.444054,
                    "min": 361.466382,
                    "p50": 379.47286399999996,
                    "p95": 455.444054,
                    "p99": 455.444054,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 239.06926199999998,
                    "min": 184.387815,
                    "p50": 188.666589,
                    "p95": 239.06926199999998,
                    "p99": 239.06926199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 185.145556,
                    "min": 144.42781,
                    "p50": 153.561996,
                    "p95": 185.145556,
                    "p99": 185.145556,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.62279,
                    "min": 88.77613799999999,
                    "p50": 99.927737,
                    "p95": 102.62279,
                    "p99": 102.62279,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 208.13185199999998,
                    "min": 196.171369,
                    "p50": 206.19369899999998,
                    "p95": 208.13185199999998,
                    "p99": 208.13185199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 287.597064,
                    "min": 238.56830599999998,
                    "p50": 249.48588999999998,
                    "p95": 287.597064,
                    "p99": 287.597064,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 551.537414,
                    "min": 487.880165,
                    "p50": 497.52495,
                    "p95": 551.537414,
                    "p99": 551.537414,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 655.027653,
                    "min": 602.566614,
                    "p50": 611.3455799999999,
                    "p95": 655.027653,
                    "p99": 655.027653,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1225.398076,
                    "min": 1154.914159,
                    "p50": 1188.511254,
                    "p95": 1225.398076,
                    "p99": 1225.398076,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 78.693028,
                    "min": 68.862852,
                    "p50": 69.44721899999999,
                    "p95": 78.693028,
                    "p99": 78.693028,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 619.701383,
                    "min": 538.016717,
                    "p50": 588.223203,
                    "p95": 619.701383,
                    "p99": 619.701383,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 192.73443699999999,
                    "min": 159.755819,
                    "p50": 178.215405,
                    "p95": 192.73443699999999,
                    "p99": 192.73443699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 189.52424299999998,
                    "min": 144.900125,
                    "p50": 160.754112,
                    "p95": 189.52424299999998,
                    "p99": 189.52424299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 244.358028,
                    "min": 196.556498,
                    "p50": 215.668637,
                    "p95": 244.358028,
                    "p99": 244.358028,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 121.935086,
                    "min": 119.25585099999999,
                    "p50": 121.137186,
                    "p95": 121.935086,
                    "p99": 121.935086,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 118.023265,
                    "min": 78.893581,
                    "p50": 94.858291,
                    "p95": 118.023265,
                    "p99": 118.023265,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 68.256275,
                    "min": 39.710209,
                    "p50": 62.062348,
                    "p95": 68.256275,
                    "p99": 68.256275,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 163.3902,
                    "min": 154.898122,
                    "p50": 159.643439,
                    "p95": 163.3902,
                    "p99": 163.3902,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 265.582951,
                    "min": 205.87128299999998,
                    "p50": 223.66000499999998,
                    "p95": 265.582951,
                    "p99": 265.582951,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 108.340023,
                    "min": 96.215047,
                    "p50": 102.332808,
                    "p95": 108.340023,
                    "p99": 108.340023,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 165.121177,
                    "min": 123.112635,
                    "p50": 130.21157,
                    "p95": 165.121177,
                    "p99": 165.121177,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 211.278874,
                    "min": 174.728217,
                    "p50": 188.414929,
                    "p95": 211.278874,
                    "p99": 211.278874,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 530.412873,
                    "min": 416.439752,
                    "p50": 477.63075999999995,
                    "p95": 530.412873,
                    "p99": 530.412873,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.333947,
                    "min": 138.791166,
                    "p50": 147.055012,
                    "p95": 165.333947,
                    "p99": 165.333947,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.056972,
                    "min": 244.023675,
                    "p50": 246.995283,
                    "p95": 290.056972,
                    "p99": 290.056972,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.27104,
                    "min": 144.81032399999998,
                    "p50": 168.67455999999999,
                    "p95": 198.27104,
                    "p99": 198.27104,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.294879,
                    "min": 60.339614999999995,
                    "p50": 80.79146,
                    "p95": 84.294879,
                    "p99": 84.294879,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.58750499999996,
                    "min": 339.780729,
                    "p50": 348.047757,
                    "p95": 365.58750499999996,
                    "p99": 365.58750499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 174.801974,
                    "min": 124.28892099999999,
                    "p50": 145.432878,
                    "p95": 174.801974,
                    "p99": 174.801974,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.855233,
                    "min": 103.759501,
                    "p50": 125.232112,
                    "p95": 145.855233,
                    "p99": 145.855233,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 190.66429499999998,
                    "min": 156.11879299999998,
                    "p50": 173.59104,
                    "p95": 190.66429499999998,
                    "p99": 190.66429499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 561.348873,
                    "min": 523.3756129999999,
                    "p50": 552.724103,
                    "p95": 561.348873,
                    "p99": 561.348873,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 394.271031,
                    "min": 350.904863,
                    "p50": 382.63196899999997,
                    "p95": 394.271031,
                    "p99": 394.271031,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 441.280191,
                    "min": 382.835583,
                    "p50": 402.542943,
                    "p95": 441.280191,
                    "p99": 441.280191,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 500.352947,
                    "min": 423.83611299999995,
                    "p50": 487.221678,
                    "p95": 500.352947,
                    "p99": 500.352947,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 297.751241,
                    "min": 247.744428,
                    "p50": 256.209679,
                    "p95": 297.751241,
                    "p99": 297.751241,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.853695,
                    "min": 184.17278299999998,
                    "p50": 190.859558,
                    "p95": 193.853695,
                    "p99": 193.853695,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 256.17238399999997,
                    "min": 229.50219299999998,
                    "p50": 235.58951299999998,
                    "p95": 256.17238399999997,
                    "p99": 256.17238399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 285.452116,
                    "min": 208.210846,
                    "p50": 247.937512,
                    "p95": 285.452116,
                    "p99": 285.452116,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 316.683785,
                    "min": 273.18177099999997,
                    "p50": 282.389095,
                    "p95": 316.683785,
                    "p99": 316.683785,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 388.81469699999997,
                    "min": 298.55595,
                    "p50": 334.375411,
                    "p95": 388.81469699999997,
                    "p99": 388.81469699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 413.79700199999996,
                    "min": 329.259039,
                    "p50": 402.560498,
                    "p95": 413.79700199999996,
                    "p99": 413.79700199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 390.096882,
                    "min": 316.334752,
                    "p50": 326.842701,
                    "p95": 390.096882,
                    "p99": 390.096882,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 382.168011,
                    "min": 303.654853,
                    "p50": 320.615417,
                    "p95": 382.168011,
                    "p99": 382.168011,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 400.62712999999997,
                    "min": 348.630521,
                    "p50": 382.435698,
                    "p95": 400.62712999999997,
                    "p99": 400.62712999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 427.569815,
                    "min": 360.912845,
                    "p50": 398.166412,
                    "p95": 427.569815,
                    "p99": 427.569815,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 146.05257699999999,
                    "min": 133.616595,
                    "p50": 143.18902,
                    "p95": 146.05257699999999,
                    "p99": 146.05257699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 205.588473,
                    "min": 147.629449,
                    "p50": 167.750123,
                    "p95": 205.588473,
                    "p99": 205.588473,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 230.33311899999998,
                    "min": 197.41483499999998,
                    "p50": 211.368686,
                    "p95": 230.33311899999998,
                    "p99": 230.33311899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 277.05528799999996,
                    "min": 187.46917,
                    "p50": 191.345932,
                    "p95": 277.05528799999996,
                    "p99": 277.05528799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 375.91561099999996,
                    "min": 265.769988,
                    "p50": 324.05017399999997,
                    "p95": 375.91561099999996,
                    "p99": 375.91561099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.58077,
                    "min": 109.382345,
                    "p50": 120.165499,
                    "p95": 150.58077,
                    "p99": 150.58077,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 281.50664,
                    "min": 232.74459199999998,
                    "p50": 243.34596599999998,
                    "p95": 281.50664,
                    "p99": 281.50664,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 564.550784,
                    "min": 441.84739299999995,
                    "p50": 483.753071,
                    "p95": 564.550784,
                    "p99": 564.550784,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 605.76086,
                    "min": 539.831291,
                    "p50": 565.178187,
                    "p95": 605.76086,
                    "p99": 605.76086,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 454.265566,
                    "min": 392.644455,
                    "p50": 429.844266,
                    "p95": 454.265566,
                    "p99": 454.265566,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 303.187412,
                    "min": 236.334117,
                    "p50": 290.072381,
                    "p95": 303.187412,
                    "p99": 303.187412,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 407.64187799999996,
                    "min": 318.794919,
                    "p50": 329.368646,
                    "p95": 407.64187799999996,
                    "p99": 407.64187799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 442.996248,
                    "min": 387.349702,
                    "p50": 409.058412,
                    "p95": 442.996248,
                    "p99": 442.996248,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 412.99085399999996,
                    "min": 342.24281199999996,
                    "p50": 379.51091199999996,
                    "p95": 412.99085399999996,
                    "p99": 412.99085399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 473.70383599999997,
                    "min": 421.737598,
                    "p50": 455.93920399999996,
                    "p95": 473.70383599999997,
                    "p99": 473.70383599999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 582.1886119999999,
                    "min": 459.06352799999996,
                    "p50": 499.389793,
                    "p95": 582.1886119999999,
                    "p99": 582.1886119999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 357.36576099999996,
                    "min": 313.284269,
                    "p50": 331.047501,
                    "p95": 357.36576099999996,
                    "p99": 357.36576099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 395.301565,
                    "min": 292.308469,
                    "p50": 342.191149,
                    "p95": 395.301565,
                    "p99": 395.301565,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.457119,
                    "min": 108.202109,
                    "p50": 128.600391,
                    "p95": 143.457119,
                    "p99": 143.457119,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 625.4447749999999,
                    "min": 507.410576,
                    "p50": 546.400486,
                    "p95": 625.4447749999999,
                    "p99": 625.4447749999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 317.684378,
                    "min": 265.295483,
                    "p50": 277.452196,
                    "p95": 317.684378,
                    "p99": 317.684378,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 305.468522,
                    "min": 269.54612399999996,
                    "p50": 289.77038899999997,
                    "p95": 305.468522,
                    "p99": 305.468522,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 235.86095799999998,
                    "min": 181.588468,
                    "p50": 214.47014199999998,
                    "p95": 235.86095799999998,
                    "p99": 235.86095799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 333.903108,
                    "min": 229.224907,
                    "p50": 258.58433199999996,
                    "p95": 333.903108,
                    "p99": 333.903108,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 253.985459,
                    "min": 200.751563,
                    "p50": 225.14021699999998,
                    "p95": 253.985459,
                    "p99": 253.985459,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 140.97530899999998,
                    "min": 113.933825,
                    "p50": 138.634369,
                    "p95": 140.97530899999998,
                    "p99": 140.97530899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 212.716177,
                    "min": 159.064909,
                    "p50": 193.170683,
                    "p95": 212.716177,
                    "p99": 212.716177,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 401.16671299999996,
                    "min": 342.159741,
                    "p50": 371.953176,
                    "p95": 401.16671299999996,
                    "p99": 401.16671299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 444.791032,
                    "min": 372.53094999999996,
                    "p50": 422.383025,
                    "p95": 444.791032,
                    "p99": 444.791032,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 365.047173,
                    "min": 312.076529,
                    "p50": 337.189777,
                    "p95": 365.047173,
                    "p99": 365.047173,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 516.8975839999999,
                    "min": 400.54438799999997,
                    "p50": 482.854938,
                    "p95": 516.8975839999999,
                    "p99": 516.8975839999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 141.313537,
                    "min": 126.90587,
                    "p50": 137.875731,
                    "p95": 141.313537,
                    "p99": 141.313537,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 340.858636,
                    "min": 284.54301,
                    "p50": 321.481088,
                    "p95": 340.858636,
                    "p99": 340.858636,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 589.429191,
                    "min": 491.909836,
                    "p50": 540.963774,
                    "p95": 589.429191,
                    "p99": 589.429191,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 200.09819299999998,
                    "min": 178.730748,
                    "p50": 183.75704399999998,
                    "p95": 200.09819299999998,
                    "p99": 200.09819299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 238.05892999999998,
                    "min": 195.445437,
                    "p50": 225.70680299999998,
                    "p95": 238.05892999999998,
                    "p99": 238.05892999999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 233.31881299999998,
                    "min": 202.757401,
                    "p50": 210.154954,
                    "p95": 233.31881299999998,
                    "p99": 233.31881299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 170.303516,
                    "min": 139.243823,
                    "p50": 158.389938,
                    "p95": 170.303516,
                    "p99": 170.303516,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 315.094524,
                    "min": 242.259695,
                    "p50": 280.718601,
                    "p95": 315.094524,
                    "p99": 315.094524,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 277.831184,
                    "min": 265.177843,
                    "p50": 271.830518,
                    "p95": 277.831184,
                    "p99": 277.831184,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 118.18816699999999,
                    "min": 109.781219,
                    "p50": 116.65496399999999,
                    "p95": 118.18816699999999,
                    "p99": 118.18816699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 431.66668699999997,
                    "min": 323.150789,
                    "p50": 387.593663,
                    "p95": 431.66668699999997,
                    "p99": 431.66668699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2266.197321,
                    "min": 2222.4838959999997,
                    "p50": 2245.752287,
                    "p95": 2266.197321,
                    "p99": 2266.197321,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1383.6658169999998,
                    "min": 1345.0011339999999,
                    "p50": 1364.0694059999998,
                    "p95": 1383.6658169999998,
                    "p99": 1383.6658169999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1698.280767,
                    "min": 1642.263225,
                    "p50": 1668.072539,
                    "p95": 1698.280767,
                    "p99": 1698.280767,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1085.534469,
                    "min": 1042.303089,
                    "p50": 1082.973815,
                    "p95": 1085.534469,
                    "p99": 1085.534469,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 995.342193,
                    "min": 921.912437,
                    "p50": 945.2811009999999,
                    "p95": 995.342193,
                    "p99": 995.342193,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1557.245919,
                    "min": 1500.3432619999999,
                    "p50": 1512.964242,
                    "p95": 1557.245919,
                    "p99": 1557.245919,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 500.506912,
                    "min": 480.908774,
                    "p50": 490.85992899999997,
                    "p95": 500.506912,
                    "p99": 500.506912,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 646.0507329999999,
                    "min": 630.132153,
                    "p50": 639.7031089999999,
                    "p95": 646.0507329999999,
                    "p99": 646.0507329999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1296.0685449999999,
                    "min": 1217.377695,
                    "p50": 1228.455798,
                    "p95": 1296.0685449999999,
                    "p99": 1296.0685449999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 834.755443,
                    "min": 773.297879,
                    "p50": 784.108795,
                    "p95": 834.755443,
                    "p99": 834.755443,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3163.1828189999997,
                    "min": 2932.2777659999997,
                    "p50": 3000.0142029999997,
                    "p95": 3163.1828189999997,
                    "p99": 3163.1828189999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1870.4700389999998,
                    "min": 1779.213638,
                    "p50": 1841.586863,
                    "p95": 1870.4700389999998,
                    "p99": 1870.4700389999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2771.1906249999997,
                    "min": 2579.581625,
                    "p50": 2601.773846,
                    "p95": 2771.1906249999997,
                    "p99": 2771.1906249999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2151.552753,
                    "min": 2074.340589,
                    "p50": 2122.511299,
                    "p95": 2151.552753,
                    "p99": 2151.552753,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2006.932466,
                    "min": 1931.866675,
                    "p50": 1952.906524,
                    "p95": 2006.932466,
                    "p99": 2006.932466,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4577.131757,
                    "min": 4384.771672,
                    "p50": 4468.122178,
                    "p95": 4577.131757,
                    "p99": 4577.131757,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1006.291037,
                    "min": 989.718944,
                    "p50": 995.1934679999999,
                    "p95": 1006.291037,
                    "p99": 1006.291037,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 783.7798889999999,
                    "min": 732.70485,
                    "p50": 752.553601,
                    "p95": 783.7798889999999,
                    "p99": 783.7798889999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 877.435748,
                    "min": 854.1862309999999,
                    "p50": 870.089116,
                    "p95": 877.435748,
                    "p99": 877.435748,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1328.046259,
                    "min": 1307.188257,
                    "p50": 1309.6925959999999,
                    "p95": 1328.046259,
                    "p99": 1328.046259,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1192.497958,
                    "min": 1112.0639039999999,
                    "p50": 1165.597428,
                    "p95": 1192.497958,
                    "p99": 1192.497958,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 817.3693159999999,
                    "min": 805.915322,
                    "p50": 814.271068,
                    "p95": 817.3693159999999,
                    "p99": 817.3693159999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 266.857178,
                    "min": 226.23470799999998,
                    "p50": 244.323479,
                    "p95": 266.857178,
                    "p99": 266.857178,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 320.629349,
                    "min": 287.96900899999997,
                    "p50": 307.596886,
                    "p95": 320.629349,
                    "p99": 320.629349,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 728.491055,
                    "min": 676.406697,
                    "p50": 682.318175,
                    "p95": 728.491055,
                    "p99": 728.491055,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 457.60283699999997,
                    "min": 421.88306,
                    "p50": 428.077458,
                    "p95": 457.60283699999997,
                    "p99": 457.60283699999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 635.15584,
                    "min": 618.362937,
                    "p50": 624.768586,
                    "p95": 635.15584,
                    "p99": 635.15584,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 394.834303,
                    "min": 356.44060099999996,
                    "p50": 371.827502,
                    "p95": 394.834303,
                    "p99": 394.834303,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 946.683193,
                    "min": 926.700844,
                    "p50": 935.22646,
                    "p95": 946.683193,
                    "p99": 946.683193,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 603.80763,
                    "min": 536.60997,
                    "p50": 566.51071,
                    "p95": 603.80763,
                    "p99": 603.80763,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 501.67101399999996,
                    "min": 453.23320099999995,
                    "p50": 496.15140099999996,
                    "p95": 501.67101399999996,
                    "p99": 501.67101399999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 749.284905,
                    "min": 700.677595,
                    "p50": 715.641987,
                    "p95": 749.284905,
                    "p99": 749.284905,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 377.41596599999997,
                    "min": 307.873839,
                    "p50": 310.013661,
                    "p95": 377.41596599999997,
                    "p99": 377.41596599999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 585.769352,
                    "min": 570.529261,
                    "p50": 575.7859599999999,
                    "p95": 585.769352,
                    "p99": 585.769352,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 517.5876969999999,
                    "min": 503.08879099999996,
                    "p50": 508.03824599999996,
                    "p95": 517.5876969999999,
                    "p99": 517.5876969999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 450.466684,
                    "min": 431.245589,
                    "p50": 438.82152299999996,
                    "p95": 450.466684,
                    "p99": 450.466684,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1075.280205,
                    "min": 1021.403422,
                    "p50": 1032.995097,
                    "p95": 1075.280205,
                    "p99": 1075.280205,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 937.1114699999999,
                    "min": 894.5119629999999,
                    "p50": 900.987387,
                    "p95": 937.1114699999999,
                    "p99": 937.1114699999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1397.332844,
                    "min": 1342.985839,
                    "p50": 1353.138949,
                    "p95": 1397.332844,
                    "p99": 1397.332844,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2028.286965,
                    "min": 1987.9830969999998,
                    "p50": 1998.0750209999999,
                    "p95": 2028.286965,
                    "p99": 2028.286965,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 924.482798,
                    "min": 828.603651,
                    "p50": 843.1371879999999,
                    "p95": 924.482798,
                    "p99": 924.482798,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 423.938265,
                    "min": 370.55253,
                    "p50": 383.67997199999996,
                    "p95": 423.938265,
                    "p99": 423.938265,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 815.328408,
                    "min": 758.673137,
                    "p50": 772.235951,
                    "p95": 815.328408,
                    "p99": 815.328408,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.81070599999998,
                    "min": 243.766763,
                    "p50": 246.49394199999998,
                    "p95": 248.81070599999998,
                    "p99": 248.81070599999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1024.1922319999999,
                    "min": 966.082105,
                    "p50": 988.645984,
                    "p95": 1024.1922319999999,
                    "p99": 1024.1922319999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1191.5298109999999,
                    "min": 1183.6108689999999,
                    "p50": 1190.0300889999999,
                    "p95": 1191.5298109999999,
                    "p99": 1191.5298109999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 684.8663439999999,
                    "min": 594.646522,
                    "p50": 643.095246,
                    "p95": 684.8663439999999,
                    "p99": 684.8663439999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2550.8848009999997,
                    "min": 2450.763219,
                    "p50": 2499.790035,
                    "p95": 2550.8848009999997,
                    "p99": 2550.8848009999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 610.547096,
                    "min": 590.609072,
                    "p50": 602.100322,
                    "p95": 610.547096,
                    "p99": 610.547096,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 428.38874799999996,
                    "min": 403.911117,
                    "p50": 409.04947999999996,
                    "p95": 428.38874799999996,
                    "p99": 428.38874799999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 885.675623,
                    "min": 767.73887,
                    "p50": 793.233264,
                    "p95": 885.675623,
                    "p99": 885.675623,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.407418,
                    "min": 284.274176,
                    "p50": 295.726774,
                    "p95": 307.407418,
                    "p99": 307.407418,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1287.759867,
                    "min": 1247.258852,
                    "p50": 1254.561047,
                    "p95": 1287.759867,
                    "p99": 1287.759867,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 995.547817,
                    "min": 948.9147989999999,
                    "p50": 961.332189,
                    "p95": 995.547817,
                    "p99": 995.547817,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 928.215881,
                    "min": 890.168179,
                    "p50": 897.5343819999999,
                    "p95": 928.215881,
                    "p99": 928.215881,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 282.672708,
                    "min": 229.532346,
                    "p50": 233.943887,
                    "p95": 282.672708,
                    "p99": 282.672708,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 399.915693,
                    "min": 350.28045,
                    "p50": 357.777626,
                    "p95": 399.915693,
                    "p99": 399.915693,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1149.8794209999999,
                    "min": 1098.284224,
                    "p50": 1107.184468,
                    "p95": 1149.8794209999999,
                    "p99": 1149.8794209999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 547.4209069999999,
                    "min": 533.901919,
                    "p50": 538.7051349999999,
                    "p95": 547.4209069999999,
                    "p99": 547.4209069999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 767.350186,
                    "min": 713.900344,
                    "p50": 725.853308,
                    "p95": 767.350186,
                    "p99": 767.350186,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 524.3605269999999,
                    "min": 466.82433699999996,
                    "p50": 479.923571,
                    "p95": 524.3605269999999,
                    "p99": 524.3605269999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 856.098258,
                    "min": 834.2616439999999,
                    "p50": 845.753469,
                    "p95": 856.098258,
                    "p99": 856.098258,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1956.729108,
                    "min": 1850.8714029999999,
                    "p50": 1863.02344,
                    "p95": 1956.729108,
                    "p99": 1956.729108,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3097.544093,
                    "min": 3037.772309,
                    "p50": 3067.483749,
                    "p95": 3097.544093,
                    "p99": 3097.544093,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.6383119999999,
                    "min": 650.215738,
                    "p50": 663.021485,
                    "p95": 673.6383119999999,
                    "p99": 673.6383119999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 381.07498,
                    "min": 352.390135,
                    "p50": 358.94032899999996,
                    "p95": 381.07498,
                    "p99": 381.07498,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 960.249164,
                    "min": 914.184432,
                    "p50": 923.1467339999999,
                    "p95": 960.249164,
                    "p99": 960.249164,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1388.9756559999998,
                    "min": 1332.00395,
                    "p50": 1360.927888,
                    "p95": 1388.9756559999998,
                    "p99": 1388.9756559999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2225.5060719999997,
                    "min": 2191.187634,
                    "p50": 2219.292713,
                    "p95": 2225.5060719999997,
                    "p99": 2225.5060719999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1823.3524619999998,
                    "min": 1765.486938,
                    "p50": 1782.742063,
                    "p95": 1823.3524619999998,
                    "p99": 1823.3524619999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 400.67839499999997,
                    "min": 394.503105,
                    "p50": 398.800103,
                    "p95": 400.67839499999997,
                    "p99": 400.67839499999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 823.8190089999999,
                    "min": 805.520546,
                    "p50": 813.096096,
                    "p95": 823.8190089999999,
                    "p99": 823.8190089999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 324.83721399999996,
                    "min": 298.916244,
                    "p50": 310.843933,
                    "p95": 324.83721399999996,
                    "p99": 324.83721399999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 675.316787,
                    "min": 657.859797,
                    "p50": 666.5745099999999,
                    "p95": 675.316787,
                    "p99": 675.316787,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 717.6673129999999,
                    "min": 691.996825,
                    "p50": 708.235585,
                    "p95": 717.6673129999999,
                    "p99": 717.6673129999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 227.72572699999998,
                    "min": 217.10844699999998,
                    "p50": 225.412251,
                    "p95": 227.72572699999998,
                    "p99": 227.72572699999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 574.944481,
                    "min": 532.21446,
                    "p50": 539.071023,
                    "p95": 574.944481,
                    "p99": 574.944481,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 614.986938,
                    "min": 560.433573,
                    "p50": 575.38348,
                    "p95": 614.986938,
                    "p99": 614.986938,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 279.560999,
                    "min": 261.446108,
                    "p50": 268.434149,
                    "p95": 279.560999,
                    "p99": 279.560999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 218.51495899999998,
                    "min": 179.59383499999998,
                    "p50": 183.231935,
                    "p95": 218.51495899999998,
                    "p99": 218.51495899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 636.610152,
                    "min": 619.434001,
                    "p50": 622.751386,
                    "p95": 636.610152,
                    "p99": 636.610152,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 561.444088,
                    "min": 481.86375,
                    "p50": 488.715244,
                    "p95": 561.444088,
                    "p99": 561.444088,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 487.91304099999996,
                    "min": 436.500182,
                    "p50": 448.497093,
                    "p95": 487.91304099999996,
                    "p99": 487.91304099999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 720.992394,
                    "min": 659.169861,
                    "p50": 672.1080509999999,
                    "p95": 720.992394,
                    "p99": 720.992394,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1065.6094269999999,
                    "min": 1000.64517,
                    "p50": 1019.9895769999999,
                    "p95": 1065.6094269999999,
                    "p99": 1065.6094269999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 952.830607,
                    "min": 866.914544,
                    "p50": 887.621105,
                    "p95": 952.830607,
                    "p99": 952.830607,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 266.986746,
                    "min": 253.93982699999998,
                    "p50": 264.086794,
                    "p95": 266.986746,
                    "p99": 266.986746,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1465.377324,
                    "min": 1408.149251,
                    "p50": 1436.751031,
                    "p95": 1465.377324,
                    "p99": 1465.377324,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 650.883145,
                    "min": 591.618068,
                    "p50": 606.6206589999999,
                    "p95": 650.883145,
                    "p99": 650.883145,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 427.50922299999996,
                    "min": 385.95081899999997,
                    "p50": 393.755468,
                    "p95": 427.50922299999996,
                    "p99": 427.50922299999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 848.526252,
                    "min": 796.316561,
                    "p50": 806.8785489999999,
                    "p95": 848.526252,
                    "p99": 848.526252,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 556.915264,
                    "min": 451.767675,
                    "p50": 461.315727,
                    "p95": 556.915264,
                    "p99": 556.915264,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1302.979406,
                    "min": 1232.367141,
                    "p50": 1253.2958019999999,
                    "p95": 1302.979406,
                    "p99": 1302.979406,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 396.862803,
                    "min": 315.26991599999997,
                    "p50": 332.959269,
                    "p95": 396.862803,
                    "p99": 396.862803,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1116.820906,
                    "min": 1068.067511,
                    "p50": 1080.655012,
                    "p95": 1116.820906,
                    "p99": 1116.820906,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 559.945566,
                    "min": 519.100416,
                    "p50": 533.7666019999999,
                    "p95": 559.945566,
                    "p99": 559.945566,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 991.818542,
                    "min": 938.381979,
                    "p50": 953.523635,
                    "p95": 991.818542,
                    "p99": 991.818542,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 787.206602,
                    "min": 721.867991,
                    "p50": 742.3401799999999,
                    "p95": 787.206602,
                    "p99": 787.206602,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 325.152942,
                    "min": 290.16646099999997,
                    "p50": 300.834636,
                    "p95": 325.152942,
                    "p99": 325.152942,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 871.411116,
                    "min": 789.9725629999999,
                    "p50": 817.0544639999999,
                    "p95": 871.411116,
                    "p99": 871.411116,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 542.7710999999999,
                    "min": 489.668858,
                    "p50": 504.36896099999996,
                    "p95": 542.7710999999999,
                    "p99": 542.7710999999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 702.0502819999999,
                    "min": 694.710868,
                    "p50": 698.776489,
                    "p95": 702.0502819999999,
                    "p99": 702.0502819999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1139.9286299999999,
                    "min": 1034.024915,
                    "p50": 1053.676507,
                    "p95": 1139.9286299999999,
                    "p99": 1139.9286299999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 658.684924,
                    "min": 591.115926,
                    "p50": 599.765958,
                    "p95": 658.684924,
                    "p99": 658.684924,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 779.123512,
                    "min": 732.91548,
                    "p50": 756.234463,
                    "p95": 779.123512,
                    "p99": 779.123512,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1582.0777309999999,
                    "min": 1515.592262,
                    "p50": 1536.9943879999998,
                    "p95": 1582.0777309999999,
                    "p99": 1582.0777309999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 399.775243,
                    "min": 387.45768799999996,
                    "p50": 396.98832,
                    "p95": 399.775243,
                    "p99": 399.775243,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 203.37756399999998,
                    "min": 189.14693,
                    "p50": 201.357128,
                    "p95": 203.37756399999998,
                    "p99": 203.37756399999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 583.886319,
                    "min": 522.585171,
                    "p50": 545.969804,
                    "p95": 583.886319,
                    "p99": 583.886319,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 387.713863,
                    "min": 339.40064,
                    "p50": 353.832332,
                    "p95": 387.713863,
                    "p99": 387.713863,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.45021399999996,
                    "min": 241.02712799999998,
                    "p50": 260.80668199999997,
                    "p95": 286.45021399999996,
                    "p99": 286.45021399999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 468.780378,
                    "min": 440.439825,
                    "p50": 449.003535,
                    "p95": 468.780378,
                    "p99": 468.780378,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 957.977302,
                    "min": 900.5894599999999,
                    "p50": 920.163675,
                    "p95": 957.977302,
                    "p99": 957.977302,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 684.683014,
                    "min": 643.6939669999999,
                    "p50": 654.902144,
                    "p95": 684.683014,
                    "p99": 684.683014,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 809.1750549999999,
                    "min": 778.283743,
                    "p50": 800.0261909999999,
                    "p95": 809.1750549999999,
                    "p99": 809.1750549999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 968.555024,
                    "min": 902.101459,
                    "p50": 922.9651379999999,
                    "p95": 968.555024,
                    "p99": 968.555024,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1016.808733,
                    "min": 972.883154,
                    "p50": 980.29319,
                    "p95": 1016.808733,
                    "p99": 1016.808733,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 653.625085,
                    "min": 594.101998,
                    "p50": 613.5417279999999,
                    "p95": 653.625085,
                    "p99": 653.625085,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 463.937891,
                    "min": 415.113325,
                    "p50": 425.801859,
                    "p95": 463.937891,
                    "p99": 463.937891,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 603.004427,
                    "min": 535.7173399999999,
                    "p50": 560.84458,
                    "p95": 603.004427,
                    "p99": 603.004427,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 340.756739,
                    "min": 295.07534699999997,
                    "p50": 298.858141,
                    "p95": 340.756739,
                    "p99": 340.756739,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 382.470514,
                    "min": 350.26169999999996,
                    "p50": 363.289667,
                    "p95": 382.470514,
                    "p99": 382.470514,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 723.903838,
                    "min": 667.4491459999999,
                    "p50": 678.5677519999999,
                    "p95": 723.903838,
                    "p99": 723.903838,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 527.3184269999999,
                    "min": 441.41896299999996,
                    "p50": 484.474904,
                    "p95": 527.3184269999999,
                    "p99": 527.3184269999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1430.2553599999999,
                    "min": 1272.609172,
                    "p50": 1289.834284,
                    "p95": 1430.2553599999999,
                    "p99": 1430.2553599999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 853.2512529999999,
                    "min": 729.890985,
                    "p50": 738.8748019999999,
                    "p95": 853.2512529999999,
                    "p99": 853.2512529999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1197.241426,
                    "min": 1112.359536,
                    "p50": 1142.0523779999999,
                    "p95": 1197.241426,
                    "p99": 1197.241426,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 273.82210499999997,
                    "min": 234.319119,
                    "p50": 238.00145799999999,
                    "p95": 273.82210499999997,
                    "p99": 273.82210499999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 919.819121,
                    "min": 846.427859,
                    "p50": 860.546599,
                    "p95": 919.819121,
                    "p99": 919.819121,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 605.910566,
                    "min": 580.750822,
                    "p50": 587.6643809999999,
                    "p95": 605.910566,
                    "p99": 605.910566,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 401.546682,
                    "min": 309.08084299999996,
                    "p50": 317.19629299999997,
                    "p95": 401.546682,
                    "p99": 401.546682,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 242.68690099999998,
                    "min": 201.990218,
                    "p50": 230.29916799999998,
                    "p95": 242.68690099999998,
                    "p99": 242.68690099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.81492799999998,
                    "min": 177.696518,
                    "p50": 184.756926,
                    "p95": 228.81492799999998,
                    "p99": 228.81492799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 665.8636329999999,
                    "min": 613.909997,
                    "p50": 632.020591,
                    "p95": 665.8636329999999,
                    "p99": 665.8636329999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 757.118398,
                    "min": 711.1018789999999,
                    "p50": 717.639961,
                    "p95": 757.118398,
                    "p99": 757.118398,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 508.10085,
                    "min": 435.966707,
                    "p50": 453.13933399999996,
                    "p95": 508.10085,
                    "p99": 508.10085,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 946.378564,
                    "min": 907.2096789999999,
                    "p50": 933.09127,
                    "p95": 946.378564,
                    "p99": 946.378564,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 500.118475,
                    "min": 485.92069899999996,
                    "p50": 493.793165,
                    "p95": 500.118475,
                    "p99": 500.118475,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 452.228078,
                    "min": 335.405359,
                    "p50": 364.331736,
                    "p95": 452.228078,
                    "p99": 452.228078,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 891.5451519999999,
                    "min": 812.192599,
                    "p50": 826.189707,
                    "p95": 891.5451519999999,
                    "p99": 891.5451519999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.6631699999999,
                    "min": 645.190301,
                    "p50": 669.4938619999999,
                    "p95": 705.6631699999999,
                    "p99": 705.6631699999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 319.038685,
                    "min": 265.911985,
                    "p50": 273.767167,
                    "p95": 319.038685,
                    "p99": 319.038685,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 416.35743199999996,
                    "min": 396.646747,
                    "p50": 407.58095399999996,
                    "p95": 416.35743199999996,
                    "p99": 416.35743199999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1401.9645249999999,
                    "min": 1360.631637,
                    "p50": 1368.0834949999999,
                    "p95": 1401.9645249999999,
                    "p99": 1401.9645249999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 590.232993,
                    "min": 529.8409399999999,
                    "p50": 561.96566,
                    "p95": 590.232993,
                    "p99": 590.232993,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1840.896918,
                    "min": 1794.4564639999999,
                    "p50": 1832.3763999999999,
                    "p95": 1840.896918,
                    "p99": 1840.896918,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1076.925843,
                    "min": 945.3022139999999,
                    "p50": 1018.596335,
                    "p95": 1076.925843,
                    "p99": 1076.925843,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 552.088833,
                    "min": 498.540303,
                    "p50": 511.19190599999996,
                    "p95": 552.088833,
                    "p99": 552.088833,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1935.359479,
                    "min": 1877.4323539999998,
                    "p50": 1902.922185,
                    "p95": 1935.359479,
                    "p99": 1935.359479,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1388.579043,
                    "min": 1290.017679,
                    "p50": 1343.81693,
                    "p95": 1388.579043,
                    "p99": 1388.579043,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 610.659256,
                    "min": 568.903015,
                    "p50": 602.340436,
                    "p95": 610.659256,
                    "p99": 610.659256,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1447.37428,
                    "min": 1421.227635,
                    "p50": 1436.4732099999999,
                    "p95": 1447.37428,
                    "p99": 1447.37428,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 705.238628,
                    "min": 683.503296,
                    "p50": 697.9364489999999,
                    "p95": 705.238628,
                    "p99": 705.238628,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1203.759766,
                    "min": 1133.925696,
                    "p50": 1166.873508,
                    "p95": 1203.759766,
                    "p99": 1203.759766,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 965.1578139999999,
                    "min": 865.476607,
                    "p50": 903.953639,
                    "p95": 965.1578139999999,
                    "p99": 965.1578139999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1297.281816,
                    "min": 1234.233281,
                    "p50": 1246.7087729999998,
                    "p95": 1297.281816,
                    "p99": 1297.281816,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1704.990891,
                    "min": 1634.632553,
                    "p50": 1661.45218,
                    "p95": 1704.990891,
                    "p99": 1704.990891,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 833.49698,
                    "min": 780.588994,
                    "p50": 789.832265,
                    "p95": 833.49698,
                    "p99": 833.49698,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1154.939259,
                    "min": 1052.368444,
                    "p50": 1066.531235,
                    "p95": 1154.939259,
                    "p99": 1154.939259,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 366.85382,
                    "min": 317.718462,
                    "p50": 330.136155,
                    "p95": 366.85382,
                    "p99": 366.85382,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 436.61293,
                    "min": 404.302616,
                    "p50": 415.49746,
                    "p95": 436.61293,
                    "p99": 436.61293,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 622.606127,
                    "min": 554.109069,
                    "p50": 568.581813,
                    "p95": 622.606127,
                    "p99": 622.606127,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 277.518322,
                    "min": 249.234907,
                    "p50": 254.813246,
                    "p95": 277.518322,
                    "p99": 277.518322,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 713.395105,
                    "min": 644.45169,
                    "p50": 671.426189,
                    "p95": 713.395105,
                    "p99": 713.395105,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 840.456949,
                    "min": 762.2098609999999,
                    "p50": 787.996683,
                    "p95": 840.456949,
                    "p99": 840.456949,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 379.104339,
                    "min": 305.287287,
                    "p50": 309.926875,
                    "p95": 379.104339,
                    "p99": 379.104339,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 562.822277,
                    "min": 503.39662799999996,
                    "p50": 514.947286,
                    "p95": 562.822277,
                    "p99": 562.822277,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 533.7227849999999,
                    "min": 453.731367,
                    "p50": 463.800511,
                    "p95": 533.7227849999999,
                    "p99": 533.7227849999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 370.114288,
                    "min": 357.08838099999997,
                    "p50": 359.342994,
                    "p95": 370.114288,
                    "p99": 370.114288,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 230.77306299999998,
                    "min": 166.379293,
                    "p50": 212.51479799999998,
                    "p95": 230.77306299999998,
                    "p99": 230.77306299999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 991.999376,
                    "min": 932.832861,
                    "p50": 946.52546,
                    "p95": 991.999376,
                    "p99": 991.999376,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 664.941564,
                    "min": 605.9368049999999,
                    "p50": 622.8815099999999,
                    "p95": 664.941564,
                    "p99": 664.941564,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 729.4555379999999,
                    "min": 709.777419,
                    "p50": 718.371167,
                    "p95": 729.4555379999999,
                    "p99": 729.4555379999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1113.370909,
                    "min": 1068.145781,
                    "p50": 1087.3228179999999,
                    "p95": 1113.370909,
                    "p99": 1113.370909,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 923.1016209999999,
                    "min": 809.2508419999999,
                    "p50": 821.241033,
                    "p95": 923.1016209999999,
                    "p99": 923.1016209999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 457.555837,
                    "min": 401.029085,
                    "p50": 409.130005,
                    "p95": 457.555837,
                    "p99": 457.555837,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1173.244563,
                    "min": 1123.265533,
                    "p50": 1142.659578,
                    "p95": 1173.244563,
                    "p99": 1173.244563,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 697.546016,
                    "min": 661.143478,
                    "p50": 675.6019779999999,
                    "p95": 697.546016,
                    "p99": 697.546016,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 947.4020479999999,
                    "min": 915.807643,
                    "p50": 922.567828,
                    "p95": 947.4020479999999,
                    "p99": 947.4020479999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1052.004364,
                    "min": 970.279549,
                    "p50": 987.875647,
                    "p95": 1052.004364,
                    "p99": 1052.004364,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1337.075584,
                    "min": 1283.4642099999999,
                    "p50": 1322.662463,
                    "p95": 1337.075584,
                    "p99": 1337.075584,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 783.348798,
                    "min": 723.221176,
                    "p50": 741.81804,
                    "p95": 783.348798,
                    "p99": 783.348798,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 427.03227799999996,
                    "min": 413.53464199999996,
                    "p50": 419.635715,
                    "p95": 427.03227799999996,
                    "p99": 427.03227799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 591.552269,
                    "min": 540.381165,
                    "p50": 560.462165,
                    "p95": 591.552269,
                    "p99": 591.552269,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 890.0383549999999,
                    "min": 855.99068,
                    "p50": 873.518079,
                    "p95": 890.0383549999999,
                    "p99": 890.0383549999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 826.276578,
                    "min": 789.3498979999999,
                    "p50": 799.847779,
                    "p95": 826.276578,
                    "p99": 826.276578,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1959.8047669999999,
                    "min": 1854.031242,
                    "p50": 1926.63034,
                    "p95": 1959.8047669999999,
                    "p99": 1959.8047669999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 487.131673,
                    "min": 468.14305099999996,
                    "p50": 483.84984499999996,
                    "p95": 487.131673,
                    "p99": 487.131673,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 268.421246,
                    "min": 196.285561,
                    "p50": 242.414165,
                    "p95": 268.421246,
                    "p99": 268.421246,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 370.850909,
                    "min": 356.583239,
                    "p50": 362.668118,
                    "p95": 370.850909,
                    "p99": 370.850909,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 654.439792,
                    "min": 604.677099,
                    "p50": 618.45092,
                    "p95": 654.439792,
                    "p99": 654.439792,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.536807,
                    "min": 290.996402,
                    "p50": 300.538728,
                    "p95": 322.536807,
                    "p99": 322.536807,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1085.120651,
                    "min": 1056.1893049999999,
                    "p50": 1069.406409,
                    "p95": 1085.120651,
                    "p99": 1085.120651,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 529.223521,
                    "min": 512.7518739999999,
                    "p50": 524.689395,
                    "p95": 529.223521,
                    "p99": 529.223521,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 266.418752,
                    "min": 214.80237499999998,
                    "p50": 255.248193,
                    "p95": 266.418752,
                    "p99": 266.418752,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 363.428841,
                    "min": 319.521705,
                    "p50": 322.09031999999996,
                    "p95": 363.428841,
                    "p99": 363.428841,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 740.925028,
                    "min": 719.139922,
                    "p50": 727.833797,
                    "p95": 740.925028,
                    "p99": 740.925028,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 469.34610499999997,
                    "min": 448.419758,
                    "p50": 455.096842,
                    "p95": 469.34610499999997,
                    "p99": 469.34610499999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1478.853249,
                    "min": 1381.0853869999999,
                    "p50": 1396.9820809999999,
                    "p95": 1478.853249,
                    "p99": 1478.853249,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 393.628936,
                    "min": 376.08948499999997,
                    "p50": 388.839765,
                    "p95": 393.628936,
                    "p99": 393.628936,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 809.589382,
                    "min": 783.8281089999999,
                    "p50": 794.52334,
                    "p95": 809.589382,
                    "p99": 809.589382,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 638.146426,
                    "min": 583.301773,
                    "p50": 595.641365,
                    "p95": 638.146426,
                    "p99": 638.146426,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 917.878342,
                    "min": 850.295928,
                    "p50": 862.642792,
                    "p95": 917.878342,
                    "p99": 917.878342,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 970.206741,
                    "min": 923.701062,
                    "p50": 927.786035,
                    "p95": 970.206741,
                    "p99": 970.206741,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1289.448116,
                    "min": 1211.502872,
                    "p50": 1239.7854089999998,
                    "p95": 1289.448116,
                    "p99": 1289.448116,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1128.680865,
                    "min": 975.867175,
                    "p50": 989.981222,
                    "p95": 1128.680865,
                    "p99": 1128.680865,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 668.4368549999999,
                    "min": 650.5545079999999,
                    "p50": 656.124164,
                    "p95": 668.4368549999999,
                    "p99": 668.4368549999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 258.851366,
                    "min": 253.183281,
                    "p50": 255.34685299999998,
                    "p95": 258.851366,
                    "p99": 258.851366,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 870.5151569999999,
                    "min": 787.22565,
                    "p50": 818.0475349999999,
                    "p95": 870.5151569999999,
                    "p99": 870.5151569999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 690.280581,
                    "min": 606.390803,
                    "p50": 647.219371,
                    "p95": 690.280581,
                    "p99": 690.280581,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 577.081102,
                    "min": 499.49753899999996,
                    "p50": 516.301894,
                    "p95": 577.081102,
                    "p99": 577.081102,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 402.140602,
                    "min": 317.78894299999996,
                    "p50": 362.611965,
                    "p95": 402.140602,
                    "p99": 402.140602,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.24470399999998,
                    "min": 196.343613,
                    "p50": 205.071532,
                    "p95": 222.24470399999998,
                    "p99": 222.24470399999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 328.718276,
                    "min": 297.952504,
                    "p50": 309.45554799999996,
                    "p95": 328.718276,
                    "p99": 328.718276,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 775.840599,
                    "min": 762.251372,
                    "p50": 773.085105,
                    "p95": 775.840599,
                    "p99": 775.840599,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 982.317599,
                    "min": 939.46317,
                    "p50": 953.6502009999999,
                    "p95": 982.317599,
                    "p99": 982.317599,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 419.07438199999996,
                    "min": 403.389295,
                    "p50": 410.995934,
                    "p95": 419.07438199999996,
                    "p99": 419.07438199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 613.2650639999999,
                    "min": 559.764577,
                    "p50": 574.394731,
                    "p95": 613.2650639999999,
                    "p99": 613.2650639999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1172.581855,
                    "min": 1067.548752,
                    "p50": 1079.869,
                    "p95": 1172.581855,
                    "p99": 1172.581855,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 706.907736,
                    "min": 667.5901759999999,
                    "p50": 672.217194,
                    "p95": 706.907736,
                    "p99": 706.907736,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 506.62182099999995,
                    "min": 456.61672,
                    "p50": 467.53247899999997,
                    "p95": 506.62182099999995,
                    "p99": 506.62182099999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 776.5335719999999,
                    "min": 711.704345,
                    "p50": 720.990867,
                    "p95": 776.5335719999999,
                    "p99": 776.5335719999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2271.2646489999997,
                    "min": 2171.8767789999997,
                    "p50": 2204.79633,
                    "p95": 2271.2646489999997,
                    "p99": 2271.2646489999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1239.043212,
                    "min": 1180.70054,
                    "p50": 1199.3423659999999,
                    "p95": 1239.043212,
                    "p99": 1239.043212,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1502.424604,
                    "min": 1466.496815,
                    "p50": 1482.302128,
                    "p95": 1502.424604,
                    "p99": 1502.424604,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1646.935477,
                    "min": 1602.9783069999999,
                    "p50": 1624.598145,
                    "p95": 1646.935477,
                    "p99": 1646.935477,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2068.61674,
                    "min": 2020.11178,
                    "p50": 2056.2449469999997,
                    "p95": 2068.61674,
                    "p99": 2068.61674,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1944.054708,
                    "min": 1883.8006799999998,
                    "p50": 1912.348994,
                    "p95": 1944.054708,
                    "p99": 1944.054708,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 638.1308,
                    "min": 614.3528259999999,
                    "p50": 623.9524799999999,
                    "p95": 638.1308,
                    "p99": 638.1308,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1342.332674,
                    "min": 1318.664843,
                    "p50": 1335.2327719999998,
                    "p95": 1342.332674,
                    "p99": 1342.332674,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1769.19797,
                    "min": 1736.1645389999999,
                    "p50": 1760.4237449999998,
                    "p95": 1769.19797,
                    "p99": 1769.19797,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2572.577602,
                    "min": 2501.462377,
                    "p50": 2538.986906,
                    "p95": 2572.577602,
                    "p99": 2572.577602,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 776.921604,
                    "min": 758.819092,
                    "p50": 767.647823,
                    "p95": 776.921604,
                    "p99": 776.921604,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1054.936578,
                    "min": 1030.528198,
                    "p50": 1046.021845,
                    "p95": 1054.936578,
                    "p99": 1054.936578,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 489.106067,
                    "min": 469.97126699999995,
                    "p50": 476.823565,
                    "p95": 489.106067,
                    "p99": 489.106067,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 959.893704,
                    "min": 900.1141409999999,
                    "p50": 904.2894749999999,
                    "p95": 959.893704,
                    "p99": 959.893704,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2977.179177,
                    "min": 2868.012083,
                    "p50": 2886.234476,
                    "p95": 2977.179177,
                    "p99": 2977.179177,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2882.20666,
                    "min": 2831.272281,
                    "p50": 2846.553658,
                    "p95": 2882.20666,
                    "p99": 2882.20666,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2028.884891,
                    "min": 1978.314637,
                    "p50": 2000.8675939999998,
                    "p95": 2028.884891,
                    "p99": 2028.884891,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1768.288429,
                    "min": 1715.736486,
                    "p50": 1737.7296749999998,
                    "p95": 1768.288429,
                    "p99": 1768.288429,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1367.2602009999998,
                    "min": 1299.321997,
                    "p50": 1320.993933,
                    "p95": 1367.2602009999998,
                    "p99": 1367.2602009999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1215.852516,
                    "min": 1163.319663,
                    "p50": 1180.738042,
                    "p95": 1215.852516,
                    "p99": 1215.852516,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 931.707863,
                    "min": 866.168148,
                    "p50": 891.8106889999999,
                    "p95": 931.707863,
                    "p99": 931.707863,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1871.3118709999999,
                    "min": 1836.388373,
                    "p50": 1865.491533,
                    "p95": 1871.3118709999999,
                    "p99": 1871.3118709999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 627.971997,
                    "min": 561.968137,
                    "p50": 608.696102,
                    "p95": 627.971997,
                    "p99": 627.971997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1617.283634,
                    "min": 1543.630144,
                    "p50": 1592.7566689999999,
                    "p95": 1617.283634,
                    "p99": 1617.283634,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 760.863121,
                    "min": 739.820115,
                    "p50": 749.799956,
                    "p95": 760.863121,
                    "p99": 760.863121,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2551.882588,
                    "min": 2474.129971,
                    "p50": 2544.046869,
                    "p95": 2551.882588,
                    "p99": 2551.882588,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 485.26402199999995,
                    "min": 463.76368299999996,
                    "p50": 473.84304299999997,
                    "p95": 485.26402199999995,
                    "p99": 485.26402199999995,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1062.319381,
                    "min": 1007.370641,
                    "p50": 1019.978442,
                    "p95": 1062.319381,
                    "p99": 1062.319381,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2197.5413289999997,
                    "min": 2119.046488,
                    "p50": 2163.2350619999997,
                    "p95": 2197.5413289999997,
                    "p99": 2197.5413289999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1462.190899,
                    "min": 1432.398242,
                    "p50": 1445.075191,
                    "p95": 1462.190899,
                    "p99": 1462.190899,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1591.585838,
                    "min": 1489.634961,
                    "p50": 1515.0589619999998,
                    "p95": 1591.585838,
                    "p99": 1591.585838,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 864.039079,
                    "min": 835.785171,
                    "p50": 852.175357,
                    "p95": 864.039079,
                    "p99": 864.039079,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 746.098544,
                    "min": 703.8117179999999,
                    "p50": 712.8536819999999,
                    "p95": 746.098544,
                    "p99": 746.098544,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1403.730959,
                    "min": 1357.6926389999999,
                    "p50": 1377.3422679999999,
                    "p95": 1403.730959,
                    "p99": 1403.730959,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2730.277799,
                    "min": 2658.860523,
                    "p50": 2696.173163,
                    "p95": 2730.277799,
                    "p99": 2730.277799,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 599.0153849999999,
                    "min": 574.225497,
                    "p50": 583.5007009999999,
                    "p95": 599.0153849999999,
                    "p99": 599.0153849999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1017.847907,
                    "min": 956.206008,
                    "p50": 978.633476,
                    "p95": 1017.847907,
                    "p99": 1017.847907,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 471.315741,
                    "min": 440.43974399999996,
                    "p50": 447.111038,
                    "p95": 471.315741,
                    "p99": 471.315741,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2045.8055109999998,
                    "min": 1991.2637209999998,
                    "p50": 2014.2115059999999,
                    "p95": 2045.8055109999998,
                    "p99": 2045.8055109999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1954.386211,
                    "min": 1879.996557,
                    "p50": 1903.093936,
                    "p95": 1954.386211,
                    "p99": 1954.386211,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1711.306055,
                    "min": 1605.873728,
                    "p50": 1636.4175699999998,
                    "p95": 1711.306055,
                    "p99": 1711.306055,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1830.7751979999998,
                    "min": 1731.596491,
                    "p50": 1779.6756349999998,
                    "p95": 1830.7751979999998,
                    "p99": 1830.7751979999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1284.293705,
                    "min": 1231.8972119999999,
                    "p50": 1250.6420659999999,
                    "p95": 1284.293705,
                    "p99": 1284.293705,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2400.9714289999997,
                    "min": 2332.6537909999997,
                    "p50": 2358.470458,
                    "p95": 2400.9714289999997,
                    "p99": 2400.9714289999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1150.938065,
                    "min": 1101.5119519999998,
                    "p50": 1118.0937239999998,
                    "p95": 1150.938065,
                    "p99": 1150.938065,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 860.485197,
                    "min": 804.2580849999999,
                    "p50": 819.4472049999999,
                    "p95": 860.485197,
                    "p99": 860.485197,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 554.7802459999999,
                    "min": 454.079506,
                    "p50": 467.53943799999996,
                    "p95": 554.7802459999999,
                    "p99": 554.7802459999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 958.1441219999999,
                    "min": 920.647914,
                    "p50": 940.234252,
                    "p95": 958.1441219999999,
                    "p99": 958.1441219999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1086.565746,
                    "min": 1063.808528,
                    "p50": 1072.974128,
                    "p95": 1086.565746,
                    "p99": 1086.565746,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 258.225614,
                    "min": 217.969675,
                    "p50": 227.93593099999998,
                    "p95": 258.225614,
                    "p99": 258.225614,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 803.013434,
                    "min": 740.2669199999999,
                    "p50": 761.976002,
                    "p95": 803.013434,
                    "p99": 803.013434,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 412.909542,
                    "min": 397.041833,
                    "p50": 409.328921,
                    "p95": 412.909542,
                    "p99": 412.909542,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 303.145048,
                    "min": 276.378622,
                    "p50": 287.171855,
                    "p95": 303.145048,
                    "p99": 303.145048,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1839.879242,
                    "min": 1796.684088,
                    "p50": 1819.894321,
                    "p95": 1839.879242,
                    "p99": 1839.879242,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 637.549252,
                    "min": 582.352749,
                    "p50": 601.411923,
                    "p95": 637.549252,
                    "p99": 637.549252,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 778.8304109999999,
                    "min": 692.398141,
                    "p50": 701.384222,
                    "p95": 778.8304109999999,
                    "p99": 778.8304109999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1028.754395,
                    "min": 862.1409219999999,
                    "p50": 875.941879,
                    "p95": 1028.754395,
                    "p99": 1028.754395,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 352.995979,
                    "min": 335.35414099999997,
                    "p50": 347.142386,
                    "p95": 352.995979,
                    "p99": 352.995979,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3014.177009,
                    "min": 2977.599902,
                    "p50": 3002.280801,
                    "p95": 3014.177009,
                    "p99": 3014.177009,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1298.273966,
                    "min": 1221.258134,
                    "p50": 1239.478782,
                    "p95": 1298.273966,
                    "p99": 1298.273966,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 660.7677249999999,
                    "min": 626.3650769999999,
                    "p50": 641.446019,
                    "p95": 660.7677249999999,
                    "p99": 660.7677249999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 533.223946,
                    "min": 509.494848,
                    "p50": 521.840792,
                    "p95": 533.223946,
                    "p99": 533.223946,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2439.331715,
                    "min": 2382.084384,
                    "p50": 2395.960086,
                    "p95": 2439.331715,
                    "p99": 2439.331715,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1080.7384829999999,
                    "min": 1055.0848799999999,
                    "p50": 1070.842846,
                    "p95": 1080.7384829999999,
                    "p99": 1080.7384829999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 402.16106399999995,
                    "min": 334.970145,
                    "p50": 359.350421,
                    "p95": 402.16106399999995,
                    "p99": 402.16106399999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 763.9371189999999,
                    "min": 678.217076,
                    "p50": 726.721903,
                    "p95": 763.9371189999999,
                    "p99": 763.9371189999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 526.044848,
                    "min": 505.504914,
                    "p50": 513.873187,
                    "p95": 526.044848,
                    "p99": 526.044848,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 606.366804,
                    "min": 554.147666,
                    "p50": 568.789047,
                    "p95": 606.366804,
                    "p99": 606.366804,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 269.504934,
                    "min": 200.951956,
                    "p50": 235.14784799999998,
                    "p95": 269.504934,
                    "p99": 269.504934,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 616.854167,
                    "min": 608.5636519999999,
                    "p50": 614.179627,
                    "p95": 616.854167,
                    "p99": 616.854167,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 347.792087,
                    "min": 262.48544499999997,
                    "p50": 305.674079,
                    "p95": 347.792087,
                    "p99": 347.792087,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 779.130461,
                    "min": 757.500202,
                    "p50": 769.7879459999999,
                    "p95": 779.130461,
                    "p99": 779.130461,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 509.07892599999997,
                    "min": 448.848286,
                    "p50": 464.249368,
                    "p95": 509.07892599999997,
                    "p99": 509.07892599999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 987.0499209999999,
                    "min": 939.285452,
                    "p50": 943.9792699999999,
                    "p95": 987.0499209999999,
                    "p99": 987.0499209999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 704.668472,
                    "min": 663.12866,
                    "p50": 667.036509,
                    "p95": 704.668472,
                    "p99": 704.668472,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 413.87681699999996,
                    "min": 402.27475999999996,
                    "p50": 408.799554,
                    "p95": 413.87681699999996,
                    "p99": 413.87681699999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 292.298772,
                    "min": 251.986012,
                    "p50": 258.304471,
                    "p95": 292.298772,
                    "p99": 292.298772,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 875.9025869999999,
                    "min": 813.462316,
                    "p50": 824.6667759999999,
                    "p95": 875.9025869999999,
                    "p99": 875.9025869999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1617.233559,
                    "min": 1568.7512359999998,
                    "p50": 1584.9672249999999,
                    "p95": 1617.233559,
                    "p99": 1617.233559,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 529.326557,
                    "min": 491.45303099999995,
                    "p50": 504.902941,
                    "p95": 529.326557,
                    "p99": 529.326557,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 582.8451759999999,
                    "min": 533.213044,
                    "p50": 567.052108,
                    "p95": 582.8451759999999,
                    "p99": 582.8451759999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 318.722131,
                    "min": 298.46196399999997,
                    "p50": 305.828621,
                    "p95": 318.722131,
                    "p99": 318.722131,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 457.77763999999996,
                    "min": 443.714336,
                    "p50": 451.812932,
                    "p95": 457.77763999999996,
                    "p99": 457.77763999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 759.8167599999999,
                    "min": 744.132,
                    "p50": 751.9970569999999,
                    "p95": 759.8167599999999,
                    "p99": 759.8167599999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 202.06253999999998,
                    "min": 189.3816,
                    "p50": 200.811118,
                    "p95": 202.06253999999998,
                    "p99": 202.06253999999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1736.7319009999999,
                    "min": 1536.360661,
                    "p50": 1556.7914019999998,
                    "p95": 1736.7319009999999,
                    "p99": 1736.7319009999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 622.078677,
                    "min": 595.483527,
                    "p50": 603.297235,
                    "p95": 622.078677,
                    "p99": 622.078677,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 724.533383,
                    "min": 693.518151,
                    "p50": 704.0999949999999,
                    "p95": 724.533383,
                    "p99": 724.533383,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 369.19622,
                    "min": 347.557949,
                    "p50": 355.030077,
                    "p95": 369.19622,
                    "p99": 369.19622,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1011.03163,
                    "min": 922.336997,
                    "p50": 959.990006,
                    "p95": 1011.03163,
                    "p99": 1011.03163,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 688.179208,
                    "min": 647.8025749999999,
                    "p50": 657.0388409999999,
                    "p95": 688.179208,
                    "p99": 688.179208,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 421.175845,
                    "min": 394.638808,
                    "p50": 402.08759699999996,
                    "p95": 421.175845,
                    "p99": 421.175845,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2087.290298,
                    "min": 1998.767196,
                    "p50": 2049.067401,
                    "p95": 2087.290298,
                    "p99": 2087.290298,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 261.999323,
                    "min": 231.359453,
                    "p50": 250.355538,
                    "p95": 261.999323,
                    "p99": 261.999323,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 811.300883,
                    "min": 796.668182,
                    "p50": 803.3101019999999,
                    "p95": 811.300883,
                    "p99": 811.300883,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1105.916869,
                    "min": 1043.568166,
                    "p50": 1061.643891,
                    "p95": 1105.916869,
                    "p99": 1105.916869,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 180.900912,
                    "min": 169.28491,
                    "p50": 177.656396,
                    "p95": 180.900912,
                    "p99": 180.900912,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 164.846782,
                    "min": 144.057032,
                    "p50": 163.961085,
                    "p95": 164.846782,
                    "p99": 164.846782,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 249.407243,
                    "min": 210.068175,
                    "p50": 246.54066899999998,
                    "p95": 249.407243,
                    "p99": 249.407243,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 221.34276799999998,
                    "min": 217.277583,
                    "p50": 220.786956,
                    "p95": 221.34276799999998,
                    "p99": 221.34276799999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.65857599999998,
                    "min": 140.861034,
                    "p50": 177.849788,
                    "p95": 179.65857599999998,
                    "p99": 179.65857599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 207.262185,
                    "min": 169.127791,
                    "p50": 204.556569,
                    "p95": 207.262185,
                    "p99": 207.262185,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.445552,
                    "min": 227.945492,
                    "p50": 232.894885,
                    "p95": 236.445552,
                    "p99": 236.445552,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.1846,
                    "min": 42.680713999999995,
                    "p50": 80.393671,
                    "p95": 81.1846,
                    "p99": 81.1846,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.193319,
                    "min": 56.749230999999995,
                    "p50": 94.26195299999999,
                    "p95": 100.193319,
                    "p99": 100.193319,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.760115,
                    "min": 103.874286,
                    "p50": 107.60593899999999,
                    "p95": 109.760115,
                    "p99": 109.760115,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 321.334447,
                    "min": 314.311832,
                    "p50": 319.345674,
                    "p95": 321.334447,
                    "p99": 321.334447,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.466612,
                    "min": 120.54994599999999,
                    "p50": 123.301637,
                    "p95": 124.466612,
                    "p99": 124.466612,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.475949,
                    "min": 279.52763699999997,
                    "p50": 283.004581,
                    "p95": 283.475949,
                    "p99": 283.475949,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.018432,
                    "min": 118.172041,
                    "p50": 151.59027,
                    "p95": 152.018432,
                    "p99": 152.018432,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.939277,
                    "min": 99.33621699999999,
                    "p50": 136.433393,
                    "p95": 136.939277,
                    "p99": 136.939277,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 94.03541899999999,
                    "min": 69.115828,
                    "p50": 92.592019,
                    "p95": 94.03541899999999,
                    "p99": 94.03541899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 162.022333,
                    "min": 126.5702,
                    "p50": 151.056775,
                    "p95": 162.022333,
                    "p99": 162.022333,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 199.979288,
                    "min": 158.117141,
                    "p50": 189.531669,
                    "p95": 199.979288,
                    "p99": 199.979288,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 50.997378,
                    "min": 46.053155,
                    "p50": 50.509212,
                    "p95": 50.997378,
                    "p99": 50.997378,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 99.66842899999999,
                    "min": 91.165934,
                    "p50": 95.77738099999999,
                    "p95": 99.66842899999999,
                    "p99": 99.66842899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 180.588041,
                    "min": 142.016947,
                    "p50": 176.920167,
                    "p95": 180.588041,
                    "p99": 180.588041,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 41.368809999999996,
                    "min": 39.189889,
                    "p50": 40.536221999999995,
                    "p95": 41.368809999999996,
                    "p99": 41.368809999999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 70.695567,
                    "min": 63.819002,
                    "p50": 69.502347,
                    "p95": 70.695567,
                    "p99": 70.695567,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 79.520675,
                    "min": 75.810006,
                    "p50": 79.04742,
                    "p95": 79.520675,
                    "p99": 79.520675,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 247.24005,
                    "min": 216.88518399999998,
                    "p50": 221.48245,
                    "p95": 247.24005,
                    "p99": 247.24005,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 308.332856,
                    "min": 272.332201,
                    "p50": 286.70202,
                    "p95": 308.332856,
                    "p99": 308.332856,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 110.08968899999999,
                    "min": 85.922302,
                    "p50": 107.99677199999999,
                    "p95": 110.08968899999999,
                    "p99": 110.08968899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 653.550343,
                    "min": 642.1515039999999,
                    "p50": 645.6453339999999,
                    "p95": 653.550343,
                    "p99": 653.550343,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 36.564799,
                    "min": 29.646645999999997,
                    "p50": 31.943483999999998,
                    "p95": 36.564799,
                    "p99": 36.564799,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 62.293042,
                    "min": 55.392058999999996,
                    "p50": 59.544791999999994,
                    "p95": 62.293042,
                    "p99": 62.293042,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 377.27154099999996,
                    "min": 342.471882,
                    "p50": 368.142865,
                    "p95": 377.27154099999996,
                    "p99": 377.27154099999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 156.289569,
                    "min": 130.51492299999998,
                    "p50": 147.489004,
                    "p95": 156.289569,
                    "p99": 156.289569,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 144.360369,
                    "min": 125.972697,
                    "p50": 142.985221,
                    "p95": 144.360369,
                    "p99": 144.360369,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 157.648763,
                    "min": 143.94776,
                    "p50": 155.65518,
                    "p95": 157.648763,
                    "p99": 157.648763,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.04955299999999,
                    "min": 78.541635,
                    "p50": 97.1109,
                    "p95": 102.04955299999999,
                    "p99": 102.04955299999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 390.460875,
                    "min": 368.762023,
                    "p50": 387.379163,
                    "p95": 390.460875,
                    "p99": 390.460875,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 244.03992699999998,
                    "min": 230.85162,
                    "p50": 241.72874,
                    "p95": 244.03992699999998,
                    "p99": 244.03992699999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.51609399999998,
                    "min": 168.94952899999998,
                    "p50": 188.905295,
                    "p95": 194.51609399999998,
                    "p99": 194.51609399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 178.950942,
                    "min": 139.806707,
                    "p50": 176.94106599999998,
                    "p95": 178.950942,
                    "p99": 178.950942,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.831181,
                    "min": 81.92428,
                    "p50": 120.160573,
                    "p95": 120.831181,
                    "p99": 120.831181,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 273.197268,
                    "min": 233.393531,
                    "p50": 272.25253399999997,
                    "p95": 273.197268,
                    "p99": 273.197268,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 68.72535599999999,
                    "min": 35.577007,
                    "p50": 68.587357,
                    "p95": 68.72535599999999,
                    "p99": 68.72535599999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 213.711638,
                    "min": 205.88438499999998,
                    "p50": 212.383606,
                    "p95": 213.711638,
                    "p99": 213.711638,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.58705799999998,
                    "min": 93.434624,
                    "p50": 131.316202,
                    "p95": 132.58705799999998,
                    "p99": 132.58705799999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.18418899999999,
                    "min": 100.80917,
                    "p50": 108.270465,
                    "p95": 109.18418899999999,
                    "p99": 109.18418899999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.389169,
                    "min": 71.546551,
                    "p50": 85.13802,
                    "p95": 86.389169,
                    "p99": 86.389169,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 205.998435,
                    "min": 194.798906,
                    "p50": 201.325505,
                    "p95": 205.998435,
                    "p99": 205.998435,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 287.315311,
                    "min": 281.840764,
                    "p50": 283.178736,
                    "p95": 287.315311,
                    "p99": 287.315311,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.79023,
                    "min": 62.920424,
                    "p50": 81.280778,
                    "p95": 81.79023,
                    "p99": 81.79023,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.153977,
                    "min": 203.982809,
                    "p50": 205.874599,
                    "p95": 211.153977,
                    "p99": 211.153977,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.115769,
                    "min": 211.06264299999998,
                    "p50": 221.03788699999998,
                    "p95": 223.115769,
                    "p99": 223.115769,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.182637,
                    "min": 93.52718399999999,
                    "p50": 94.34822,
                    "p95": 96.182637,
                    "p99": 96.182637,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 199.271155,
                    "min": 186.220414,
                    "p50": 191.38997799999999,
                    "p95": 199.271155,
                    "p99": 199.271155,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 250.39290499999998,
                    "min": 237.89818,
                    "p50": 248.48611599999998,
                    "p95": 250.39290499999998,
                    "p99": 250.39290499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.88432499999999,
                    "min": 120.058815,
                    "p50": 123.182937,
                    "p95": 127.88432499999999,
                    "p99": 127.88432499999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 169.38808,
                    "min": 125.03349,
                    "p50": 164.68954399999998,
                    "p95": 169.38808,
                    "p99": 169.38808,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.627998,
                    "min": 139.563623,
                    "p50": 151.10786299999998,
                    "p95": 153.627998,
                    "p99": 153.627998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 321.95908,
                    "min": 309.833313,
                    "p50": 319.64474,
                    "p95": 321.95908,
                    "p99": 321.95908,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.59052,
                    "min": 156.97867,
                    "p50": 178.072339,
                    "p95": 180.59052,
                    "p99": 180.59052,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.240154,
                    "min": 105.24624299999999,
                    "p50": 135.928641,
                    "p95": 138.240154,
                    "p99": 138.240154,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.124455,
                    "min": 107.23615199999999,
                    "p50": 108.43690199999999,
                    "p95": 113.124455,
                    "p99": 113.124455,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 235.78868599999998,
                    "min": 198.24038099999999,
                    "p50": 233.956652,
                    "p95": 235.78868599999998,
                    "p99": 235.78868599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 35.173176999999995,
                    "min": 27.937603,
                    "p50": 30.089805,
                    "p95": 35.173176999999995,
                    "p99": 35.173176999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.818737,
                    "min": 22.689550999999998,
                    "p50": 24.606475,
                    "p95": 24.818737,
                    "p99": 24.818737,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 74.033543,
                    "min": 67.973078,
                    "p50": 72.819014,
                    "p95": 74.033543,
                    "p99": 74.033543,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 141.868587,
                    "min": 124.43556699999999,
                    "p50": 139.991246,
                    "p95": 141.868587,
                    "p99": 141.868587,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.783134999999998,
                    "min": 24.160045,
                    "p50": 24.489836,
                    "p95": 26.783134999999998,
                    "p99": 26.783134999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.991357999999998,
                    "min": 24.301882,
                    "p50": 24.689166999999998,
                    "p95": 26.991357999999998,
                    "p99": 26.991357999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 58.481953999999995,
                    "min": 53.921912999999996,
                    "p50": 57.880061999999995,
                    "p95": 58.481953999999995,
                    "p99": 58.481953999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.955983999999997,
                    "min": 23.790696,
                    "p50": 24.59349,
                    "p95": 24.955983999999997,
                    "p99": 24.955983999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 54.214118,
                    "min": 27.554733,
                    "p50": 51.495473999999994,
                    "p95": 54.214118,
                    "p99": 54.214118,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.766690999999998,
                    "min": 24.829096,
                    "p50": 26.075111,
                    "p95": 28.766690999999998,
                    "p99": 28.766690999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 46.006826,
                    "min": 40.677237,
                    "p50": 43.341615,
                    "p95": 46.006826,
                    "p99": 46.006826,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.882541999999997,
                    "min": 23.557271999999998,
                    "p50": 24.830827,
                    "p95": 26.882541999999997,
                    "p99": 26.882541999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 28.155037,
                    "min": 24.398229,
                    "p50": 24.980714,
                    "p95": 28.155037,
                    "p99": 28.155037,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 26.635697999999998,
                    "min": 24.122436,
                    "p50": 24.664413999999997,
                    "p95": 26.635697999999998,
                    "p99": 26.635697999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.856613,
                    "min": 22.275606999999997,
                    "p50": 24.460497,
                    "p95": 24.856613,
                    "p99": 24.856613,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.905541,
                    "min": 24.083436,
                    "p50": 24.543741999999998,
                    "p95": 24.905541,
                    "p99": 24.905541,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.96297,
                    "min": 24.395509999999998,
                    "p50": 24.603094,
                    "p95": 24.96297,
                    "p99": 24.96297,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 25.021331999999997,
                    "min": 24.25987,
                    "p50": 24.498986,
                    "p95": 25.021331999999997,
                    "p99": 25.021331999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.397181999999997,
                    "min": 23.310779,
                    "p50": 24.363312,
                    "p95": 26.397181999999997,
                    "p99": 26.397181999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 146.734196,
                    "min": 144.952462,
                    "p50": 145.846102,
                    "p95": 146.734196,
                    "p99": 146.734196,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.36892999999999,
                    "min": 96.460093,
                    "p50": 101.503158,
                    "p95": 102.36892999999999,
                    "p99": 102.36892999999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 216.27111399999998,
                    "min": 208.482037,
                    "p50": 212.886832,
                    "p95": 216.27111399999998,
                    "p99": 216.27111399999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 118.46243199999999,
                    "min": 77.145006,
                    "p50": 113.04749199999999,
                    "p95": 118.46243199999999,
                    "p99": 118.46243199999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 181.291001,
                    "min": 141.225821,
                    "p50": 175.84246199999998,
                    "p95": 181.291001,
                    "p99": 181.291001,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 663.993483,
                    "min": 616.754649,
                    "p50": 653.277324,
                    "p95": 663.993483,
                    "p99": 663.993483,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.02253299999998,
                    "min": 161.89883799999998,
                    "p50": 163.630739,
                    "p95": 166.02253299999998,
                    "p99": 166.02253299999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 204.430407,
                    "min": 161.712695,
                    "p50": 200.273506,
                    "p95": 204.430407,
                    "p99": 204.430407,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.78409899999997,
                    "min": 217.37588599999998,
                    "p50": 255.05094899999997,
                    "p95": 270.78409899999997,
                    "p99": 270.78409899999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 138.69849,
                    "min": 99.840712,
                    "p50": 137.675949,
                    "p95": 138.69849,
                    "p99": 138.69849,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 542.2173389999999,
                    "min": 527.1880179999999,
                    "p50": 532.482729,
                    "p95": 542.2173389999999,
                    "p99": 542.2173389999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 127.517883,
                    "min": 124.49337299999999,
                    "p50": 126.48726699999999,
                    "p95": 127.517883,
                    "p99": 127.517883,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 187.472547,
                    "min": 149.284452,
                    "p50": 186.53001,
                    "p95": 187.472547,
                    "p99": 187.472547,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 414.569702,
                    "min": 393.876897,
                    "p50": 412.556432,
                    "p95": 414.569702,
                    "p99": 414.569702,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.520731,
                    "min": 85.189504,
                    "p50": 88.911885,
                    "p95": 89.520731,
                    "p99": 89.520731,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1287.2754189999998,
                    "min": 1248.4475109999998,
                    "p50": 1277.529685,
                    "p95": 1287.2754189999998,
                    "p99": 1287.2754189999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 74.494674,
                    "min": 39.012003,
                    "p50": 73.726719,
                    "p95": 74.494674,
                    "p99": 74.494674,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 229.057045,
                    "min": 221.996015,
                    "p50": 225.587731,
                    "p95": 229.057045,
                    "p99": 229.057045,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 291.022096,
                    "min": 267.200824,
                    "p50": 287.51196899999997,
                    "p95": 291.022096,
                    "p99": 291.022096,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.936275,
                    "min": 24.254282999999997,
                    "p50": 24.433163999999998,
                    "p95": 24.936275,
                    "p99": 24.936275,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.961109999999998,
                    "min": 24.207866,
                    "p50": 24.638322,
                    "p95": 24.961109999999998,
                    "p99": 24.961109999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.119726999999997,
                    "min": 22.019382999999998,
                    "p50": 24.788446999999998,
                    "p95": 25.119726999999997,
                    "p99": 25.119726999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 25.850658,
                    "min": 22.199958,
                    "p50": 24.432948999999997,
                    "p95": 25.850658,
                    "p99": 25.850658,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 25.145148,
                    "min": 22.50999,
                    "p50": 24.43229,
                    "p95": 25.145148,
                    "p99": 25.145148,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.003038,
                    "min": 21.051569999999998,
                    "p50": 25.917907999999997,
                    "p95": 27.003038,
                    "p99": 27.003038,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 25.223015999999998,
                    "min": 24.315497999999998,
                    "p50": 24.547344,
                    "p95": 25.223015999999998,
                    "p99": 25.223015999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.7718,
                    "min": 24.256693,
                    "p50": 24.685292,
                    "p95": 24.7718,
                    "p99": 24.7718,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 43.315269,
                    "min": 39.62133,
                    "p50": 42.687455,
                    "p95": 43.315269,
                    "p99": 43.315269,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 33.654399,
                    "min": 22.098142,
                    "p50": 24.545695,
                    "p95": 33.654399,
                    "p99": 33.654399,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.871765,
                    "min": 24.309593,
                    "p50": 24.499841999999997,
                    "p95": 24.871765,
                    "p99": 24.871765,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.805277,
                    "min": 22.864022,
                    "p50": 24.458036999999997,
                    "p95": 24.805277,
                    "p99": 24.805277,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.93244,
                    "min": 24.396946,
                    "p50": 25.058487,
                    "p95": 26.93244,
                    "p99": 26.93244,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 24.832556,
                    "min": 22.800656999999998,
                    "p50": 24.357011,
                    "p95": 24.832556,
                    "p99": 24.832556,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 85.982526,
                    "min": 69.835689,
                    "p50": 84.412702,
                    "p95": 85.982526,
                    "p99": 85.982526,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.880649,
                    "min": 22.655056,
                    "p50": 24.677591,
                    "p95": 26.880649,
                    "p99": 26.880649,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 35.334182999999996,
                    "min": 31.059859,
                    "p50": 33.160069,
                    "p95": 35.334182999999996,
                    "p99": 35.334182999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 26.831415,
                    "min": 24.277639,
                    "p50": 24.497787,
                    "p95": 26.831415,
                    "p99": 26.831415,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.041224,
                    "min": 22.711765,
                    "p50": 24.703542,
                    "p95": 26.041224,
                    "p99": 26.041224,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.821078,
                    "min": 23.847291,
                    "p50": 24.790239,
                    "p95": 27.821078,
                    "p99": 27.821078,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.472165,
                    "min": 24.345309999999998,
                    "p50": 24.697473,
                    "p95": 26.472165,
                    "p99": 26.472165,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.571873999999998,
                    "min": 24.231413,
                    "p50": 24.467876999999998,
                    "p95": 24.571873999999998,
                    "p99": 24.571873999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.928884,
                    "min": 22.395733,
                    "p50": 24.522492999999997,
                    "p95": 24.928884,
                    "p99": 24.928884,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 25.167717999999997,
                    "min": 23.767953,
                    "p50": 24.654418999999997,
                    "p95": 25.167717999999997,
                    "p99": 25.167717999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 25.067178,
                    "min": 23.570821,
                    "p50": 24.323121999999998,
                    "p95": 25.067178,
                    "p99": 25.067178,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.920274,
                    "min": 24.136923,
                    "p50": 24.529273999999997,
                    "p95": 24.920274,
                    "p99": 24.920274,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.961534,
                    "min": 22.201759,
                    "p50": 24.453933,
                    "p95": 24.961534,
                    "p99": 24.961534,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.548544,
                    "min": 24.318451,
                    "p50": 24.474128,
                    "p95": 24.548544,
                    "p99": 24.548544,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 26.444143999999998,
                    "min": 22.734973,
                    "p50": 24.695548,
                    "p95": 26.444143999999998,
                    "p99": 26.444143999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.605511,
                    "min": 21.635628999999998,
                    "p50": 24.73137,
                    "p95": 26.605511,
                    "p99": 26.605511,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 25.537305,
                    "min": 24.043613999999998,
                    "p50": 24.507437,
                    "p95": 25.537305,
                    "p99": 25.537305,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.594438,
                    "min": 24.4224,
                    "p50": 24.604982,
                    "p95": 27.594438,
                    "p99": 27.594438,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 29.499301,
                    "min": 21.543076,
                    "p50": 24.632158999999998,
                    "p95": 29.499301,
                    "p99": 29.499301,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.767028999999997,
                    "min": 23.85276,
                    "p50": 24.447226999999998,
                    "p95": 24.767028999999997,
                    "p99": 24.767028999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 48.384769999999996,
                    "min": 25.123039,
                    "p50": 45.35718,
                    "p95": 48.384769999999996,
                    "p99": 48.384769999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.038577999999998,
                    "min": 21.050684,
                    "p50": 25.013492,
                    "p95": 27.038577999999998,
                    "p99": 27.038577999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 26.783089999999998,
                    "min": 24.456929,
                    "p50": 24.843235999999997,
                    "p95": 26.783089999999998,
                    "p99": 26.783089999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.477356,
                    "min": 24.077537,
                    "p50": 24.677170999999998,
                    "p95": 27.477356,
                    "p99": 27.477356,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 155.896467,
                    "min": 149.774555,
                    "p50": 153.569815,
                    "p95": 155.896467,
                    "p99": 155.896467,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 78.539022,
                    "min": 49.547301,
                    "p50": 74.11531,
                    "p95": 78.539022,
                    "p99": 78.539022,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1271.529627,
                    "min": 1232.425047,
                    "p50": 1264.6133829999999,
                    "p95": 1271.529627,
                    "p99": 1271.529627,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.770856,
                    "min": 276.716913,
                    "p50": 287.572677,
                    "p95": 290.770856,
                    "p99": 290.770856,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.819595,
                    "min": 87.09893,
                    "p50": 125.796202,
                    "p95": 128.819595,
                    "p99": 128.819595,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.58130299999999,
                    "min": 50.391118,
                    "p50": 84.99406599999999,
                    "p95": 86.58130299999999,
                    "p99": 86.58130299999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 117.756457,
                    "min": 80.637024,
                    "p50": 114.60610799999999,
                    "p95": 117.756457,
                    "p99": 117.756457,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 417.56665599999997,
                    "min": 368.692486,
                    "p50": 410.022568,
                    "p95": 417.56665599999997,
                    "p99": 417.56665599999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 202.90913999999998,
                    "min": 199.359762,
                    "p50": 202.433394,
                    "p95": 202.90913999999998,
                    "p99": 202.90913999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 177.838104,
                    "min": 171.93185499999998,
                    "p50": 176.264681,
                    "p95": 177.838104,
                    "p99": 177.838104,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 533.50411,
                    "min": 508.756804,
                    "p50": 530.841406,
                    "p95": 533.50411,
                    "p99": 533.50411,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 663.585638,
                    "min": 651.9587359999999,
                    "p50": 656.240009,
                    "p95": 663.585638,
                    "p99": 663.585638,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 214.816034,
                    "min": 176.19576899999998,
                    "p50": 213.37874399999998,
                    "p95": 214.816034,
                    "p99": 214.816034,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.81486,
                    "min": 84.07729499999999,
                    "p50": 101.376221,
                    "p95": 102.81486,
                    "p99": 102.81486,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 260.755941,
                    "min": 217.232825,
                    "p50": 258.79954599999996,
                    "p95": 260.755941,
                    "p99": 260.755941,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 153.340501,
                    "min": 113.901343,
                    "p50": 151.677929,
                    "p95": 153.340501,
                    "p99": 153.340501,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 195.11131999999998,
                    "min": 184.90574999999998,
                    "p50": 189.27625899999998,
                    "p95": 195.11131999999998,
                    "p99": 195.11131999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 226.491089,
                    "min": 223.665581,
                    "p50": 225.378617,
                    "p95": 226.491089,
                    "p99": 226.491089,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 141.382361,
                    "min": 99.184851,
                    "p50": 138.835748,
                    "p95": 141.382361,
                    "p99": 141.382361,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 767.061842,
                    "min": 752.931331,
                    "p50": 759.0122709999999,
                    "p95": 767.061842,
                    "p99": 767.061842,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 132.42361499999998,
                    "min": 116.17859999999999,
                    "p50": 131.174171,
                    "p95": 132.42361499999998,
                    "p99": 132.42361499999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 252.689588,
                    "min": 215.12687699999998,
                    "p50": 247.392617,
                    "p95": 252.689588,
                    "p99": 252.689588,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 385.08939899999996,
                    "min": 372.777915,
                    "p50": 381.082268,
                    "p95": 385.08939899999996,
                    "p99": 385.08939899999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 152.16243799999998,
                    "min": 129.103402,
                    "p50": 149.305214,
                    "p95": 152.16243799999998,
                    "p99": 152.16243799999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 406.93656599999997,
                    "min": 383.042641,
                    "p50": 400.890222,
                    "p95": 406.93656599999997,
                    "p99": 406.93656599999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 227.89403299999998,
                    "min": 194.29100699999998,
                    "p50": 226.930299,
                    "p95": 227.89403299999998,
                    "p99": 227.89403299999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 453.53986899999995,
                    "min": 445.901407,
                    "p50": 448.78139899999996,
                    "p95": 453.53986899999995,
                    "p99": 453.53986899999995,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 189.313335,
                    "min": 184.476228,
                    "p50": 188.277231,
                    "p95": 189.313335,
                    "p99": 189.313335,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 272.022385,
                    "min": 230.86672299999998,
                    "p50": 266.578166,
                    "p95": 272.022385,
                    "p99": 272.022385,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 957.494609,
                    "min": 942.75279,
                    "p50": 952.766166,
                    "p95": 957.494609,
                    "p99": 957.494609,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 292.23207099999996,
                    "min": 250.81827199999998,
                    "p50": 288.76899099999997,
                    "p95": 292.23207099999996,
                    "p99": 292.23207099999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 211.780308,
                    "min": 192.110252,
                    "p50": 208.029821,
                    "p95": 211.780308,
                    "p99": 211.780308,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 343.99678,
                    "min": 336.713623,
                    "p50": 341.407667,
                    "p95": 343.99678,
                    "p99": 343.99678,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 113.96486,
                    "min": 108.477493,
                    "p50": 111.361857,
                    "p95": 113.96486,
                    "p99": 113.96486,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 362.03395,
                    "min": 328.54421199999996,
                    "p50": 356.939486,
                    "p95": 362.03395,
                    "p99": 362.03395,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 507.048185,
                    "min": 494.382749,
                    "p50": 498.259349,
                    "p95": 507.048185,
                    "p99": 507.048185,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1335.284352,
                    "min": 1237.099828,
                    "p50": 1276.048256,
                    "p95": 1335.284352,
                    "p99": 1335.284352,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.499109,
                    "min": 153.412656,
                    "p50": 165.799713,
                    "p95": 169.499109,
                    "p99": 169.499109,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.189895,
                    "min": 278.845525,
                    "p50": 292.902604,
                    "p95": 299.189895,
                    "p99": 299.189895,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 255.306774,
                    "min": 223.638801,
                    "p50": 250.890686,
                    "p95": 255.306774,
                    "p99": 255.306774,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 465.47477999999995,
                    "min": 421.97275099999996,
                    "p50": 460.12415899999996,
                    "p95": 465.47477999999995,
                    "p99": 465.47477999999995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 419.422575,
                    "min": 412.378163,
                    "p50": 416.292107,
                    "p95": 419.422575,
                    "p99": 419.422575,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 561.564841,
                    "min": 528.547829,
                    "p50": 544.6874409999999,
                    "p95": 561.564841,
                    "p99": 561.564841,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 676.984281,
                    "min": 632.535722,
                    "p50": 665.814208,
                    "p95": 676.984281,
                    "p99": 676.984281,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 592.509237,
                    "min": 579.217706,
                    "p50": 588.7740779999999,
                    "p95": 592.509237,
                    "p99": 592.509237,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 505.835762,
                    "min": 464.648819,
                    "p50": 498.03011499999997,
                    "p95": 505.835762,
                    "p99": 505.835762,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 911.099833,
                    "min": 854.326836,
                    "p50": 876.467671,
                    "p95": 911.099833,
                    "p99": 911.099833,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 339.53689199999997,
                    "min": 298.16020199999997,
                    "p50": 335.02792,
                    "p95": 339.53689199999997,
                    "p99": 339.53689199999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.07573,
                    "min": 170.382846,
                    "p50": 205.36647,
                    "p95": 214.07573,
                    "p99": 214.07573,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 786.6959039999999,
                    "min": 732.290084,
                    "p50": 769.078344,
                    "p95": 786.6959039999999,
                    "p99": 786.6959039999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 379.849704,
                    "min": 363.00534,
                    "p50": 373.239243,
                    "p95": 379.849704,
                    "p99": 379.849704,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 653.829651,
                    "min": 622.19542,
                    "p50": 627.257304,
                    "p95": 653.829651,
                    "p99": 653.829651,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 927.042367,
                    "min": 890.7553509999999,
                    "p50": 921.835391,
                    "p95": 927.042367,
                    "p99": 927.042367,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1998.652028,
                    "min": 1953.1963959999998,
                    "p50": 1990.448334,
                    "p95": 1998.652028,
                    "p99": 1998.652028,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2864.9153899999997,
                    "min": 2803.818758,
                    "p50": 2823.729664,
                    "p95": 2864.9153899999997,
                    "p99": 2864.9153899999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5675.883465999999,
                    "min": 5583.605192,
                    "p50": 5616.567414,
                    "p95": 5675.883465999999,
                    "p99": 5675.883465999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1588.3955079999998,
                    "min": 1538.117881,
                    "p50": 1575.464497,
                    "p95": 1588.3955079999998,
                    "p99": 1588.3955079999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 739.1658689999999,
                    "min": 700.139465,
                    "p50": 734.711964,
                    "p95": 739.1658689999999,
                    "p99": 739.1658689999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 605.021139,
                    "min": 557.951011,
                    "p50": 597.3938029999999,
                    "p95": 605.021139,
                    "p99": 605.021139,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1734.651646,
                    "min": 1671.466804,
                    "p50": 1710.352263,
                    "p95": 1734.651646,
                    "p99": 1734.651646,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4244.662463,
                    "min": 4163.781727,
                    "p50": 4208.904643,
                    "p95": 4244.662463,
                    "p99": 4244.662463,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2498.379192,
                    "min": 2466.688851,
                    "p50": 2480.902205,
                    "p95": 2498.379192,
                    "p99": 2498.379192,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2150.416827,
                    "min": 2096.2155359999997,
                    "p50": 2131.105949,
                    "p95": 2150.416827,
                    "p99": 2150.416827,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1164.530477,
                    "min": 1149.882424,
                    "p50": 1157.8999649999998,
                    "p95": 1164.530477,
                    "p99": 1164.530477,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1445.94507,
                    "min": 1422.211758,
                    "p50": 1434.495193,
                    "p95": 1445.94507,
                    "p99": 1445.94507,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1027.868182,
                    "min": 994.384555,
                    "p50": 1017.9204229999999,
                    "p95": 1027.868182,
                    "p99": 1027.868182,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 466.01460599999996,
                    "min": 417.335781,
                    "p50": 461.199596,
                    "p95": 466.01460599999996,
                    "p99": 466.01460599999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1870.2641429999999,
                    "min": 1810.490411,
                    "p50": 1843.2791789999999,
                    "p95": 1870.2641429999999,
                    "p99": 1870.2641429999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1306.391201,
                    "min": 1272.659895,
                    "p50": 1293.3042209999999,
                    "p95": 1306.391201,
                    "p99": 1306.391201,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 428.236362,
                    "min": 393.792,
                    "p50": 423.352512,
                    "p95": 428.236362,
                    "p99": 428.236362,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1315.721898,
                    "min": 1291.5832679999999,
                    "p50": 1299.031148,
                    "p95": 1315.721898,
                    "p99": 1315.721898,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2631.749667,
                    "min": 2577.911184,
                    "p50": 2626.535718,
                    "p95": 2631.749667,
                    "p99": 2631.749667,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1452.2817539999999,
                    "min": 1405.6646409999998,
                    "p50": 1438.07186,
                    "p95": 1452.2817539999999,
                    "p99": 1452.2817539999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3818.58733,
                    "min": 3739.5081189999996,
                    "p50": 3789.35299,
                    "p95": 3818.58733,
                    "p99": 3818.58733,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 813.816372,
                    "min": 800.363915,
                    "p50": 809.1389499999999,
                    "p95": 813.816372,
                    "p99": 813.816372,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1205.6186129999999,
                    "min": 1186.2109799999998,
                    "p50": 1195.223526,
                    "p95": 1205.6186129999999,
                    "p99": 1205.6186129999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5040.67527,
                    "min": 4961.737048,
                    "p50": 5013.724897,
                    "p95": 5040.67527,
                    "p99": 5040.67527,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 701.203979,
                    "min": 653.243693,
                    "p50": 692.657611,
                    "p95": 701.203979,
                    "p99": 701.203979,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1731.919555,
                    "min": 1688.471118,
                    "p50": 1722.4381039999998,
                    "p95": 1731.919555,
                    "p99": 1731.919555,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 931.7995569999999,
                    "min": 871.882045,
                    "p50": 922.0590219999999,
                    "p95": 931.7995569999999,
                    "p99": 931.7995569999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.364431,
                    "min": 529.030989,
                    "p50": 549.030443,
                    "p95": 555.364431,
                    "p99": 555.364431,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1982.215479,
                    "min": 1941.197258,
                    "p50": 1965.5999789999998,
                    "p95": 1982.215479,
                    "p99": 1982.215479,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1845.1608709999998,
                    "min": 1796.5656219999998,
                    "p50": 1831.7585239999999,
                    "p95": 1845.1608709999998,
                    "p99": 1845.1608709999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2245.141485,
                    "min": 2196.6608149999997,
                    "p50": 2221.208749,
                    "p95": 2245.141485,
                    "p99": 2245.141485,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1055.570524,
                    "min": 1031.793876,
                    "p50": 1041.8419059999999,
                    "p95": 1055.570524,
                    "p99": 1055.570524,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1577.8593099999998,
                    "min": 1521.9412169999998,
                    "p50": 1562.913523,
                    "p95": 1577.8593099999998,
                    "p99": 1577.8593099999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 884.549186,
                    "min": 854.440713,
                    "p50": 875.9583759999999,
                    "p95": 884.549186,
                    "p99": 884.549186,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 643.025526,
                    "min": 591.310625,
                    "p50": 633.8672329999999,
                    "p95": 643.025526,
                    "p99": 643.025526,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1251.4503539999998,
                    "min": 1224.707001,
                    "p50": 1246.366464,
                    "p95": 1251.4503539999998,
                    "p99": 1251.4503539999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1847.78421,
                    "min": 1799.187442,
                    "p50": 1832.273186,
                    "p95": 1847.78421,
                    "p99": 1847.78421,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 6083.156322,
                    "min": 5947.697031,
                    "p50": 5992.330169,
                    "p95": 6083.156322,
                    "p99": 6083.156322,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2445.189632,
                    "min": 2403.175441,
                    "p50": 2443.537062,
                    "p95": 2445.189632,
                    "p99": 2445.189632,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 703.8285979999999,
                    "min": 658.861667,
                    "p50": 692.975677,
                    "p95": 703.8285979999999,
                    "p99": 703.8285979999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.08048699999998,
                    "min": 217.35602899999998,
                    "p50": 219.74926499999998,
                    "p95": 226.08048699999998,
                    "p99": 226.08048699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3055.417325,
                    "min": 3005.847101,
                    "p50": 3022.32347,
                    "p95": 3055.417325,
                    "p99": 3055.417325,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.509818,
                    "min": 420.845896,
                    "p50": 455.135024,
                    "p95": 461.509818,
                    "p99": 461.509818,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 522.385779,
                    "min": 512.754142,
                    "p50": 518.006522,
                    "p95": 522.385779,
                    "p99": 522.385779,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 585.0163729999999,
                    "min": 574.755663,
                    "p50": 583.10267,
                    "p95": 585.0163729999999,
                    "p99": 585.0163729999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1094.330814,
                    "min": 1049.344898,
                    "p50": 1083.996899,
                    "p95": 1094.330814,
                    "p99": 1094.330814,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 343.475572,
                    "min": 309.628802,
                    "p50": 340.017925,
                    "p95": 343.475572,
                    "p99": 343.475572,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 399.72326899999996,
                    "min": 377.824055,
                    "p50": 397.74047199999995,
                    "p95": 399.72326899999996,
                    "p99": 399.72326899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 944.794756,
                    "min": 894.8644109999999,
                    "p50": 935.107774,
                    "p95": 944.794756,
                    "p99": 944.794756,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 761.121187,
                    "min": 716.0710449999999,
                    "p50": 755.7860959999999,
                    "p95": 761.121187,
                    "p99": 761.121187,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.76665199999997,
                    "min": 261.266238,
                    "p50": 278.553998,
                    "p95": 280.76665199999997,
                    "p99": 280.76665199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 827.2979399999999,
                    "min": 800.380241,
                    "p50": 815.816341,
                    "p95": 827.2979399999999,
                    "p99": 827.2979399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3431.391421,
                    "min": 3356.728284,
                    "p50": 3423.366383,
                    "p95": 3431.391421,
                    "p99": 3431.391421,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1396.308934,
                    "min": 1370.743136,
                    "p50": 1387.331411,
                    "p95": 1396.308934,
                    "p99": 1396.308934,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1007.284199,
                    "min": 966.4817009999999,
                    "p50": 994.916623,
                    "p95": 1007.284199,
                    "p99": 1007.284199,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2363.67549,
                    "min": 2335.869502,
                    "p50": 2352.112436,
                    "p95": 2363.67549,
                    "p99": 2363.67549,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1586.358757,
                    "min": 1538.3331329999999,
                    "p50": 1578.4987939999999,
                    "p95": 1586.358757,
                    "p99": 1586.358757,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7754.696927,
                    "min": 7644.337014,
                    "p50": 7699.565581999999,
                    "p95": 7754.696927,
                    "p99": 7754.696927,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2154.811208,
                    "min": 2129.621232,
                    "p50": 2144.750083,
                    "p95": 2154.811208,
                    "p99": 2154.811208,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1207.667901,
                    "min": 1179.887502,
                    "p50": 1189.40394,
                    "p95": 1207.667901,
                    "p99": 1207.667901,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2555.489392,
                    "min": 2504.555982,
                    "p50": 2531.511426,
                    "p95": 2555.489392,
                    "p99": 2555.489392,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5843.341015,
                    "min": 5747.455785,
                    "p50": 5778.961794,
                    "p95": 5843.341015,
                    "p99": 5843.341015,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2940.3893359999997,
                    "min": 2883.145408,
                    "p50": 2920.7749369999997,
                    "p95": 2940.3893359999997,
                    "p99": 2940.3893359999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3899.347121,
                    "min": 3849.3361259999997,
                    "p50": 3866.658537,
                    "p95": 3899.347121,
                    "p99": 3899.347121,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 619.916398,
                    "min": 585.322781,
                    "p50": 615.0640129999999,
                    "p95": 619.916398,
                    "p99": 619.916398,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2751.7272,
                    "min": 2690.528171,
                    "p50": 2729.9468859999997,
                    "p95": 2751.7272,
                    "p99": 2751.7272,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 810.3274819999999,
                    "min": 780.1369639999999,
                    "p50": 805.2081499999999,
                    "p95": 810.3274819999999,
                    "p99": 810.3274819999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1980.8292669999998,
                    "min": 1914.2809849999999,
                    "p50": 1960.643423,
                    "p95": 1980.8292669999998,
                    "p99": 1980.8292669999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1791.302589,
                    "min": 1741.307402,
                    "p50": 1771.4739359999999,
                    "p95": 1791.302589,
                    "p99": 1791.302589,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2939.792282,
                    "min": 2886.939137,
                    "p50": 2918.139081,
                    "p95": 2939.792282,
                    "p99": 2939.792282,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 816.1839729999999,
                    "min": 779.127898,
                    "p50": 808.773479,
                    "p95": 816.1839729999999,
                    "p99": 816.1839729999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1784.768601,
                    "min": 1742.2334939999998,
                    "p50": 1762.5251979999998,
                    "p95": 1784.768601,
                    "p99": 1784.768601,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2562.1958529999997,
                    "min": 2485.0569299999997,
                    "p50": 2542.7147729999997,
                    "p95": 2562.1958529999997,
                    "p99": 2562.1958529999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1972.455906,
                    "min": 1938.7493399999998,
                    "p50": 1949.6100809999998,
                    "p95": 1972.455906,
                    "p99": 1972.455906,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2167.3194679999997,
                    "min": 2141.400347,
                    "p50": 2164.876097,
                    "p95": 2167.3194679999997,
                    "p99": 2167.3194679999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3906.535431,
                    "min": 3839.286765,
                    "p50": 3898.061179,
                    "p95": 3906.535431,
                    "p99": 3906.535431,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5842.94491,
                    "min": 5745.719228,
                    "p50": 5782.994409999999,
                    "p95": 5842.94491,
                    "p99": 5842.94491,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2352.8849999999998,
                    "min": 2319.8588959999997,
                    "p50": 2341.230655,
                    "p95": 2352.8849999999998,
                    "p99": 2352.8849999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1002.0923369999999,
                    "min": 986.937053,
                    "p50": 998.5143019999999,
                    "p95": 1002.0923369999999,
                    "p99": 1002.0923369999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 623.1525379999999,
                    "min": 613.350064,
                    "p50": 615.631039,
                    "p95": 623.1525379999999,
                    "p99": 623.1525379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1202.10288,
                    "min": 1184.726023,
                    "p50": 1191.854466,
                    "p95": 1202.10288,
                    "p99": 1202.10288,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3439.45806,
                    "min": 3363.324886,
                    "p50": 3393.3813,
                    "p95": 3439.45806,
                    "p99": 3439.45806,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1389.502291,
                    "min": 1360.633779,
                    "p50": 1375.469726,
                    "p95": 1389.502291,
                    "p99": 1389.502291,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2764.3415059999998,
                    "min": 2691.978564,
                    "p50": 2722.954244,
                    "p95": 2764.3415059999998,
                    "p99": 2764.3415059999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1590.041221,
                    "min": 1557.1416339999998,
                    "p50": 1577.905687,
                    "p95": 1590.041221,
                    "p99": 1590.041221,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 885.9221279999999,
                    "min": 841.3823699999999,
                    "p50": 874.8841729999999,
                    "p95": 885.9221279999999,
                    "p99": 885.9221279999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 161.959294,
                    "min": 144.139444,
                    "p50": 156.842208,
                    "p95": 161.959294,
                    "p99": 161.959294,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 465.787919,
                    "min": 427.24715899999995,
                    "p50": 455.693698,
                    "p95": 465.787919,
                    "p99": 465.787919,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 100.857517,
                    "min": 88.011061,
                    "p50": 99.08956599999999,
                    "p95": 100.857517,
                    "p99": 100.857517,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 77.984314,
                    "min": 34.737628,
                    "p50": 67.47288499999999,
                    "p95": 77.984314,
                    "p99": 77.984314,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 140.801875,
                    "min": 129.352221,
                    "p50": 139.64952399999999,
                    "p95": 140.801875,
                    "p99": 140.801875,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 382.021033,
                    "min": 359.553453,
                    "p50": 373.687437,
                    "p95": 382.021033,
                    "p99": 382.021033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 167.82595799999999,
                    "min": 144.314988,
                    "p50": 165.615706,
                    "p95": 167.82595799999999,
                    "p99": 167.82595799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 150.856698,
                    "min": 142.74651699999998,
                    "p50": 149.665663,
                    "p95": 150.856698,
                    "p99": 150.856698,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 189.544336,
                    "min": 146.92692499999998,
                    "p50": 187.662204,
                    "p95": 189.544336,
                    "p99": 189.544336,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 82.688914,
                    "min": 43.341145,
                    "p50": 81.844195,
                    "p95": 82.688914,
                    "p99": 82.688914,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 134.17286099999998,
                    "min": 130.34321,
                    "p50": 133.35754599999999,
                    "p95": 134.17286099999998,
                    "p99": 134.17286099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 54.373701999999994,
                    "min": 50.735115,
                    "p50": 53.336237,
                    "p95": 54.373701999999994,
                    "p99": 54.373701999999994,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 109.527684,
                    "min": 76.51856,
                    "p50": 106.584926,
                    "p95": 109.527684,
                    "p99": 109.527684,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 95.391846,
                    "min": 89.46244399999999,
                    "p50": 89.78192,
                    "p95": 95.391846,
                    "p99": 95.391846,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 118.67434399999999,
                    "min": 93.552228,
                    "p50": 115.87187899999999,
                    "p95": 118.67434399999999,
                    "p99": 118.67434399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 128.821236,
                    "min": 84.194012,
                    "p50": 123.23458699999999,
                    "p95": 128.821236,
                    "p99": 128.821236,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 293.53308899999996,
                    "min": 251.304182,
                    "p50": 290.356422,
                    "p95": 293.53308899999996,
                    "p99": 293.53308899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 208.02225299999998,
                    "min": 171.903031,
                    "p50": 206.453172,
                    "p95": 208.02225299999998,
                    "p99": 208.02225299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.994591999999997,
                    "min": 23.902562,
                    "p50": 24.336340999999997,
                    "p95": 24.994591999999997,
                    "p99": 24.994591999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 107.777351,
                    "min": 95.739553,
                    "p50": 107.44071299999999,
                    "p95": 107.777351,
                    "p99": 107.777351,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 96.164422,
                    "min": 51.389987,
                    "p50": 90.63687399999999,
                    "p95": 96.164422,
                    "p99": 96.164422,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 77.982922,
                    "min": 34.579189,
                    "p50": 69.497646,
                    "p95": 77.982922,
                    "p99": 77.982922,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 37.603952,
                    "min": 34.489145,
                    "p50": 36.722211,
                    "p95": 37.603952,
                    "p99": 37.603952,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 211.666844,
                    "min": 200.83363699999998,
                    "p50": 208.04447,
                    "p95": 211.666844,
                    "p99": 211.666844,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 125.885887,
                    "min": 123.637058,
                    "p50": 124.175349,
                    "p95": 125.885887,
                    "p99": 125.885887,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 43.646496,
                    "min": 24.833067,
                    "p50": 42.323595,
                    "p95": 43.646496,
                    "p99": 43.646496,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 51.003119999999996,
                    "min": 39.1222,
                    "p50": 50.139091,
                    "p95": 51.003119999999996,
                    "p99": 51.003119999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 29.865578,
                    "min": 27.862485,
                    "p50": 28.773069999999997,
                    "p95": 29.865578,
                    "p99": 29.865578,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 36.794329999999995,
                    "min": 23.263489,
                    "p50": 32.376614,
                    "p95": 36.794329999999995,
                    "p99": 36.794329999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.675977999999997,
                    "min": 24.069865999999998,
                    "p50": 24.798098,
                    "p95": 26.675977999999997,
                    "p99": 26.675977999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 64.50100499999999,
                    "min": 30.820445999999997,
                    "p50": 60.090841999999995,
                    "p95": 64.50100499999999,
                    "p99": 64.50100499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 40.524873,
                    "min": 37.871153,
                    "p50": 38.61443,
                    "p95": 40.524873,
                    "p99": 40.524873,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 55.065777999999995,
                    "min": 31.181030999999997,
                    "p50": 51.464168,
                    "p95": 55.065777999999995,
                    "p99": 55.065777999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 25.735093,
                    "min": 24.529033,
                    "p50": 24.750418999999997,
                    "p95": 25.735093,
                    "p99": 25.735093,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 46.937948999999996,
                    "min": 24.361504,
                    "p50": 44.839107,
                    "p95": 46.937948999999996,
                    "p99": 46.937948999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 25.425855,
                    "min": 24.042396999999998,
                    "p50": 24.538504999999997,
                    "p95": 25.425855,
                    "p99": 25.425855,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.837602,
                    "min": 23.690578,
                    "p50": 24.606374,
                    "p95": 26.837602,
                    "p99": 26.837602,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 212.797947,
                    "min": 194.406882,
                    "p50": 208.235865,
                    "p95": 212.797947,
                    "p99": 212.797947,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 120.65211,
                    "min": 113.36886,
                    "p50": 116.327895,
                    "p95": 120.65211,
                    "p99": 120.65211,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 234.010832,
                    "min": 193.092591,
                    "p50": 232.67458299999998,
                    "p95": 234.010832,
                    "p99": 234.010832,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 109.366113,
                    "min": 100.50679699999999,
                    "p50": 107.66823099999999,
                    "p95": 109.366113,
                    "p99": 109.366113,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 100.443556,
                    "min": 58.471576999999996,
                    "p50": 96.750239,
                    "p95": 100.443556,
                    "p99": 100.443556,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.663471,
                    "min": 39.194887,
                    "p50": 62.838117,
                    "p95": 78.663471,
                    "p99": 78.663471,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 177.27455799999998,
                    "min": 166.280517,
                    "p50": 174.68342199999998,
                    "p95": 177.27455799999998,
                    "p99": 177.27455799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 148.90123699999998,
                    "min": 116.26870799999999,
                    "p50": 145.916165,
                    "p95": 148.90123699999998,
                    "p99": 148.90123699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 340.438467,
                    "min": 322.459361,
                    "p50": 327.51014,
                    "p95": 340.438467,
                    "p99": 340.438467,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 133.227993,
                    "min": 125.54175799999999,
                    "p50": 128.13439499999998,
                    "p95": 133.227993,
                    "p99": 133.227993,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1008.457178,
                    "min": 986.6775339999999,
                    "p50": 996.591512,
                    "p95": 1008.457178,
                    "p99": 1008.457178,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 91.863153,
                    "min": 86.918566,
                    "p50": 90.040396,
                    "p95": 91.863153,
                    "p99": 91.863153,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 169.05944399999998,
                    "min": 126.894813,
                    "p50": 165.74312899999998,
                    "p95": 169.05944399999998,
                    "p99": 169.05944399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 159.190256,
                    "min": 142.883105,
                    "p50": 155.976125,
                    "p95": 159.190256,
                    "p99": 159.190256,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 428.312014,
                    "min": 384.992013,
                    "p50": 422.299491,
                    "p95": 428.312014,
                    "p99": 428.312014,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.98565,
                    "min": 29.820743,
                    "p50": 59.256873,
                    "p95": 61.98565,
                    "p99": 61.98565,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 190.008864,
                    "min": 145.19979,
                    "p50": 184.364062,
                    "p95": 190.008864,
                    "p99": 190.008864,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 137.053495,
                    "min": 106.28262,
                    "p50": 136.139667,
                    "p95": 137.053495,
                    "p99": 137.053495,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 523.528821,
                    "min": 486.28507099999996,
                    "p50": 513.153288,
                    "p95": 523.528821,
                    "p99": 523.528821,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1141.6123109999999,
                    "min": 1113.847693,
                    "p50": 1131.407014,
                    "p95": 1141.6123109999999,
                    "p99": 1141.6123109999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 984.0220019999999,
                    "min": 929.232679,
                    "p50": 972.8223529999999,
                    "p95": 984.0220019999999,
                    "p99": 984.0220019999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1447.47127,
                    "min": 1417.1309469999999,
                    "p50": 1442.588243,
                    "p95": 1447.47127,
                    "p99": 1447.47127,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 503.430576,
                    "min": 482.73605999999995,
                    "p50": 499.13011,
                    "p95": 503.430576,
                    "p99": 503.430576,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 658.495201,
                    "min": 625.817814,
                    "p50": 655.550677,
                    "p95": 658.495201,
                    "p99": 658.495201,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1295.971525,
                    "min": 1239.597291,
                    "p50": 1281.7450469999999,
                    "p95": 1295.971525,
                    "p99": 1295.971525,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 824.9296039999999,
                    "min": 795.9706719999999,
                    "p50": 813.402613,
                    "p95": 824.9296039999999,
                    "p99": 824.9296039999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1503.416152,
                    "min": 1437.0983959999999,
                    "p50": 1494.901009,
                    "p95": 1503.416152,
                    "p99": 1503.416152,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 479.68217999999996,
                    "min": 464.158618,
                    "p50": 472.906705,
                    "p95": 479.68217999999996,
                    "p99": 479.68217999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1206.6452339999998,
                    "min": 1155.1758089999998,
                    "p50": 1194.878004,
                    "p95": 1206.6452339999998,
                    "p99": 1206.6452339999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 915.95439,
                    "min": 890.543697,
                    "p50": 903.9969709999999,
                    "p95": 915.95439,
                    "p99": 915.95439,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1054.868041,
                    "min": 1042.160506,
                    "p50": 1049.3354319999999,
                    "p95": 1054.868041,
                    "p99": 1054.868041,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1358.3439309999999,
                    "min": 1293.026232,
                    "p50": 1340.569362,
                    "p95": 1358.3439309999999,
                    "p99": 1358.3439309999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 619.666159,
                    "min": 607.159019,
                    "p50": 616.822505,
                    "p95": 619.666159,
                    "p99": 619.666159,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 760.20484,
                    "min": 728.916534,
                    "p50": 755.0761339999999,
                    "p95": 760.20484,
                    "p99": 760.20484,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 173.20082299999999,
                    "min": 129.91466699999998,
                    "p50": 168.027547,
                    "p95": 173.20082299999999,
                    "p99": 173.20082299999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 272.305634,
                    "min": 249.906981,
                    "p50": 263.322767,
                    "p95": 272.305634,
                    "p99": 272.305634,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 336.154032,
                    "min": 293.639859,
                    "p50": 327.312256,
                    "p95": 336.154032,
                    "p99": 336.154032,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 237.829648,
                    "min": 192.94529699999998,
                    "p50": 231.907409,
                    "p95": 237.829648,
                    "p99": 237.829648,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 428.059807,
                    "min": 389.18708499999997,
                    "p50": 424.26106799999997,
                    "p95": 428.059807,
                    "p99": 428.059807,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 139.283897,
                    "min": 96.58507499999999,
                    "p50": 136.007845,
                    "p95": 139.283897,
                    "p99": 139.283897,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 366.94667999999996,
                    "min": 322.57471,
                    "p50": 360.850087,
                    "p95": 366.94667999999996,
                    "p99": 366.94667999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 297.65794999999997,
                    "min": 262.11609899999996,
                    "p50": 294.563341,
                    "p95": 297.65794999999997,
                    "p99": 297.65794999999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 204.30549399999998,
                    "min": 182.590902,
                    "p50": 201.29659099999998,
                    "p95": 204.30549399999998,
                    "p99": 204.30549399999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 392.95937599999996,
                    "min": 356.36940699999997,
                    "p50": 385.062927,
                    "p95": 392.95937599999996,
                    "p99": 392.95937599999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 988.14329,
                    "min": 944.2687139999999,
                    "p50": 984.2427789999999,
                    "p95": 988.14329,
                    "p99": 988.14329,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1319.64708,
                    "min": 1290.416743,
                    "p50": 1300.696868,
                    "p95": 1319.64708,
                    "p99": 1319.64708,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 359.420995,
                    "min": 337.42100999999997,
                    "p50": 355.61972599999996,
                    "p95": 359.420995,
                    "p99": 359.420995,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 679.349195,
                    "min": 632.7924869999999,
                    "p50": 671.314813,
                    "p95": 679.349195,
                    "p99": 679.349195,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1143.401936,
                    "min": 1112.0816049999999,
                    "p50": 1142.644038,
                    "p95": 1143.401936,
                    "p99": 1143.401936,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 516.717097,
                    "min": 476.954475,
                    "p50": 512.84958,
                    "p95": 516.717097,
                    "p99": 516.717097,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 838.915765,
                    "min": 806.0411459999999,
                    "p50": 825.110201,
                    "p95": 838.915765,
                    "p99": 838.915765,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 347.20107099999996,
                    "min": 301.633983,
                    "p50": 340.194637,
                    "p95": 347.20107099999996,
                    "p99": 347.20107099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 191.62453299999999,
                    "min": 151.796968,
                    "p50": 186.676979,
                    "p95": 191.62453299999999,
                    "p99": 191.62453299999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 128.485099,
                    "min": 104.954878,
                    "p50": 125.734381,
                    "p95": 128.485099,
                    "p99": 128.485099,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 326.591506,
                    "min": 306.831462,
                    "p50": 319.695851,
                    "p95": 326.591506,
                    "p99": 326.591506,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 257.75642899999997,
                    "min": 215.613419,
                    "p50": 254.103683,
                    "p95": 257.75642899999997,
                    "p99": 257.75642899999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 211.947714,
                    "min": 185.831811,
                    "p50": 209.834946,
                    "p95": 211.947714,
                    "p99": 211.947714,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 307.20235199999996,
                    "min": 294.166437,
                    "p50": 301.865036,
                    "p95": 307.20235199999996,
                    "p99": 307.20235199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 151.537757,
                    "min": 144.270681,
                    "p50": 147.581868,
                    "p95": 151.537757,
                    "p99": 151.537757,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.52740899999999,
                    "min": 99.562077,
                    "p50": 103.99708199999999,
                    "p95": 106.52740899999999,
                    "p99": 106.52740899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 425.178703,
                    "min": 413.989605,
                    "p50": 423.73221,
                    "p95": 425.178703,
                    "p99": 425.178703,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 368.595571,
                    "min": 327.027733,
                    "p50": 364.20347899999996,
                    "p95": 368.595571,
                    "p99": 368.595571,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 479.216863,
                    "min": 470.635906,
                    "p50": 474.510967,
                    "p95": 479.216863,
                    "p99": 479.216863,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 234.41846999999999,
                    "min": 196.42608099999998,
                    "p50": 230.38333699999998,
                    "p95": 234.41846999999999,
                    "p99": 234.41846999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 285.332565,
                    "min": 260.832679,
                    "p50": 278.674911,
                    "p95": 285.332565,
                    "p99": 285.332565,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 169.63476799999998,
                    "min": 130.88161399999998,
                    "p50": 168.498976,
                    "p95": 169.63476799999998,
                    "p99": 169.63476799999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 310.696288,
                    "min": 296.52502899999996,
                    "p50": 308.163095,
                    "p95": 310.696288,
                    "p99": 310.696288,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 146.17524899999998,
                    "min": 128.66311199999998,
                    "p50": 141.843867,
                    "p95": 146.17524899999998,
                    "p99": 146.17524899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 353.94100399999996,
                    "min": 307.125404,
                    "p50": 349.9025,
                    "p95": 353.94100399999996,
                    "p99": 353.94100399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 248.434133,
                    "min": 232.05075699999998,
                    "p50": 245.81192399999998,
                    "p95": 248.434133,
                    "p99": 248.434133,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 126.27781399999999,
                    "min": 110.78950599999999,
                    "p50": 122.395404,
                    "p95": 126.27781399999999,
                    "p99": 126.27781399999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 168.129402,
                    "min": 158.792726,
                    "p50": 163.40497299999998,
                    "p95": 168.129402,
                    "p99": 168.129402,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 293.377298,
                    "min": 258.072883,
                    "p50": 288.367506,
                    "p95": 293.377298,
                    "p99": 293.377298,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 336.755586,
                    "min": 309.535591,
                    "p50": 333.138288,
                    "p95": 336.755586,
                    "p99": 336.755586,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 465.974601,
                    "min": 413.057547,
                    "p50": 454.48783,
                    "p95": 465.974601,
                    "p99": 465.974601,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 188.64648599999998,
                    "min": 174.440843,
                    "p50": 184.445761,
                    "p95": 188.64648599999998,
                    "p99": 188.64648599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 410.010178,
                    "min": 391.34045699999996,
                    "p50": 407.15743599999996,
                    "p95": 410.010178,
                    "p99": 410.010178,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 207.641752,
                    "min": 177.093177,
                    "p50": 204.646842,
                    "p95": 207.641752,
                    "p99": 207.641752,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 271.749604,
                    "min": 264.63557099999997,
                    "p50": 269.70376,
                    "p95": 271.749604,
                    "p99": 271.749604,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 228.504233,
                    "min": 211.422871,
                    "p50": 226.664619,
                    "p95": 228.504233,
                    "p99": 228.504233,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 103.132843,
                    "min": 94.886568,
                    "p50": 101.021554,
                    "p95": 103.132843,
                    "p99": 103.132843,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.22518499999998,
                    "min": 129.722207,
                    "p50": 146.55428899999998,
                    "p95": 149.22518499999998,
                    "p99": 149.22518499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 216.06544599999998,
                    "min": 172.548676,
                    "p50": 210.873063,
                    "p95": 216.06544599999998,
                    "p99": 216.06544599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 194.980932,
                    "min": 155.092967,
                    "p50": 189.50812499999998,
                    "p95": 194.980932,
                    "p99": 194.980932,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 422.10162199999996,
                    "min": 382.727472,
                    "p50": 418.347832,
                    "p95": 422.10162199999996,
                    "p99": 422.10162199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 366.24814899999996,
                    "min": 322.96604099999996,
                    "p50": 360.078786,
                    "p95": 366.24814899999996,
                    "p99": 366.24814899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 109.61314899999999,
                    "min": 99.164818,
                    "p50": 105.023484,
                    "p95": 109.61314899999999,
                    "p99": 109.61314899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.51280299999996,
                    "min": 273.89047999999997,
                    "p50": 278.721632,
                    "p95": 282.51280299999996,
                    "p99": 282.51280299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 257.105254,
                    "min": 221.441264,
                    "p50": 253.17430099999999,
                    "p95": 257.105254,
                    "p99": 257.105254,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 125.826669,
                    "min": 107.28544099999999,
                    "p50": 122.939808,
                    "p95": 125.826669,
                    "p99": 125.826669,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 303.762542,
                    "min": 298.848728,
                    "p50": 300.957645,
                    "p95": 303.762542,
                    "p99": 303.762542,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.503494,
                    "min": 224.068038,
                    "p50": 231.484064,
                    "p95": 236.503494,
                    "p99": 236.503494,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 474.90561599999995,
                    "min": 461.96593099999996,
                    "p50": 472.29731599999997,
                    "p95": 474.90561599999995,
                    "p99": 474.90561599999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 344.20428499999997,
                    "min": 330.918213,
                    "p50": 342.717903,
                    "p95": 344.20428499999997,
                    "p99": 344.20428499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 170.701181,
                    "min": 157.716905,
                    "p50": 168.49469299999998,
                    "p95": 170.701181,
                    "p99": 170.701181,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 328.266141,
                    "min": 319.192007,
                    "p50": 322.739171,
                    "p95": 328.266141,
                    "p99": 328.266141,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 477.214679,
                    "min": 437.37650499999995,
                    "p50": 470.09086499999995,
                    "p95": 477.214679,
                    "p99": 477.214679,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 130.612548,
                    "min": 87.41051499999999,
                    "p50": 125.81653,
                    "p95": 130.612548,
                    "p99": 130.612548,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.53005499999998,
                    "min": 196.15057199999998,
                    "p50": 233.051563,
                    "p95": 236.53005499999998,
                    "p99": 236.53005499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 261.022953,
                    "min": 217.917157,
                    "p50": 254.53881099999998,
                    "p95": 261.022953,
                    "p99": 261.022953,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 284.435659,
                    "min": 239.45850199999998,
                    "p50": 268.455139,
                    "p95": 284.435659,
                    "p99": 284.435659,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 423.35867299999995,
                    "min": 405.669937,
                    "p50": 421.983777,
                    "p95": 423.35867299999995,
                    "p99": 423.35867299999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 304.295594,
                    "min": 288.61819099999997,
                    "p50": 298.75688099999996,
                    "p95": 304.295594,
                    "p99": 304.295594,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 325.352673,
                    "min": 307.708038,
                    "p50": 322.93393199999997,
                    "p95": 325.352673,
                    "p99": 325.352673,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 105.40722,
                    "min": 65.927359,
                    "p50": 104.311404,
                    "p95": 105.40722,
                    "p99": 105.40722,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 171.470667,
                    "min": 131.19400199999998,
                    "p50": 168.010265,
                    "p95": 171.470667,
                    "p99": 171.470667,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 148.827969,
                    "min": 146.600134,
                    "p50": 148.166114,
                    "p95": 148.827969,
                    "p99": 148.827969,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 373.69879699999996,
                    "min": 348.583018,
                    "p50": 368.735443,
                    "p95": 373.69879699999996,
                    "p99": 373.69879699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 215.83549399999998,
                    "min": 201.87708999999998,
                    "p50": 211.327596,
                    "p95": 215.83549399999998,
                    "p99": 215.83549399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 349.453774,
                    "min": 309.744974,
                    "p50": 347.937681,
                    "p95": 349.453774,
                    "p99": 349.453774,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 192.65934099999998,
                    "min": 152.032277,
                    "p50": 185.077241,
                    "p95": 192.65934099999998,
                    "p99": 192.65934099999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 159.54278399999998,
                    "min": 144.960199,
                    "p50": 154.091195,
                    "p95": 159.54278399999998,
                    "p99": 159.54278399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 55.824236,
                    "min": 27.165111999999997,
                    "p50": 52.370425,
                    "p95": 55.824236,
                    "p99": 55.824236,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 706.55585,
                    "min": 657.620919,
                    "p50": 698.740721,
                    "p95": 706.55585,
                    "p99": 706.55585,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 172.02004499999998,
                    "min": 159.28633299999998,
                    "p50": 170.54404,
                    "p95": 172.02004499999998,
                    "p99": 172.02004499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 237.09320499999998,
                    "min": 222.06356499999998,
                    "p50": 233.54222299999998,
                    "p95": 237.09320499999998,
                    "p99": 237.09320499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 106.468181,
                    "min": 99.410111,
                    "p50": 104.49387,
                    "p95": 106.468181,
                    "p99": 106.468181,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 306.596874,
                    "min": 260.50627,
                    "p50": 300.467754,
                    "p95": 306.596874,
                    "p99": 306.596874,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 81.110844,
                    "min": 45.402609999999996,
                    "p50": 77.673349,
                    "p95": 81.110844,
                    "p99": 81.110844,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 95.26603899999999,
                    "min": 70.42681,
                    "p50": 90.976348,
                    "p95": 95.26603899999999,
                    "p99": 95.26603899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 41.070533,
                    "min": 23.096992999999998,
                    "p50": 39.634296,
                    "p95": 41.070533,
                    "p99": 41.070533,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.046078,
                    "min": 60.360015,
                    "p50": 98.34674299999999,
                    "p95": 102.046078,
                    "p99": 102.046078,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 89.056949,
                    "min": 84.51364199999999,
                    "p50": 86.511596,
                    "p95": 89.056949,
                    "p99": 89.056949,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 116.48140099999999,
                    "min": 110.12861,
                    "p50": 111.824835,
                    "p95": 116.48140099999999,
                    "p99": 116.48140099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 132.065279,
                    "min": 111.29862399999999,
                    "p50": 125.29192599999999,
                    "p95": 132.065279,
                    "p99": 132.065279,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 124.087384,
                    "min": 113.809776,
                    "p50": 118.139647,
                    "p95": 124.087384,
                    "p99": 124.087384,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 374.505001,
                    "min": 355.266301,
                    "p50": 371.86420899999996,
                    "p95": 374.505001,
                    "p99": 374.505001,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 68.931816,
                    "min": 33.230349,
                    "p50": 65.91396,
                    "p95": 68.931816,
                    "p99": 68.931816,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 132.896195,
                    "min": 93.866811,
                    "p50": 130.6616,
                    "p95": 132.896195,
                    "p99": 132.896195,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 142.460926,
                    "min": 98.718176,
                    "p50": 137.601061,
                    "p95": 142.460926,
                    "p99": 142.460926,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 268.219341,
                    "min": 253.02123999999998,
                    "p50": 263.41574399999996,
                    "p95": 268.219341,
                    "p99": 268.219341,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 84.888288,
                    "min": 46.15839,
                    "p50": 83.995468,
                    "p95": 84.888288,
                    "p99": 84.888288,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 340.367657,
                    "min": 333.22763599999996,
                    "p50": 336.661746,
                    "p95": 340.367657,
                    "p99": 340.367657,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 190.892307,
                    "min": 181.65336499999998,
                    "p50": 189.44902199999999,
                    "p95": 190.892307,
                    "p99": 190.892307,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 147.586478,
                    "min": 105.564745,
                    "p50": 144.357838,
                    "p95": 147.586478,
                    "p99": 147.586478,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 156.862977,
                    "min": 140.860843,
                    "p50": 152.582967,
                    "p95": 156.862977,
                    "p99": 156.862977,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 139.40113,
                    "min": 97.43015299999999,
                    "p50": 135.559127,
                    "p95": 139.40113,
                    "p99": 139.40113,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 171.321925,
                    "min": 150.877549,
                    "p50": 170.50177599999998,
                    "p95": 171.321925,
                    "p99": 171.321925,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.666554,
                    "min": 24.247301,
                    "p50": 46.397563,
                    "p95": 48.666554,
                    "p99": 48.666554,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 787.106443,
                    "min": 772.076095,
                    "p50": 781.0155709999999,
                    "p95": 787.106443,
                    "p99": 787.106443,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 64.395169,
                    "min": 31.061134,
                    "p50": 60.282185999999996,
                    "p95": 64.395169,
                    "p99": 64.395169,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 76.695062,
                    "min": 74.47343599999999,
                    "p50": 74.633811,
                    "p95": 76.695062,
                    "p99": 76.695062,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 101.97712,
                    "min": 60.882521,
                    "p50": 99.792981,
                    "p95": 101.97712,
                    "p99": 101.97712,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 129.228555,
                    "min": 106.98198599999999,
                    "p50": 128.371671,
                    "p95": 129.228555,
                    "p99": 129.228555,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 110.64411199999999,
                    "min": 103.63757199999999,
                    "p50": 106.814578,
                    "p95": 110.64411199999999,
                    "p99": 110.64411199999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.23003299999999,
                    "min": 99.35800599999999,
                    "p50": 121.2323,
                    "p95": 122.23003299999999,
                    "p99": 122.23003299999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 95.443113,
                    "min": 84.917098,
                    "p50": 92.002988,
                    "p95": 95.443113,
                    "p99": 95.443113,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 115.968178,
                    "min": 77.21755399999999,
                    "p50": 113.81342699999999,
                    "p95": 115.968178,
                    "p99": 115.968178,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 414.318385,
                    "min": 376.613718,
                    "p50": 411.911202,
                    "p95": 414.318385,
                    "p99": 414.318385,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 126.888719,
                    "min": 86.597127,
                    "p50": 125.477018,
                    "p95": 126.888719,
                    "p99": 126.888719,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 711.0216419999999,
                    "min": 702.6145379999999,
                    "p50": 708.635175,
                    "p95": 711.0216419999999,
                    "p99": 711.0216419999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 132.298072,
                    "min": 93.199135,
                    "p50": 131.547012,
                    "p95": 132.298072,
                    "p99": 132.298072,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 99.44412299999999,
                    "min": 59.375682,
                    "p50": 97.86644199999999,
                    "p95": 99.44412299999999,
                    "p99": 99.44412299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 155.25456499999999,
                    "min": 136.212649,
                    "p50": 153.78476899999998,
                    "p95": 155.25456499999999,
                    "p99": 155.25456499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 175.42386199999999,
                    "min": 133.13302199999998,
                    "p50": 171.29103899999998,
                    "p95": 175.42386199999999,
                    "p99": 175.42386199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 74.280517,
                    "min": 63.563458999999995,
                    "p50": 66.94264,
                    "p95": 74.280517,
                    "p99": 74.280517,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 106.65959699999999,
                    "min": 86.00186,
                    "p50": 105.59662999999999,
                    "p95": 106.65959699999999,
                    "p99": 106.65959699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 91.467912,
                    "min": 47.483441,
                    "p50": 86.350731,
                    "p95": 91.467912,
                    "p99": 91.467912,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 142.381342,
                    "min": 100.462893,
                    "p50": 139.342403,
                    "p95": 142.381342,
                    "p99": 142.381342,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 122.09015799999999,
                    "min": 80.29839199999999,
                    "p50": 117.71529299999999,
                    "p95": 122.09015799999999,
                    "p99": 122.09015799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 308.867033,
                    "min": 266.636817,
                    "p50": 304.64885499999997,
                    "p95": 308.867033,
                    "p99": 308.867033,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 240.85499399999998,
                    "min": 221.997376,
                    "p50": 239.283898,
                    "p95": 240.85499399999998,
                    "p99": 240.85499399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 115.25020599999999,
                    "min": 101.096458,
                    "p50": 112.574974,
                    "p95": 115.25020599999999,
                    "p99": 115.25020599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 43.203407,
                    "min": 39.553847999999995,
                    "p50": 40.675799999999995,
                    "p95": 43.203407,
                    "p99": 43.203407,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 96.329144,
                    "min": 61.561685999999995,
                    "p50": 92.880837,
                    "p95": 96.329144,
                    "p99": 96.329144,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 53.37744,
                    "min": 27.29644,
                    "p50": 52.461652,
                    "p95": 53.37744,
                    "p99": 53.37744,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 78.532536,
                    "min": 71.365574,
                    "p50": 77.824441,
                    "p95": 78.532536,
                    "p99": 78.532536,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 377.59225399999997,
                    "min": 346.45066499999996,
                    "p50": 365.325693,
                    "p95": 377.59225399999997,
                    "p99": 377.59225399999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.920255,
                    "min": 111.67133199999999,
                    "p50": 122.351186,
                    "p95": 122.920255,
                    "p99": 122.920255,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.413142,
                    "min": 78.68182999999999,
                    "p50": 91.07767,
                    "p95": 93.413142,
                    "p99": 93.413142,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.345638,
                    "min": 45.791478999999995,
                    "p50": 60.341428,
                    "p95": 69.345638,
                    "p99": 69.345638,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 103.205503,
                    "min": 93.20987799999999,
                    "p50": 100.482529,
                    "p95": 103.205503,
                    "p99": 103.205503,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 191.30408599999998,
                    "min": 178.453274,
                    "p50": 188.975336,
                    "p95": 191.30408599999998,
                    "p99": 191.30408599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.295449999999995,
                    "min": 45.26659,
                    "p50": 45.659276,
                    "p95": 51.295449999999995,
                    "p99": 51.295449999999995,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 788.8811129999999,
                    "min": 741.303998,
                    "p50": 776.6030079999999,
                    "p95": 788.8811129999999,
                    "p99": 788.8811129999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 171.73878499999998,
                    "min": 130.178199,
                    "p50": 170.2012,
                    "p95": 171.73878499999998,
                    "p99": 171.73878499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 76.843138,
                    "min": 38.395773,
                    "p50": 74.627982,
                    "p95": 76.843138,
                    "p99": 76.843138,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 117.43522399999999,
                    "min": 109.086584,
                    "p50": 115.061624,
                    "p95": 117.43522399999999,
                    "p99": 117.43522399999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 145.884454,
                    "min": 104.30323399999999,
                    "p50": 144.48413399999998,
                    "p95": 145.884454,
                    "p99": 145.884454,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.566412,
                    "min": 45.81816,
                    "p50": 84.647718,
                    "p95": 85.566412,
                    "p99": 85.566412,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 131.726588,
                    "min": 125.832551,
                    "p50": 129.956235,
                    "p95": 131.726588,
                    "p99": 131.726588,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 417.249735,
                    "min": 409.081806,
                    "p50": 414.877048,
                    "p95": 417.249735,
                    "p99": 417.249735,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 270.59289,
                    "min": 257.540716,
                    "p50": 264.77548,
                    "p95": 270.59289,
                    "p99": 270.59289,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 141.552851,
                    "min": 97.53943699999999,
                    "p50": 137.010755,
                    "p95": 141.552851,
                    "p99": 141.552851,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 109.186617,
                    "min": 95.51621899999999,
                    "p50": 107.419175,
                    "p95": 109.186617,
                    "p99": 109.186617,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 155.389657,
                    "min": 145.81991,
                    "p50": 153.055613,
                    "p95": 155.389657,
                    "p99": 155.389657,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 342.09218699999997,
                    "min": 297.342356,
                    "p50": 339.812439,
                    "p95": 342.09218699999997,
                    "p99": 342.09218699999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.01956299999999,
                    "min": 55.110256,
                    "p50": 92.675299,
                    "p95": 93.01956299999999,
                    "p99": 93.01956299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 139.251114,
                    "min": 104.494946,
                    "p50": 137.966909,
                    "p95": 139.251114,
                    "p99": 139.251114,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 129.519472,
                    "min": 84.01826799999999,
                    "p50": 123.600759,
                    "p95": 129.519472,
                    "p99": 129.519472,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.077377,
                    "min": 56.830732,
                    "p50": 84.448554,
                    "p95": 86.077377,
                    "p99": 86.077377,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 192.767508,
                    "min": 155.479917,
                    "p50": 190.852698,
                    "p95": 192.767508,
                    "p99": 192.767508,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 61.559501,
                    "min": 43.368665,
                    "p50": 60.498504,
                    "p95": 61.559501,
                    "p99": 61.559501,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 103.68664799999999,
                    "min": 61.438468,
                    "p50": 100.700436,
                    "p95": 103.68664799999999,
                    "p99": 103.68664799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 116.75352199999999,
                    "min": 77.592007,
                    "p50": 116.35319299999999,
                    "p95": 116.75352199999999,
                    "p99": 116.75352199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 161.014594,
                    "min": 151.801097,
                    "p50": 155.099226,
                    "p95": 161.014594,
                    "p99": 161.014594,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 270.178203,
                    "min": 252.29897799999998,
                    "p50": 268.261896,
                    "p95": 270.178203,
                    "p99": 270.178203,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 132.56994899999998,
                    "min": 127.319228,
                    "p50": 130.970882,
                    "p95": 132.56994899999998,
                    "p99": 132.56994899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 108.52626699999999,
                    "min": 95.122616,
                    "p50": 107.32557399999999,
                    "p95": 108.52626699999999,
                    "p99": 108.52626699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 79.80743199999999,
                    "min": 39.160998,
                    "p50": 75.72093199999999,
                    "p95": 79.80743199999999,
                    "p99": 79.80743199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 151.29993,
                    "min": 126.830288,
                    "p50": 147.345995,
                    "p95": 151.29993,
                    "p99": 151.29993,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 174.005165,
                    "min": 140.214329,
                    "p50": 172.96371499999998,
                    "p95": 174.005165,
                    "p99": 174.005165,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 348.966277,
                    "min": 317.050954,
                    "p50": 343.920799,
                    "p95": 348.966277,
                    "p99": 348.966277,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 429.420415,
                    "min": 378.704819,
                    "p50": 421.86359799999997,
                    "p95": 429.420415,
                    "p99": 429.420415,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 809.016297,
                    "min": 785.044664,
                    "p50": 803.6562369999999,
                    "p95": 809.016297,
                    "p99": 809.016297,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 49.275113,
                    "min": 23.828775,
                    "p50": 45.630914,
                    "p95": 49.275113,
                    "p99": 49.275113,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 379.255833,
                    "min": 355.294065,
                    "p50": 373.899169,
                    "p95": 379.255833,
                    "p99": 379.255833,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 128.731922,
                    "min": 98.553572,
                    "p50": 125.77153299999999,
                    "p95": 128.731922,
                    "p99": 128.731922,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 108.22625199999999,
                    "min": 82.169927,
                    "p50": 105.153331,
                    "p95": 108.22625199999999,
                    "p99": 108.22625199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 143.758105,
                    "min": 137.28086,
                    "p50": 139.038792,
                    "p95": 143.758105,
                    "p99": 143.758105,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.074326,
                    "min": 47.344403,
                    "p50": 86.097115,
                    "p95": 87.074326,
                    "p99": 87.074326,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 69.69545099999999,
                    "min": 52.156926999999996,
                    "p50": 67.360987,
                    "p95": 69.69545099999999,
                    "p99": 69.69545099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 42.985994,
                    "min": 25.620724,
                    "p50": 40.646938999999996,
                    "p95": 42.985994,
                    "p99": 42.985994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 116.88068399999999,
                    "min": 93.959285,
                    "p50": 112.535197,
                    "p95": 116.88068399999999,
                    "p99": 116.88068399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 161.968052,
                    "min": 148.673152,
                    "p50": 156.533505,
                    "p95": 161.968052,
                    "p99": 161.968052,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 79.237571,
                    "min": 40.826254999999996,
                    "p50": 78.54883199999999,
                    "p95": 79.237571,
                    "p99": 79.237571,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 93.85929999999999,
                    "min": 53.806979,
                    "p50": 92.207025,
                    "p95": 93.85929999999999,
                    "p99": 93.85929999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 136.025261,
                    "min": 92.565343,
                    "p50": 133.178181,
                    "p95": 136.025261,
                    "p99": 136.025261,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 310.258854,
                    "min": 303.55285399999997,
                    "p50": 307.637476,
                    "p95": 310.258854,
                    "p99": 310.258854,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.28985899999999,
                    "min": 59.958802999999996,
                    "p50": 98.422787,
                    "p95": 102.28985899999999,
                    "p99": 102.28985899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 172.518354,
                    "min": 131.878709,
                    "p50": 171.61206199999998,
                    "p95": 172.518354,
                    "p99": 172.518354,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 120.52814699999999,
                    "min": 118.19829399999999,
                    "p50": 118.816739,
                    "p95": 120.52814699999999,
                    "p99": 120.52814699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 62.337094,
                    "min": 45.891537,
                    "p50": 52.87083,
                    "p95": 62.337094,
                    "p99": 62.337094,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 243.643632,
                    "min": 235.22249699999998,
                    "p50": 237.43329799999998,
                    "p95": 243.643632,
                    "p99": 243.643632,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 144.220292,
                    "min": 121.112594,
                    "p50": 139.349681,
                    "p95": 144.220292,
                    "p99": 144.220292,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 116.89273499999999,
                    "min": 76.150571,
                    "p50": 110.82847199999999,
                    "p95": 116.89273499999999,
                    "p99": 116.89273499999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.273258,
                    "min": 127.418627,
                    "p50": 164.34775399999998,
                    "p95": 168.273258,
                    "p99": 168.273258,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 556.468394,
                    "min": 537.533447,
                    "p50": 555.514717,
                    "p95": 556.468394,
                    "p99": 556.468394,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 371.745686,
                    "min": 328.64336499999996,
                    "p50": 367.377772,
                    "p95": 371.745686,
                    "p99": 371.745686,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 426.639101,
                    "min": 387.152109,
                    "p50": 423.198804,
                    "p95": 426.639101,
                    "p99": 426.639101,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 489.62074199999995,
                    "min": 452.58090799999997,
                    "p50": 488.336347,
                    "p95": 489.62074199999995,
                    "p99": 489.62074199999995,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 270.16959299999996,
                    "min": 260.61803,
                    "p50": 266.034453,
                    "p95": 270.16959299999996,
                    "p99": 270.16959299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 197.74638099999999,
                    "min": 189.54940499999998,
                    "p50": 192.158243,
                    "p95": 197.74638099999999,
                    "p99": 197.74638099999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 244.541955,
                    "min": 203.48252599999998,
                    "p50": 240.688389,
                    "p95": 244.541955,
                    "p99": 244.541955,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 217.572586,
                    "min": 178.88338099999999,
                    "p50": 215.319827,
                    "p95": 217.572586,
                    "p99": 217.572586,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 294.976741,
                    "min": 282.117459,
                    "p50": 290.30409499999996,
                    "p95": 294.976741,
                    "p99": 294.976741,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 321.243749,
                    "min": 277.628016,
                    "p50": 317.674176,
                    "p95": 321.243749,
                    "p99": 321.243749,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 396.612605,
                    "min": 352.101435,
                    "p50": 389.434389,
                    "p95": 396.612605,
                    "p99": 396.612605,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 344.473208,
                    "min": 303.44420199999996,
                    "p50": 341.065698,
                    "p95": 344.473208,
                    "p99": 344.473208,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 319.749275,
                    "min": 297.704101,
                    "p50": 313.29020299999996,
                    "p95": 319.749275,
                    "p99": 319.749275,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 371.039513,
                    "min": 329.54274699999996,
                    "p50": 365.459366,
                    "p95": 371.039513,
                    "p99": 371.039513,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 398.53790499999997,
                    "min": 355.296502,
                    "p50": 388.32489599999997,
                    "p95": 398.53790499999997,
                    "p99": 398.53790499999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 143.158,
                    "min": 121.73963699999999,
                    "p50": 139.214978,
                    "p95": 143.158,
                    "p99": 143.158,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 166.189257,
                    "min": 161.792306,
                    "p50": 164.47471299999998,
                    "p95": 166.189257,
                    "p99": 166.189257,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 217.969869,
                    "min": 192.820924,
                    "p50": 214.38647699999999,
                    "p95": 217.969869,
                    "p99": 217.969869,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 191.49545,
                    "min": 152.274675,
                    "p50": 189.003028,
                    "p95": 191.49545,
                    "p99": 191.49545,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 294.654446,
                    "min": 288.397489,
                    "p50": 290.144,
                    "p95": 294.654446,
                    "p99": 294.654446,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.256192,
                    "min": 113.49895,
                    "p50": 114.51858999999999,
                    "p95": 120.256192,
                    "p99": 120.256192,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 245.037015,
                    "min": 200.988432,
                    "p50": 240.64367099999998,
                    "p95": 245.037015,
                    "p99": 245.037015,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 483.63039799999996,
                    "min": 466.93282899999997,
                    "p50": 480.401722,
                    "p95": 483.63039799999996,
                    "p99": 483.63039799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 552.2106699999999,
                    "min": 514.168039,
                    "p50": 543.540501,
                    "p95": 552.2106699999999,
                    "p99": 552.2106699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 426.90759099999997,
                    "min": 413.709203,
                    "p50": 422.027387,
                    "p95": 426.90759099999997,
                    "p99": 426.90759099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 276.285536,
                    "min": 263.008068,
                    "p50": 264.945142,
                    "p95": 276.285536,
                    "p99": 276.285536,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 351.10659799999996,
                    "min": 336.065704,
                    "p50": 339.981649,
                    "p95": 351.10659799999996,
                    "p99": 351.10659799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 371.793752,
                    "min": 330.629793,
                    "p50": 370.57232,
                    "p95": 371.793752,
                    "p99": 371.793752,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 351.05463,
                    "min": 309.497286,
                    "p50": 348.910842,
                    "p95": 351.05463,
                    "p99": 351.05463,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 400.515159,
                    "min": 379.091757,
                    "p50": 393.518325,
                    "p95": 400.515159,
                    "p99": 400.515159,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 462.968369,
                    "min": 444.913995,
                    "p50": 459.96236899999997,
                    "p95": 462.968369,
                    "p99": 462.968369,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 327.27077399999996,
                    "min": 310.46919199999996,
                    "p50": 321.686783,
                    "p95": 327.27077399999996,
                    "p99": 327.27077399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 304.566878,
                    "min": 260.61888,
                    "p50": 299.648033,
                    "p95": 304.566878,
                    "p99": 304.566878,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 111.00483899999999,
                    "min": 90.068349,
                    "p50": 108.763347,
                    "p95": 111.00483899999999,
                    "p99": 111.00483899999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 527.058672,
                    "min": 479.73909899999995,
                    "p50": 520.965557,
                    "p95": 527.058672,
                    "p99": 527.058672,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.572154,
                    "min": 271.857928,
                    "p50": 276.104351,
                    "p95": 278.572154,
                    "p99": 278.572154,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 258.381193,
                    "min": 232.033574,
                    "p50": 254.065135,
                    "p95": 258.381193,
                    "p99": 258.381193,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 186.575727,
                    "min": 173.224035,
                    "p50": 181.455929,
                    "p95": 186.575727,
                    "p99": 186.575727,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 230.76245799999998,
                    "min": 189.882738,
                    "p50": 227.885945,
                    "p95": 230.76245799999998,
                    "p99": 230.76245799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 207.66078299999998,
                    "min": 193.465337,
                    "p50": 204.267663,
                    "p95": 207.66078299999998,
                    "p99": 207.66078299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 134.07259299999998,
                    "min": 113.426572,
                    "p50": 132.915169,
                    "p95": 134.07259299999998,
                    "p99": 134.07259299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 159.032401,
                    "min": 118.710653,
                    "p50": 156.691071,
                    "p95": 159.032401,
                    "p99": 159.032401,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 392.14523199999996,
                    "min": 370.260939,
                    "p50": 389.73641799999996,
                    "p95": 392.14523199999996,
                    "p99": 392.14523199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 429.027613,
                    "min": 390.880094,
                    "p50": 422.811513,
                    "p95": 429.027613,
                    "p99": 429.027613,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 344.936653,
                    "min": 301.768554,
                    "p50": 340.39446899999996,
                    "p95": 344.936653,
                    "p99": 344.936653,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 496.108117,
                    "min": 482.919195,
                    "p50": 488.443335,
                    "p95": 496.108117,
                    "p99": 496.108117,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 145.470894,
                    "min": 100.734775,
                    "p50": 135.64182,
                    "p95": 145.470894,
                    "p99": 145.470894,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 323.807937,
                    "min": 306.22468599999996,
                    "p50": 316.570793,
                    "p95": 323.807937,
                    "p99": 323.807937,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 551.66701,
                    "min": 508.42112699999996,
                    "p50": 544.98448,
                    "p95": 551.66701,
                    "p99": 551.66701,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.011721,
                    "min": 153.557807,
                    "p50": 189.055841,
                    "p95": 194.011721,
                    "p99": 194.011721,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 240.42907699999998,
                    "min": 203.68580599999999,
                    "p50": 235.667104,
                    "p95": 240.42907699999998,
                    "p99": 240.42907699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 217.050975,
                    "min": 177.90994799999999,
                    "p50": 213.874655,
                    "p95": 217.050975,
                    "p99": 217.050975,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 167.409304,
                    "min": 125.881608,
                    "p50": 163.799739,
                    "p95": 167.409304,
                    "p99": 167.409304,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 270.259909,
                    "min": 245.483058,
                    "p50": 265.477108,
                    "p95": 270.259909,
                    "p99": 270.259909,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 293.87577,
                    "min": 254.62047099999998,
                    "p50": 285.941535,
                    "p95": 293.87577,
                    "p99": 293.87577,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 117.220396,
                    "min": 76.042889,
                    "p50": 113.44192,
                    "p95": 117.220396,
                    "p99": 117.220396,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 373.443162,
                    "min": 358.916211,
                    "p50": 364.34973199999996,
                    "p95": 373.443162,
                    "p99": 373.443162,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 596.8301389999999,
                    "min": 559.9077139999999,
                    "p50": 594.7461,
                    "p95": 596.8301389999999,
                    "p99": 596.8301389999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 373.811981,
                    "min": 335.378882,
                    "p50": 371.81359499999996,
                    "p95": 373.811981,
                    "p99": 373.811981,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 453.744485,
                    "min": 430.172784,
                    "p50": 445.248839,
                    "p95": 453.744485,
                    "p99": 453.744485,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 303.94793599999997,
                    "min": 288.754859,
                    "p50": 297.654698,
                    "p95": 303.94793599999997,
                    "p99": 303.94793599999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 265.597463,
                    "min": 259.551692,
                    "p50": 263.721829,
                    "p95": 265.597463,
                    "p99": 265.597463,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 414.258473,
                    "min": 395.89678399999997,
                    "p50": 410.515044,
                    "p95": 414.258473,
                    "p99": 414.258473,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.964336,
                    "min": 149.04128799999998,
                    "p50": 151.376555,
                    "p95": 152.964336,
                    "p99": 152.964336,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.656443,
                    "min": 149.38236799999999,
                    "p50": 187.349619,
                    "p95": 193.656443,
                    "p99": 193.656443,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 340.205023,
                    "min": 300.488143,
                    "p50": 337.381304,
                    "p95": 340.205023,
                    "p99": 340.205023,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 225.699629,
                    "min": 220.470837,
                    "p50": 224.971484,
                    "p95": 225.699629,
                    "p99": 225.699629,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 787.924103,
                    "min": 738.2353539999999,
                    "p50": 778.968656,
                    "p95": 787.924103,
                    "p99": 787.924103,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 489.242261,
                    "min": 444.418117,
                    "p50": 484.540393,
                    "p95": 489.242261,
                    "p99": 489.242261,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 693.32602,
                    "min": 679.684636,
                    "p50": 685.066845,
                    "p95": 693.32602,
                    "p99": 693.32602,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 559.362722,
                    "min": 516.5042159999999,
                    "p50": 556.228923,
                    "p95": 559.362722,
                    "p99": 559.362722,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 526.3370269999999,
                    "min": 481.998589,
                    "p50": 518.3260389999999,
                    "p95": 526.3370269999999,
                    "p99": 526.3370269999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1152.41769,
                    "min": 1105.708829,
                    "p50": 1141.57734,
                    "p95": 1152.41769,
                    "p99": 1152.41769,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 252.11578999999998,
                    "min": 210.225255,
                    "p50": 244.774703,
                    "p95": 252.11578999999998,
                    "p99": 252.11578999999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 190.551063,
                    "min": 151.854702,
                    "p50": 186.25712199999998,
                    "p95": 190.551063,
                    "p99": 190.551063,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 220.854726,
                    "min": 181.35304499999998,
                    "p50": 217.947204,
                    "p95": 220.854726,
                    "p99": 220.854726,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 409.37177599999995,
                    "min": 293.509418,
                    "p50": 315.46360599999997,
                    "p95": 409.37177599999995,
                    "p99": 409.37177599999995,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.63226599999996,
                    "min": 231.227445,
                    "p50": 281.729807,
                    "p95": 286.63226599999996,
                    "p99": 286.63226599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.612188,
                    "min": 200.05450199999999,
                    "p50": 204.82536499999998,
                    "p95": 208.612188,
                    "p99": 208.612188,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 95.325355,
                    "min": 41.714239,
                    "p50": 78.354637,
                    "p95": 95.325355,
                    "p99": 95.325355,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.70740699999999,
                    "min": 83.878647,
                    "p50": 94.425625,
                    "p95": 96.70740699999999,
                    "p99": 96.70740699999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.021853,
                    "min": 155.905025,
                    "p50": 175.018163,
                    "p95": 180.021853,
                    "p99": 180.021853,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.634271,
                    "min": 86.24556199999999,
                    "p50": 122.532415,
                    "p95": 125.634271,
                    "p99": 125.634271,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.374236,
                    "min": 152.44652,
                    "p50": 163.503581,
                    "p95": 165.374236,
                    "p99": 165.374236,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.448481,
                    "min": 68.107174,
                    "p50": 109.315331,
                    "p95": 111.448481,
                    "p99": 111.448481,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 233.361538,
                    "min": 191.11182,
                    "p50": 231.99437899999998,
                    "p95": 233.361538,
                    "p99": 233.361538,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.38266,
                    "min": 128.425256,
                    "p50": 149.680154,
                    "p95": 153.38266,
                    "p99": 153.38266,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.82122999999999,
                    "min": 116.241113,
                    "p50": 136.355615,
                    "p95": 136.82122999999999,
                    "p99": 136.82122999999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.060708,
                    "min": 129.925539,
                    "p50": 163.671382,
                    "p95": 166.060708,
                    "p99": 166.060708,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.878045,
                    "min": 51.895019,
                    "p50": 88.01836899999999,
                    "p95": 93.878045,
                    "p99": 93.878045,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.205625,
                    "min": 103.244087,
                    "p50": 140.66160499999998,
                    "p95": 143.205625,
                    "p99": 143.205625,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.837146,
                    "min": 90.40187999999999,
                    "p50": 127.3073,
                    "p95": 128.837146,
                    "p99": 128.837146,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.073008,
                    "min": 99.125474,
                    "p50": 117.679374,
                    "p95": 119.073008,
                    "p99": 119.073008,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 231.297563,
                    "min": 223.570516,
                    "p50": 230.680115,
                    "p95": 231.297563,
                    "p99": 231.297563,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 244.453724,
                    "min": 164.118483,
                    "p50": 204.561976,
                    "p95": 244.453724,
                    "p99": 244.453724,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 382.719272,
                    "min": 291.47772499999996,
                    "p50": 294.29758699999996,
                    "p95": 382.719272,
                    "p99": 382.719272,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 427.543933,
                    "min": 411.263947,
                    "p50": 421.32530299999996,
                    "p95": 427.543933,
                    "p99": 427.543933,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 223.28447599999998,
                    "min": 189.97928199999998,
                    "p50": 193.076988,
                    "p95": 223.28447599999998,
                    "p99": 223.28447599999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 104.12557199999999,
                    "min": 64.585077,
                    "p50": 102.65218,
                    "p95": 104.12557199999999,
                    "p99": 104.12557199999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 181.640956,
                    "min": 140.225626,
                    "p50": 170.75956299999999,
                    "p95": 181.640956,
                    "p99": 181.640956,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 87.467383,
                    "min": 39.103124,
                    "p50": 74.658266,
                    "p95": 87.467383,
                    "p99": 87.467383,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 216.864859,
                    "min": 203.614046,
                    "p50": 215.171898,
                    "p95": 216.864859,
                    "p99": 216.864859,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.049041,
                    "min": 253.07411399999998,
                    "p50": 260.090147,
                    "p95": 266.049041,
                    "p99": 266.049041,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 184.28753799999998,
                    "min": 115.74228799999999,
                    "p50": 153.912412,
                    "p95": 184.28753799999998,
                    "p99": 184.28753799999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 813.3233749999999,
                    "min": 772.247123,
                    "p50": 804.029239,
                    "p95": 813.3233749999999,
                    "p99": 813.3233749999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 219.156071,
                    "min": 199.695731,
                    "p50": 214.255392,
                    "p95": 219.156071,
                    "p99": 219.156071,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 156.62856499999998,
                    "min": 115.665791,
                    "p50": 154.04958299999998,
                    "p95": 156.62856499999998,
                    "p99": 156.62856499999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 272.84914599999996,
                    "min": 230.52396,
                    "p50": 269.400044,
                    "p95": 272.84914599999996,
                    "p99": 272.84914599999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 117.137682,
                    "min": 77.53770999999999,
                    "p50": 115.758608,
                    "p95": 117.137682,
                    "p99": 117.137682,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 426.942858,
                    "min": 410.01406599999996,
                    "p50": 420.804854,
                    "p95": 426.942858,
                    "p99": 426.942858,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 330.52263899999997,
                    "min": 321.34802199999996,
                    "p50": 327.79729,
                    "p95": 330.52263899999997,
                    "p99": 330.52263899999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 311.15019,
                    "min": 271.699146,
                    "p50": 307.065503,
                    "p95": 311.15019,
                    "p99": 311.15019,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 102.847214,
                    "min": 89.403978,
                    "p50": 96.551245,
                    "p95": 102.847214,
                    "p99": 102.847214,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 137.72678,
                    "min": 97.06572399999999,
                    "p50": 135.340539,
                    "p95": 137.72678,
                    "p99": 137.72678,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 378.43301399999996,
                    "min": 335.954839,
                    "p50": 373.91418799999997,
                    "p95": 378.43301399999996,
                    "p99": 378.43301399999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 197.600223,
                    "min": 154.64192,
                    "p50": 192.22305799999998,
                    "p95": 197.600223,
                    "p99": 197.600223,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 253.581698,
                    "min": 213.41378899999998,
                    "p50": 250.74752999999998,
                    "p95": 253.581698,
                    "p99": 253.581698,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 176.55216299999998,
                    "min": 154.891834,
                    "p50": 173.527323,
                    "p95": 176.55216299999998,
                    "p99": 176.55216299999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 291.168473,
                    "min": 255.972205,
                    "p50": 288.18830399999996,
                    "p95": 291.168473,
                    "p99": 291.168473,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 616.614515,
                    "min": 568.740667,
                    "p50": 607.914465,
                    "p95": 616.614515,
                    "p99": 616.614515,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1002.385557,
                    "min": 952.831702,
                    "p50": 984.9905839999999,
                    "p95": 1002.385557,
                    "p99": 1002.385557,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 232.69823399999999,
                    "min": 220.16516399999998,
                    "p50": 230.82981999999998,
                    "p95": 232.69823399999999,
                    "p99": 232.69823399999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.00518699999999,
                    "min": 112.911716,
                    "p50": 115.87496399999999,
                    "p95": 117.00518699999999,
                    "p99": 117.00518699999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 262.45649299999997,
                    "min": 221.97092899999998,
                    "p50": 259.873382,
                    "p95": 262.45649299999997,
                    "p99": 262.45649299999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 373.058481,
                    "min": 328.60569,
                    "p50": 372.017692,
                    "p95": 373.058481,
                    "p99": 373.058481,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 861.8519339999999,
                    "min": 584.08228,
                    "p50": 594.304671,
                    "p95": 861.8519339999999,
                    "p99": 861.8519339999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 486.13516599999997,
                    "min": 442.206775,
                    "p50": 479.953156,
                    "p95": 486.13516599999997,
                    "p99": 486.13516599999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 133.554316,
                    "min": 121.53952199999999,
                    "p50": 126.64535,
                    "p95": 133.554316,
                    "p99": 133.554316,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 234.013206,
                    "min": 221.720978,
                    "p50": 230.86581999999999,
                    "p95": 234.013206,
                    "p99": 234.013206,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.37207,
                    "min": 66.807885,
                    "p50": 105.32037799999999,
                    "p95": 109.37207,
                    "p99": 109.37207,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 194.34543399999998,
                    "min": 154.621734,
                    "p50": 192.94343999999998,
                    "p95": 194.34543399999998,
                    "p99": 194.34543399999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 207.33530199999998,
                    "min": 167.356526,
                    "p50": 203.668317,
                    "p95": 207.33530199999998,
                    "p99": 207.33530199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 83.90220599999999,
                    "min": 49.630064,
                    "p50": 82.382083,
                    "p95": 83.90220599999999,
                    "p99": 83.90220599999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 164.513982,
                    "min": 151.799453,
                    "p50": 159.725653,
                    "p95": 164.513982,
                    "p99": 164.513982,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 172.39068799999998,
                    "min": 149.223673,
                    "p50": 169.300973,
                    "p95": 172.39068799999998,
                    "p99": 172.39068799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.372357,
                    "min": 82.266669,
                    "p50": 93.39501899999999,
                    "p95": 98.372357,
                    "p99": 98.372357,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 69.28591999999999,
                    "min": 47.94025,
                    "p50": 65.318792,
                    "p95": 69.28591999999999,
                    "p99": 69.28591999999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 184.717273,
                    "min": 164.94856,
                    "p50": 181.09067299999998,
                    "p95": 184.717273,
                    "p99": 184.717273,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 149.54283999999998,
                    "min": 129.06453299999998,
                    "p50": 148.46766399999998,
                    "p95": 149.54283999999998,
                    "p99": 149.54283999999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 140.64755399999999,
                    "min": 100.65660299999999,
                    "p50": 136.763911,
                    "p95": 140.64755399999999,
                    "p99": 140.64755399999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 220.02481799999998,
                    "min": 179.245964,
                    "p50": 218.981166,
                    "p95": 220.02481799999998,
                    "p99": 220.02481799999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 322.52967,
                    "min": 311.858302,
                    "p50": 318.063196,
                    "p95": 322.52967,
                    "p99": 322.52967,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 281.259142,
                    "min": 275.423697,
                    "p50": 277.430658,
                    "p95": 281.259142,
                    "p99": 281.259142,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 101.317385,
                    "min": 87.51857199999999,
                    "p50": 98.765402,
                    "p95": 101.317385,
                    "p99": 101.317385,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 438.451051,
                    "min": 397.45413199999996,
                    "p50": 435.46083699999997,
                    "p95": 438.451051,
                    "p99": 438.451051,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 200.09346499999998,
                    "min": 163.1688,
                    "p50": 197.39357099999998,
                    "p95": 200.09346499999998,
                    "p99": 200.09346499999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 140.32855899999998,
                    "min": 100.71108199999999,
                    "p50": 138.499123,
                    "p95": 140.32855899999998,
                    "p99": 140.32855899999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 261.706434,
                    "min": 222.73802899999998,
                    "p50": 258.24195199999997,
                    "p95": 261.706434,
                    "p99": 261.706434,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 165.867985,
                    "min": 120.69816999999999,
                    "p50": 157.533248,
                    "p95": 165.867985,
                    "p99": 165.867985,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 391.78655599999996,
                    "min": 345.695895,
                    "p50": 388.731054,
                    "p95": 391.78655599999996,
                    "p99": 391.78655599999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 120.48369799999999,
                    "min": 112.58108299999999,
                    "p50": 119.07882099999999,
                    "p95": 120.48369799999999,
                    "p99": 120.48369799999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 343.02599699999996,
                    "min": 302.795636,
                    "p50": 338.40935099999996,
                    "p95": 343.02599699999996,
                    "p99": 343.02599699999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 184.418901,
                    "min": 141.91522999999998,
                    "p50": 179.085274,
                    "p95": 184.418901,
                    "p99": 184.418901,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 303.81944799999997,
                    "min": 260.201005,
                    "p50": 297.58173999999997,
                    "p95": 303.81944799999997,
                    "p99": 303.81944799999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 238.10311299999998,
                    "min": 200.047618,
                    "p50": 237.561317,
                    "p95": 238.10311299999998,
                    "p99": 238.10311299999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 148.951491,
                    "min": 87.697538,
                    "p50": 125.114734,
                    "p95": 148.951491,
                    "p99": 148.951491,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 304.36242699999997,
                    "min": 272.891391,
                    "p50": 293.519068,
                    "p95": 304.36242699999997,
                    "p99": 304.36242699999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 240.84881099999998,
                    "min": 173.36597999999998,
                    "p50": 193.17894199999998,
                    "p95": 240.84881099999998,
                    "p99": 240.84881099999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 266.703672,
                    "min": 249.860297,
                    "p50": 263.427033,
                    "p95": 266.703672,
                    "p99": 266.703672,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 383.60925199999997,
                    "min": 380.18751299999997,
                    "p50": 381.45073299999996,
                    "p95": 383.60925199999997,
                    "p99": 383.60925199999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 228.916766,
                    "min": 220.401434,
                    "p50": 227.408919,
                    "p95": 228.916766,
                    "p99": 228.916766,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 280.876013,
                    "min": 260.846987,
                    "p50": 278.68084899999997,
                    "p95": 280.876013,
                    "p99": 280.876013,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 554.6669939999999,
                    "min": 516.10012,
                    "p50": 550.346417,
                    "p95": 554.6669939999999,
                    "p99": 554.6669939999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 159.142449,
                    "min": 139.72064899999998,
                    "p50": 157.39096,
                    "p95": 159.142449,
                    "p99": 159.142449,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 91.394779,
                    "min": 80.03376999999999,
                    "p50": 90.086849,
                    "p95": 91.394779,
                    "p99": 91.394779,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 214.66884299999998,
                    "min": 208.56848499999998,
                    "p50": 211.47653699999998,
                    "p95": 214.66884299999998,
                    "p99": 214.66884299999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 175.38539799999998,
                    "min": 135.62639099999998,
                    "p50": 141.664944,
                    "p95": 175.38539799999998,
                    "p99": 175.38539799999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 123.315738,
                    "min": 98.71262999999999,
                    "p50": 107.97612799999999,
                    "p95": 123.315738,
                    "p99": 123.315738,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 205.327217,
                    "min": 139.27423199999998,
                    "p50": 176.484358,
                    "p95": 205.327217,
                    "p99": 205.327217,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 340.195383,
                    "min": 326.861787,
                    "p50": 338.14777899999996,
                    "p95": 340.195383,
                    "p99": 340.195383,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 246.08871299999998,
                    "min": 237.50737999999998,
                    "p50": 245.092537,
                    "p95": 246.08871299999998,
                    "p99": 246.08871299999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 210.72888899999998,
                    "min": 194.00521899999998,
                    "p50": 205.174498,
                    "p95": 210.72888899999998,
                    "p99": 210.72888899999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 238.07098599999998,
                    "min": 224.177179,
                    "p50": 232.803922,
                    "p95": 238.07098599999998,
                    "p99": 238.07098599999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 249.828575,
                    "min": 232.43318,
                    "p50": 247.25441099999998,
                    "p95": 249.828575,
                    "p99": 249.828575,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 164.711219,
                    "min": 127.035815,
                    "p50": 162.942384,
                    "p95": 164.711219,
                    "p99": 164.711219,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 121.998871,
                    "min": 111.034245,
                    "p50": 120.79092999999999,
                    "p95": 121.998871,
                    "p99": 121.998871,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.716013,
                    "min": 112.276195,
                    "p50": 149.090712,
                    "p95": 154.716013,
                    "p99": 154.716013,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.994642,
                    "min": 70.72475299999999,
                    "p50": 94.301649,
                    "p95": 94.994642,
                    "p99": 94.994642,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.987602,
                    "min": 69.85555099999999,
                    "p50": 102.24131399999999,
                    "p95": 109.987602,
                    "p99": 109.987602,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 177.658512,
                    "min": 139.22394699999998,
                    "p50": 171.09463499999998,
                    "p95": 177.658512,
                    "p99": 177.658512,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.05001099999998,
                    "min": 98.20554899999999,
                    "p50": 134.826407,
                    "p95": 136.05001099999998,
                    "p99": 136.05001099999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.47254699999996,
                    "min": 279.19131799999997,
                    "p50": 314.353453,
                    "p95": 319.47254699999996,
                    "p99": 319.47254699999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.666677,
                    "min": 153.53476899999998,
                    "p50": 190.803223,
                    "p95": 191.666677,
                    "p99": 191.666677,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 285.897678,
                    "min": 244.12634,
                    "p50": 280.70025499999997,
                    "p95": 285.897678,
                    "p99": 285.897678,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.298194,
                    "min": 54.430864,
                    "p50": 80.166308,
                    "p95": 81.298194,
                    "p99": 81.298194,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 218.66445,
                    "min": 182.381516,
                    "p50": 217.702066,
                    "p95": 218.66445,
                    "p99": 218.66445,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 235.70653299999998,
                    "min": 150.12403,
                    "p50": 169.21793399999999,
                    "p95": 235.70653299999998,
                    "p99": 235.70653299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 105.274688,
                    "min": 65.85176299999999,
                    "p50": 103.993286,
                    "p95": 105.274688,
                    "p99": 105.274688,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 103.728179,
                    "min": 47.092866,
                    "p50": 82.085076,
                    "p95": 103.728179,
                    "p99": 103.728179,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 67.876927,
                    "min": 63.627283999999996,
                    "p50": 64.081274,
                    "p95": 67.876927,
                    "p99": 67.876927,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 181.265018,
                    "min": 150.008294,
                    "p50": 178.974077,
                    "p95": 181.265018,
                    "p99": 181.265018,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 202.64721799999998,
                    "min": 199.790743,
                    "p50": 201.211718,
                    "p95": 202.64721799999998,
                    "p99": 202.64721799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 136.78609799999998,
                    "min": 127.163968,
                    "p50": 135.52936499999998,
                    "p95": 136.78609799999998,
                    "p99": 136.78609799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 259.99392,
                    "min": 233.627847,
                    "p50": 255.35662699999997,
                    "p95": 259.99392,
                    "p99": 259.99392,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 148.127624,
                    "min": 109.53917399999999,
                    "p50": 147.327529,
                    "p95": 148.127624,
                    "p99": 148.127624,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 116.68906,
                    "min": 109.401541,
                    "p50": 115.15182,
                    "p95": 116.68906,
                    "p99": 116.68906,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 230.061807,
                    "min": 191.080866,
                    "p50": 224.799918,
                    "p95": 230.061807,
                    "p99": 230.061807,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 193.251059,
                    "min": 152.689741,
                    "p50": 189.365307,
                    "p95": 193.251059,
                    "p99": 193.251059,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.722387,
                    "min": 80.67067399999999,
                    "p50": 92.336477,
                    "p95": 97.722387,
                    "p99": 97.722387,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.538011,
                    "min": 124.38178699999999,
                    "p50": 125.734586,
                    "p95": 126.538011,
                    "p99": 126.538011,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.57505299999997,
                    "min": 338.61465899999996,
                    "p50": 362.030063,
                    "p95": 365.57505299999997,
                    "p99": 365.57505299999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 167.79881,
                    "min": 120.886832,
                    "p50": 157.78134,
                    "p95": 167.79881,
                    "p99": 167.79881,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 692.433852,
                    "min": 433.134882,
                    "p50": 471.527251,
                    "p95": 692.433852,
                    "p99": 692.433852,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 414.061448,
                    "min": 409.77145099999996,
                    "p50": 413.036229,
                    "p95": 414.061448,
                    "p99": 414.061448,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.342479,
                    "min": 186.644419,
                    "p50": 224.843639,
                    "p95": 227.342479,
                    "p99": 227.342479,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 790.616594,
                    "min": 769.712869,
                    "p50": 780.304579,
                    "p95": 790.616594,
                    "p99": 790.616594,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 560.967599,
                    "min": 538.351201,
                    "p50": 558.77972,
                    "p95": 560.967599,
                    "p99": 560.967599,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 262.732752,
                    "min": 252.74531,
                    "p50": 261.794897,
                    "p95": 262.732752,
                    "p99": 262.732752,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 600.283823,
                    "min": 558.805677,
                    "p50": 594.588003,
                    "p95": 600.283823,
                    "p99": 600.283823,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 304.572118,
                    "min": 295.113633,
                    "p50": 299.332613,
                    "p95": 304.572118,
                    "p99": 304.572118,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 490.23704299999997,
                    "min": 484.39982999999995,
                    "p50": 487.51318,
                    "p95": 490.23704299999997,
                    "p99": 490.23704299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 376.53844499999997,
                    "min": 370.368815,
                    "p50": 373.22684,
                    "p95": 376.53844499999997,
                    "p99": 376.53844499999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 532.31885,
                    "min": 518.3299979999999,
                    "p50": 523.005309,
                    "p95": 532.31885,
                    "p99": 532.31885,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 697.849129,
                    "min": 652.5261949999999,
                    "p50": 689.1946439999999,
                    "p95": 697.849129,
                    "p99": 697.849129,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 341.308832,
                    "min": 334.77779,
                    "p50": 339.520589,
                    "p95": 341.308832,
                    "p99": 341.308832,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 452.196289,
                    "min": 444.397953,
                    "p50": 451.055477,
                    "p95": 452.196289,
                    "p99": 452.196289,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.04924599999998,
                    "min": 139.898565,
                    "p50": 151.249992,
                    "p95": 152.04924599999998,
                    "p99": 152.04924599999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 192.622681,
                    "min": 184.478531,
                    "p50": 189.42305399999998,
                    "p95": 192.622681,
                    "p99": 192.622681,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 193.418925,
                    "min": 177.432729,
                    "p50": 186.89255699999998,
                    "p95": 193.418925,
                    "p99": 193.418925,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 101.671115,
                    "min": 60.456567,
                    "p50": 97.27682399999999,
                    "p95": 101.671115,
                    "p99": 101.671115,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 217.605652,
                    "min": 178.067046,
                    "p50": 215.216205,
                    "p95": 217.605652,
                    "p99": 217.605652,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 249.907706,
                    "min": 212.086859,
                    "p50": 244.62022199999998,
                    "p95": 249.907706,
                    "p99": 249.907706,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.049691,
                    "min": 104.423496,
                    "p50": 112.72929599999999,
                    "p95": 113.049691,
                    "p99": 113.049691,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 171.781107,
                    "min": 153.955818,
                    "p50": 171.544649,
                    "p95": 171.781107,
                    "p99": 171.781107,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 158.283413,
                    "min": 153.463091,
                    "p50": 156.84489,
                    "p95": 158.283413,
                    "p99": 158.283413,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.26643099999998,
                    "min": 88.911284,
                    "p50": 127.73533599999999,
                    "p95": 132.26643099999998,
                    "p99": 132.26643099999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.180792,
                    "min": 45.313562,
                    "p50": 82.93529199999999,
                    "p95": 84.180792,
                    "p99": 84.180792,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 300.362106,
                    "min": 295.69390799999996,
                    "p50": 297.07555199999996,
                    "p95": 300.362106,
                    "p99": 300.362106,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 209.09203,
                    "min": 175.982937,
                    "p50": 200.076457,
                    "p95": 209.09203,
                    "p99": 209.09203,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 235.89898599999998,
                    "min": 193.647373,
                    "p50": 228.71822799999998,
                    "p95": 235.89898599999998,
                    "p99": 235.89898599999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 336.670011,
                    "min": 293.68866199999997,
                    "p50": 333.097475,
                    "p95": 336.670011,
                    "p99": 336.670011,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 263.559438,
                    "min": 257.647855,
                    "p50": 261.072926,
                    "p95": 263.559438,
                    "p99": 263.559438,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.092694,
                    "min": 140.736166,
                    "p50": 141.909659,
                    "p95": 145.092694,
                    "p99": 145.092694,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.568363,
                    "min": 269.595436,
                    "p50": 284.230387,
                    "p95": 286.568363,
                    "p99": 286.568363,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 181.679217,
                    "min": 161.513566,
                    "p50": 177.98376399999998,
                    "p95": 181.679217,
                    "p99": 181.679217,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.074809,
                    "min": 195.853671,
                    "p50": 235.38946199999998,
                    "p95": 236.074809,
                    "p99": 236.074809,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.37891299999998,
                    "min": 239.786283,
                    "p50": 249.56678499999998,
                    "p95": 251.37891299999998,
                    "p99": 251.37891299999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 318.600739,
                    "min": 279.300908,
                    "p50": 317.573291,
                    "p95": 318.600739,
                    "p99": 318.600739,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 194.49714799999998,
                    "min": 154.655679,
                    "p50": 192.827216,
                    "p95": 194.49714799999998,
                    "p99": 194.49714799999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.935582,
                    "min": 84.712504,
                    "p50": 121.28525099999999,
                    "p95": 123.935582,
                    "p99": 123.935582,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.738798,
                    "min": 112.779382,
                    "p50": 149.67337899999998,
                    "p95": 150.738798,
                    "p99": 150.738798,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.51737,
                    "min": 182.70588999999998,
                    "p50": 218.25668199999998,
                    "p95": 222.51737,
                    "p99": 222.51737,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 210.14782499999998,
                    "min": 188.978127,
                    "p50": 206.288871,
                    "p95": 210.14782499999998,
                    "p99": 210.14782499999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 462.504982,
                    "min": 418.483859,
                    "p50": 457.66487,
                    "p95": 462.504982,
                    "p99": 462.504982,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 141.72601,
                    "min": 103.74365399999999,
                    "p50": 136.21399599999998,
                    "p95": 141.72601,
                    "p99": 141.72601,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.201692,
                    "min": 42.821068,
                    "p50": 80.227239,
                    "p95": 82.201692,
                    "p99": 82.201692,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.01539,
                    "min": 95.011251,
                    "p50": 108.258242,
                    "p95": 112.01539,
                    "p99": 112.01539,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.715152,
                    "min": 161.812685,
                    "p50": 164.675703,
                    "p95": 167.715152,
                    "p99": 167.715152,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.373447,
                    "min": 56.786348,
                    "p50": 93.841167,
                    "p95": 96.373447,
                    "p99": 96.373447,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 669.810442,
                    "min": 628.702016,
                    "p50": 665.622042,
                    "p95": 669.810442,
                    "p99": 669.810442,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 338.582816,
                    "min": 294.65342499999997,
                    "p50": 332.93080299999997,
                    "p95": 338.582816,
                    "p99": 338.582816,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 165.885415,
                    "min": 126.89461299999999,
                    "p50": 164.00860799999998,
                    "p95": 165.885415,
                    "p99": 165.885415,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.73589199999998,
                    "min": 192.70451699999998,
                    "p50": 208.055632,
                    "p95": 211.73589199999998,
                    "p99": 211.73589199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 463.35049399999997,
                    "min": 417.24197,
                    "p50": 458.54328599999997,
                    "p95": 463.35049399999997,
                    "p99": 463.35049399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 294.61319299999997,
                    "min": 271.16720599999996,
                    "p50": 292.859833,
                    "p95": 294.61319299999997,
                    "p99": 294.61319299999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 889.587599,
                    "min": 834.016135,
                    "p50": 876.026211,
                    "p95": 889.587599,
                    "p99": 889.587599,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.573447,
                    "min": 211.487752,
                    "p50": 251.091817,
                    "p95": 253.573447,
                    "p99": 253.573447,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 518.946809,
                    "min": 491.028234,
                    "p50": 500.15905899999996,
                    "p95": 518.946809,
                    "p99": 518.946809,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 382.369967,
                    "min": 373.6941,
                    "p50": 376.270724,
                    "p95": 382.369967,
                    "p99": 382.369967,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 550.580738,
                    "min": 509.877282,
                    "p50": 540.462547,
                    "p95": 550.580738,
                    "p99": 550.580738,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 589.478713,
                    "min": 542.650583,
                    "p50": 579.318551,
                    "p95": 589.478713,
                    "p99": 589.478713,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 788.264872,
                    "min": 730.266431,
                    "p50": 771.610854,
                    "p95": 788.264872,
                    "p99": 788.264872,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 632.990549,
                    "min": 619.596016,
                    "p50": 627.5844,
                    "p95": 632.990549,
                    "p99": 632.990549,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 421.59964499999995,
                    "min": 382.07534,
                    "p50": 419.9631,
                    "p95": 421.59964499999995,
                    "p99": 421.59964499999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.639871,
                    "min": 55.868703,
                    "p50": 93.519454,
                    "p95": 96.639871,
                    "p99": 96.639871,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 254.597266,
                    "min": 209.591059,
                    "p50": 246.617828,
                    "p95": 254.597266,
                    "p99": 254.597266,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 192.319628,
                    "min": 188.916392,
                    "p50": 190.783101,
                    "p95": 192.319628,
                    "p99": 192.319628,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.45215199999998,
                    "min": 127.09838599999999,
                    "p50": 164.174588,
                    "p95": 166.45215199999998,
                    "p99": 166.45215199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.27058099999999,
                    "min": 101.462209,
                    "p50": 121.339361,
                    "p95": 123.27058099999999,
                    "p99": 123.27058099999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 85.781624,
                    "min": 69.826887,
                    "p50": 79.923991,
                    "p95": 85.781624,
                    "p99": 85.781624,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.373245,
                    "min": 70.493099,
                    "p50": 107.19493899999999,
                    "p95": 110.373245,
                    "p99": 110.373245,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.22669,
                    "min": 196.051864,
                    "p50": 230.93685399999998,
                    "p95": 234.22669,
                    "p99": 234.22669,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 282.537819,
                    "min": 269.318588,
                    "p50": 279.847426,
                    "p95": 282.537819,
                    "p99": 282.537819,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.005313,
                    "min": 97.70383199999999,
                    "p50": 136.43883,
                    "p95": 138.005313,
                    "p99": 138.005313,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.167304,
                    "min": 176.54127699999998,
                    "p50": 178.044161,
                    "p95": 185.167304,
                    "p99": 185.167304,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 318.778342,
                    "min": 276.53403199999997,
                    "p50": 316.535446,
                    "p95": 318.778342,
                    "p99": 318.778342,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.85953899999998,
                    "min": 198.668105,
                    "p50": 204.50849,
                    "p95": 208.85953899999998,
                    "p99": 208.85953899999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 156.307191,
                    "min": 144.390772,
                    "p50": 149.747566,
                    "p95": 156.307191,
                    "p99": 156.307191,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.41734399999999,
                    "min": 211.97419599999998,
                    "p50": 218.859466,
                    "p95": 222.41734399999999,
                    "p99": 222.41734399999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1075.896458,
                    "min": 1024.709965,
                    "p50": 1060.3183589999999,
                    "p95": 1075.896458,
                    "p99": 1075.896458,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 589.8462559999999,
                    "min": 576.743752,
                    "p50": 587.954691,
                    "p95": 589.8462559999999,
                    "p99": 589.8462559999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 729.7833029999999,
                    "min": 676.591359,
                    "p50": 718.369772,
                    "p95": 729.7833029999999,
                    "p99": 729.7833029999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 797.981415,
                    "min": 752.382075,
                    "p50": 786.2846969999999,
                    "p95": 797.981415,
                    "p99": 797.981415,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1005.6118329999999,
                    "min": 971.5881109999999,
                    "p50": 997.3290979999999,
                    "p95": 1005.6118329999999,
                    "p99": 1005.6118329999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 939.990097,
                    "min": 919.0477109999999,
                    "p50": 932.0886909999999,
                    "p95": 939.990097,
                    "p99": 939.990097,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 321.94262599999996,
                    "min": 302.337743,
                    "p50": 314.69089399999996,
                    "p95": 321.94262599999996,
                    "p99": 321.94262599999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 665.0374079999999,
                    "min": 614.388647,
                    "p50": 649.635686,
                    "p95": 665.0374079999999,
                    "p99": 665.0374079999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 861.195579,
                    "min": 826.132038,
                    "p50": 849.082128,
                    "p95": 861.195579,
                    "p99": 861.195579,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1240.2991459999998,
                    "min": 1208.470423,
                    "p50": 1234.2757589999999,
                    "p95": 1240.2991459999998,
                    "p99": 1240.2991459999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 386.264767,
                    "min": 371.27827299999996,
                    "p50": 385.057329,
                    "p95": 386.264767,
                    "p99": 386.264767,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 525.868512,
                    "min": 504.384167,
                    "p50": 523.334467,
                    "p95": 525.868512,
                    "p99": 525.868512,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 251.18735099999998,
                    "min": 241.004919,
                    "p50": 246.77308599999998,
                    "p95": 251.18735099999998,
                    "p99": 251.18735099999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 456.035033,
                    "min": 441.66976999999997,
                    "p50": 450.68548999999996,
                    "p95": 456.035033,
                    "p99": 456.035033,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1417.772727,
                    "min": 1357.81629,
                    "p50": 1403.1219179999998,
                    "p95": 1417.772727,
                    "p99": 1417.772727,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1378.5893449999999,
                    "min": 1347.54498,
                    "p50": 1361.560141,
                    "p95": 1378.5893449999999,
                    "p99": 1378.5893449999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 974.4904789999999,
                    "min": 925.1047199999999,
                    "p50": 963.809256,
                    "p95": 974.4904789999999,
                    "p99": 974.4904789999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 844.9728749999999,
                    "min": 803.435157,
                    "p50": 834.1288119999999,
                    "p95": 844.9728749999999,
                    "p99": 844.9728749999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 648.318443,
                    "min": 625.938357,
                    "p50": 640.041918,
                    "p95": 648.318443,
                    "p99": 648.318443,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 580.8077559999999,
                    "min": 536.700013,
                    "p50": 570.1759559999999,
                    "p95": 580.8077559999999,
                    "p99": 580.8077559999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 455.28642099999996,
                    "min": 425.28848899999997,
                    "p50": 439.321213,
                    "p95": 455.28642099999996,
                    "p99": 455.28642099999996,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 908.3462999999999,
                    "min": 867.369154,
                    "p50": 898.9648569999999,
                    "p95": 908.3462999999999,
                    "p99": 908.3462999999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 311.293764,
                    "min": 265.806265,
                    "p50": 304.339753,
                    "p95": 311.293764,
                    "p99": 311.293764,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 778.0029069999999,
                    "min": 763.799118,
                    "p50": 771.8678269999999,
                    "p95": 778.0029069999999,
                    "p99": 778.0029069999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 376.52425999999997,
                    "min": 367.230663,
                    "p50": 372.37493,
                    "p95": 376.52425999999997,
                    "p99": 376.52425999999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1213.154507,
                    "min": 1191.23955,
                    "p50": 1202.811914,
                    "p95": 1213.154507,
                    "p99": 1213.154507,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.422009,
                    "min": 202.018213,
                    "p50": 238.416779,
                    "p95": 243.422009,
                    "p99": 243.422009,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 512.538823,
                    "min": 484.553453,
                    "p50": 502.903797,
                    "p95": 512.538823,
                    "p99": 512.538823,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1042.158893,
                    "min": 996.8387869999999,
                    "p50": 1031.9499389999999,
                    "p95": 1042.158893,
                    "p99": 1042.158893,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 703.090457,
                    "min": 684.486857,
                    "p50": 699.915526,
                    "p95": 703.090457,
                    "p99": 703.090457,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 778.7813759999999,
                    "min": 742.9789999999999,
                    "p50": 769.7580939999999,
                    "p95": 778.7813759999999,
                    "p99": 778.7813759999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 440.67627,
                    "min": 396.042808,
                    "p50": 437.03810699999997,
                    "p95": 440.67627,
                    "p99": 440.67627,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 379.373495,
                    "min": 357.581794,
                    "p50": 371.68719,
                    "p95": 379.373495,
                    "p99": 379.373495,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 710.455166,
                    "min": 681.1896849999999,
                    "p50": 706.176963,
                    "p95": 710.455166,
                    "p99": 710.455166,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1374.344103,
                    "min": 1334.292633,
                    "p50": 1362.1669849999998,
                    "p95": 1374.344103,
                    "p99": 1374.344103,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 310.30754099999996,
                    "min": 301.125469,
                    "p50": 306.40218999999996,
                    "p95": 310.30754099999996,
                    "p99": 310.30754099999996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 508.16555,
                    "min": 467.91597199999995,
                    "p50": 502.248725,
                    "p95": 508.16555,
                    "p99": 508.16555,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 242.06276,
                    "min": 216.21840799999998,
                    "p50": 239.04022899999998,
                    "p95": 242.06276,
                    "p99": 242.06276,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1050.9654739999999,
                    "min": 1010.6025669999999,
                    "p50": 1037.931578,
                    "p95": 1050.9654739999999,
                    "p99": 1050.9654739999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 978.1369629999999,
                    "min": 948.438937,
                    "p50": 972.361275,
                    "p95": 978.1369629999999,
                    "p99": 978.1369629999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 849.308441,
                    "min": 800.009674,
                    "p50": 832.7027979999999,
                    "p95": 849.308441,
                    "p99": 849.308441,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 914.0123629999999,
                    "min": 897.069406,
                    "p50": 903.517799,
                    "p95": 914.0123629999999,
                    "p99": 914.0123629999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 650.769045,
                    "min": 628.3510709999999,
                    "p50": 637.0972029999999,
                    "p95": 650.769045,
                    "p99": 650.769045,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1214.154608,
                    "min": 1190.4719189999998,
                    "p50": 1208.617438,
                    "p95": 1214.154608,
                    "p99": 1214.154608,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 575.795469,
                    "min": 556.751213,
                    "p50": 571.0002959999999,
                    "p95": 575.795469,
                    "p99": 575.795469,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 330.15874199999996,
                    "min": 309.32081,
                    "p50": 325.064455,
                    "p95": 330.15874199999996,
                    "p99": 330.15874199999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 201.925984,
                    "min": 174.365558,
                    "p50": 193.234908,
                    "p95": 201.925984,
                    "p99": 201.925984,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 373.3259,
                    "min": 350.56415999999996,
                    "p50": 367.072485,
                    "p95": 373.3259,
                    "p99": 373.3259,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 441.834368,
                    "min": 389.490439,
                    "p50": 426.637728,
                    "p95": 441.834368,
                    "p99": 441.834368,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 107.72234999999999,
                    "min": 103.75717,
                    "p50": 105.933364,
                    "p95": 107.72234999999999,
                    "p99": 107.72234999999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 310.499491,
                    "min": 293.597303,
                    "p50": 303.60006599999997,
                    "p95": 310.499491,
                    "p99": 310.499491,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 172.271032,
                    "min": 134.432135,
                    "p50": 171.679239,
                    "p95": 172.271032,
                    "p99": 172.271032,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 133.179967,
                    "min": 110.61653199999999,
                    "p50": 126.89393299999999,
                    "p95": 133.179967,
                    "p99": 133.179967,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 705.733695,
                    "min": 659.880231,
                    "p50": 702.5303319999999,
                    "p95": 705.733695,
                    "p99": 705.733695,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 240.659258,
                    "min": 200.346407,
                    "p50": 238.02543,
                    "p95": 240.659258,
                    "p99": 240.659258,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 286.149291,
                    "min": 244.01390899999998,
                    "p50": 282.153242,
                    "p95": 286.149291,
                    "p99": 286.149291,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 354.025036,
                    "min": 309.249018,
                    "p50": 349.069805,
                    "p95": 354.025036,
                    "p99": 354.025036,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 153.217791,
                    "min": 112.381879,
                    "p50": 150.370202,
                    "p95": 153.217791,
                    "p99": 153.217791,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1154.481708,
                    "min": 1099.301818,
                    "p50": 1128.2842839999998,
                    "p95": 1154.481708,
                    "p99": 1154.481708,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 485.166006,
                    "min": 468.80992799999996,
                    "p50": 478.173324,
                    "p95": 485.166006,
                    "p99": 485.166006,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 262.03249999999997,
                    "min": 221.86192799999998,
                    "p50": 260.806648,
                    "p95": 262.03249999999997,
                    "p99": 262.03249999999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 219.15249,
                    "min": 194.724709,
                    "p50": 214.84045899999998,
                    "p95": 219.15249,
                    "p99": 219.15249,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 926.713582,
                    "min": 912.5005229999999,
                    "p50": 922.6169229999999,
                    "p95": 926.713582,
                    "p99": 926.713582,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 324.639927,
                    "min": 283.407236,
                    "p50": 320.099469,
                    "p95": 324.639927,
                    "p99": 324.639927,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.281219,
                    "min": 112.35831499999999,
                    "p50": 123.00805,
                    "p95": 126.281219,
                    "p99": 126.281219,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.546541,
                    "min": 217.518596,
                    "p50": 220.536432,
                    "p95": 223.546541,
                    "p99": 223.546541,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.955627,
                    "min": 151.761428,
                    "p50": 166.366165,
                    "p95": 170.955627,
                    "p99": 170.955627,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.87776599999998,
                    "min": 176.030601,
                    "p50": 179.860611,
                    "p95": 180.87776599999998,
                    "p99": 180.87776599999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.278662,
                    "min": 55.144442999999995,
                    "p50": 80.513395,
                    "p95": 83.278662,
                    "p99": 83.278662,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 197.50322799999998,
                    "min": 155.78402599999998,
                    "p50": 194.078928,
                    "p95": 197.50322799999998,
                    "p99": 197.50322799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.752358,
                    "min": 104.705539,
                    "p50": 109.284877,
                    "p95": 110.752358,
                    "p99": 110.752358,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 246.21963699999998,
                    "min": 212.74863599999998,
                    "p50": 235.12089799999998,
                    "p95": 246.21963699999998,
                    "p99": 246.21963699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.350328,
                    "min": 142.07103,
                    "p50": 152.22067099999998,
                    "p95": 153.350328,
                    "p99": 153.350328,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.801666,
                    "min": 278.393355,
                    "p50": 286.24467799999996,
                    "p95": 286.801666,
                    "p99": 286.801666,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.98458599999998,
                    "min": 194.517819,
                    "p50": 207.828445,
                    "p95": 211.98458599999998,
                    "p99": 211.98458599999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.095442,
                    "min": 130.09431899999998,
                    "p50": 137.108985,
                    "p95": 139.095442,
                    "p99": 139.095442,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.81849,
                    "min": 57.225674,
                    "p50": 94.939696,
                    "p95": 97.81849,
                    "p99": 97.81849,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 252.665764,
                    "min": 211.676134,
                    "p50": 250.2302,
                    "p95": 252.665764,
                    "p99": 252.665764,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 466.640195,
                    "min": 421.79815099999996,
                    "p50": 456.82251199999996,
                    "p95": 466.640195,
                    "p99": 466.640195,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.252479,
                    "min": 161.215388,
                    "p50": 166.51168199999998,
                    "p95": 167.252479,
                    "p99": 167.252479,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.709409,
                    "min": 177.252094,
                    "p50": 180.43452,
                    "p95": 182.709409,
                    "p99": 182.709409,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.371777,
                    "min": 104.49283799999999,
                    "p50": 109.047595,
                    "p95": 109.371777,
                    "p99": 109.371777,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.015446,
                    "min": 130.775001,
                    "p50": 151.943996,
                    "p95": 153.015446,
                    "p99": 153.015446,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 238.736382,
                    "min": 231.88663599999998,
                    "p50": 237.03177599999998,
                    "p95": 238.736382,
                    "p99": 238.736382,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.847839,
                    "min": 72.552717,
                    "p50": 80.372312,
                    "p95": 81.847839,
                    "p99": 81.847839,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 467.06758399999995,
                    "min": 451.357401,
                    "p50": 464.31201699999997,
                    "p95": 467.06758399999995,
                    "p99": 467.06758399999995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 201.39547,
                    "min": 178.828168,
                    "p50": 195.716533,
                    "p95": 201.39547,
                    "p99": 201.39547,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 226.22180999999998,
                    "min": 183.59491699999998,
                    "p50": 222.46809199999998,
                    "p95": 226.22180999999998,
                    "p99": 226.22180999999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.95349099999999,
                    "min": 119.78707899999999,
                    "p50": 123.216264,
                    "p95": 128.95349099999999,
                    "p99": 128.95349099999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 287.56323499999996,
                    "min": 279.750394,
                    "p50": 286.916097,
                    "p95": 287.56323499999996,
                    "p99": 287.56323499999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 211.42282899999998,
                    "min": 195.076912,
                    "p50": 208.30251199999998,
                    "p95": 211.42282899999998,
                    "p99": 211.42282899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.265882,
                    "min": 126.649323,
                    "p50": 136.91958499999998,
                    "p95": 143.265882,
                    "p99": 143.265882,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 609.1882479999999,
                    "min": 599.5912079999999,
                    "p50": 601.775097,
                    "p95": 609.1882479999999,
                    "p99": 609.1882479999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 98.26021399999999,
                    "min": 94.271458,
                    "p50": 95.908739,
                    "p95": 98.26021399999999,
                    "p99": 98.26021399999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 253.772809,
                    "min": 213.896044,
                    "p50": 250.182866,
                    "p95": 253.772809,
                    "p99": 253.772809,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 322.35240799999997,
                    "min": 305.072259,
                    "p50": 318.877408,
                    "p95": 322.35240799999997,
                    "p99": 322.35240799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "erigon": {
            "name": "erigon",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 591.656577,
                    "min": 575.70508,
                    "p50": 588.7002739999999,
                    "p95": 591.656577,
                    "p99": 591.656577,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 987.472364,
                    "min": 958.3340989999999,
                    "p50": 969.712089,
                    "p95": 987.472364,
                    "p99": 987.472364,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 876.18436,
                    "min": 833.76857,
                    "p50": 847.978752,
                    "p95": 876.18436,
                    "p99": 876.18436,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 670.945804,
                    "min": 646.6281409999999,
                    "p50": 664.8528339999999,
                    "p95": 670.945804,
                    "p99": 670.945804,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 797.9069479999999,
                    "min": 768.6725329999999,
                    "p50": 783.9581109999999,
                    "p95": 797.9069479999999,
                    "p99": 797.9069479999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 935.925995,
                    "min": 897.585253,
                    "p50": 911.15351,
                    "p95": 935.925995,
                    "p99": 935.925995,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 234.716689,
                    "min": 207.259492,
                    "p50": 219.999609,
                    "p95": 234.716689,
                    "p99": 234.716689,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.523726,
                    "min": 269.574844,
                    "p50": 281.30226999999996,
                    "p95": 288.523726,
                    "p99": 288.523726,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 358.63708299999996,
                    "min": 330.325342,
                    "p50": 341.00712799999997,
                    "p95": 358.63708299999996,
                    "p99": 358.63708299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1295.449527,
                    "min": 1266.990117,
                    "p50": 1288.437702,
                    "p95": 1295.449527,
                    "p99": 1295.449527,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 413.489247,
                    "min": 393.272975,
                    "p50": 398.90286699999996,
                    "p95": 413.489247,
                    "p99": 413.489247,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1131.690842,
                    "min": 1116.463129,
                    "p50": 1125.990936,
                    "p95": 1131.690842,
                    "p99": 1131.690842,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 565.128191,
                    "min": 521.852315,
                    "p50": 534.008505,
                    "p95": 565.128191,
                    "p99": 565.128191,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 499.89466899999996,
                    "min": 457.78051999999997,
                    "p50": 462.986294,
                    "p95": 499.89466899999996,
                    "p99": 499.89466899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 541.046324,
                    "min": 474.277875,
                    "p50": 505.922199,
                    "p95": 541.046324,
                    "p99": 541.046324,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 784.362161,
                    "min": 747.449607,
                    "p50": 773.118104,
                    "p95": 784.362161,
                    "p99": 784.362161,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1015.8192899999999,
                    "min": 0,
                    "p50": 989.2390899999999,
                    "p95": 1015.8192899999999,
                    "p99": 1015.8192899999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 340.187307,
                    "min": 316.795962,
                    "p50": 324.442867,
                    "p95": 340.187307,
                    "p99": 340.187307,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 598.383691,
                    "min": 504.395059,
                    "p50": 556.313734,
                    "p95": 598.383691,
                    "p99": 598.383691,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 922.149014,
                    "min": 840.512604,
                    "p50": 892.797423,
                    "p95": 922.149014,
                    "p99": 922.149014,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 285.961531,
                    "min": 211.0059,
                    "p50": 276.873119,
                    "p95": 285.961531,
                    "p99": 285.961531,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 436.38911299999995,
                    "min": 369.386333,
                    "p50": 421.319547,
                    "p95": 436.38911299999995,
                    "p99": 436.38911299999995,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 492.454818,
                    "min": 455.95564199999995,
                    "p50": 470.61674999999997,
                    "p95": 492.454818,
                    "p99": 492.454818,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 295.535876,
                    "min": 0,
                    "p50": 277.687095,
                    "p95": 295.535876,
                    "p99": 295.535876,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1530.7604549999999,
                    "min": 1486.361026,
                    "p50": 1498.4984259999999,
                    "p95": 1530.7604549999999,
                    "p99": 1530.7604549999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 894.661225,
                    "min": 879.8986729999999,
                    "p50": 891.4778689999999,
                    "p95": 894.661225,
                    "p99": 894.661225,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 679.812383,
                    "min": 660.380485,
                    "p50": 667.044666,
                    "p95": 679.812383,
                    "p99": 679.812383,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 652.756345,
                    "min": 604.665592,
                    "p50": 618.65573,
                    "p95": 652.756345,
                    "p99": 652.756345,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 379.180608,
                    "min": 360.636847,
                    "p50": 364.841904,
                    "p95": 379.180608,
                    "p99": 379.180608,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1035.850418,
                    "min": 994.2001819999999,
                    "p50": 1014.1021179999999,
                    "p95": 1035.850418,
                    "p99": 1035.850418,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 207.195571,
                    "min": 163.879474,
                    "p50": 170.63351799999998,
                    "p95": 207.195571,
                    "p99": 207.195571,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 770.222726,
                    "min": 755.481738,
                    "p50": 760.459807,
                    "p95": 770.222726,
                    "p99": 770.222726,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 431.170849,
                    "min": 413.045498,
                    "p50": 422.986184,
                    "p95": 431.170849,
                    "p99": 431.170849,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 331.123017,
                    "min": 312.943488,
                    "p50": 317.325381,
                    "p95": 331.123017,
                    "p99": 331.123017,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.96300499999998,
                    "min": 218.959484,
                    "p50": 226.640347,
                    "p95": 243.96300499999998,
                    "p99": 243.96300499999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 741.1276379999999,
                    "min": 698.075388,
                    "p50": 715.742937,
                    "p95": 741.1276379999999,
                    "p99": 741.1276379999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1148.9856969999998,
                    "min": 1111.962886,
                    "p50": 1133.752051,
                    "p95": 1148.9856969999998,
                    "p99": 1148.9856969999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.542394,
                    "min": 204.20017099999998,
                    "p50": 213.281537,
                    "p95": 227.542394,
                    "p99": 227.542394,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 817.258962,
                    "min": 769.534309,
                    "p50": 788.233066,
                    "p95": 817.258962,
                    "p99": 817.258962,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 852.9684219999999,
                    "min": 831.5588869999999,
                    "p50": 844.5134059999999,
                    "p95": 852.9684219999999,
                    "p99": 852.9684219999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 300.36683,
                    "min": 271.585068,
                    "p50": 274.678787,
                    "p95": 300.36683,
                    "p99": 300.36683,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 721.7665979999999,
                    "min": 702.8389199999999,
                    "p50": 713.6567739999999,
                    "p95": 721.7665979999999,
                    "p99": 721.7665979999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 996.4178079999999,
                    "min": 959.4184309999999,
                    "p50": 967.5116569999999,
                    "p95": 996.4178079999999,
                    "p99": 996.4178079999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 418.155697,
                    "min": 392.13876799999997,
                    "p50": 401.107484,
                    "p95": 418.155697,
                    "p99": 418.155697,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 625.195625,
                    "min": 588.3745779999999,
                    "p50": 598.83178,
                    "p95": 625.195625,
                    "p99": 625.195625,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 543.453945,
                    "min": 518.381305,
                    "p50": 538.246806,
                    "p95": 543.453945,
                    "p99": 543.453945,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1320.7025099999998,
                    "min": 1274.830552,
                    "p50": 1287.086883,
                    "p95": 1320.7025099999998,
                    "p99": 1320.7025099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 653.038647,
                    "min": 646.241176,
                    "p50": 650.415258,
                    "p95": 653.038647,
                    "p99": 653.038647,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.735038,
                    "min": 457.87906399999997,
                    "p50": 465.60205099999996,
                    "p95": 477.735038,
                    "p99": 477.735038,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.616263,
                    "min": 331.398017,
                    "p50": 334.634574,
                    "p95": 349.616263,
                    "p99": 349.616263,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 909.8744969999999,
                    "min": 893.463666,
                    "p50": 907.7914059999999,
                    "p95": 909.8744969999999,
                    "p99": 909.8744969999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 134.906248,
                    "min": 86.984963,
                    "p50": 117.690202,
                    "p95": 134.906248,
                    "p99": 134.906248,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 51.156040999999995,
                    "min": 46.427963,
                    "p50": 49.488631999999996,
                    "p95": 51.156040999999995,
                    "p99": 51.156040999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 285.605609,
                    "min": 231.35566799999998,
                    "p50": 252.397879,
                    "p95": 285.605609,
                    "p99": 285.605609,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 516.121943,
                    "min": 431.897495,
                    "p50": 500.47333199999997,
                    "p95": 516.121943,
                    "p99": 516.121943,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 96.63904099999999,
                    "min": 87.69724599999999,
                    "p50": 92.940185,
                    "p95": 96.63904099999999,
                    "p99": 96.63904099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 74.284669,
                    "min": 68.419782,
                    "p50": 71.326422,
                    "p95": 74.284669,
                    "p99": 74.284669,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 240.010069,
                    "min": 192.414393,
                    "p50": 212.240466,
                    "p95": 240.010069,
                    "p99": 240.010069,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 52.981674,
                    "min": 50.290507999999996,
                    "p50": 51.856123999999994,
                    "p95": 52.981674,
                    "p99": 52.981674,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 88.42512599999999,
                    "min": 75.742716,
                    "p50": 82.922927,
                    "p95": 88.42512599999999,
                    "p99": 88.42512599999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 115.12773399999999,
                    "min": 86.52156699999999,
                    "p50": 108.751528,
                    "p95": 115.12773399999999,
                    "p99": 115.12773399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 202.63746899999998,
                    "min": 171.01527299999998,
                    "p50": 181.996009,
                    "p95": 202.63746899999998,
                    "p99": 202.63746899999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.182094,
                    "min": 35.694404,
                    "p50": 38.799645999999996,
                    "p95": 48.182094,
                    "p99": 48.182094,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 94.221837,
                    "min": 77.851135,
                    "p50": 82.325914,
                    "p95": 94.221837,
                    "p99": 94.221837,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 104.97501199999999,
                    "min": 83.88843299999999,
                    "p50": 97.084949,
                    "p95": 104.97501199999999,
                    "p99": 104.97501199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 65.38365399999999,
                    "min": 53.092073,
                    "p50": 60.404114,
                    "p95": 65.38365399999999,
                    "p99": 65.38365399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 68.673873,
                    "min": 64.014157,
                    "p50": 67.097804,
                    "p95": 68.673873,
                    "p99": 68.673873,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 110.48485799999999,
                    "min": 65.142776,
                    "p50": 90.92165299999999,
                    "p95": 110.48485799999999,
                    "p99": 110.48485799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 74.525485,
                    "min": 65.60885,
                    "p50": 71.527626,
                    "p95": 74.525485,
                    "p99": 74.525485,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 83.286587,
                    "min": 73.62762699999999,
                    "p50": 76.00038599999999,
                    "p95": 83.286587,
                    "p99": 83.286587,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 301.209434,
                    "min": 278.162898,
                    "p50": 287.601569,
                    "p95": 301.209434,
                    "p99": 301.209434,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 221.838492,
                    "min": 164.925411,
                    "p50": 169.532008,
                    "p95": 221.838492,
                    "p99": 221.838492,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 439.60103999999995,
                    "min": 425.922671,
                    "p50": 430.568272,
                    "p95": 439.60103999999995,
                    "p99": 439.60103999999995,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 227.252704,
                    "min": 194.566204,
                    "p50": 202.23823299999998,
                    "p95": 227.252704,
                    "p99": 227.252704,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 379.293773,
                    "min": 341.489687,
                    "p50": 349.660764,
                    "p95": 379.293773,
                    "p99": 379.293773,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1522.649433,
                    "min": 1475.897955,
                    "p50": 1498.035811,
                    "p95": 1522.649433,
                    "p99": 1522.649433,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 365.121416,
                    "min": 308.16256799999996,
                    "p50": 315.485531,
                    "p95": 365.121416,
                    "p99": 365.121416,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 420.28720699999997,
                    "min": 393.51189,
                    "p50": 405.100961,
                    "p95": 420.28720699999997,
                    "p99": 420.28720699999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 570.146341,
                    "min": 529.668427,
                    "p50": 540.3540919999999,
                    "p95": 570.146341,
                    "p99": 570.146341,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 293.071129,
                    "min": 253.287794,
                    "p50": 262.73522199999996,
                    "p95": 293.071129,
                    "p99": 293.071129,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1215.9324709999999,
                    "min": 1183.551866,
                    "p50": 1194.8395289999999,
                    "p95": 1215.9324709999999,
                    "p99": 1215.9324709999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 266.638963,
                    "min": 222.96953,
                    "p50": 231.49805099999998,
                    "p95": 266.638963,
                    "p99": 266.638963,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 405.42209499999996,
                    "min": 369.629127,
                    "p50": 390.76145199999996,
                    "p95": 405.42209499999996,
                    "p99": 405.42209499999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 939.8155859999999,
                    "min": 895.754141,
                    "p50": 915.792417,
                    "p95": 939.8155859999999,
                    "p99": 939.8155859999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 168.084284,
                    "min": 135.64245,
                    "p50": 150.497483,
                    "p95": 168.084284,
                    "p99": 168.084284,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3002.4929629999997,
                    "min": 2934.564015,
                    "p50": 2970.722965,
                    "p95": 3002.4929629999997,
                    "p99": 3002.4929629999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 123.071204,
                    "min": 105.099702,
                    "p50": 111.700605,
                    "p95": 123.071204,
                    "p99": 123.071204,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 498.33190199999996,
                    "min": 456.95241599999997,
                    "p50": 483.859555,
                    "p95": 498.33190199999996,
                    "p99": 498.33190199999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 634.128097,
                    "min": 598.568542,
                    "p50": 622.266661,
                    "p95": 634.128097,
                    "p99": 634.128097,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 49.466989,
                    "min": 37.338713,
                    "p50": 39.853370999999996,
                    "p95": 49.466989,
                    "p99": 49.466989,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 61.779543,
                    "min": 50.395441,
                    "p50": 56.254844999999996,
                    "p95": 61.779543,
                    "p99": 61.779543,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.811164,
                    "min": 34.975701,
                    "p50": 38.408709,
                    "p95": 60.811164,
                    "p99": 60.811164,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 57.221384,
                    "min": 47.247651999999995,
                    "p50": 50.311237999999996,
                    "p95": 57.221384,
                    "p99": 57.221384,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 63.342495,
                    "min": 50.103314999999995,
                    "p50": 60.227095999999996,
                    "p95": 63.342495,
                    "p99": 63.342495,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 116.59857199999999,
                    "min": 103.79648999999999,
                    "p50": 108.183583,
                    "p95": 116.59857199999999,
                    "p99": 116.59857199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 69.43079399999999,
                    "min": 49.554596,
                    "p50": 64.629706,
                    "p95": 69.43079399999999,
                    "p99": 69.43079399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 62.338282,
                    "min": 39.85405,
                    "p50": 44.334559,
                    "p95": 62.338282,
                    "p99": 62.338282,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 190.58538099999998,
                    "min": 167.595495,
                    "p50": 174.914697,
                    "p95": 190.58538099999998,
                    "p99": 190.58538099999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 61.050914,
                    "min": 46.722317,
                    "p50": 52.713988,
                    "p95": 61.050914,
                    "p99": 61.050914,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 54.331589,
                    "min": 43.923407,
                    "p50": 45.685837,
                    "p95": 54.331589,
                    "p99": 54.331589,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 64.45561,
                    "min": 55.888127,
                    "p50": 61.491028,
                    "p95": 64.45561,
                    "p99": 64.45561,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 76.060817,
                    "min": 52.123602999999996,
                    "p50": 53.801244,
                    "p95": 76.060817,
                    "p99": 76.060817,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 82.04788099999999,
                    "min": 69.85298,
                    "p50": 72.283957,
                    "p95": 82.04788099999999,
                    "p99": 82.04788099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 363.568808,
                    "min": 256.310719,
                    "p50": 300.646219,
                    "p95": 363.568808,
                    "p99": 363.568808,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 103.296182,
                    "min": 69.59091599999999,
                    "p50": 77.511226,
                    "p95": 103.296182,
                    "p99": 103.296182,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 150.457294,
                    "min": 138.76512499999998,
                    "p50": 146.22964299999998,
                    "p95": 150.457294,
                    "p99": 150.457294,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 95.287172,
                    "min": 75.23836899999999,
                    "p50": 81.436959,
                    "p95": 95.287172,
                    "p99": 95.287172,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 65.347942,
                    "min": 48.323057,
                    "p50": 56.245357,
                    "p95": 65.347942,
                    "p99": 65.347942,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 75.514828,
                    "min": 52.297278999999996,
                    "p50": 58.494786999999995,
                    "p95": 75.514828,
                    "p99": 75.514828,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 34.694312,
                    "min": 26.459646,
                    "p50": 28.163581999999998,
                    "p95": 34.694312,
                    "p99": 34.694312,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 31.916902999999998,
                    "min": 25.932982,
                    "p50": 29.190692,
                    "p95": 31.916902999999998,
                    "p99": 31.916902999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 40.620844,
                    "min": 27.211771,
                    "p50": 31.188359,
                    "p95": 40.620844,
                    "p99": 40.620844,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.179235,
                    "min": 26.113114,
                    "p50": 26.953146,
                    "p95": 27.179235,
                    "p99": 27.179235,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.859952999999997,
                    "min": 25.950848,
                    "p50": 27.049280999999997,
                    "p95": 27.859952999999997,
                    "p99": 27.859952999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 33.394687999999995,
                    "min": 26.400465,
                    "p50": 27.114068999999997,
                    "p95": 33.394687999999995,
                    "p99": 33.394687999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.559753999999998,
                    "min": 25.971650999999998,
                    "p50": 28.166926999999998,
                    "p95": 28.559753999999998,
                    "p99": 28.559753999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 41.366563,
                    "min": 25.520677,
                    "p50": 28.839962,
                    "p95": 41.366563,
                    "p99": 41.366563,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 54.794911,
                    "min": 43.991899,
                    "p50": 47.721723,
                    "p95": 54.794911,
                    "p99": 54.794911,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 33.689028,
                    "min": 26.266261,
                    "p50": 29.339187,
                    "p95": 33.689028,
                    "p99": 33.689028,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 64.943652,
                    "min": 36.672008999999996,
                    "p50": 40.668565,
                    "p95": 64.943652,
                    "p99": 64.943652,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 32.805023999999996,
                    "min": 30.289244999999998,
                    "p50": 31.264494,
                    "p95": 32.805023999999996,
                    "p99": 32.805023999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 33.541339,
                    "min": 28.612306,
                    "p50": 30.896134,
                    "p95": 33.541339,
                    "p99": 33.541339,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 46.147161,
                    "min": 26.261101,
                    "p50": 27.36964,
                    "p95": 46.147161,
                    "p99": 46.147161,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 108.969129,
                    "min": 87.46421099999999,
                    "p50": 92.897176,
                    "p95": 108.969129,
                    "p99": 108.969129,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 88.745188,
                    "min": 58.51994,
                    "p50": 62.161825,
                    "p95": 88.745188,
                    "p99": 88.745188,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 35.046873,
                    "min": 27.063520999999998,
                    "p50": 29.057695,
                    "p95": 35.046873,
                    "p99": 35.046873,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 30.087446999999997,
                    "min": 25.972922,
                    "p50": 27.312013,
                    "p95": 30.087446999999997,
                    "p99": 30.087446999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 352.12264899999997,
                    "min": 318.674914,
                    "p50": 322.351494,
                    "p95": 352.12264899999997,
                    "p99": 352.12264899999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.532815,
                    "min": 105.977361,
                    "p50": 108.896226,
                    "p95": 129.532815,
                    "p99": 129.532815,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3006.8610679999997,
                    "min": 2968.1795039999997,
                    "p50": 2978.584536,
                    "p95": 3006.8610679999997,
                    "p99": 3006.8610679999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 626.827139,
                    "min": 609.584032,
                    "p50": 619.924671,
                    "p95": 626.827139,
                    "p99": 626.827139,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 265.739019,
                    "min": 225.30207099999998,
                    "p50": 237.380364,
                    "p95": 265.739019,
                    "p99": 265.739019,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.30033899999998,
                    "min": 140.310589,
                    "p50": 145.960141,
                    "p95": 162.30033899999998,
                    "p99": 162.30033899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 225.919636,
                    "min": 195.21258799999998,
                    "p50": 202.8199,
                    "p95": 225.919636,
                    "p99": 225.919636,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 920.683447,
                    "min": 908.718491,
                    "p50": 914.9967359999999,
                    "p95": 920.683447,
                    "p99": 920.683447,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 459.86880199999996,
                    "min": 409.90623899999997,
                    "p50": 426.657944,
                    "p95": 459.86880199999996,
                    "p99": 459.86880199999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 379.49426,
                    "min": 341.600131,
                    "p50": 362.712771,
                    "p95": 379.49426,
                    "p99": 379.49426,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1242.596525,
                    "min": 1199.6870569999999,
                    "p50": 1210.55907,
                    "p95": 1242.596525,
                    "p99": 1242.596525,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1547.44219,
                    "min": 1497.7747339999999,
                    "p50": 1521.48686,
                    "p95": 1547.44219,
                    "p99": 1547.44219,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 468.03126899999995,
                    "min": 434.275767,
                    "p50": 441.54017799999997,
                    "p95": 468.03126899999995,
                    "p99": 468.03126899999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 181.241426,
                    "min": 167.208305,
                    "p50": 173.546719,
                    "p95": 181.241426,
                    "p99": 181.241426,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 568.240868,
                    "min": 535.4509909999999,
                    "p50": 544.123977,
                    "p95": 568.240868,
                    "p99": 568.240868,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 331.328841,
                    "min": 289.55670299999997,
                    "p50": 303.353075,
                    "p95": 331.328841,
                    "p99": 331.328841,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 391.23663799999997,
                    "min": 370.969748,
                    "p50": 384.758507,
                    "p95": 391.23663799999997,
                    "p99": 391.23663799999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 504.907182,
                    "min": 459.486399,
                    "p50": 486.636267,
                    "p95": 504.907182,
                    "p99": 504.907182,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 287.958455,
                    "min": 256.33633499999996,
                    "p50": 265.677263,
                    "p95": 287.958455,
                    "p99": 287.958455,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1914.893099,
                    "min": 1859.102394,
                    "p50": 1877.7017449999998,
                    "p95": 1914.893099,
                    "p99": 1914.893099,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 297.227978,
                    "min": 262.304727,
                    "p50": 270.766094,
                    "p95": 297.227978,
                    "p99": 297.227978,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 607.714609,
                    "min": 563.973087,
                    "p50": 585.862172,
                    "p95": 607.714609,
                    "p99": 607.714609,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 921.584754,
                    "min": 871.849561,
                    "p50": 901.717507,
                    "p95": 921.584754,
                    "p99": 921.584754,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 354.96630899999997,
                    "min": 314.360573,
                    "p50": 329.57654099999996,
                    "p95": 354.96630899999997,
                    "p99": 354.96630899999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 973.51613,
                    "min": 930.634969,
                    "p50": 950.818179,
                    "p95": 973.51613,
                    "p99": 973.51613,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 552.857673,
                    "min": 507.29558,
                    "p50": 521.4288789999999,
                    "p95": 552.857673,
                    "p99": 552.857673,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1150.312369,
                    "min": 1091.198076,
                    "p50": 1107.996075,
                    "p95": 1150.312369,
                    "p99": 1150.312369,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 418.81436299999996,
                    "min": 378.18888899999996,
                    "p50": 394.08063899999996,
                    "p95": 418.81436299999996,
                    "p99": 418.81436299999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 685.478759,
                    "min": 640.21708,
                    "p50": 669.858156,
                    "p95": 685.478759,
                    "p99": 685.478759,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2544.882638,
                    "min": 2470.2075839999998,
                    "p50": 2505.7937079999997,
                    "p95": 2544.882638,
                    "p99": 2544.882638,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 714.183547,
                    "min": 670.537327,
                    "p50": 697.823932,
                    "p95": 714.183547,
                    "p99": 714.183547,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 489.71516099999997,
                    "min": 453.667919,
                    "p50": 467.190708,
                    "p95": 489.71516099999997,
                    "p99": 489.71516099999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 843.085171,
                    "min": 763.187222,
                    "p50": 796.6717649999999,
                    "p95": 843.085171,
                    "p99": 843.085171,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 246.69591799999998,
                    "min": 200.2019,
                    "p50": 210.416059,
                    "p95": 246.69591799999998,
                    "p99": 246.69591799999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 855.1216579999999,
                    "min": 829.0314179999999,
                    "p50": 836.265324,
                    "p95": 855.1216579999999,
                    "p99": 855.1216579999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1269.86964,
                    "min": 1242.197572,
                    "p50": 1263.146242,
                    "p95": 1269.86964,
                    "p99": 1269.86964,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3117.348439,
                    "min": 3047.663481,
                    "p50": 3087.7712159999996,
                    "p95": 3117.348439,
                    "p99": 3117.348439,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 311.590038,
                    "min": 270.442639,
                    "p50": 289.988895,
                    "p95": 311.590038,
                    "p99": 311.590038,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 535.60068,
                    "min": 521.13189,
                    "p50": 526.7565549999999,
                    "p95": 535.60068,
                    "p99": 535.60068,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 475.64858899999996,
                    "min": 436.795869,
                    "p50": 443.38905,
                    "p95": 475.64858899999996,
                    "p99": 475.64858899999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 891.556146,
                    "min": 852.68502,
                    "p50": 865.4319469999999,
                    "p95": 891.556146,
                    "p99": 891.556146,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 812.7734889999999,
                    "min": 773.764269,
                    "p50": 784.116668,
                    "p95": 812.7734889999999,
                    "p99": 812.7734889999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1071.634167,
                    "min": 1016.957136,
                    "p50": 1041.6580689999998,
                    "p95": 1071.634167,
                    "p99": 1071.634167,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1301.885161,
                    "min": 1264.469557,
                    "p50": 1291.941892,
                    "p95": 1301.885161,
                    "p99": 1301.885161,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1179.168806,
                    "min": 1099.133595,
                    "p50": 1118.527832,
                    "p95": 1179.168806,
                    "p99": 1179.168806,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 965.1791079999999,
                    "min": 940.719346,
                    "p50": 958.067336,
                    "p95": 965.1791079999999,
                    "p99": 965.1791079999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1719.075257,
                    "min": 1687.996058,
                    "p50": 1710.83204,
                    "p95": 1719.075257,
                    "p99": 1719.075257,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 644.227864,
                    "min": 605.415992,
                    "p50": 616.615808,
                    "p95": 644.227864,
                    "p99": 644.227864,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 374.785852,
                    "min": 353.74109699999997,
                    "p50": 364.962403,
                    "p95": 374.785852,
                    "p99": 374.785852,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1539.466907,
                    "min": 1488.4523769999998,
                    "p50": 1494.713581,
                    "p95": 1539.466907,
                    "p99": 1539.466907,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 716.075128,
                    "min": 685.742931,
                    "p50": 703.956163,
                    "p95": 716.075128,
                    "p99": 716.075128,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1219.1594149999999,
                    "min": 1186.053807,
                    "p50": 1199.4361079999999,
                    "p95": 1219.1594149999999,
                    "p99": 1219.1594149999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 310.716933,
                    "min": 286.845641,
                    "p50": 298.740793,
                    "p95": 310.716933,
                    "p99": 310.716933,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 612.957051,
                    "min": 600.410127,
                    "p50": 610.510556,
                    "p95": 612.957051,
                    "p99": 612.957051,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 882.649771,
                    "min": 850.616354,
                    "p50": 862.872044,
                    "p95": 882.649771,
                    "p99": 882.649771,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1721.798971,
                    "min": 1674.2798579999999,
                    "p50": 1695.7233669999998,
                    "p95": 1721.798971,
                    "p99": 1721.798971,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 519.617134,
                    "min": 479.283432,
                    "p50": 487.708461,
                    "p95": 519.617134,
                    "p99": 519.617134,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 274.973978,
                    "min": 228.43312899999998,
                    "p50": 242.126062,
                    "p95": 274.973978,
                    "p99": 274.973978,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 229.78150599999998,
                    "min": 186.022514,
                    "p50": 192.714035,
                    "p95": 229.78150599999998,
                    "p99": 229.78150599999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 542.182074,
                    "min": 519.652305,
                    "p50": 528.924672,
                    "p95": 542.182074,
                    "p99": 542.182074,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1326.398123,
                    "min": 1276.420416,
                    "p50": 1295.704551,
                    "p95": 1326.398123,
                    "p99": 1326.398123,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 790.2644419999999,
                    "min": 752.8579239999999,
                    "p50": 769.8331109999999,
                    "p95": 790.2644419999999,
                    "p99": 790.2644419999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 683.845099,
                    "min": 651.095644,
                    "p50": 652.819034,
                    "p95": 683.845099,
                    "p99": 683.845099,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 388.74204,
                    "min": 353.30674,
                    "p50": 364.074547,
                    "p95": 388.74204,
                    "p99": 388.74204,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 465.525984,
                    "min": 435.530528,
                    "p50": 443.1626,
                    "p95": 465.525984,
                    "p99": 465.525984,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 349.35078899999996,
                    "min": 309.319797,
                    "p50": 328.47840099999996,
                    "p95": 349.35078899999996,
                    "p99": 349.35078899999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.373237,
                    "min": 144.089539,
                    "p50": 146.602022,
                    "p95": 172.373237,
                    "p99": 172.373237,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 589.59922,
                    "min": 562.4390149999999,
                    "p50": 575.4183869999999,
                    "p95": 589.59922,
                    "p99": 589.59922,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.472701,
                    "min": 391.978869,
                    "p50": 404.378264,
                    "p95": 425.472701,
                    "p99": 425.472701,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 650.264906,
                    "min": 616.067517,
                    "p50": 622.982859,
                    "p95": 650.264906,
                    "p99": 650.264906,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2012.13473,
                    "min": 1977.6476369999998,
                    "p50": 1992.9895729999998,
                    "p95": 2012.13473,
                    "p99": 2012.13473,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4065.994652,
                    "min": 4019.595195,
                    "p50": 4034.8193229999997,
                    "p95": 4065.994652,
                    "p99": 4065.994652,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2237.154033,
                    "min": 2194.979612,
                    "p50": 2217.629781,
                    "p95": 2237.154033,
                    "p99": 2237.154033,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5937.343029,
                    "min": 5864.314961,
                    "p50": 5919.735965,
                    "p95": 5937.343029,
                    "p99": 5937.343029,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1254.670059,
                    "min": 1208.484273,
                    "p50": 1221.1159089999999,
                    "p95": 1254.670059,
                    "p99": 1254.670059,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1862.4971429999998,
                    "min": 1803.2613569999999,
                    "p50": 1825.1390199999998,
                    "p95": 1862.4971429999998,
                    "p99": 1862.4971429999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7839.137548,
                    "min": 7744.206346999999,
                    "p50": 7780.728110999999,
                    "p95": 7839.137548,
                    "p99": 7839.137548,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1043.442333,
                    "min": 1021.764092,
                    "p50": 1031.568401,
                    "p95": 1043.442333,
                    "p99": 1043.442333,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2672.038466,
                    "min": 2632.755599,
                    "p50": 2650.45385,
                    "p95": 2672.038466,
                    "p99": 2672.038466,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1416.663609,
                    "min": 1392.2742859999998,
                    "p50": 1399.9242279999999,
                    "p95": 1416.663609,
                    "p99": 1416.663609,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 851.365859,
                    "min": 813.839532,
                    "p50": 821.484744,
                    "p95": 851.365859,
                    "p99": 851.365859,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3057.54999,
                    "min": 3018.092296,
                    "p50": 3040.6372119999996,
                    "p95": 3057.54999,
                    "p99": 3057.54999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2856.091451,
                    "min": 2813.060696,
                    "p50": 2830.27367,
                    "p95": 2856.091451,
                    "p99": 2856.091451,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3498.5314639999997,
                    "min": 3439.189873,
                    "p50": 3490.117522,
                    "p95": 3498.5314639999997,
                    "p99": 3498.5314639999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1608.503968,
                    "min": 1580.097325,
                    "p50": 1603.5161939999998,
                    "p95": 1608.503968,
                    "p99": 1608.503968,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2419.533423,
                    "min": 2379.32293,
                    "p50": 2404.3217879999997,
                    "p95": 2419.533423,
                    "p99": 2419.533423,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 720.1010279999999,
                    "min": 698.109102,
                    "p50": 708.098835,
                    "p95": 720.1010279999999,
                    "p99": 720.1010279999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 537.377296,
                    "min": 503.60545199999996,
                    "p50": 513.855011,
                    "p95": 537.377296,
                    "p99": 537.377296,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1039.874902,
                    "min": 991.563231,
                    "p50": 999.1088199999999,
                    "p95": 1039.874902,
                    "p99": 1039.874902,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1518.196692,
                    "min": 1469.007684,
                    "p50": 1498.895111,
                    "p95": 1518.196692,
                    "p99": 1518.196692,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4939.220063,
                    "min": 4873.95991,
                    "p50": 4900.122034999999,
                    "p95": 4939.220063,
                    "p99": 4939.220063,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2000.8147,
                    "min": 1956.858401,
                    "p50": 1979.8025169999999,
                    "p95": 2000.8147,
                    "p99": 2000.8147,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 584.678599,
                    "min": 562.0132159999999,
                    "p50": 568.238109,
                    "p95": 584.678599,
                    "p99": 584.678599,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.740343,
                    "min": 171.71046199999998,
                    "p50": 178.732338,
                    "p95": 182.740343,
                    "p99": 182.740343,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2505.900965,
                    "min": 2447.2884529999997,
                    "p50": 2489.765474,
                    "p95": 2505.900965,
                    "p99": 2505.900965,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 379.067767,
                    "min": 361.29287999999997,
                    "p50": 367.859155,
                    "p95": 379.067767,
                    "p99": 379.067767,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 449.899414,
                    "min": 409.369467,
                    "p50": 424.823351,
                    "p95": 449.899414,
                    "p99": 449.899414,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 473.851316,
                    "min": 456.847065,
                    "p50": 468.454712,
                    "p95": 473.851316,
                    "p99": 473.851316,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 896.174674,
                    "min": 867.052647,
                    "p50": 877.773601,
                    "p95": 896.174674,
                    "p99": 896.174674,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 289.106296,
                    "min": 260.456211,
                    "p50": 264.877654,
                    "p95": 289.106296,
                    "p99": 289.106296,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 326.72558599999996,
                    "min": 311.385502,
                    "p50": 318.69667599999997,
                    "p95": 326.72558599999996,
                    "p99": 326.72558599999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 792.436662,
                    "min": 743.034331,
                    "p50": 756.901758,
                    "p95": 792.436662,
                    "p99": 792.436662,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 630.433546,
                    "min": 601.3463019999999,
                    "p50": 612.619507,
                    "p95": 630.433546,
                    "p99": 630.433546,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 237.222639,
                    "min": 214.13169299999998,
                    "p50": 224.41128899999998,
                    "p95": 237.222639,
                    "p99": 237.222639,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 697.250626,
                    "min": 653.251574,
                    "p50": 671.398238,
                    "p95": 697.250626,
                    "p99": 697.250626,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2080.946625,
                    "min": 2047.32829,
                    "p50": 2064.897548,
                    "p95": 2080.946625,
                    "p99": 2080.946625,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 875.3062779999999,
                    "min": 830.5204319999999,
                    "p50": 846.8053679999999,
                    "p95": 875.3062779999999,
                    "p99": 875.3062779999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 641.1750539999999,
                    "min": 596.7377319999999,
                    "p50": 610.061787,
                    "p95": 641.1750539999999,
                    "p99": 641.1750539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1452.785641,
                    "min": 1418.6130019999998,
                    "p50": 1435.395071,
                    "p95": 1452.785641,
                    "p99": 1452.785641,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 965.448417,
                    "min": 952.509699,
                    "p50": 956.709839,
                    "p95": 965.448417,
                    "p99": 965.448417,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4714.478985,
                    "min": 4616.6730339999995,
                    "p50": 4691.527959999999,
                    "p95": 4714.478985,
                    "p99": 4714.478985,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1318.387798,
                    "min": 1297.58891,
                    "p50": 1308.916418,
                    "p95": 1318.387798,
                    "p99": 1318.387798,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 747.7148579999999,
                    "min": 713.080747,
                    "p50": 723.068867,
                    "p95": 747.7148579999999,
                    "p99": 747.7148579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1568.2681679999998,
                    "min": 1522.273948,
                    "p50": 1538.69083,
                    "p95": 1568.2681679999998,
                    "p99": 1568.2681679999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3546.6010269999997,
                    "min": 3495.813091,
                    "p50": 3517.942729,
                    "p95": 3546.6010269999997,
                    "p99": 3546.6010269999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1780.547367,
                    "min": 1748.100821,
                    "p50": 1769.629813,
                    "p95": 1780.547367,
                    "p99": 1780.547367,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2374.870683,
                    "min": 2333.300413,
                    "p50": 2353.9021869999997,
                    "p95": 2374.870683,
                    "p99": 2374.870683,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 396.97747499999997,
                    "min": 365.639622,
                    "p50": 373.48627899999997,
                    "p95": 396.97747499999997,
                    "p99": 396.97747499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1667.7995099999998,
                    "min": 1642.5704059999998,
                    "p50": 1660.607744,
                    "p95": 1667.7995099999998,
                    "p99": 1667.7995099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 512.153719,
                    "min": 482.35937199999995,
                    "p50": 494.627052,
                    "p95": 512.153719,
                    "p99": 512.153719,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1217.410191,
                    "min": 1177.31403,
                    "p50": 1192.86259,
                    "p95": 1217.410191,
                    "p99": 1217.410191,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1089.8204289999999,
                    "min": 1063.205293,
                    "p50": 1076.2754029999999,
                    "p95": 1089.8204289999999,
                    "p99": 1089.8204289999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1791.5563109999998,
                    "min": 1747.600291,
                    "p50": 1782.422971,
                    "p95": 1791.5563109999998,
                    "p99": 1791.5563109999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 507.18994299999997,
                    "min": 488.492394,
                    "p50": 494.32055599999995,
                    "p95": 507.18994299999997,
                    "p99": 507.18994299999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1094.3534319999999,
                    "min": 1061.508416,
                    "p50": 1074.546272,
                    "p95": 1094.3534319999999,
                    "p99": 1094.3534319999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1546.138109,
                    "min": 1528.316869,
                    "p50": 1536.807443,
                    "p95": 1546.138109,
                    "p99": 1546.138109,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1210.273032,
                    "min": 1172.92795,
                    "p50": 1194.032897,
                    "p95": 1210.273032,
                    "p99": 1210.273032,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1345.288679,
                    "min": 1301.568767,
                    "p50": 1317.405454,
                    "p95": 1345.288679,
                    "p99": 1345.288679,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2383.707274,
                    "min": 2327.703873,
                    "p50": 2360.908192,
                    "p95": 2383.707274,
                    "p99": 2383.707274,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3555.53854,
                    "min": 3492.706667,
                    "p50": 3512.157592,
                    "p95": 3555.53854,
                    "p99": 3555.53854,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1438.655847,
                    "min": 1406.248846,
                    "p50": 1433.1397459999998,
                    "p95": 1438.655847,
                    "p99": 1438.655847,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 641.3356259999999,
                    "min": 602.5292489999999,
                    "p50": 610.216582,
                    "p95": 641.3356259999999,
                    "p99": 641.3356259999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 380.348751,
                    "min": 364.999425,
                    "p50": 373.021464,
                    "p95": 380.348751,
                    "p99": 380.348751,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 741.5609119999999,
                    "min": 719.342708,
                    "p50": 726.319269,
                    "p95": 741.5609119999999,
                    "p99": 741.5609119999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2084.757288,
                    "min": 2043.091624,
                    "p50": 2060.288223,
                    "p95": 2084.757288,
                    "p99": 2084.757288,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 866.544815,
                    "min": 829.4852619999999,
                    "p50": 846.822017,
                    "p95": 866.544815,
                    "p99": 866.544815,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1660.476062,
                    "min": 1641.166481,
                    "p50": 1645.6761609999999,
                    "p95": 1660.476062,
                    "p99": 1660.476062,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 971.5897349999999,
                    "min": 947.3054989999999,
                    "p50": 959.9595939999999,
                    "p95": 971.5897349999999,
                    "p99": 971.5897349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10939.112772999999,
                    "min": 10792.015979,
                    "p50": 10879.701461999999,
                    "p95": 10939.112772999999,
                    "p99": 10939.112772999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1567.344709,
                    "min": 1535.400582,
                    "p50": 1559.547674,
                    "p95": 1567.344709,
                    "p99": 1567.344709,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5470.652442,
                    "min": 5390.108395,
                    "p50": 5452.837703,
                    "p95": 5470.652442,
                    "p99": 5470.652442,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 799.455526,
                    "min": 770.392289,
                    "p50": 791.360642,
                    "p95": 799.455526,
                    "p99": 799.455526,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 476.052011,
                    "min": 453.12215199999997,
                    "p50": 461.93927199999996,
                    "p95": 476.052011,
                    "p99": 476.052011,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1361.335629,
                    "min": 1318.175146,
                    "p50": 1335.364411,
                    "p95": 1361.335629,
                    "p99": 1361.335629,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4415.229695999999,
                    "min": 4338.274821999999,
                    "p50": 4367.770611,
                    "p95": 4415.229695999999,
                    "p99": 4415.229695999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1674.995201,
                    "min": 1647.334336,
                    "p50": 1665.975536,
                    "p95": 1674.995201,
                    "p99": 1674.995201,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1467.3283099999999,
                    "min": 1413.39932,
                    "p50": 1440.2318699999998,
                    "p95": 1467.3283099999999,
                    "p99": 1467.3283099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1934.974648,
                    "min": 1901.926595,
                    "p50": 1925.7838399999998,
                    "p95": 1934.974648,
                    "p99": 1934.974648,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 592.423725,
                    "min": 559.122747,
                    "p50": 565.4368059999999,
                    "p95": 592.423725,
                    "p99": 592.423725,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1248.212474,
                    "min": 1205.4119269999999,
                    "p50": 1227.111112,
                    "p95": 1248.212474,
                    "p99": 1248.212474,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 365.740969,
                    "min": 344.010771,
                    "p50": 353.787485,
                    "p95": 365.740969,
                    "p99": 365.740969,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 900.2895629999999,
                    "min": 878.095746,
                    "p50": 895.5963049999999,
                    "p95": 900.2895629999999,
                    "p99": 900.2895629999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 704.2110389999999,
                    "min": 665.5371379999999,
                    "p50": 670.762741,
                    "p95": 704.2110389999999,
                    "p99": 704.2110389999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1018.4774729999999,
                    "min": 982.78982,
                    "p50": 998.124412,
                    "p95": 1018.4774729999999,
                    "p99": 1018.4774729999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1143.877333,
                    "min": 1096.132158,
                    "p50": 1122.6269419999999,
                    "p95": 1143.877333,
                    "p99": 1143.877333,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3298.8438619999997,
                    "min": 3255.890951,
                    "p50": 3289.747141,
                    "p95": 3298.8438619999997,
                    "p99": 3298.8438619999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2223.40566,
                    "min": 2180.261287,
                    "p50": 2187.081225,
                    "p95": 2223.40566,
                    "p99": 2223.40566,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 315.105211,
                    "min": 300.998831,
                    "p50": 312.410306,
                    "p95": 315.105211,
                    "p99": 315.105211,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1937.791131,
                    "min": 1911.810111,
                    "p50": 1931.415767,
                    "p95": 1937.791131,
                    "p99": 1937.791131,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1477.811987,
                    "min": 1438.204475,
                    "p50": 1451.8180459999999,
                    "p95": 1477.811987,
                    "p99": 1477.811987,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1033.7410049999999,
                    "min": 970.3575109999999,
                    "p50": 987.8685999999999,
                    "p95": 1033.7410049999999,
                    "p99": 1033.7410049999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 536.285947,
                    "min": 490.073264,
                    "p50": 507.489225,
                    "p95": 536.285947,
                    "p99": 536.285947,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4807.177557,
                    "min": 4756.117894999999,
                    "p50": 4794.548164,
                    "p95": 4807.177557,
                    "p99": 4807.177557,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2422.9380659999997,
                    "min": 2384.882127,
                    "p50": 2405.384196,
                    "p95": 2422.9380659999997,
                    "p99": 2422.9380659999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 632.809094,
                    "min": 585.035806,
                    "p50": 596.769053,
                    "p95": 632.809094,
                    "p99": 632.809094,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 706.563197,
                    "min": 683.1312029999999,
                    "p50": 689.428276,
                    "p95": 706.563197,
                    "p99": 706.563197,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 435.01933599999995,
                    "min": 399.42541,
                    "p50": 410.073339,
                    "p95": 435.01933599999995,
                    "p99": 435.01933599999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 485.92484099999996,
                    "min": 443.40564,
                    "p50": 450.84063599999996,
                    "p95": 485.92484099999996,
                    "p99": 485.92484099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 239.202046,
                    "min": 214.89550799999998,
                    "p50": 221.29727,
                    "p95": 239.202046,
                    "p99": 239.202046,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 870.4055619999999,
                    "min": 855.31045,
                    "p50": 861.41521,
                    "p95": 870.4055619999999,
                    "p99": 870.4055619999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 567.078592,
                    "min": 539.156808,
                    "p50": 550.001642,
                    "p95": 567.078592,
                    "p99": 567.078592,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 765.388927,
                    "min": 730.8769169999999,
                    "p50": 744.808758,
                    "p95": 765.388927,
                    "p99": 765.388927,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 387.262904,
                    "min": 349.800531,
                    "p50": 361.146565,
                    "p95": 387.262904,
                    "p99": 387.262904,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 678.6023829999999,
                    "min": 630.931681,
                    "p50": 641.90823,
                    "p95": 678.6023829999999,
                    "p99": 678.6023829999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 274.440781,
                    "min": 257.33245999999997,
                    "p50": 266.758859,
                    "p95": 274.440781,
                    "p99": 274.440781,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 197.906165,
                    "min": 167.385619,
                    "p50": 175.04425,
                    "p95": 197.906165,
                    "p99": 197.906165,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1952.821892,
                    "min": 1905.701345,
                    "p50": 1936.870326,
                    "p95": 1952.821892,
                    "p99": 1952.821892,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 931.270731,
                    "min": 882.0230449999999,
                    "p50": 891.4836819999999,
                    "p95": 931.270731,
                    "p99": 931.270731,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2216.846822,
                    "min": 2199.042146,
                    "p50": 2202.348862,
                    "p95": 2216.846822,
                    "p99": 2216.846822,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 794.5953509999999,
                    "min": 773.618582,
                    "p50": 783.353068,
                    "p95": 794.5953509999999,
                    "p99": 794.5953509999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 710.325782,
                    "min": 664.7157199999999,
                    "p50": 681.913729,
                    "p95": 710.325782,
                    "p99": 710.325782,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 465.361833,
                    "min": 448.020205,
                    "p50": 456.694275,
                    "p95": 465.361833,
                    "p99": 465.361833,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1560.910208,
                    "min": 1535.126481,
                    "p50": 1547.86878,
                    "p95": 1560.910208,
                    "p99": 1560.910208,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1235.569415,
                    "min": 1205.0540509999998,
                    "p50": 1224.423118,
                    "p95": 1235.569415,
                    "p99": 1235.569415,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3338.1467079999998,
                    "min": 3275.614892,
                    "p50": 3293.284245,
                    "p95": 3338.1467079999998,
                    "p99": 3338.1467079999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1020.6912609999999,
                    "min": 996.8081209999999,
                    "p50": 1007.9216419999999,
                    "p95": 1020.6912609999999,
                    "p99": 1020.6912609999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10971.096411999999,
                    "min": 10761.099710999999,
                    "p50": 10890.982758,
                    "p95": 10971.096411999999,
                    "p99": 10971.096411999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 574.422881,
                    "min": 558.851317,
                    "p50": 566.8758799999999,
                    "p95": 574.422881,
                    "p99": 574.422881,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1464.7152609999998,
                    "min": 1420.9359439999998,
                    "p50": 1441.553313,
                    "p95": 1464.7152609999998,
                    "p99": 1464.7152609999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1365.853283,
                    "min": 1316.230805,
                    "p50": 1338.881036,
                    "p95": 1365.853283,
                    "p99": 1365.853283,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4397.021509,
                    "min": 4345.840438,
                    "p50": 4371.811998,
                    "p95": 4397.021509,
                    "p99": 4397.021509,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 360.286008,
                    "min": 342.50341299999997,
                    "p50": 348.86040099999997,
                    "p95": 360.286008,
                    "p99": 360.286008,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1683.782334,
                    "min": 1648.6770629999999,
                    "p50": 1657.2131399999998,
                    "p95": 1683.782334,
                    "p99": 1683.782334,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1124.299072,
                    "min": 1097.79942,
                    "p50": 1114.488826,
                    "p95": 1124.299072,
                    "p99": 1124.299072,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5489.573657,
                    "min": 5399.993023,
                    "p50": 5463.479829999999,
                    "p95": 5489.573657,
                    "p99": 5489.573657,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 671.247527,
                    "min": 650.198948,
                    "p50": 663.4124039999999,
                    "p95": 671.247527,
                    "p99": 671.247527,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 578.858436,
                    "min": 555.185153,
                    "p50": 563.987666,
                    "p95": 578.858436,
                    "p99": 578.858436,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 858.4268999999999,
                    "min": 832.3036179999999,
                    "p50": 845.296166,
                    "p95": 858.4268999999999,
                    "p99": 858.4268999999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 303.24265299999996,
                    "min": 279.76494299999996,
                    "p50": 290.161317,
                    "p95": 303.24265299999996,
                    "p99": 303.24265299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 406.12548999999996,
                    "min": 373.984238,
                    "p50": 381.22475599999996,
                    "p95": 406.12548999999996,
                    "p99": 406.12548999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 755.3942559999999,
                    "min": 738.146438,
                    "p50": 747.086966,
                    "p95": 755.3942559999999,
                    "p99": 755.3942559999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 494.657089,
                    "min": 464.61873299999996,
                    "p50": 479.34662399999996,
                    "p95": 494.657089,
                    "p99": 494.657089,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 918.589262,
                    "min": 899.382831,
                    "p50": 907.9869339999999,
                    "p95": 918.589262,
                    "p99": 918.589262,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 294.08732,
                    "min": 281.426553,
                    "p50": 292.716682,
                    "p95": 294.08732,
                    "p99": 294.08732,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 748.878879,
                    "min": 717.220473,
                    "p50": 732.314076,
                    "p95": 748.878879,
                    "p99": 748.878879,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 580.178418,
                    "min": 548.337887,
                    "p50": 560.300813,
                    "p95": 580.178418,
                    "p99": 580.178418,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 679.236903,
                    "min": 635.008007,
                    "p50": 644.294689,
                    "p95": 679.236903,
                    "p99": 679.236903,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 840.907827,
                    "min": 807.724147,
                    "p50": 829.055678,
                    "p95": 840.907827,
                    "p99": 840.907827,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 394.38091699999995,
                    "min": 370.30136699999997,
                    "p50": 382.611468,
                    "p95": 394.38091699999995,
                    "p99": 394.38091699999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 483.247888,
                    "min": 458.347383,
                    "p50": 471.681739,
                    "p95": 483.247888,
                    "p99": 483.247888,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 293.505165,
                    "min": 268.88448999999997,
                    "p50": 278.73621399999996,
                    "p95": 293.505165,
                    "p99": 293.505165,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 479.11516,
                    "min": 452.358383,
                    "p50": 464.423589,
                    "p95": 479.11516,
                    "p99": 479.11516,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 599.304351,
                    "min": 580.674892,
                    "p50": 586.323365,
                    "p95": 599.304351,
                    "p99": 599.304351,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 424.656393,
                    "min": 390.895003,
                    "p50": 414.38757799999996,
                    "p95": 424.656393,
                    "p99": 424.656393,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 811.215797,
                    "min": 748.086233,
                    "p50": 782.183687,
                    "p95": 811.215797,
                    "p99": 811.215797,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.05256899999998,
                    "min": 198.757869,
                    "p50": 207.088463,
                    "p95": 224.05256899999998,
                    "p99": 224.05256899999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 665.1420929999999,
                    "min": 634.694699,
                    "p50": 658.214928,
                    "p95": 665.1420929999999,
                    "p99": 665.1420929999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 535.017291,
                    "min": 510.64158999999995,
                    "p50": 523.8167599999999,
                    "p95": 535.017291,
                    "p99": 535.017291,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.94893199999996,
                    "min": 327.091005,
                    "p50": 338.324525,
                    "p95": 345.94893199999996,
                    "p99": 345.94893199999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 734.909308,
                    "min": 691.2909119999999,
                    "p50": 721.932197,
                    "p95": 734.909308,
                    "p99": 734.909308,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 583.6311949999999,
                    "min": 565.688039,
                    "p50": 571.1405589999999,
                    "p95": 583.6311949999999,
                    "p99": 583.6311949999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 763.3870509999999,
                    "min": 749.5030459999999,
                    "p50": 753.985467,
                    "p95": 763.3870509999999,
                    "p99": 763.3870509999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 211.60454099999998,
                    "min": 201.414628,
                    "p50": 209.591255,
                    "p95": 211.60454099999998,
                    "p99": 211.60454099999998,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 401.029814,
                    "min": 382.363794,
                    "p50": 388.90707799999996,
                    "p95": 401.029814,
                    "p99": 401.029814,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 681.806166,
                    "min": 656.003192,
                    "p50": 663.305379,
                    "p95": 681.806166,
                    "p99": 681.806166,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 351.271825,
                    "min": 295.424798,
                    "p50": 300.556554,
                    "p95": 351.271825,
                    "p99": 351.271825,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 517.551347,
                    "min": 472.869178,
                    "p50": 485.95903599999997,
                    "p95": 517.551347,
                    "p99": 517.551347,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 728.155269,
                    "min": 588.771795,
                    "p50": 640.426323,
                    "p95": 728.155269,
                    "p99": 728.155269,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 343.291768,
                    "min": 294.335093,
                    "p50": 317.77239,
                    "p95": 343.291768,
                    "p99": 343.291768,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.79165899999998,
                    "min": 172.025588,
                    "p50": 190.92107099999998,
                    "p95": 223.79165899999998,
                    "p99": 223.79165899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 595.475812,
                    "min": 531.59701,
                    "p50": 569.102586,
                    "p95": 595.475812,
                    "p99": 595.475812,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 480.782045,
                    "min": 417.37773799999997,
                    "p50": 446.766349,
                    "p95": 480.782045,
                    "p99": 480.782045,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 452.387966,
                    "min": 341.735207,
                    "p50": 360.076623,
                    "p95": 452.387966,
                    "p99": 452.387966,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 556.143792,
                    "min": 489.79346499999997,
                    "p50": 516.575754,
                    "p95": 556.143792,
                    "p99": 556.143792,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 272.202952,
                    "min": 216.02972799999998,
                    "p50": 226.638782,
                    "p95": 272.202952,
                    "p99": 272.202952,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.171717,
                    "min": 137.05173299999998,
                    "p50": 151.99962,
                    "p95": 175.171717,
                    "p99": 175.171717,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 822.175797,
                    "min": 735.761585,
                    "p50": 769.700288,
                    "p95": 822.175797,
                    "p99": 822.175797,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 696.0867049999999,
                    "min": 654.816561,
                    "p50": 681.573547,
                    "p95": 696.0867049999999,
                    "p99": 696.0867049999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 933.9964299999999,
                    "min": 821.8507209999999,
                    "p50": 885.094077,
                    "p95": 933.9964299999999,
                    "p99": 933.9964299999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 436.673096,
                    "min": 371.411808,
                    "p50": 423.35909,
                    "p95": 436.673096,
                    "p99": 436.673096,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 497.622016,
                    "min": 470.387257,
                    "p50": 481.64376799999997,
                    "p95": 497.622016,
                    "p99": 497.622016,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 343.82225,
                    "min": 253.14388699999998,
                    "p50": 284.536948,
                    "p95": 343.82225,
                    "p99": 343.82225,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 539.8781359999999,
                    "min": 492.505842,
                    "p50": 511.610866,
                    "p95": 539.8781359999999,
                    "p99": 539.8781359999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 250.77690299999998,
                    "min": 185.68469299999998,
                    "p50": 201.13906799999998,
                    "p95": 250.77690299999998,
                    "p99": 250.77690299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 612.278702,
                    "min": 564.5398289999999,
                    "p50": 589.9717909999999,
                    "p95": 612.278702,
                    "p99": 612.278702,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 453.317189,
                    "min": 378.221886,
                    "p50": 412.628869,
                    "p95": 453.317189,
                    "p99": 453.317189,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.710537,
                    "min": 161.063091,
                    "p50": 191.063008,
                    "p95": 193.710537,
                    "p99": 193.710537,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.17628099999996,
                    "min": 249.58485299999998,
                    "p50": 259.966824,
                    "p95": 299.17628099999996,
                    "p99": 299.17628099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 565.637107,
                    "min": 457.91026999999997,
                    "p50": 479.47209899999996,
                    "p95": 565.637107,
                    "p99": 565.637107,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 618.359683,
                    "min": 516.583338,
                    "p50": 582.547327,
                    "p95": 618.359683,
                    "p99": 618.359683,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 839.2207649999999,
                    "min": 754.427428,
                    "p50": 802.255046,
                    "p95": 839.2207649999999,
                    "p99": 839.2207649999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 333.66063199999996,
                    "min": 267.953707,
                    "p50": 315.418301,
                    "p95": 333.66063199999996,
                    "p99": 333.66063199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 721.0134519999999,
                    "min": 673.333635,
                    "p50": 707.956187,
                    "p95": 721.0134519999999,
                    "p99": 721.0134519999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 364.00633899999997,
                    "min": 313.861824,
                    "p50": 331.430388,
                    "p95": 364.00633899999997,
                    "p99": 364.00633899999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 475.89896699999997,
                    "min": 413.346931,
                    "p50": 434.48346999999995,
                    "p95": 475.89896699999997,
                    "p99": 475.89896699999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 396.450874,
                    "min": 336.27538899999996,
                    "p50": 375.648778,
                    "p95": 396.450874,
                    "p99": 396.450874,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.221814,
                    "min": 126.60610399999999,
                    "p50": 153.00607399999998,
                    "p95": 184.221814,
                    "p99": 184.221814,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 280.317449,
                    "min": 222.77355599999999,
                    "p50": 238.78608599999998,
                    "p95": 280.317449,
                    "p99": 280.317449,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 442.60837799999996,
                    "min": 328.893573,
                    "p50": 340.514731,
                    "p95": 442.60837799999996,
                    "p99": 442.60837799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 372.179144,
                    "min": 291.00404499999996,
                    "p50": 336.41506899999996,
                    "p95": 372.179144,
                    "p99": 372.179144,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 805.706748,
                    "min": 734.443302,
                    "p50": 782.446391,
                    "p95": 805.706748,
                    "p99": 805.706748,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 693.508392,
                    "min": 619.763004,
                    "p50": 649.318856,
                    "p95": 693.508392,
                    "p99": 693.508392,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.186084,
                    "min": 133.529675,
                    "p50": 148.731144,
                    "p95": 178.186084,
                    "p99": 178.186084,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.750599,
                    "min": 471.108675,
                    "p50": 503.292426,
                    "p95": 525.750599,
                    "p99": 525.750599,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 508.68208999999996,
                    "min": 423.20415099999997,
                    "p50": 440.409185,
                    "p95": 508.68208999999996,
                    "p99": 508.68208999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 230.83811,
                    "min": 174.271196,
                    "p50": 183.66188599999998,
                    "p95": 230.83811,
                    "p99": 230.83811,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 593.080923,
                    "min": 488.31053199999997,
                    "p50": 512.671877,
                    "p95": 593.080923,
                    "p99": 593.080923,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 447.50627099999997,
                    "min": 396.148621,
                    "p50": 435.318643,
                    "p95": 447.50627099999997,
                    "p99": 447.50627099999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 890.8649859999999,
                    "min": 837.4329309999999,
                    "p50": 874.1691189999999,
                    "p95": 890.8649859999999,
                    "p99": 890.8649859999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 634.1039519999999,
                    "min": 583.765764,
                    "p50": 625.403592,
                    "p95": 634.1039519999999,
                    "p99": 634.1039519999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 330.01937799999996,
                    "min": 253.36155,
                    "p50": 295.714805,
                    "p95": 330.01937799999996,
                    "p99": 330.01937799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 616.5918009999999,
                    "min": 539.2399449999999,
                    "p50": 568.226313,
                    "p95": 616.5918009999999,
                    "p99": 616.5918009999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 888.7529979999999,
                    "min": 850.4606279999999,
                    "p50": 863.885368,
                    "p95": 888.7529979999999,
                    "p99": 888.7529979999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 234.017835,
                    "min": 181.176287,
                    "p50": 189.22700799999998,
                    "p95": 234.017835,
                    "p99": 234.017835,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 432.050843,
                    "min": 391.041155,
                    "p50": 421.95698899999996,
                    "p95": 432.050843,
                    "p99": 432.050843,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 491.18744,
                    "min": 410.928568,
                    "p50": 450.51953899999995,
                    "p95": 491.18744,
                    "p99": 491.18744,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 530.2446649999999,
                    "min": 467.98599199999995,
                    "p50": 499.186576,
                    "p95": 530.2446649999999,
                    "p99": 530.2446649999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 808.6650089999999,
                    "min": 731.814083,
                    "p50": 764.533516,
                    "p95": 808.6650089999999,
                    "p99": 808.6650089999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 546.23295,
                    "min": 501.706535,
                    "p50": 530.641334,
                    "p95": 546.23295,
                    "p99": 546.23295,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 620.478811,
                    "min": 542.828987,
                    "p50": 583.4704859999999,
                    "p95": 620.478811,
                    "p99": 620.478811,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.91740199999998,
                    "min": 141.750532,
                    "p50": 156.069085,
                    "p95": 187.91740199999998,
                    "p99": 187.91740199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 361.36481699999996,
                    "min": 256.42458799999997,
                    "p50": 286.091186,
                    "p95": 361.36481699999996,
                    "p99": 361.36481699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 277.60916499999996,
                    "min": 224.836814,
                    "p50": 241.18168599999998,
                    "p95": 277.60916499999996,
                    "p99": 277.60916499999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 687.389542,
                    "min": 627.3993869999999,
                    "p50": 666.808643,
                    "p95": 687.389542,
                    "p99": 687.389542,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 392.912246,
                    "min": 337.467287,
                    "p50": 351.899906,
                    "p95": 392.912246,
                    "p99": 392.912246,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 684.53004,
                    "min": 586.082687,
                    "p50": 607.7656089999999,
                    "p95": 684.53004,
                    "p99": 684.53004,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 322.720356,
                    "min": 297.686176,
                    "p50": 316.96203099999997,
                    "p95": 322.720356,
                    "p99": 322.720356,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 274.18208799999996,
                    "min": 225.17789199999999,
                    "p50": 235.21600999999998,
                    "p95": 274.18208799999996,
                    "p99": 274.18208799999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 77.028464,
                    "min": 64.039357,
                    "p50": 69.81567,
                    "p95": 77.028464,
                    "p99": 77.028464,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1204.65534,
                    "min": 1182.795441,
                    "p50": 1191.513577,
                    "p95": 1204.65534,
                    "p99": 1204.65534,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 305.321491,
                    "min": 247.418422,
                    "p50": 256.49404499999997,
                    "p95": 305.321491,
                    "p99": 305.321491,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 383.248199,
                    "min": 362.42357,
                    "p50": 375.892109,
                    "p95": 383.248199,
                    "p99": 383.248199,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 155.282684,
                    "min": 135.30069899999998,
                    "p50": 143.546584,
                    "p95": 155.282684,
                    "p99": 155.282684,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 501.219544,
                    "min": 482.086937,
                    "p50": 483.965021,
                    "p95": 501.219544,
                    "p99": 501.219544,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 99.66072799999999,
                    "min": 86.952017,
                    "p50": 92.298563,
                    "p95": 99.66072799999999,
                    "p99": 99.66072799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.749908,
                    "min": 110.88300699999999,
                    "p50": 113.617527,
                    "p95": 150.749908,
                    "p99": 150.749908,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 87.618443,
                    "min": 52.341362,
                    "p50": 55.858019999999996,
                    "p95": 87.618443,
                    "p99": 87.618443,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 145.37690899999998,
                    "min": 125.949884,
                    "p50": 136.62845199999998,
                    "p95": 145.37690899999998,
                    "p99": 145.37690899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 146.652931,
                    "min": 97.516919,
                    "p50": 102.693783,
                    "p95": 146.652931,
                    "p99": 146.652931,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 176.184661,
                    "min": 146.08472,
                    "p50": 167.708981,
                    "p95": 176.184661,
                    "p99": 176.184661,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 196.107365,
                    "min": 166.339025,
                    "p50": 183.586625,
                    "p95": 196.107365,
                    "p99": 196.107365,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 192.76281799999998,
                    "min": 157.58622,
                    "p50": 172.732316,
                    "p95": 192.76281799999998,
                    "p99": 192.76281799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 622.271064,
                    "min": 597.840864,
                    "p50": 609.975679,
                    "p95": 622.271064,
                    "p99": 622.271064,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 103.619435,
                    "min": 77.269708,
                    "p50": 91.319611,
                    "p95": 103.619435,
                    "p99": 103.619435,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 222.782437,
                    "min": 181.306074,
                    "p50": 207.188413,
                    "p95": 222.782437,
                    "p99": 222.782437,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 212.85916999999998,
                    "min": 190.178515,
                    "p50": 198.912206,
                    "p95": 212.85916999999998,
                    "p99": 212.85916999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 408.61414299999996,
                    "min": 381.675643,
                    "p50": 399.53349099999997,
                    "p95": 408.61414299999996,
                    "p99": 408.61414299999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.760751,
                    "min": 91.161992,
                    "p50": 94.734512,
                    "p95": 106.760751,
                    "p99": 106.760751,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 519.23929,
                    "min": 501.488274,
                    "p50": 512.418789,
                    "p95": 519.23929,
                    "p99": 519.23929,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 283.367769,
                    "min": 261.97701,
                    "p50": 268.727438,
                    "p95": 283.367769,
                    "p99": 283.367769,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 246.55378,
                    "min": 191.24964599999998,
                    "p50": 207.36515599999998,
                    "p95": 246.55378,
                    "p99": 246.55378,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 233.83947799999999,
                    "min": 198.52952499999998,
                    "p50": 215.071313,
                    "p95": 233.83947799999999,
                    "p99": 233.83947799999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 198.677936,
                    "min": 176.655741,
                    "p50": 184.762688,
                    "p95": 198.677936,
                    "p99": 198.677936,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 246.958973,
                    "min": 232.30846,
                    "p50": 237.79201999999998,
                    "p95": 246.958973,
                    "p99": 246.958973,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.345191,
                    "min": 54.381535,
                    "p50": 56.332936,
                    "p95": 62.345191,
                    "p99": 62.345191,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1255.261955,
                    "min": 1227.103711,
                    "p50": 1234.8288189999998,
                    "p95": 1255.261955,
                    "p99": 1255.261955,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 82.421432,
                    "min": 66.228459,
                    "p50": 70.673065,
                    "p95": 82.421432,
                    "p99": 82.421432,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.02574399999999,
                    "min": 79.36386999999999,
                    "p50": 92.768152,
                    "p95": 113.02574399999999,
                    "p99": 113.02574399999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 164.573632,
                    "min": 115.35069999999999,
                    "p50": 127.309382,
                    "p95": 164.573632,
                    "p99": 164.573632,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 192.446911,
                    "min": 162.839082,
                    "p50": 170.58938,
                    "p95": 192.446911,
                    "p99": 192.446911,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 151.555873,
                    "min": 130.594696,
                    "p50": 146.790807,
                    "p95": 151.555873,
                    "p99": 151.555873,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 188.90600799999999,
                    "min": 153.32899899999998,
                    "p50": 167.857341,
                    "p95": 188.90600799999999,
                    "p99": 188.90600799999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 123.48267899999999,
                    "min": 103.64747799999999,
                    "p50": 114.42137799999999,
                    "p95": 123.48267899999999,
                    "p99": 123.48267899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 167.186992,
                    "min": 139.923004,
                    "p50": 155.01824399999998,
                    "p95": 167.186992,
                    "p99": 167.186992,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 645.479965,
                    "min": 624.950007,
                    "p50": 635.2079269999999,
                    "p95": 645.479965,
                    "p99": 645.479965,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.93594099999999,
                    "min": 174.49598,
                    "p50": 181.476769,
                    "p95": 194.93594099999999,
                    "p99": 194.93594099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1252.109726,
                    "min": 1227.988145,
                    "p50": 1235.1346079999998,
                    "p95": 1252.109726,
                    "p99": 1252.109726,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 219.032108,
                    "min": 188.58767699999999,
                    "p50": 202.765342,
                    "p95": 219.032108,
                    "p99": 219.032108,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 145.88673599999998,
                    "min": 126.707186,
                    "p50": 134.674816,
                    "p95": 145.88673599999998,
                    "p99": 145.88673599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 256.164664,
                    "min": 233.03889199999998,
                    "p50": 250.689316,
                    "p95": 256.164664,
                    "p99": 256.164664,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 284.847378,
                    "min": 262.301599,
                    "p50": 272.57193,
                    "p95": 284.847378,
                    "p99": 284.847378,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 123.006136,
                    "min": 79.063284,
                    "p50": 82.812766,
                    "p95": 123.006136,
                    "p99": 123.006136,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 175.592753,
                    "min": 136.082807,
                    "p50": 141.202372,
                    "p95": 175.592753,
                    "p99": 175.592753,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.271051,
                    "min": 102.707246,
                    "p50": 129.194637,
                    "p95": 139.271051,
                    "p99": 139.271051,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 235.99282599999998,
                    "min": 201.05611399999998,
                    "p50": 207.482788,
                    "p95": 235.99282599999998,
                    "p99": 235.99282599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 199.15386999999998,
                    "min": 162.271045,
                    "p50": 173.84331799999998,
                    "p95": 199.15386999999998,
                    "p99": 199.15386999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 539.8879519999999,
                    "min": 499.479357,
                    "p50": 513.229912,
                    "p95": 539.8879519999999,
                    "p99": 539.8879519999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 399.98506199999997,
                    "min": 380.602108,
                    "p50": 392.79907199999997,
                    "p95": 399.98506199999997,
                    "p99": 399.98506199999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.591187,
                    "min": 151.989475,
                    "p50": 158.851487,
                    "p95": 193.591187,
                    "p99": 193.591187,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.352822,
                    "min": 53.926072999999995,
                    "p50": 57.033545999999994,
                    "p95": 75.352822,
                    "p99": 75.352822,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 137.173284,
                    "min": 114.63482599999999,
                    "p50": 118.45911699999999,
                    "p95": 137.173284,
                    "p99": 137.173284,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.69282,
                    "min": 64.784275,
                    "p50": 70.408124,
                    "p95": 78.69282,
                    "p99": 78.69282,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 118.675652,
                    "min": 91.57538199999999,
                    "p50": 94.595231,
                    "p95": 118.675652,
                    "p99": 118.675652,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 671.30419,
                    "min": 620.1618149999999,
                    "p50": 634.2867689999999,
                    "p95": 671.30419,
                    "p99": 671.30419,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 168.792821,
                    "min": 154.192623,
                    "p50": 164.562644,
                    "p95": 168.792821,
                    "p99": 168.792821,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 125.77803499999999,
                    "min": 104.956346,
                    "p50": 111.048417,
                    "p95": 125.77803499999999,
                    "p99": 125.77803499999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 73.98453599999999,
                    "min": 66.267125,
                    "p50": 68.403699,
                    "p95": 73.98453599999999,
                    "p99": 73.98453599999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 165.75803299999998,
                    "min": 115.741783,
                    "p50": 131.846722,
                    "p95": 165.75803299999998,
                    "p99": 165.75803299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 282.75433599999997,
                    "min": 265.61265099999997,
                    "p50": 273.008779,
                    "p95": 282.75433599999997,
                    "p99": 282.75433599999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 96.103448,
                    "min": 54.751543999999996,
                    "p50": 56.993739,
                    "p95": 96.103448,
                    "p99": 96.103448,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1268.501474,
                    "min": 1242.68282,
                    "p50": 1253.076644,
                    "p95": 1268.501474,
                    "p99": 1268.501474,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 253.977412,
                    "min": 231.95170199999998,
                    "p50": 246.030445,
                    "p95": 253.977412,
                    "p99": 253.977412,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 93.396298,
                    "min": 79.073809,
                    "p50": 83.891504,
                    "p95": 93.396298,
                    "p99": 93.396298,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.064337,
                    "min": 142.737133,
                    "p50": 151.30711,
                    "p95": 182.064337,
                    "p99": 182.064337,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 233.77342299999998,
                    "min": 192.524145,
                    "p50": 197.20215399999998,
                    "p95": 233.77342299999998,
                    "p99": 233.77342299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.753559,
                    "min": 92.216284,
                    "p50": 99.466601,
                    "p95": 109.753559,
                    "p99": 109.753559,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 195.069355,
                    "min": 166.289449,
                    "p50": 174.420503,
                    "p95": 195.069355,
                    "p99": 195.069355,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 675.093309,
                    "min": 632.949158,
                    "p50": 654.776485,
                    "p95": 675.093309,
                    "p99": 675.093309,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 407.488347,
                    "min": 386.98204899999996,
                    "p50": 394.247188,
                    "p95": 407.488347,
                    "p99": 407.488347,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 216.64686,
                    "min": 178.023533,
                    "p50": 203.07643099999999,
                    "p95": 216.64686,
                    "p99": 216.64686,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 147.79779399999998,
                    "min": 129.370858,
                    "p50": 142.41187499999998,
                    "p95": 147.79779399999998,
                    "p99": 147.79779399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 218.486322,
                    "min": 204.544995,
                    "p50": 213.60152399999998,
                    "p95": 218.486322,
                    "p99": 218.486322,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 538.7734899999999,
                    "min": 509.77931099999995,
                    "p50": 524.155249,
                    "p95": 538.7734899999999,
                    "p99": 538.7734899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.147912,
                    "min": 111.09413599999999,
                    "p50": 114.66223199999999,
                    "p95": 142.147912,
                    "p99": 142.147912,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 216.789489,
                    "min": 184.952213,
                    "p50": 197.924615,
                    "p95": 216.789489,
                    "p99": 216.789489,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 199.95818,
                    "min": 159.18501999999998,
                    "p50": 170.91133,
                    "p95": 199.95818,
                    "p99": 199.95818,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.853282,
                    "min": 93.082779,
                    "p50": 97.141108,
                    "p95": 103.853282,
                    "p99": 103.853282,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.809103,
                    "min": 272.406676,
                    "p50": 282.49075,
                    "p95": 319.809103,
                    "p99": 319.809103,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 83.598867,
                    "min": 68.24289399999999,
                    "p50": 78.083046,
                    "p95": 83.598867,
                    "p99": 83.598867,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 165.057099,
                    "min": 120.30855899999999,
                    "p50": 129.34207899999998,
                    "p95": 165.057099,
                    "p99": 165.057099,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 173.848444,
                    "min": 144.97715599999998,
                    "p50": 152.922661,
                    "p95": 173.848444,
                    "p99": 173.848444,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 248.95574599999998,
                    "min": 210.67891699999998,
                    "p50": 218.927986,
                    "p95": 248.95574599999998,
                    "p99": 248.95574599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 463.32125399999995,
                    "min": 406.351387,
                    "p50": 419.86442999999997,
                    "p95": 463.32125399999995,
                    "p99": 463.32125399999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 212.103008,
                    "min": 172.844393,
                    "p50": 184.912082,
                    "p95": 212.103008,
                    "p99": 212.103008,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 173.3176,
                    "min": 135.550107,
                    "p50": 146.787266,
                    "p95": 173.3176,
                    "p99": 173.3176,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.933048,
                    "min": 81.62304999999999,
                    "p50": 94.855093,
                    "p95": 110.933048,
                    "p99": 110.933048,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 215.615489,
                    "min": 198.08229799999998,
                    "p50": 202.531634,
                    "p95": 215.615489,
                    "p99": 215.615489,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 248.79663599999998,
                    "min": 238.046505,
                    "p50": 243.693376,
                    "p95": 248.79663599999998,
                    "p99": 248.79663599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 547.87684,
                    "min": 530.0845049999999,
                    "p50": 538.015392,
                    "p95": 547.87684,
                    "p99": 547.87684,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 680.6432259999999,
                    "min": 660.241121,
                    "p50": 670.446682,
                    "p95": 680.6432259999999,
                    "p99": 680.6432259999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1331.109606,
                    "min": 1286.363317,
                    "p50": 1308.1456369999999,
                    "p95": 1331.109606,
                    "p99": 1331.109606,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.263215,
                    "min": 56.458943999999995,
                    "p50": 62.179235999999996,
                    "p95": 76.263215,
                    "p99": 76.263215,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 677.308848,
                    "min": 627.031427,
                    "p50": 656.844802,
                    "p95": 677.308848,
                    "p99": 677.308848,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 202.07367299999999,
                    "min": 177.376083,
                    "p50": 189.51139999999998,
                    "p95": 202.07367299999999,
                    "p99": 202.07367299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.66930599999998,
                    "min": 150.293761,
                    "p50": 154.408208,
                    "p95": 185.66930599999998,
                    "p99": 185.66930599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 226.289602,
                    "min": 202.67591099999999,
                    "p50": 211.19395799999998,
                    "p95": 226.289602,
                    "p99": 226.289602,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.014839,
                    "min": 104.340256,
                    "p50": 108.07274299999999,
                    "p95": 142.014839,
                    "p99": 142.014839,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.600946,
                    "min": 80.766074,
                    "p50": 83.108398,
                    "p95": 115.600946,
                    "p99": 115.600946,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 55.774587,
                    "min": 53.957829,
                    "p50": 55.08148,
                    "p95": 55.774587,
                    "p99": 55.774587,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 164.824368,
                    "min": 153.780318,
                    "p50": 159.258729,
                    "p95": 164.824368,
                    "p99": 164.824368,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 259.685254,
                    "min": 233.828554,
                    "p50": 236.543987,
                    "p95": 259.685254,
                    "p99": 259.685254,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 114.67241899999999,
                    "min": 92.12462099999999,
                    "p50": 95.85774699999999,
                    "p95": 114.67241899999999,
                    "p99": 114.67241899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 160.315825,
                    "min": 114.46787499999999,
                    "p50": 147.89633,
                    "p95": 160.315825,
                    "p99": 160.315825,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 209.45860199999998,
                    "min": 190.628713,
                    "p50": 199.947081,
                    "p95": 209.45860199999998,
                    "p99": 209.45860199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 532.20615,
                    "min": 510.50042299999996,
                    "p50": 519.9422079999999,
                    "p95": 532.20615,
                    "p99": 532.20615,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.52415299999998,
                    "min": 129.433816,
                    "p50": 142.473691,
                    "p95": 154.52415299999998,
                    "p99": 154.52415299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 282.435433,
                    "min": 263.108391,
                    "p50": 274.70532499999996,
                    "p95": 282.435433,
                    "p99": 282.435433,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 182.84166399999998,
                    "min": 166.6001,
                    "p50": 175.034292,
                    "p95": 182.84166399999998,
                    "p99": 182.84166399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 90.458219,
                    "min": 68.70469,
                    "p50": 69.89032999999999,
                    "p95": 90.458219,
                    "p99": 90.458219,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 411.516571,
                    "min": 388.23256299999997,
                    "p50": 394.593914,
                    "p95": 411.516571,
                    "p99": 411.516571,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 227.20808699999998,
                    "min": 199.717298,
                    "p50": 209.139289,
                    "p95": 227.20808699999998,
                    "p99": 227.20808699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.893095,
                    "min": 151.662478,
                    "p50": 171.81701099999998,
                    "p95": 187.893095,
                    "p99": 187.893095,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.953697,
                    "min": 246.427711,
                    "p50": 259.54236499999996,
                    "p95": 261.953697,
                    "p99": 261.953697,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 983.625952,
                    "min": 942.935042,
                    "p50": 975.817107,
                    "p95": 983.625952,
                    "p99": 983.625952,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 649.88871,
                    "min": 627.342943,
                    "p50": 643.9757559999999,
                    "p95": 649.88871,
                    "p99": 649.88871,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 737.3218919999999,
                    "min": 710.6668179999999,
                    "p50": 726.4114069999999,
                    "p95": 737.3218919999999,
                    "p99": 737.3218919999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 860.048335,
                    "min": 800.588459,
                    "p50": 839.566422,
                    "p95": 860.048335,
                    "p99": 860.048335,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 476.072704,
                    "min": 428.771827,
                    "p50": 448.187894,
                    "p95": 476.072704,
                    "p99": 476.072704,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 335.989955,
                    "min": 295.379984,
                    "p50": 309.204808,
                    "p95": 335.989955,
                    "p99": 335.989955,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 431.418135,
                    "min": 387.201527,
                    "p50": 401.305709,
                    "p95": 431.418135,
                    "p99": 431.418135,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 372.0084,
                    "min": 341.131018,
                    "p50": 357.95593099999996,
                    "p95": 372.0084,
                    "p99": 372.0084,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 523.029006,
                    "min": 473.429515,
                    "p50": 500.25910899999997,
                    "p95": 523.029006,
                    "p99": 523.029006,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 554.708121,
                    "min": 520.614658,
                    "p50": 536.0940479999999,
                    "p95": 554.708121,
                    "p99": 554.708121,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 716.866224,
                    "min": 666.055403,
                    "p50": 695.094621,
                    "p95": 716.866224,
                    "p99": 716.866224,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 639.523476,
                    "min": 580.664146,
                    "p50": 612.3266619999999,
                    "p95": 639.523476,
                    "p99": 639.523476,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 568.914953,
                    "min": 537.652927,
                    "p50": 547.595958,
                    "p95": 568.914953,
                    "p99": 568.914953,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 682.696779,
                    "min": 618.344928,
                    "p50": 632.950758,
                    "p95": 682.696779,
                    "p99": 682.696779,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 711.0201119999999,
                    "min": 671.919048,
                    "p50": 686.942131,
                    "p95": 711.0201119999999,
                    "p99": 711.0201119999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 219.848219,
                    "min": 204.25233699999998,
                    "p50": 214.281485,
                    "p95": 219.848219,
                    "p99": 219.848219,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 279.35963,
                    "min": 251.871804,
                    "p50": 262.70669599999997,
                    "p95": 279.35963,
                    "p99": 279.35963,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 377.28148999999996,
                    "min": 339.972036,
                    "p50": 353.56454199999996,
                    "p95": 377.28148999999996,
                    "p99": 377.28148999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 327.593386,
                    "min": 295.613836,
                    "p50": 312.531589,
                    "p95": 327.593386,
                    "p99": 327.593386,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 548.568529,
                    "min": 496.39208199999996,
                    "p50": 514.191768,
                    "p95": 548.568529,
                    "p99": 548.568529,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.762913,
                    "min": 157.57326,
                    "p50": 166.89669,
                    "p95": 182.762913,
                    "p99": 182.762913,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 417.853054,
                    "min": 390.748903,
                    "p50": 400.01833799999997,
                    "p95": 417.853054,
                    "p99": 417.853054,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 860.9959769999999,
                    "min": 828.457904,
                    "p50": 855.402757,
                    "p95": 860.9959769999999,
                    "p99": 860.9959769999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 995.8305029999999,
                    "min": 962.433469,
                    "p50": 980.475242,
                    "p95": 995.8305029999999,
                    "p99": 995.8305029999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 770.0202469999999,
                    "min": 721.350837,
                    "p50": 740.642263,
                    "p95": 770.0202469999999,
                    "p99": 770.0202469999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 468.766559,
                    "min": 431.302576,
                    "p50": 447.738747,
                    "p95": 468.766559,
                    "p99": 468.766559,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 617.9116849999999,
                    "min": 568.7272889999999,
                    "p50": 594.746808,
                    "p95": 617.9116849999999,
                    "p99": 617.9116849999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 724.235545,
                    "min": 646.542061,
                    "p50": 698.288908,
                    "p95": 724.235545,
                    "p99": 724.235545,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 632.436375,
                    "min": 589.983026,
                    "p50": 615.945352,
                    "p95": 632.436375,
                    "p99": 632.436375,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 737.953636,
                    "min": 692.2020289999999,
                    "p50": 724.203776,
                    "p95": 737.953636,
                    "p99": 737.953636,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 844.501493,
                    "min": 814.438586,
                    "p50": 833.5106959999999,
                    "p95": 844.501493,
                    "p99": 844.501493,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 585.672828,
                    "min": 559.0216829999999,
                    "p50": 567.825555,
                    "p95": 585.672828,
                    "p99": 585.672828,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 559.863608,
                    "min": 529.399004,
                    "p50": 540.932334,
                    "p95": 559.863608,
                    "p99": 559.863608,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 190.442217,
                    "min": 157.438483,
                    "p50": 180.6889,
                    "p95": 190.442217,
                    "p99": 190.442217,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 994.2103239999999,
                    "min": 925.715167,
                    "p50": 942.994593,
                    "p95": 994.2103239999999,
                    "p99": 994.2103239999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 528.894351,
                    "min": 472.848456,
                    "p50": 485.613455,
                    "p95": 528.894351,
                    "p99": 528.894351,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 463.719175,
                    "min": 430.049102,
                    "p50": 444.883269,
                    "p95": 463.719175,
                    "p99": 463.719175,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 336.825048,
                    "min": 291.37595,
                    "p50": 307.329412,
                    "p95": 336.825048,
                    "p99": 336.825048,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 406.498857,
                    "min": 384.983958,
                    "p50": 395.46532299999996,
                    "p95": 406.498857,
                    "p99": 406.498857,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 371.588642,
                    "min": 341.07769099999996,
                    "p50": 355.171045,
                    "p95": 371.588642,
                    "p99": 371.588642,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 252.982362,
                    "min": 199.83335599999998,
                    "p50": 207.861887,
                    "p95": 252.982362,
                    "p99": 252.982362,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 289.565414,
                    "min": 251.09313,
                    "p50": 256.846031,
                    "p95": 289.565414,
                    "p99": 289.565414,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 691.8442339999999,
                    "min": 648.973111,
                    "p50": 673.648644,
                    "p95": 691.8442339999999,
                    "p99": 691.8442339999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 746.6926689999999,
                    "min": 690.971358,
                    "p50": 718.5277189999999,
                    "p95": 746.6926689999999,
                    "p99": 746.6926689999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 607.2310689999999,
                    "min": 560.2348499999999,
                    "p50": 584.571144,
                    "p95": 607.2310689999999,
                    "p99": 607.2310689999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 881.256546,
                    "min": 817.060855,
                    "p50": 836.1741059999999,
                    "p95": 881.256546,
                    "p99": 881.256546,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 235.60565,
                    "min": 194.172078,
                    "p50": 209.93167699999998,
                    "p95": 235.60565,
                    "p99": 235.60565,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 555.202901,
                    "min": 526.0612169999999,
                    "p50": 544.576267,
                    "p95": 555.202901,
                    "p99": 555.202901,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 984.521837,
                    "min": 935.0293869999999,
                    "p50": 970.4456859999999,
                    "p95": 984.521837,
                    "p99": 984.521837,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 310.209672,
                    "min": 282.330226,
                    "p50": 293.099007,
                    "p95": 310.209672,
                    "p99": 310.209672,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 432.408487,
                    "min": 391.16828,
                    "p50": 407.111897,
                    "p95": 432.408487,
                    "p99": 432.408487,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 386.114089,
                    "min": 333.89162699999997,
                    "p50": 346.823674,
                    "p95": 386.114089,
                    "p99": 386.114089,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 277.865236,
                    "min": 241.298169,
                    "p50": 265.421836,
                    "p95": 277.865236,
                    "p99": 277.865236,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 454.16410399999995,
                    "min": 427.48013299999997,
                    "p50": 444.05332599999997,
                    "p95": 454.16410399999995,
                    "p99": 454.16410399999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 512.22168,
                    "min": 487.121562,
                    "p50": 498.49517799999995,
                    "p95": 512.22168,
                    "p99": 512.22168,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 195.5845,
                    "min": 152.841279,
                    "p50": 159.69811099999998,
                    "p95": 195.5845,
                    "p99": 195.5845,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 644.510807,
                    "min": 615.4676989999999,
                    "p50": 623.597194,
                    "p95": 644.510807,
                    "p99": 644.510807,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1744.624545,
                    "min": 1694.031686,
                    "p50": 1724.825332,
                    "p95": 1744.624545,
                    "p99": 1744.624545,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1083.698173,
                    "min": 1023.143618,
                    "p50": 1054.6011879999999,
                    "p95": 1083.698173,
                    "p99": 1083.698173,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1277.571539,
                    "min": 1254.3084489999999,
                    "p50": 1269.624724,
                    "p95": 1277.571539,
                    "p99": 1277.571539,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 853.38243,
                    "min": 810.0380769999999,
                    "p50": 817.434847,
                    "p95": 853.38243,
                    "p99": 853.38243,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 719.26356,
                    "min": 698.5642889999999,
                    "p50": 709.101367,
                    "p95": 719.26356,
                    "p99": 719.26356,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1165.702157,
                    "min": 1140.116756,
                    "p50": 1153.85243,
                    "p95": 1165.702157,
                    "p99": 1165.702157,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 382.28781599999996,
                    "min": 352.208842,
                    "p50": 372.76216,
                    "p95": 382.28781599999996,
                    "p99": 382.28781599999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 482.997369,
                    "min": 461.935887,
                    "p50": 476.505111,
                    "p95": 482.997369,
                    "p99": 482.997369,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 950.5058799999999,
                    "min": 912.53608,
                    "p50": 931.714662,
                    "p95": 950.5058799999999,
                    "p99": 950.5058799999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 596.044361,
                    "min": 578.844941,
                    "p50": 587.826495,
                    "p95": 596.044361,
                    "p99": 596.044361,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2317.027835,
                    "min": 2239.932801,
                    "p50": 2262.1425999999997,
                    "p95": 2317.027835,
                    "p99": 2317.027835,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1386.152229,
                    "min": 1360.201818,
                    "p50": 1376.3377659999999,
                    "p95": 1386.152229,
                    "p99": 1386.152229,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2011.8302219999998,
                    "min": 1964.356611,
                    "p50": 2006.506721,
                    "p95": 2011.8302219999998,
                    "p99": 2011.8302219999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1635.613284,
                    "min": 1579.087462,
                    "p50": 1610.478948,
                    "p95": 1635.613284,
                    "p99": 1635.613284,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1507.16932,
                    "min": 1442.6160169999998,
                    "p50": 1484.256531,
                    "p95": 1507.16932,
                    "p99": 1507.16932,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3395.460176,
                    "min": 3375.409283,
                    "p50": 3380.976764,
                    "p95": 3395.460176,
                    "p99": 3395.460176,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1917.275344,
                    "min": 1808.290114,
                    "p50": 1849.032007,
                    "p95": 1917.275344,
                    "p99": 1917.275344,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1414.141549,
                    "min": 1347.987869,
                    "p50": 1369.644157,
                    "p95": 1414.141549,
                    "p99": 1414.141549,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1621.692575,
                    "min": 1578.723153,
                    "p50": 1607.588299,
                    "p95": 1621.692575,
                    "p99": 1621.692575,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2591.4907,
                    "min": 2414.354218,
                    "p50": 2450.2146979999998,
                    "p95": 2591.4907,
                    "p99": 2591.4907,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2170.088541,
                    "min": 2122.7373079999998,
                    "p50": 2139.29246,
                    "p95": 2170.088541,
                    "p99": 2170.088541,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1569.792358,
                    "min": 1455.65609,
                    "p50": 1498.724095,
                    "p95": 1569.792358,
                    "p99": 1569.792358,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 430.41427,
                    "min": 381.425486,
                    "p50": 396.480658,
                    "p95": 430.41427,
                    "p99": 430.41427,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 516.555918,
                    "min": 497.497437,
                    "p50": 510.65372199999996,
                    "p95": 516.555918,
                    "p99": 516.555918,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1258.6912379999999,
                    "min": 1225.9391269999999,
                    "p50": 1245.245115,
                    "p95": 1258.6912379999999,
                    "p99": 1258.6912379999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 782.2969909999999,
                    "min": 740.726947,
                    "p50": 757.043774,
                    "p95": 782.2969909999999,
                    "p99": 782.2969909999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1128.755084,
                    "min": 1096.308957,
                    "p50": 1121.658621,
                    "p95": 1128.755084,
                    "p99": 1128.755084,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 642.70606,
                    "min": 623.452998,
                    "p50": 636.417773,
                    "p95": 642.70606,
                    "p99": 642.70606,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1772.702863,
                    "min": 1688.134276,
                    "p50": 1716.4064939999998,
                    "p95": 1772.702863,
                    "p99": 1772.702863,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1084.023979,
                    "min": 979.2832599999999,
                    "p50": 990.480322,
                    "p95": 1084.023979,
                    "p99": 1084.023979,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 881.414539,
                    "min": 860.442727,
                    "p50": 873.8243679999999,
                    "p95": 881.414539,
                    "p99": 881.414539,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1427.596264,
                    "min": 1323.093355,
                    "p50": 1353.5324879999998,
                    "p95": 1427.596264,
                    "p99": 1427.596264,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 564.755545,
                    "min": 544.141771,
                    "p50": 546.4852619999999,
                    "p95": 564.755545,
                    "p99": 564.755545,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1095.115711,
                    "min": 1056.019509,
                    "p50": 1078.225439,
                    "p95": 1095.115711,
                    "p99": 1095.115711,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 966.028828,
                    "min": 931.4356429999999,
                    "p50": 940.962241,
                    "p95": 966.028828,
                    "p99": 966.028828,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 861.375321,
                    "min": 796.047797,
                    "p50": 817.442242,
                    "p95": 861.375321,
                    "p99": 861.375321,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2005.7472329999998,
                    "min": 1969.9006929999998,
                    "p50": 1996.9546229999999,
                    "p95": 2005.7472329999998,
                    "p99": 2005.7472329999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1755.2948689999998,
                    "min": 1712.973476,
                    "p50": 1731.616689,
                    "p95": 1755.2948689999998,
                    "p99": 1755.2948689999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2672.8395649999998,
                    "min": 2607.2394099999997,
                    "p50": 2651.899669,
                    "p95": 2672.8395649999998,
                    "p99": 2672.8395649999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3970.7662619999996,
                    "min": 3916.804831,
                    "p50": 3954.935486,
                    "p95": 3970.7662619999996,
                    "p99": 3970.7662619999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1612.7261939999999,
                    "min": 1574.830205,
                    "p50": 1596.0599599999998,
                    "p95": 1612.7261939999999,
                    "p99": 1612.7261939999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 682.678765,
                    "min": 668.679412,
                    "p50": 677.218401,
                    "p95": 682.678765,
                    "p99": 682.678765,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1482.908181,
                    "min": 1453.444753,
                    "p50": 1465.4032089999998,
                    "p95": 1482.908181,
                    "p99": 1482.908181,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 461.35333299999996,
                    "min": 414.46680599999996,
                    "p50": 428.258648,
                    "p95": 461.35333299999996,
                    "p99": 461.35333299999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1876.061902,
                    "min": 1838.703652,
                    "p50": 1850.53965,
                    "p95": 1876.061902,
                    "p99": 1876.061902,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2334.077527,
                    "min": 2294.213144,
                    "p50": 2304.926337,
                    "p95": 2334.077527,
                    "p99": 2334.077527,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1218.92084,
                    "min": 1199.70633,
                    "p50": 1208.154186,
                    "p95": 1218.92084,
                    "p99": 1218.92084,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3421.681438,
                    "min": 3348.7037969999997,
                    "p50": 3390.8440779999996,
                    "p95": 3421.681438,
                    "p99": 3421.681438,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 809.293963,
                    "min": 767.655126,
                    "p50": 788.339441,
                    "p95": 809.293963,
                    "p99": 809.293963,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 564.610673,
                    "min": 529.172027,
                    "p50": 537.706868,
                    "p95": 564.610673,
                    "p99": 564.610673,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1051.753175,
                    "min": 1014.391458,
                    "p50": 1037.672053,
                    "p95": 1051.753175,
                    "p99": 1051.753175,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 378.96822499999996,
                    "min": 354.500449,
                    "p50": 364.71347499999996,
                    "p95": 378.96822499999996,
                    "p99": 378.96822499999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1844.773952,
                    "min": 1682.8601079999999,
                    "p50": 1688.848904,
                    "p95": 1844.773952,
                    "p99": 1844.773952,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1328.6828759999999,
                    "min": 1265.6761609999999,
                    "p50": 1279.111406,
                    "p95": 1328.6828759999999,
                    "p99": 1328.6828759999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1237.6460929999998,
                    "min": 1181.178938,
                    "p50": 1202.804332,
                    "p95": 1237.6460929999998,
                    "p99": 1237.6460929999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 312.541503,
                    "min": 268.43359499999997,
                    "p50": 278.158544,
                    "p95": 312.541503,
                    "p99": 312.541503,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 480.60189199999996,
                    "min": 434.792,
                    "p50": 446.117327,
                    "p95": 480.60189199999996,
                    "p99": 480.60189199999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1508.423578,
                    "min": 1484.831776,
                    "p50": 1492.899663,
                    "p95": 1508.423578,
                    "p99": 1508.423578,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 704.018646,
                    "min": 685.519694,
                    "p50": 695.094371,
                    "p95": 704.018646,
                    "p99": 704.018646,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 976.862711,
                    "min": 942.301022,
                    "p50": 956.4419859999999,
                    "p95": 976.862711,
                    "p99": 976.862711,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 637.1208799999999,
                    "min": 601.540066,
                    "p50": 620.888016,
                    "p95": 637.1208799999999,
                    "p99": 637.1208799999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1137.003522,
                    "min": 1088.304147,
                    "p50": 1112.204146,
                    "p95": 1137.003522,
                    "p99": 1137.003522,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2573.546488,
                    "min": 2503.816335,
                    "p50": 2526.5905119999998,
                    "p95": 2573.546488,
                    "p99": 2573.546488,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 6496.616854999999,
                    "min": 4176.715853,
                    "p50": 4217.19007,
                    "p95": 6496.616854999999,
                    "p99": 6496.616854999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 875.6569169999999,
                    "min": 852.084116,
                    "p50": 866.5920199999999,
                    "p95": 875.6569169999999,
                    "p99": 875.6569169999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 449.092444,
                    "min": 409.32815999999997,
                    "p50": 421.000055,
                    "p95": 449.092444,
                    "p99": 449.092444,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1191.6962369999999,
                    "min": 1132.616154,
                    "p50": 1152.9268399999999,
                    "p95": 1191.6962369999999,
                    "p99": 1191.6962369999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1726.351052,
                    "min": 1691.6051539999999,
                    "p50": 1720.651465,
                    "p95": 1726.351052,
                    "p99": 1726.351052,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2873.357584,
                    "min": 2810.175782,
                    "p50": 2828.91313,
                    "p95": 2873.357584,
                    "p99": 2873.357584,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2309.0035909999997,
                    "min": 2245.98754,
                    "p50": 2263.983778,
                    "p95": 2309.0035909999997,
                    "p99": 2309.0035909999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 493.12841,
                    "min": 469.666747,
                    "p50": 482.746544,
                    "p95": 493.12841,
                    "p99": 493.12841,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1022.492078,
                    "min": 1001.281125,
                    "p50": 1005.836321,
                    "p95": 1022.492078,
                    "p99": 1022.492078,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 370.719782,
                    "min": 358.783344,
                    "p50": 367.02207699999997,
                    "p95": 370.719782,
                    "p99": 370.719782,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 836.490025,
                    "min": 798.0877469999999,
                    "p50": 815.491331,
                    "p95": 836.490025,
                    "p99": 836.490025,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 877.9867909999999,
                    "min": 850.175628,
                    "p50": 865.6324189999999,
                    "p95": 877.9867909999999,
                    "p99": 877.9867909999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 294.048336,
                    "min": 243.215847,
                    "p50": 254.44797799999998,
                    "p95": 294.048336,
                    "p99": 294.048336,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 684.052368,
                    "min": 634.14733,
                    "p50": 644.757468,
                    "p95": 684.052368,
                    "p99": 684.052368,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 721.9319449999999,
                    "min": 693.969022,
                    "p50": 710.419413,
                    "p95": 721.9319449999999,
                    "p99": 721.9319449999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 340.44499099999996,
                    "min": 299.18740099999997,
                    "p50": 307.335767,
                    "p95": 340.44499099999996,
                    "p99": 340.44499099999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.05566299999998,
                    "min": 188.43939999999998,
                    "p50": 193.063366,
                    "p95": 201.05566299999998,
                    "p99": 201.05566299999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 784.5565469999999,
                    "min": 747.346174,
                    "p50": 758.855596,
                    "p95": 784.5565469999999,
                    "p99": 784.5565469999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 610.461376,
                    "min": 576.0874259999999,
                    "p50": 592.321476,
                    "p95": 610.461376,
                    "p99": 610.461376,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 563.09865,
                    "min": 521.236446,
                    "p50": 538.0061559999999,
                    "p95": 563.09865,
                    "p99": 563.09865,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 772.431792,
                    "min": 756.262522,
                    "p50": 766.2999249999999,
                    "p95": 772.431792,
                    "p99": 772.431792,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1195.6090769999998,
                    "min": 1169.3290439999998,
                    "p50": 1182.292115,
                    "p95": 1195.6090769999998,
                    "p99": 1195.6090769999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1028.091894,
                    "min": 1006.8443639999999,
                    "p50": 1016.930295,
                    "p95": 1028.091894,
                    "p99": 1028.091894,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 288.00052999999997,
                    "min": 267.739932,
                    "p50": 274.93690799999996,
                    "p95": 288.00052999999997,
                    "p99": 288.00052999999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1689.48739,
                    "min": 1650.6153319999999,
                    "p50": 1682.399494,
                    "p95": 1689.48739,
                    "p99": 1689.48739,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 699.308393,
                    "min": 679.04318,
                    "p50": 691.665813,
                    "p95": 699.308393,
                    "p99": 699.308393,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 468.508779,
                    "min": 432.782963,
                    "p50": 441.42476,
                    "p95": 468.508779,
                    "p99": 468.508779,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 962.313542,
                    "min": 922.248067,
                    "p50": 935.8598039999999,
                    "p95": 962.313542,
                    "p99": 962.313542,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 556.580218,
                    "min": 512.369043,
                    "p50": 531.075975,
                    "p95": 556.580218,
                    "p99": 556.580218,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1481.7673459999999,
                    "min": 1452.08591,
                    "p50": 1473.1370029999998,
                    "p95": 1481.7673459999999,
                    "p99": 1481.7673459999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 373.17598499999997,
                    "min": 348.883195,
                    "p50": 356.85339999999997,
                    "p95": 373.17598499999997,
                    "p99": 373.17598499999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1278.8700159999999,
                    "min": 1250.6761979999999,
                    "p50": 1271.326095,
                    "p95": 1278.8700159999999,
                    "p99": 1278.8700159999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 677.952868,
                    "min": 589.654199,
                    "p50": 612.0803999999999,
                    "p95": 677.952868,
                    "p99": 677.952868,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1130.9190119999998,
                    "min": 1090.144224,
                    "p50": 1102.7991789999999,
                    "p95": 1130.9190119999998,
                    "p99": 1130.9190119999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 872.4917869999999,
                    "min": 841.073147,
                    "p50": 846.772209,
                    "p95": 872.4917869999999,
                    "p99": 872.4917869999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 339.890289,
                    "min": 303.83100099999996,
                    "p50": 313.314219,
                    "p95": 339.890289,
                    "p99": 339.890289,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 889.445968,
                    "min": 872.470257,
                    "p50": 881.1737959999999,
                    "p95": 889.445968,
                    "p99": 889.445968,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 570.688726,
                    "min": 519.607078,
                    "p50": 535.6401579999999,
                    "p95": 570.688726,
                    "p99": 570.688726,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 804.710383,
                    "min": 738.980048,
                    "p50": 771.869965,
                    "p95": 804.710383,
                    "p99": 804.710383,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1200.96294,
                    "min": 1157.965406,
                    "p50": 1172.924197,
                    "p95": 1200.96294,
                    "p99": 1200.96294,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 663.1329099999999,
                    "min": 638.6409239999999,
                    "p50": 651.9174859999999,
                    "p95": 663.1329099999999,
                    "p99": 663.1329099999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 850.3015389999999,
                    "min": 812.957848,
                    "p50": 819.752923,
                    "p95": 850.3015389999999,
                    "p99": 850.3015389999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1899.767265,
                    "min": 1682.754632,
                    "p50": 1732.488688,
                    "p95": 1899.767265,
                    "p99": 1899.767265,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.314458,
                    "min": 423.89939599999997,
                    "p50": 440.332249,
                    "p95": 477.314458,
                    "p99": 477.314458,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.47140199999998,
                    "min": 190.33195899999998,
                    "p50": 193.866515,
                    "p95": 213.47140199999998,
                    "p99": 213.47140199999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 610.431787,
                    "min": 581.318327,
                    "p50": 595.064355,
                    "p95": 610.431787,
                    "p99": 610.431787,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 400.978293,
                    "min": 352.79096,
                    "p50": 366.87855099999996,
                    "p95": 400.978293,
                    "p99": 400.978293,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 255.87278899999998,
                    "min": 241.90720199999998,
                    "p50": 248.098379,
                    "p95": 255.87278899999998,
                    "p99": 255.87278899999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 500.43931599999996,
                    "min": 469.592784,
                    "p50": 486.89473499999997,
                    "p95": 500.43931599999996,
                    "p99": 500.43931599999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1061.3167489999998,
                    "min": 993.1927159999999,
                    "p50": 1013.495964,
                    "p95": 1061.3167489999998,
                    "p99": 1061.3167489999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 738.2087879999999,
                    "min": 689.351306,
                    "p50": 704.9066829999999,
                    "p95": 738.2087879999999,
                    "p99": 738.2087879999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 794.677325,
                    "min": 766.329854,
                    "p50": 781.131856,
                    "p95": 794.677325,
                    "p99": 794.677325,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 908.508209,
                    "min": 885.799267,
                    "p50": 895.4692279999999,
                    "p95": 908.508209,
                    "p99": 908.508209,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 974.081657,
                    "min": 946.7782709999999,
                    "p50": 959.639688,
                    "p95": 974.081657,
                    "p99": 974.081657,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 599.66662,
                    "min": 577.5350169999999,
                    "p50": 586.404039,
                    "p95": 599.66662,
                    "p99": 599.66662,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 413.136772,
                    "min": 392.600529,
                    "p50": 397.38786999999996,
                    "p95": 413.136772,
                    "p99": 413.136772,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 546.211021,
                    "min": 517.265489,
                    "p50": 525.076515,
                    "p95": 546.211021,
                    "p99": 546.211021,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 309.95924099999996,
                    "min": 267.656569,
                    "p50": 277.170166,
                    "p95": 309.95924099999996,
                    "p99": 309.95924099999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 363.839901,
                    "min": 331.606265,
                    "p50": 342.864708,
                    "p95": 363.839901,
                    "p99": 363.839901,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 679.233975,
                    "min": 644.519625,
                    "p50": 650.7229179999999,
                    "p95": 679.233975,
                    "p99": 679.233975,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 500.480483,
                    "min": 455.000839,
                    "p50": 470.040555,
                    "p95": 500.480483,
                    "p99": 500.480483,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1316.4401699999999,
                    "min": 1258.868873,
                    "p50": 1273.412791,
                    "p95": 1316.4401699999999,
                    "p99": 1316.4401699999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 751.941211,
                    "min": 700.994416,
                    "p50": 715.5361029999999,
                    "p95": 751.941211,
                    "p99": 751.941211,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1133.888548,
                    "min": 1102.573193,
                    "p50": 1114.185939,
                    "p95": 1133.888548,
                    "p99": 1133.888548,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.48208599999998,
                    "min": 204.771118,
                    "p50": 213.906604,
                    "p95": 244.48208599999998,
                    "p99": 244.48208599999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 866.281449,
                    "min": 831.749644,
                    "p50": 844.721788,
                    "p95": 866.281449,
                    "p99": 866.281449,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 743.141157,
                    "min": 695.475164,
                    "p50": 697.438498,
                    "p95": 743.141157,
                    "p99": 743.141157,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 397.680032,
                    "min": 358.104675,
                    "p50": 362.798229,
                    "p95": 397.680032,
                    "p99": 397.680032,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 332.755681,
                    "min": 245.637803,
                    "p50": 258.123982,
                    "p95": 332.755681,
                    "p99": 332.755681,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 225.781672,
                    "min": 189.305064,
                    "p50": 201.470797,
                    "p95": 225.781672,
                    "p99": 225.781672,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 810.350738,
                    "min": 748.469893,
                    "p50": 758.5371369999999,
                    "p95": 810.350738,
                    "p99": 810.350738,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 884.1133609999999,
                    "min": 855.802865,
                    "p50": 873.174548,
                    "p95": 884.1133609999999,
                    "p99": 884.1133609999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 551.55706,
                    "min": 523.4206009999999,
                    "p50": 535.704877,
                    "p95": 551.55706,
                    "p99": 551.55706,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1171.479592,
                    "min": 1144.8635769999999,
                    "p50": 1162.333826,
                    "p95": 1171.479592,
                    "p99": 1171.479592,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 604.2607049999999,
                    "min": 586.3823209999999,
                    "p50": 592.5384419999999,
                    "p95": 604.2607049999999,
                    "p99": 604.2607049999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 426.48700299999996,
                    "min": 411.848363,
                    "p50": 418.420418,
                    "p95": 426.48700299999996,
                    "p99": 426.48700299999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1054.562882,
                    "min": 997.511269,
                    "p50": 1014.814132,
                    "p95": 1054.562882,
                    "p99": 1054.562882,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 833.933353,
                    "min": 807.570613,
                    "p50": 819.782282,
                    "p95": 833.933353,
                    "p99": 833.933353,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 337.032831,
                    "min": 301.27846,
                    "p50": 324.622463,
                    "p95": 337.032831,
                    "p99": 337.032831,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 494.268716,
                    "min": 468.981132,
                    "p50": 483.88641099999995,
                    "p95": 494.268716,
                    "p99": 494.268716,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1746.160453,
                    "min": 1705.097812,
                    "p50": 1712.804218,
                    "p95": 1746.160453,
                    "p99": 1746.160453,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 658.360204,
                    "min": 634.366545,
                    "p50": 655.829768,
                    "p95": 658.360204,
                    "p99": 658.360204,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2307.9756589999997,
                    "min": 2267.2438549999997,
                    "p50": 2285.4115859999997,
                    "p95": 2307.9756589999997,
                    "p99": 2307.9756589999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1193.1778359999998,
                    "min": 1122.959308,
                    "p50": 1149.615256,
                    "p95": 1193.1778359999998,
                    "p99": 1193.1778359999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 599.2353519999999,
                    "min": 573.625911,
                    "p50": 587.587624,
                    "p95": 599.2353519999999,
                    "p99": 599.2353519999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2294.5559949999997,
                    "min": 2243.8916759999997,
                    "p50": 2274.611837,
                    "p95": 2294.5559949999997,
                    "p99": 2294.5559949999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1631.471212,
                    "min": 1585.468293,
                    "p50": 1602.561125,
                    "p95": 1631.471212,
                    "p99": 1631.471212,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 718.8873209999999,
                    "min": 694.837892,
                    "p50": 703.297289,
                    "p95": 718.8873209999999,
                    "p99": 718.8873209999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1730.319613,
                    "min": 1693.250249,
                    "p50": 1720.2117719999999,
                    "p95": 1730.319613,
                    "p99": 1730.319613,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 822.191612,
                    "min": 805.046436,
                    "p50": 816.8997969999999,
                    "p95": 822.191612,
                    "p99": 822.191612,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1387.5085259999998,
                    "min": 1355.48968,
                    "p50": 1366.795844,
                    "p95": 1387.5085259999998,
                    "p99": 1387.5085259999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1065.3215989999999,
                    "min": 1033.702429,
                    "p50": 1040.519384,
                    "p95": 1065.3215989999999,
                    "p99": 1065.3215989999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1516.6415889999998,
                    "min": 1477.73518,
                    "p50": 1486.938862,
                    "p95": 1516.6415889999998,
                    "p99": 1516.6415889999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2016.811878,
                    "min": 1954.745878,
                    "p50": 1990.326269,
                    "p95": 2016.811878,
                    "p99": 2016.811878,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 955.843582,
                    "min": 909.8339169999999,
                    "p50": 931.194978,
                    "p95": 955.843582,
                    "p99": 955.843582,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1307.354772,
                    "min": 1252.158941,
                    "p50": 1275.930066,
                    "p95": 1307.354772,
                    "p99": 1307.354772,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 373.073743,
                    "min": 356.014862,
                    "p50": 361.94831899999997,
                    "p95": 373.073743,
                    "p99": 373.073743,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 495.63336499999997,
                    "min": 471.15219299999995,
                    "p50": 482.629731,
                    "p95": 495.63336499999997,
                    "p99": 495.63336499999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 700.010592,
                    "min": 644.26321,
                    "p50": 662.755863,
                    "p95": 700.010592,
                    "p99": 700.010592,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 319.044783,
                    "min": 268.329357,
                    "p50": 284.055959,
                    "p95": 319.044783,
                    "p99": 319.044783,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 825.1357439999999,
                    "min": 768.5193029999999,
                    "p50": 779.856232,
                    "p95": 825.1357439999999,
                    "p99": 825.1357439999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 944.217133,
                    "min": 892.4115409999999,
                    "p50": 908.534286,
                    "p95": 944.217133,
                    "p99": 944.217133,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 376.342853,
                    "min": 332.100219,
                    "p50": 338.819362,
                    "p95": 376.342853,
                    "p99": 376.342853,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 601.6031859999999,
                    "min": 582.4305929999999,
                    "p50": 590.139274,
                    "p95": 601.6031859999999,
                    "p99": 601.6031859999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 562.937583,
                    "min": 522.3803399999999,
                    "p50": 527.437474,
                    "p95": 562.937583,
                    "p99": 562.937583,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 416.658392,
                    "min": 395.123993,
                    "p50": 406.811018,
                    "p95": 416.658392,
                    "p99": 416.658392,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 230.428858,
                    "min": 206.535542,
                    "p50": 211.752309,
                    "p95": 230.428858,
                    "p99": 230.428858,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1147.478994,
                    "min": 1116.865331,
                    "p50": 1132.053757,
                    "p95": 1147.478994,
                    "p99": 1147.478994,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 741.126216,
                    "min": 712.8425149999999,
                    "p50": 718.191971,
                    "p95": 741.126216,
                    "p99": 741.126216,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 897.288151,
                    "min": 834.468073,
                    "p50": 851.4679739999999,
                    "p95": 897.288151,
                    "p99": 897.288151,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1289.028752,
                    "min": 1273.914707,
                    "p50": 1286.13915,
                    "p95": 1289.028752,
                    "p99": 1289.028752,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 994.49304,
                    "min": 967.8521979999999,
                    "p50": 976.689637,
                    "p95": 994.49304,
                    "p99": 994.49304,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 535.460971,
                    "min": 460.829687,
                    "p50": 471.66857799999997,
                    "p95": 535.460971,
                    "p99": 535.460971,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1345.704641,
                    "min": 1318.1669669999999,
                    "p50": 1336.4538129999999,
                    "p95": 1345.704641,
                    "p99": 1345.704641,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 784.6065219999999,
                    "min": 760.1635349999999,
                    "p50": 772.643618,
                    "p95": 784.6065219999999,
                    "p99": 784.6065219999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1085.730425,
                    "min": 1058.877712,
                    "p50": 1069.3105349999998,
                    "p95": 1085.730425,
                    "p99": 1085.730425,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1163.431644,
                    "min": 1127.701879,
                    "p50": 1139.258243,
                    "p95": 1163.431644,
                    "p99": 1163.431644,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1523.505251,
                    "min": 1498.4385579999998,
                    "p50": 1514.23093,
                    "p95": 1523.505251,
                    "p99": 1523.505251,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 879.241999,
                    "min": 834.301692,
                    "p50": 850.524788,
                    "p95": 879.241999,
                    "p99": 879.241999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 482.412331,
                    "min": 465.101766,
                    "p50": 480.44850499999995,
                    "p95": 482.412331,
                    "p99": 482.412331,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 631.772475,
                    "min": 611.935695,
                    "p50": 620.379023,
                    "p95": 631.772475,
                    "p99": 631.772475,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1017.1586159999999,
                    "min": 982.933952,
                    "p50": 999.774292,
                    "p95": 1017.1586159999999,
                    "p99": 1017.1586159999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 932.2737649999999,
                    "min": 907.477954,
                    "p50": 923.1998199999999,
                    "p95": 932.2737649999999,
                    "p99": 932.2737649999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2276.966799,
                    "min": 2226.553674,
                    "p50": 2253.3475439999997,
                    "p95": 2276.966799,
                    "p99": 2276.966799,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 561.057791,
                    "min": 539.06934,
                    "p50": 551.136442,
                    "p95": 561.057791,
                    "p99": 561.057791,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 276.43150199999997,
                    "min": 243.951496,
                    "p50": 251.803347,
                    "p95": 276.43150199999997,
                    "p99": 276.43150199999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 429.01493999999997,
                    "min": 392.176587,
                    "p50": 403.558586,
                    "p95": 429.01493999999997,
                    "p99": 429.01493999999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 715.614879,
                    "min": 682.3958709999999,
                    "p50": 701.463275,
                    "p95": 715.614879,
                    "p99": 715.614879,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 518.612208,
                    "min": 322.237511,
                    "p50": 352.493068,
                    "p95": 518.612208,
                    "p99": 518.612208,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1338.288992,
                    "min": 1274.7500969999999,
                    "p50": 1289.511919,
                    "p95": 1338.288992,
                    "p99": 1338.288992,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 634.6609189999999,
                    "min": 615.648784,
                    "p50": 622.092712,
                    "p95": 634.6609189999999,
                    "p99": 634.6609189999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 318.695948,
                    "min": 269.36535499999997,
                    "p50": 278.22945599999997,
                    "p95": 318.695948,
                    "p99": 318.695948,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 377.67429699999997,
                    "min": 356.24645,
                    "p50": 363.601793,
                    "p95": 377.67429699999997,
                    "p99": 377.67429699999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 886.541022,
                    "min": 856.306059,
                    "p50": 866.589569,
                    "p95": 886.541022,
                    "p99": 886.541022,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 538.074694,
                    "min": 517.966315,
                    "p50": 532.1939239999999,
                    "p95": 538.074694,
                    "p99": 538.074694,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1733.096582,
                    "min": 1690.2587999999998,
                    "p50": 1705.6142089999998,
                    "p95": 1733.096582,
                    "p99": 1733.096582,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 466.69485099999997,
                    "min": 440.090743,
                    "p50": 451.57967299999996,
                    "p95": 466.69485099999997,
                    "p99": 466.69485099999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 971.863404,
                    "min": 940.251527,
                    "p50": 959.48717,
                    "p95": 971.863404,
                    "p99": 971.863404,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 717.151632,
                    "min": 695.67847,
                    "p50": 707.1860909999999,
                    "p95": 717.151632,
                    "p99": 717.151632,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1070.409836,
                    "min": 1027.6308569999999,
                    "p50": 1050.602196,
                    "p95": 1070.409836,
                    "p99": 1070.409836,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1159.150574,
                    "min": 1109.702539,
                    "p50": 1124.537269,
                    "p95": 1159.150574,
                    "p99": 1159.150574,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1519.661245,
                    "min": 1478.1615809999998,
                    "p50": 1508.787699,
                    "p95": 1519.661245,
                    "p99": 1519.661245,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1214.143759,
                    "min": 1189.91941,
                    "p50": 1204.859391,
                    "p95": 1214.143759,
                    "p99": 1214.143759,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 852.523383,
                    "min": 773.553499,
                    "p50": 796.6166989999999,
                    "p95": 852.523383,
                    "p99": 852.523383,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 313.340199,
                    "min": 271.135321,
                    "p50": 288.189148,
                    "p95": 313.340199,
                    "p99": 313.340199,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1015.5212809999999,
                    "min": 961.0967069999999,
                    "p50": 975.163149,
                    "p95": 1015.5212809999999,
                    "p99": 1015.5212809999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 731.1919369999999,
                    "min": 707.228693,
                    "p50": 720.4131289999999,
                    "p95": 731.1919369999999,
                    "p99": 731.1919369999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 607.164092,
                    "min": 586.17895,
                    "p50": 594.1095779999999,
                    "p95": 607.164092,
                    "p99": 607.164092,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 415.790433,
                    "min": 394.67173199999996,
                    "p50": 404.110217,
                    "p95": 415.790433,
                    "p99": 415.790433,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 231.070278,
                    "min": 212.741861,
                    "p50": 217.011278,
                    "p95": 231.070278,
                    "p99": 231.070278,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 365.169114,
                    "min": 334.312518,
                    "p50": 350.141612,
                    "p95": 365.169114,
                    "p99": 365.169114,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 932.2674549999999,
                    "min": 902.347943,
                    "p50": 912.578406,
                    "p95": 932.2674549999999,
                    "p99": 932.2674549999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1154.599884,
                    "min": 1124.467838,
                    "p50": 1135.036147,
                    "p95": 1154.599884,
                    "p99": 1154.599884,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.632079,
                    "min": 460.32174499999996,
                    "p50": 465.024293,
                    "p95": 477.632079,
                    "p99": 477.632079,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 678.1318319999999,
                    "min": 652.550967,
                    "p50": 661.824115,
                    "p95": 678.1318319999999,
                    "p99": 678.1318319999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1322.4420969999999,
                    "min": 1271.332977,
                    "p50": 1296.257243,
                    "p95": 1322.4420969999999,
                    "p99": 1322.4420969999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 810.864334,
                    "min": 775.503514,
                    "p50": 785.823488,
                    "p95": 810.864334,
                    "p99": 810.864334,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 554.1692489999999,
                    "min": 523.093175,
                    "p50": 531.55691,
                    "p95": 554.1692489999999,
                    "p99": 554.1692489999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 855.948768,
                    "min": 832.3989859999999,
                    "p50": 845.0919799999999,
                    "p95": 855.948768,
                    "p99": 855.948768,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2389.715377,
                    "min": 2337.038882,
                    "p50": 2364.4598809999998,
                    "p95": 2389.715377,
                    "p99": 2389.715377,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1313.839542,
                    "min": 1268.917441,
                    "p50": 1285.2412709999999,
                    "p95": 1313.839542,
                    "p99": 1313.839542,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1594.9832549999999,
                    "min": 1577.52171,
                    "p50": 1587.04349,
                    "p95": 1594.9832549999999,
                    "p99": 1594.9832549999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1788.165022,
                    "min": 1732.734418,
                    "p50": 1751.379111,
                    "p95": 1788.165022,
                    "p99": 1788.165022,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2225.545417,
                    "min": 2198.606582,
                    "p50": 2214.4105649999997,
                    "p95": 2225.545417,
                    "p99": 2225.545417,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2127.557468,
                    "min": 2048.167331,
                    "p50": 2072.0008279999997,
                    "p95": 2127.557468,
                    "p99": 2127.557468,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 668.275368,
                    "min": 645.563801,
                    "p50": 656.630666,
                    "p95": 668.275368,
                    "p99": 668.275368,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1443.5712609999998,
                    "min": 1417.3820839999998,
                    "p50": 1434.5010069999998,
                    "p95": 1443.5712609999998,
                    "p99": 1443.5712609999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1928.3781159999999,
                    "min": 1892.9119099999998,
                    "p50": 1903.2126839999999,
                    "p95": 1928.3781159999999,
                    "p99": 1928.3781159999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2777.860217,
                    "min": 2733.389956,
                    "p50": 2759.7017499999997,
                    "p95": 2777.860217,
                    "p99": 2777.860217,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 842.970008,
                    "min": 804.372115,
                    "p50": 813.364913,
                    "p95": 842.970008,
                    "p99": 842.970008,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1143.483066,
                    "min": 1116.102003,
                    "p50": 1130.163942,
                    "p95": 1143.483066,
                    "p99": 1143.483066,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 514.806695,
                    "min": 491.485618,
                    "p50": 499.54819999999995,
                    "p95": 514.806695,
                    "p99": 514.806695,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 981.831962,
                    "min": 955.1730279999999,
                    "p50": 966.7023929999999,
                    "p95": 981.831962,
                    "p99": 981.831962,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3164.407396,
                    "min": 3117.4033729999996,
                    "p50": 3147.0453359999997,
                    "p95": 3164.407396,
                    "p99": 3164.407396,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3121.852723,
                    "min": 3062.359277,
                    "p50": 3106.72282,
                    "p95": 3121.852723,
                    "p99": 3121.852723,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2199.45601,
                    "min": 2162.295921,
                    "p50": 2177.403597,
                    "p95": 2199.45601,
                    "p99": 2199.45601,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1880.6501979999998,
                    "min": 1848.957588,
                    "p50": 1869.923274,
                    "p95": 1880.6501979999998,
                    "p99": 1880.6501979999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1418.670158,
                    "min": 1389.955792,
                    "p50": 1402.767965,
                    "p95": 1418.670158,
                    "p99": 1418.670158,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1277.588033,
                    "min": 1240.515665,
                    "p50": 1258.936552,
                    "p95": 1277.588033,
                    "p99": 1277.588033,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1000.1847389999999,
                    "min": 938.815761,
                    "p50": 952.6873039999999,
                    "p95": 1000.1847389999999,
                    "p99": 1000.1847389999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2044.3425989999998,
                    "min": 1985.744951,
                    "p50": 2030.9834469999998,
                    "p95": 2044.3425989999998,
                    "p99": 2044.3425989999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 676.255503,
                    "min": 632.4459899999999,
                    "p50": 643.335151,
                    "p95": 676.255503,
                    "p99": 676.255503,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1754.098399,
                    "min": 1704.463882,
                    "p50": 1724.43853,
                    "p95": 1754.098399,
                    "p99": 1754.098399,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 815.832819,
                    "min": 797.738925,
                    "p50": 802.7222059999999,
                    "p95": 815.832819,
                    "p99": 815.832819,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2739.378472,
                    "min": 2690.2609629999997,
                    "p50": 2727.09285,
                    "p95": 2739.378472,
                    "p99": 2739.378472,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 501.266527,
                    "min": 486.12218099999996,
                    "p50": 495.710743,
                    "p95": 501.266527,
                    "p99": 501.266527,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1120.828835,
                    "min": 1091.6824199999999,
                    "p50": 1097.838047,
                    "p95": 1120.828835,
                    "p99": 1120.828835,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2368.548636,
                    "min": 2310.706651,
                    "p50": 2344.041049,
                    "p95": 2368.548636,
                    "p99": 2368.548636,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1596.1801309999998,
                    "min": 1550.8256119999999,
                    "p50": 1567.217396,
                    "p95": 1596.1801309999998,
                    "p99": 1596.1801309999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1655.2429929999998,
                    "min": 1620.719359,
                    "p50": 1641.6831379999999,
                    "p95": 1655.2429929999998,
                    "p99": 1655.2429929999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 935.320308,
                    "min": 889.05288,
                    "p50": 913.448625,
                    "p95": 935.320308,
                    "p99": 935.320308,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 798.6611909999999,
                    "min": 754.278823,
                    "p50": 776.445029,
                    "p95": 798.6611909999999,
                    "p99": 798.6611909999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1507.949827,
                    "min": 1466.9546799999998,
                    "p50": 1489.834283,
                    "p95": 1507.949827,
                    "p99": 1507.949827,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2966.790177,
                    "min": 2927.854941,
                    "p50": 2956.160548,
                    "p95": 2966.790177,
                    "p99": 2966.790177,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 645.626891,
                    "min": 604.826029,
                    "p50": 615.036206,
                    "p95": 645.626891,
                    "p99": 645.626891,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1071.1018669999999,
                    "min": 1042.0587329999998,
                    "p50": 1050.458218,
                    "p95": 1071.1018669999999,
                    "p99": 1071.1018669999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 472.704553,
                    "min": 456.014144,
                    "p50": 461.39214499999997,
                    "p95": 472.704553,
                    "p99": 472.704553,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2244.655996,
                    "min": 2193.748013,
                    "p50": 2224.2402159999997,
                    "p95": 2244.655996,
                    "p99": 2244.655996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2098.355213,
                    "min": 2068.608496,
                    "p50": 2076.613922,
                    "p95": 2098.355213,
                    "p99": 2098.355213,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1806.033313,
                    "min": 1762.85824,
                    "p50": 1786.3005739999999,
                    "p95": 1806.033313,
                    "p99": 1806.033313,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1932.5080209999999,
                    "min": 1904.6047239999998,
                    "p50": 1928.9332069999998,
                    "p95": 1932.5080209999999,
                    "p99": 1932.5080209999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1372.180357,
                    "min": 1328.793731,
                    "p50": 1352.324848,
                    "p95": 1372.180357,
                    "p99": 1372.180357,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2608.540345,
                    "min": 2541.142938,
                    "p50": 2579.163399,
                    "p95": 2608.540345,
                    "p99": 2608.540345,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1222.4367849999999,
                    "min": 1190.6888609999999,
                    "p50": 1203.19964,
                    "p95": 1222.4367849999999,
                    "p99": 1222.4367849999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1031.511456,
                    "min": 924.388383,
                    "p50": 933.6257979999999,
                    "p95": 1031.511456,
                    "p99": 1031.511456,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 542.706025,
                    "min": 505.335018,
                    "p50": 518.453546,
                    "p95": 542.706025,
                    "p99": 542.706025,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1102.317122,
                    "min": 1054.537836,
                    "p50": 1065.456778,
                    "p95": 1102.317122,
                    "p99": 1102.317122,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1261.151564,
                    "min": 1229.1340189999999,
                    "p50": 1241.705329,
                    "p95": 1261.151564,
                    "p99": 1261.151564,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 271.653423,
                    "min": 237.56322999999998,
                    "p50": 256.578075,
                    "p95": 271.653423,
                    "p99": 271.653423,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 874.094342,
                    "min": 855.354578,
                    "p50": 863.769049,
                    "p95": 874.094342,
                    "p99": 874.094342,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 468.06332,
                    "min": 435.921716,
                    "p50": 445.31636,
                    "p95": 468.06332,
                    "p99": 468.06332,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 328.002789,
                    "min": 296.869548,
                    "p50": 306.66855599999997,
                    "p95": 328.002789,
                    "p99": 328.002789,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2120.211001,
                    "min": 2086.9449879999997,
                    "p50": 2108.330199,
                    "p95": 2120.211001,
                    "p99": 2120.211001,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 700.547924,
                    "min": 648.499812,
                    "p50": 656.6063449999999,
                    "p95": 700.547924,
                    "p99": 700.547924,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 797.4055649999999,
                    "min": 779.642343,
                    "p50": 786.160807,
                    "p95": 797.4055649999999,
                    "p99": 797.4055649999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1026.229468,
                    "min": 991.568494,
                    "p50": 1006.411937,
                    "p95": 1026.229468,
                    "p99": 1026.229468,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 404.143827,
                    "min": 364.41511399999996,
                    "p50": 380.20367999999996,
                    "p95": 404.143827,
                    "p99": 404.143827,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3520.243105,
                    "min": 3433.971865,
                    "p50": 3478.1050619999996,
                    "p95": 3520.243105,
                    "p99": 3520.243105,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1448.8633579999998,
                    "min": 1405.913493,
                    "p50": 1418.736508,
                    "p95": 1448.8633579999998,
                    "p99": 1448.8633579999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 782.021741,
                    "min": 710.9282109999999,
                    "p50": 730.80905,
                    "p95": 782.021741,
                    "p99": 782.021741,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 603.2847859999999,
                    "min": 572.215415,
                    "p50": 597.14549,
                    "p95": 603.2847859999999,
                    "p99": 603.2847859999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2833.7389319999997,
                    "min": 2757.091717,
                    "p50": 2782.75708,
                    "p95": 2833.7389319999997,
                    "p99": 2833.7389319999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1294.046151,
                    "min": 1267.808524,
                    "p50": 1285.4543899999999,
                    "p95": 1294.046151,
                    "p99": 1294.046151,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 446.702322,
                    "min": 399.396277,
                    "p50": 418.229962,
                    "p95": 446.702322,
                    "p99": 446.702322,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 856.4874159999999,
                    "min": 840.390996,
                    "p50": 850.914714,
                    "p95": 856.4874159999999,
                    "p99": 856.4874159999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 623.925335,
                    "min": 587.159846,
                    "p50": 593.784632,
                    "p95": 623.925335,
                    "p99": 623.925335,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 655.3315329999999,
                    "min": 646.424537,
                    "p50": 651.994841,
                    "p95": 655.3315329999999,
                    "p99": 655.3315329999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 258.410505,
                    "min": 206.854899,
                    "p50": 220.788288,
                    "p95": 258.410505,
                    "p99": 258.410505,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 733.2280569999999,
                    "min": 710.296377,
                    "p50": 724.357312,
                    "p95": 733.2280569999999,
                    "p99": 733.2280569999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 357.76404299999996,
                    "min": 331.662732,
                    "p50": 338.542737,
                    "p95": 357.76404299999996,
                    "p99": 357.76404299999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 916.028331,
                    "min": 898.684999,
                    "p50": 903.678016,
                    "p95": 916.028331,
                    "p99": 916.028331,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 547.067413,
                    "min": 520.304085,
                    "p50": 530.699646,
                    "p95": 547.067413,
                    "p99": 547.067413,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1167.195226,
                    "min": 1116.344488,
                    "p50": 1133.183926,
                    "p95": 1167.195226,
                    "p99": 1167.195226,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 812.736017,
                    "min": 775.329117,
                    "p50": 789.268017,
                    "p95": 812.736017,
                    "p99": 812.736017,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 487.70230799999996,
                    "min": 462.51730999999995,
                    "p50": 474.662802,
                    "p95": 487.70230799999996,
                    "p99": 487.70230799999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 289.288928,
                    "min": 269.582635,
                    "p50": 278.294995,
                    "p95": 289.288928,
                    "p99": 289.288928,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1011.8156839999999,
                    "min": 964.3314859999999,
                    "p50": 973.060839,
                    "p95": 1011.8156839999999,
                    "p99": 1011.8156839999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1942.8259899999998,
                    "min": 1888.895067,
                    "p50": 1918.821154,
                    "p95": 1942.8259899999998,
                    "p99": 1942.8259899999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 588.909694,
                    "min": 572.105859,
                    "p50": 584.998066,
                    "p95": 588.909694,
                    "p99": 588.909694,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 664.949019,
                    "min": 636.076592,
                    "p50": 647.733694,
                    "p95": 664.949019,
                    "p99": 664.949019,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 358.39262099999996,
                    "min": 326.823978,
                    "p50": 336.80364499999996,
                    "p95": 358.39262099999996,
                    "p99": 358.39262099999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 534.211493,
                    "min": 513.2208939999999,
                    "p50": 519.920213,
                    "p95": 534.211493,
                    "p99": 534.211493,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 909.354534,
                    "min": 885.2762829999999,
                    "p50": 898.175041,
                    "p95": 909.354534,
                    "p99": 909.354534,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 231.840282,
                    "min": 203.915367,
                    "p50": 213.73254699999998,
                    "p95": 231.840282,
                    "p99": 231.840282,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1902.16203,
                    "min": 1866.914902,
                    "p50": 1884.782825,
                    "p95": 1902.16203,
                    "p99": 1902.16203,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 743.848353,
                    "min": 698.917347,
                    "p50": 718.452492,
                    "p95": 743.848353,
                    "p99": 743.848353,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 858.5539819999999,
                    "min": 822.2079789999999,
                    "p50": 833.910441,
                    "p95": 858.5539819999999,
                    "p99": 858.5539819999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 429.724268,
                    "min": 389.65237299999995,
                    "p50": 397.897074,
                    "p95": 429.724268,
                    "p99": 429.724268,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1135.42664,
                    "min": 1094.43712,
                    "p50": 1108.1775049999999,
                    "p95": 1135.42664,
                    "p99": 1135.42664,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 790.07664,
                    "min": 760.449404,
                    "p50": 767.160754,
                    "p95": 790.07664,
                    "p99": 790.07664,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.160763,
                    "min": 452.09930099999997,
                    "p50": 468.472133,
                    "p95": 474.160763,
                    "p99": 474.160763,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2548.344604,
                    "min": 2475.166895,
                    "p50": 2498.526301,
                    "p95": 2548.344604,
                    "p99": 2548.344604,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 290.799169,
                    "min": 267.610817,
                    "p50": 275.759547,
                    "p95": 290.799169,
                    "p99": 290.799169,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 980.551018,
                    "min": 941.8024019999999,
                    "p50": 958.0497349999999,
                    "p95": 980.551018,
                    "p99": 980.551018,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1286.530659,
                    "min": 1242.946786,
                    "p50": 1275.0498539999999,
                    "p95": 1286.530659,
                    "p99": 1286.530659,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1868.6094659999999,
                    "min": 1698.828607,
                    "p50": 1806.0162369999998,
                    "p95": 1868.6094659999999,
                    "p99": 1868.6094659999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1256.181193,
                    "min": 1145.8881999999999,
                    "p50": 1217.4785239999999,
                    "p95": 1256.181193,
                    "p99": 1256.181193,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1915.1085529999998,
                    "min": 1820.9876649999999,
                    "p50": 1854.829755,
                    "p95": 1915.1085529999998,
                    "p99": 1915.1085529999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1652.399035,
                    "min": 1551.2468749999998,
                    "p50": 1588.672122,
                    "p95": 1652.399035,
                    "p99": 1652.399035,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1267.19563,
                    "min": 1206.645754,
                    "p50": 1232.7377,
                    "p95": 1267.19563,
                    "p99": 1267.19563,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1537.600998,
                    "min": 1462.439907,
                    "p50": 1478.7849939999999,
                    "p95": 1537.600998,
                    "p99": 1537.600998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1927.707774,
                    "min": 1692.887685,
                    "p50": 1834.2806919999998,
                    "p95": 1927.707774,
                    "p99": 1927.707774,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 437.49217,
                    "min": 381.138756,
                    "p50": 402.60997799999996,
                    "p95": 437.49217,
                    "p99": 437.49217,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 562.560876,
                    "min": 482.33027899999996,
                    "p50": 538.027715,
                    "p95": 562.560876,
                    "p99": 562.560876,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 832.414496,
                    "min": 640.5286699999999,
                    "p50": 684.0990859999999,
                    "p95": 832.414496,
                    "p99": 832.414496,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2659.499837,
                    "min": 2455.357663,
                    "p50": 2493.836945,
                    "p95": 2659.499837,
                    "p99": 2659.499837,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 798.3739509999999,
                    "min": 743.826685,
                    "p50": 754.442505,
                    "p95": 798.3739509999999,
                    "p99": 798.3739509999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2238.096517,
                    "min": 2133.8592679999997,
                    "p50": 2184.342229,
                    "p95": 2238.096517,
                    "p99": 2238.096517,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1041.3259719999999,
                    "min": 977.3108679999999,
                    "p50": 1004.022197,
                    "p95": 1041.3259719999999,
                    "p99": 1041.3259719999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 907.4978259999999,
                    "min": 834.89422,
                    "p50": 874.266077,
                    "p95": 907.4978259999999,
                    "p99": 907.4978259999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 473.216169,
                    "min": 428.204523,
                    "p50": 449.98171199999996,
                    "p95": 473.216169,
                    "p99": 473.216169,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 455.74708799999996,
                    "min": 427.821197,
                    "p50": 445.12884099999997,
                    "p95": 455.74708799999996,
                    "p99": 455.74708799999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 504.65255399999995,
                    "min": 479.37942999999996,
                    "p50": 500.069692,
                    "p95": 504.65255399999995,
                    "p99": 504.65255399999995,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 124.275099,
                    "min": 76.720693,
                    "p50": 121.610272,
                    "p95": 124.275099,
                    "p99": 124.275099,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 199.009017,
                    "min": 168.218354,
                    "p50": 197.183329,
                    "p95": 199.009017,
                    "p99": 199.009017,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 338.48659399999997,
                    "min": 312.812202,
                    "p50": 326.19666,
                    "p95": 338.48659399999997,
                    "p99": 338.48659399999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 106.209834,
                    "min": 91.535472,
                    "p50": 100.556911,
                    "p95": 106.209834,
                    "p99": 106.209834,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 160.01431499999998,
                    "min": 137.61747,
                    "p50": 153.285531,
                    "p95": 160.01431499999998,
                    "p99": 160.01431499999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 172.625523,
                    "min": 143.523204,
                    "p50": 168.851904,
                    "p95": 172.625523,
                    "p99": 172.625523,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 817.329831,
                    "min": 786.448209,
                    "p50": 801.9192059999999,
                    "p95": 817.329831,
                    "p99": 817.329831,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 994.8300859999999,
                    "min": 931.035901,
                    "p50": 963.8615759999999,
                    "p95": 994.8300859999999,
                    "p99": 994.8300859999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 222.946809,
                    "min": 199.79369799999998,
                    "p50": 207.416589,
                    "p95": 222.946809,
                    "p99": 222.946809,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3478.06261,
                    "min": 3340.5061419999997,
                    "p50": 3388.949569,
                    "p95": 3478.06261,
                    "p99": 3478.06261,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 166.644687,
                    "min": 85.454183,
                    "p50": 89.714653,
                    "p95": 166.644687,
                    "p99": 166.644687,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 160.891301,
                    "min": 117.71793799999999,
                    "p50": 148.994596,
                    "p95": 160.891301,
                    "p99": 160.891301,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1003.9323489999999,
                    "min": 932.232221,
                    "p50": 970.021091,
                    "p95": 1003.9323489999999,
                    "p99": 1003.9323489999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 884.857168,
                    "min": 806.3522039999999,
                    "p50": 829.200837,
                    "p95": 884.857168,
                    "p99": 884.857168,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 745.477137,
                    "min": 679.103062,
                    "p50": 698.294271,
                    "p95": 745.477137,
                    "p99": 745.477137,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 772.870272,
                    "min": 744.88019,
                    "p50": 762.5028669999999,
                    "p95": 772.870272,
                    "p99": 772.870272,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 401.772884,
                    "min": 380.613591,
                    "p50": 399.250564,
                    "p95": 401.772884,
                    "p99": 401.772884,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2248.1390659999997,
                    "min": 2162.5543549999998,
                    "p50": 2218.191203,
                    "p95": 2248.1390659999997,
                    "p99": 2248.1390659999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1311.5581399999999,
                    "min": 1277.3979319999999,
                    "p50": 1296.776697,
                    "p95": 1311.5581399999999,
                    "p99": 1311.5581399999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 990.2784009999999,
                    "min": 940.3641849999999,
                    "p50": 974.1671369999999,
                    "p95": 990.2784009999999,
                    "p99": 990.2784009999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 912.268414,
                    "min": 884.977361,
                    "p50": 901.3958339999999,
                    "p95": 912.268414,
                    "p99": 912.268414,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 549.915075,
                    "min": 510.66702499999997,
                    "p50": 537.905055,
                    "p95": 549.915075,
                    "p99": 549.915075,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1502.796584,
                    "min": 1441.276601,
                    "p50": 1477.59916,
                    "p95": 1502.796584,
                    "p99": 1502.796584,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.45755099999997,
                    "min": 248.167248,
                    "p50": 253.68014699999998,
                    "p95": 257.45755099999997,
                    "p99": 257.45755099999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1138.32024,
                    "min": 1095.340817,
                    "p50": 1119.4847929999999,
                    "p95": 1138.32024,
                    "p99": 1138.32024,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 619.656291,
                    "min": 598.9442339999999,
                    "p50": 614.35914,
                    "p95": 619.656291,
                    "p99": 619.656291,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 475.367489,
                    "min": 462.065909,
                    "p50": 472.648481,
                    "p95": 475.367489,
                    "p99": 475.367489,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 327.41315099999997,
                    "min": 322.14386099999996,
                    "p50": 324.66088199999996,
                    "p95": 327.41315099999997,
                    "p99": 327.41315099999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1067.6272529999999,
                    "min": 1037.4154019999999,
                    "p50": 1046.7197589999998,
                    "p95": 1067.6272529999999,
                    "p99": 1067.6272529999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2597.5406519999997,
                    "min": 2012.8139509999999,
                    "p50": 2487.198873,
                    "p95": 2597.5406519999997,
                    "p99": 2597.5406519999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 469.662451,
                    "min": 374.47508,
                    "p50": 457.611068,
                    "p95": 469.662451,
                    "p99": 469.662451,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1779.214382,
                    "min": 1411.945058,
                    "p50": 1729.961095,
                    "p95": 1779.214382,
                    "p99": 1779.214382,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1912.946031,
                    "min": 1510.2627479999999,
                    "p50": 1870.5009089999999,
                    "p95": 1912.946031,
                    "p99": 1912.946031,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.04946,
                    "min": 509.098374,
                    "p50": 594.551247,
                    "p95": 616.04946,
                    "p99": 616.04946,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1611.107345,
                    "min": 1282.458912,
                    "p50": 1575.13238,
                    "p95": 1611.107345,
                    "p99": 1611.107345,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2199.498567,
                    "min": 1737.282956,
                    "p50": 2125.73882,
                    "p95": 2199.498567,
                    "p99": 2199.498567,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 895.6963619999999,
                    "min": 717.625849,
                    "p50": 882.437924,
                    "p95": 895.6963619999999,
                    "p99": 895.6963619999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1326.434757,
                    "min": 1070.059654,
                    "p50": 1300.506838,
                    "p95": 1326.434757,
                    "p99": 1326.434757,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1201.377365,
                    "min": 947.374192,
                    "p50": 1161.164125,
                    "p95": 1201.377365,
                    "p99": 1201.377365,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2906.056126,
                    "min": 2261.5638129999998,
                    "p50": 2837.690474,
                    "p95": 2906.056126,
                    "p99": 2906.056126,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1463.646683,
                    "min": 1166.202744,
                    "p50": 1443.784707,
                    "p95": 1463.646683,
                    "p99": 1463.646683,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1042.660658,
                    "min": 831.8731429999999,
                    "p50": 1016.873927,
                    "p95": 1042.660658,
                    "p99": 1042.660658,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 757.490222,
                    "min": 602.199157,
                    "p50": 743.159947,
                    "p95": 757.490222,
                    "p99": 757.490222,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2036.18889,
                    "min": 1624.997699,
                    "p50": 2008.797253,
                    "p95": 2036.18889,
                    "p99": 2036.18889,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 117.31297099999999,
                    "min": 98.56159099999999,
                    "p50": 110.80453,
                    "p95": 117.31297099999999,
                    "p99": 117.31297099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 39.809981,
                    "min": 26.023688,
                    "p50": 31.892193,
                    "p95": 39.809981,
                    "p99": 39.809981,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 226.03690799999998,
                    "min": 195.897573,
                    "p50": 221.08529099999998,
                    "p95": 226.03690799999998,
                    "p99": 226.03690799999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 479.230772,
                    "min": 426.414479,
                    "p50": 473.34919399999995,
                    "p95": 479.230772,
                    "p99": 479.230772,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 56.336816,
                    "min": 41.381609,
                    "p50": 52.477685,
                    "p95": 56.336816,
                    "p99": 56.336816,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 61.323474,
                    "min": 29.361572,
                    "p50": 50.660306999999996,
                    "p95": 61.323474,
                    "p99": 61.323474,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 207.17573199999998,
                    "min": 146.784309,
                    "p50": 169.918792,
                    "p95": 207.17573199999998,
                    "p99": 207.17573199999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.340115,
                    "min": 26.973361999999998,
                    "p50": 43.501542,
                    "p95": 77.340115,
                    "p99": 77.340115,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 33.001824,
                    "min": 25.444464,
                    "p50": 28.850963999999998,
                    "p95": 33.001824,
                    "p99": 33.001824,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 89.926692,
                    "min": 70.585863,
                    "p50": 72.784171,
                    "p95": 89.926692,
                    "p99": 89.926692,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 208.678768,
                    "min": 125.478404,
                    "p50": 130.241104,
                    "p95": 208.678768,
                    "p99": 208.678768,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.074838,
                    "min": 26.10603,
                    "p50": 26.699500999999998,
                    "p95": 27.074838,
                    "p99": 27.074838,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 90.64255299999999,
                    "min": 53.199535,
                    "p50": 56.986439,
                    "p95": 90.64255299999999,
                    "p99": 90.64255299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 99.86153999999999,
                    "min": 62.081047,
                    "p50": 63.797829,
                    "p95": 99.86153999999999,
                    "p99": 99.86153999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 54.675114,
                    "min": 41.213882999999996,
                    "p50": 46.239377999999995,
                    "p95": 54.675114,
                    "p99": 54.675114,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 138.49254299999998,
                    "min": 32.932446999999996,
                    "p50": 53.698437999999996,
                    "p95": 138.49254299999998,
                    "p99": 138.49254299999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 122.058707,
                    "min": 56.167353,
                    "p50": 57.513171,
                    "p95": 122.058707,
                    "p99": 122.058707,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 128.583993,
                    "min": 48.284943,
                    "p50": 55.154559,
                    "p95": 128.583993,
                    "p99": 128.583993,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 105.542784,
                    "min": 44.125828999999996,
                    "p50": 57.099489,
                    "p95": 105.542784,
                    "p99": 105.542784,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 390.85898199999997,
                    "min": 353.409073,
                    "p50": 381.349005,
                    "p95": 390.85898199999997,
                    "p99": 390.85898199999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.357944,
                    "min": 190.65238,
                    "p50": 205.354233,
                    "p95": 223.357944,
                    "p99": 223.357944,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 658.0042599999999,
                    "min": 496.949714,
                    "p50": 582.711156,
                    "p95": 658.0042599999999,
                    "p99": 658.0042599999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 312.724312,
                    "min": 206.29754799999998,
                    "p50": 283.894546,
                    "p95": 312.724312,
                    "p99": 312.724312,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 552.081286,
                    "min": 411.13332599999995,
                    "p50": 465.276726,
                    "p95": 552.081286,
                    "p99": 552.081286,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2334.6006279999997,
                    "min": 1921.1206499999998,
                    "p50": 2029.16931,
                    "p95": 2334.6006279999997,
                    "p99": 2334.6006279999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 498.27997999999997,
                    "min": 377.221323,
                    "p50": 467.840058,
                    "p95": 498.27997999999997,
                    "p99": 498.27997999999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 681.514906,
                    "min": 444.408511,
                    "p50": 550.908826,
                    "p95": 681.514906,
                    "p99": 681.514906,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 825.85543,
                    "min": 663.7525559999999,
                    "p50": 685.521299,
                    "p95": 825.85543,
                    "p99": 825.85543,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 372.242503,
                    "min": 276.68005899999997,
                    "p50": 311.265872,
                    "p95": 372.242503,
                    "p99": 372.242503,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1800.438893,
                    "min": 1426.1922809999999,
                    "p50": 1589.4042439999998,
                    "p95": 1800.438893,
                    "p99": 1800.438893,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 382.227738,
                    "min": 241.793635,
                    "p50": 292.754906,
                    "p95": 382.227738,
                    "p99": 382.227738,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 561.552569,
                    "min": 445.35767999999996,
                    "p50": 467.39007899999996,
                    "p95": 561.552569,
                    "p99": 561.552569,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1219.770378,
                    "min": 1086.801,
                    "p50": 1194.348695,
                    "p95": 1219.770378,
                    "p99": 1219.770378,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 227.024814,
                    "min": 162.63906799999998,
                    "p50": 174.815011,
                    "p95": 227.024814,
                    "p99": 227.024814,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4343.714967,
                    "min": 3847.842659,
                    "p50": 3952.2908599999996,
                    "p95": 4343.714967,
                    "p99": 4343.714967,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 158.456945,
                    "min": 135.181477,
                    "p50": 143.50786,
                    "p95": 158.456945,
                    "p99": 158.456945,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 665.2318869999999,
                    "min": 551.040008,
                    "p50": 605.45478,
                    "p95": 665.2318869999999,
                    "p99": 665.2318869999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 947.601558,
                    "min": 770.461627,
                    "p50": 799.82201,
                    "p95": 947.601558,
                    "p99": 947.601558,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 73.683752,
                    "min": 60.32593,
                    "p50": 69.33823799999999,
                    "p95": 73.683752,
                    "p99": 73.683752,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 86.325634,
                    "min": 72.760744,
                    "p50": 83.312243,
                    "p95": 86.325634,
                    "p99": 86.325634,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 44.625772,
                    "min": 35.748929,
                    "p50": 42.890701,
                    "p95": 44.625772,
                    "p99": 44.625772,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 84.29522899999999,
                    "min": 59.601817999999994,
                    "p50": 77.026496,
                    "p95": 84.29522899999999,
                    "p99": 84.29522899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 37.828157,
                    "min": 30.234398,
                    "p50": 32.945686,
                    "p95": 37.828157,
                    "p99": 37.828157,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 191.321891,
                    "min": 159.228485,
                    "p50": 184.026696,
                    "p95": 191.321891,
                    "p99": 191.321891,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 111.672563,
                    "min": 92.34277399999999,
                    "p50": 109.86583399999999,
                    "p95": 111.672563,
                    "p99": 111.672563,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 78.02652499999999,
                    "min": 49.261762999999995,
                    "p50": 75.429358,
                    "p95": 78.02652499999999,
                    "p99": 78.02652499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 289.87708699999996,
                    "min": 250.48188199999998,
                    "p50": 264.165053,
                    "p95": 289.87708699999996,
                    "p99": 289.87708699999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 62.335893999999996,
                    "min": 52.392503,
                    "p50": 59.150755,
                    "p95": 62.335893999999996,
                    "p99": 62.335893999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.925502,
                    "min": 50.818714,
                    "p50": 60.886098999999994,
                    "p95": 91.925502,
                    "p99": 91.925502,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 105.17248099999999,
                    "min": 89.641649,
                    "p50": 100.875079,
                    "p95": 105.17248099999999,
                    "p99": 105.17248099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 71.03971299999999,
                    "min": 60.963293,
                    "p50": 67.19865899999999,
                    "p95": 71.03971299999999,
                    "p99": 71.03971299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 145.337687,
                    "min": 98.417148,
                    "p50": 117.404028,
                    "p95": 145.337687,
                    "p99": 145.337687,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 551.370689,
                    "min": 495.918766,
                    "p50": 530.953881,
                    "p95": 551.370689,
                    "p99": 551.370689,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 98.09755299999999,
                    "min": 78.385386,
                    "p50": 86.433413,
                    "p95": 98.09755299999999,
                    "p99": 98.09755299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 281.344517,
                    "min": 205.809847,
                    "p50": 238.074794,
                    "p95": 281.344517,
                    "p99": 281.344517,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 123.508454,
                    "min": 107.375999,
                    "p50": 119.789592,
                    "p95": 123.508454,
                    "p99": 123.508454,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 142.95186099999998,
                    "min": 67.36431999999999,
                    "p50": 93.09812,
                    "p95": 142.95186099999998,
                    "p99": 142.95186099999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 84.054726,
                    "min": 69.421793,
                    "p50": 70.796257,
                    "p95": 84.054726,
                    "p99": 84.054726,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.50573,
                    "min": 26.186875,
                    "p50": 26.843304,
                    "p95": 27.50573,
                    "p99": 27.50573,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 30.038052999999998,
                    "min": 25.693576999999998,
                    "p50": 26.81366,
                    "p95": 30.038052999999998,
                    "p99": 30.038052999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.11514,
                    "min": 26.058456999999997,
                    "p50": 26.964820999999997,
                    "p95": 28.11514,
                    "p99": 28.11514,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 46.524446,
                    "min": 12.834249999999999,
                    "p50": 27.049681,
                    "p95": 46.524446,
                    "p99": 46.524446,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.45161,
                    "min": 26.439826,
                    "p50": 26.950903,
                    "p95": 27.45161,
                    "p99": 27.45161,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 30.473284,
                    "min": 22.011125999999997,
                    "p50": 26.78181,
                    "p95": 30.473284,
                    "p99": 30.473284,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.185056,
                    "min": 24.145577,
                    "p50": 26.575046999999998,
                    "p95": 27.185056,
                    "p99": 27.185056,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 83.941514,
                    "min": 26.570095,
                    "p50": 26.80747,
                    "p95": 83.941514,
                    "p99": 83.941514,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 46.750164999999996,
                    "min": 37.880582,
                    "p50": 41.763842,
                    "p95": 46.750164999999996,
                    "p99": 46.750164999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 28.206311,
                    "min": 23.743572,
                    "p50": 26.788718,
                    "p95": 28.206311,
                    "p99": 28.206311,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 44.128051,
                    "min": 26.715432999999997,
                    "p50": 33.379183999999995,
                    "p95": 44.128051,
                    "p99": 44.128051,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 30.266582999999997,
                    "min": 25.155372999999997,
                    "p50": 26.773643,
                    "p95": 30.266582999999997,
                    "p99": 30.266582999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.225683,
                    "min": 24.573978999999998,
                    "p50": 26.457745,
                    "p95": 27.225683,
                    "p99": 27.225683,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 30.64538,
                    "min": 24.854056999999997,
                    "p50": 26.320999999999998,
                    "p95": 30.64538,
                    "p99": 30.64538,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 108.49745899999999,
                    "min": 72.214077,
                    "p50": 91.90037099999999,
                    "p95": 108.49745899999999,
                    "p99": 108.49745899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.321678,
                    "min": 22.296053999999998,
                    "p50": 26.883253999999997,
                    "p95": 27.321678,
                    "p99": 27.321678,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.047877,
                    "min": 26.353158999999998,
                    "p50": 26.744909,
                    "p95": 27.047877,
                    "p99": 27.047877,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.059354,
                    "min": 17.893897,
                    "p50": 26.894793999999997,
                    "p95": 27.059354,
                    "p99": 27.059354,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 377.262176,
                    "min": 347.29118,
                    "p50": 361.769776,
                    "p95": 377.262176,
                    "p99": 377.262176,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.054599,
                    "min": 129.115943,
                    "p50": 140.036118,
                    "p95": 151.054599,
                    "p99": 151.054599,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4568.642893,
                    "min": 4227.252095,
                    "p50": 4325.008224,
                    "p95": 4568.642893,
                    "p99": 4568.642893,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 994.236857,
                    "min": 782.379162,
                    "p50": 889.8149619999999,
                    "p95": 994.236857,
                    "p99": 994.236857,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 365.34882999999996,
                    "min": 249.510033,
                    "p50": 346.377523,
                    "p95": 365.34882999999996,
                    "p99": 365.34882999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.83325499999998,
                    "min": 147.132604,
                    "p50": 174.316,
                    "p95": 211.83325499999998,
                    "p99": 211.83325499999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 312.27527499999997,
                    "min": 243.216085,
                    "p50": 259.017949,
                    "p95": 312.27527499999997,
                    "p99": 312.27527499999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1486.941138,
                    "min": 1148.326797,
                    "p50": 1245.9909129999999,
                    "p95": 1486.941138,
                    "p99": 1486.941138,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 604.434749,
                    "min": 529.368068,
                    "p50": 567.9709,
                    "p95": 604.434749,
                    "p99": 604.434749,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 537.6143559999999,
                    "min": 420.076504,
                    "p50": 464.49406799999997,
                    "p95": 537.6143559999999,
                    "p99": 537.6143559999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1703.504391,
                    "min": 1577.94536,
                    "p50": 1614.3645749999998,
                    "p95": 1703.504391,
                    "p99": 1703.504391,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2324.583001,
                    "min": 1924.2918009999999,
                    "p50": 2095.8326899999997,
                    "p95": 2324.583001,
                    "p99": 2324.583001,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 667.267673,
                    "min": 489.45379099999997,
                    "p50": 604.860355,
                    "p95": 667.267673,
                    "p99": 667.267673,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 297.962499,
                    "min": 211.99188999999998,
                    "p50": 227.017148,
                    "p95": 297.962499,
                    "p99": 297.962499,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 744.657505,
                    "min": 647.771405,
                    "p50": 713.654286,
                    "p95": 744.657505,
                    "p99": 744.657505,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 462.23115099999995,
                    "min": 350.69172199999997,
                    "p50": 378.392647,
                    "p95": 462.23115099999995,
                    "p99": 462.23115099999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 593.963893,
                    "min": 463.021573,
                    "p50": 511.79308,
                    "p95": 593.963893,
                    "p99": 593.963893,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 751.134899,
                    "min": 565.7661009999999,
                    "p50": 604.0158289999999,
                    "p95": 751.134899,
                    "p99": 751.134899,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 375.73744,
                    "min": 299.309703,
                    "p50": 322.961012,
                    "p95": 375.73744,
                    "p99": 375.73744,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1631.109011,
                    "min": 1379.386782,
                    "p50": 1499.234264,
                    "p95": 1631.109011,
                    "p99": 1631.109011,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 312.359713,
                    "min": 201.668849,
                    "p50": 244.55845399999998,
                    "p95": 312.359713,
                    "p99": 312.359713,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 573.5727089999999,
                    "min": 426.20390599999996,
                    "p50": 469.20194499999997,
                    "p95": 573.5727089999999,
                    "p99": 573.5727089999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 802.951436,
                    "min": 634.464153,
                    "p50": 709.849799,
                    "p95": 802.951436,
                    "p99": 802.951436,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 307.804198,
                    "min": 249.73742299999998,
                    "p50": 274.311211,
                    "p95": 307.804198,
                    "p99": 307.804198,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 983.021809,
                    "min": 712.542686,
                    "p50": 773.7462429999999,
                    "p95": 983.021809,
                    "p99": 983.021809,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 500.46135999999996,
                    "min": 369.435729,
                    "p50": 430.259588,
                    "p95": 500.46135999999996,
                    "p99": 500.46135999999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1024.8283569999999,
                    "min": 822.5145,
                    "p50": 846.688763,
                    "p95": 1024.8283569999999,
                    "p99": 1024.8283569999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 365.25229099999996,
                    "min": 278.680684,
                    "p50": 309.706745,
                    "p95": 365.25229099999996,
                    "p99": 365.25229099999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 588.197462,
                    "min": 463.96383799999995,
                    "p50": 541.760601,
                    "p95": 588.197462,
                    "p99": 588.197462,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2053.920772,
                    "min": 1797.6865409999998,
                    "p50": 1951.729639,
                    "p95": 2053.920772,
                    "p99": 2053.920772,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.118752,
                    "min": 491.08491399999997,
                    "p50": 562.718833,
                    "p95": 697.118752,
                    "p99": 697.118752,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 467.759958,
                    "min": 324.557889,
                    "p50": 403.512451,
                    "p95": 467.759958,
                    "p99": 467.759958,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 642.392831,
                    "min": 544.6927999999999,
                    "p50": 593.4940819999999,
                    "p95": 642.392831,
                    "p99": 642.392831,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.663156,
                    "min": 130.11717099999998,
                    "p50": 173.191319,
                    "p95": 201.663156,
                    "p99": 201.663156,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 745.778968,
                    "min": 587.854436,
                    "p50": 628.644623,
                    "p95": 745.778968,
                    "p99": 745.778968,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1186.785569,
                    "min": 880.6698389999999,
                    "p50": 1049.591328,
                    "p95": 1186.785569,
                    "p99": 1186.785569,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2891.5283689999997,
                    "min": 2459.670279,
                    "p50": 2562.798982,
                    "p95": 2891.5283689999997,
                    "p99": 2891.5283689999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 490.941023,
                    "min": 333.370591,
                    "p50": 433.13536799999997,
                    "p95": 490.941023,
                    "p99": 490.941023,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 881.635401,
                    "min": 664.931006,
                    "p50": 701.322589,
                    "p95": 881.635401,
                    "p99": 881.635401,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 654.2496259999999,
                    "min": 539.751488,
                    "p50": 585.2599349999999,
                    "p95": 654.2496259999999,
                    "p99": 654.2496259999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1368.884587,
                    "min": 1032.586404,
                    "p50": 1069.398272,
                    "p95": 1368.884587,
                    "p99": 1368.884587,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 997.670162,
                    "min": 939.989955,
                    "p50": 971.261617,
                    "p95": 997.670162,
                    "p99": 997.670162,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1292.1062279999999,
                    "min": 1235.209173,
                    "p50": 1271.547709,
                    "p95": 1292.1062279999999,
                    "p99": 1292.1062279999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1649.833314,
                    "min": 1551.0599869999999,
                    "p50": 1596.668312,
                    "p95": 1649.833314,
                    "p99": 1649.833314,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1424.3998159999999,
                    "min": 1328.453336,
                    "p50": 1397.430619,
                    "p95": 1424.3998159999999,
                    "p99": 1424.3998159999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1222.283995,
                    "min": 1155.282408,
                    "p50": 1191.899189,
                    "p95": 1222.283995,
                    "p99": 1222.283995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2187.19393,
                    "min": 2096.947562,
                    "p50": 2154.809057,
                    "p95": 2187.19393,
                    "p99": 2187.19393,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 812.7426479999999,
                    "min": 744.977581,
                    "p50": 782.612752,
                    "p95": 812.7426479999999,
                    "p99": 812.7426479999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 475.66281899999996,
                    "min": 444.192372,
                    "p50": 463.10947799999997,
                    "p95": 475.66281899999996,
                    "p99": 475.66281899999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2029.792097,
                    "min": 1851.917007,
                    "p50": 1941.7898969999999,
                    "p95": 2029.792097,
                    "p99": 2029.792097,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 935.709261,
                    "min": 870.644369,
                    "p50": 922.8997569999999,
                    "p95": 935.709261,
                    "p99": 935.709261,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1613.9159339999999,
                    "min": 1512.6830229999998,
                    "p50": 1575.051683,
                    "p95": 1613.9159339999999,
                    "p99": 1613.9159339999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 923.7299469999999,
                    "min": 890.4651339999999,
                    "p50": 897.367436,
                    "p95": 923.7299469999999,
                    "p99": 923.7299469999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2071.502244,
                    "min": 2008.2458219999999,
                    "p50": 2035.642866,
                    "p95": 2071.502244,
                    "p99": 2071.502244,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2927.398793,
                    "min": 2855.5295029999997,
                    "p50": 2910.989157,
                    "p95": 2927.398793,
                    "p99": 2927.398793,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5746.251706999999,
                    "min": 5665.453082,
                    "p50": 5711.725982999999,
                    "p95": 5746.251706999999,
                    "p99": 5746.251706999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1628.529212,
                    "min": 1576.8040039999998,
                    "p50": 1594.552453,
                    "p95": 1628.529212,
                    "p99": 1628.529212,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 746.2583169999999,
                    "min": 730.4843529999999,
                    "p50": 741.884363,
                    "p95": 746.2583169999999,
                    "p99": 746.2583169999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 608.998373,
                    "min": 583.594196,
                    "p50": 605.043331,
                    "p95": 608.998373,
                    "p99": 608.998373,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1739.5935359999999,
                    "min": 1677.679193,
                    "p50": 1734.4104129999998,
                    "p95": 1739.5935359999999,
                    "p99": 1739.5935359999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4314.911974,
                    "min": 4231.284608,
                    "p50": 4285.115565,
                    "p95": 4314.911974,
                    "p99": 4314.911974,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2548.521829,
                    "min": 2501.993071,
                    "p50": 2521.100039,
                    "p95": 2548.521829,
                    "p99": 2548.521829,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2197.4672219999998,
                    "min": 2132.824682,
                    "p50": 2165.2666209999998,
                    "p95": 2197.4672219999998,
                    "p99": 2197.4672219999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1205.695505,
                    "min": 1163.667033,
                    "p50": 1173.8078229999999,
                    "p95": 1205.695505,
                    "p99": 1205.695505,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1486.7806759999999,
                    "min": 1453.0803389999999,
                    "p50": 1464.779614,
                    "p95": 1486.7806759999999,
                    "p99": 1486.7806759999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1047.11817,
                    "min": 990.1220539999999,
                    "p50": 1023.152691,
                    "p95": 1047.11817,
                    "p99": 1047.11817,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 481.647993,
                    "min": 439.848193,
                    "p50": 463.238348,
                    "p95": 481.647993,
                    "p99": 481.647993,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1904.7722669999998,
                    "min": 1873.79225,
                    "p50": 1882.956808,
                    "p95": 1904.7722669999998,
                    "p99": 1904.7722669999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1321.822894,
                    "min": 1294.401516,
                    "p50": 1314.293968,
                    "p95": 1321.822894,
                    "p99": 1321.822894,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 620.903244,
                    "min": 587.864408,
                    "p50": 612.202285,
                    "p95": 620.903244,
                    "p99": 620.903244,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1912.992831,
                    "min": 1847.5199699999998,
                    "p50": 1904.9083079999998,
                    "p95": 1912.992831,
                    "p99": 1912.992831,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3863.6936769999998,
                    "min": 3732.603695,
                    "p50": 3809.030683,
                    "p95": 3863.6936769999998,
                    "p99": 3863.6936769999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2146.0672059999997,
                    "min": 2058.294191,
                    "p50": 2104.86555,
                    "p95": 2146.0672059999997,
                    "p99": 2146.0672059999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5650.177164,
                    "min": 5505.664331999999,
                    "p50": 5584.474526,
                    "p95": 5650.177164,
                    "p99": 5650.177164,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1189.3388989999999,
                    "min": 1123.433652,
                    "p50": 1175.236156,
                    "p95": 1189.3388989999999,
                    "p99": 1189.3388989999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1752.878413,
                    "min": 1701.8562009999998,
                    "p50": 1732.265827,
                    "p95": 1752.878413,
                    "p99": 1752.878413,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7493.793809,
                    "min": 7319.525245,
                    "p50": 7394.228201,
                    "p95": 7493.793809,
                    "p99": 7493.793809,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 998.2241819999999,
                    "min": 957.061922,
                    "p50": 985.727809,
                    "p95": 998.2241819999999,
                    "p99": 998.2241819999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2552.801681,
                    "min": 2463.052024,
                    "p50": 2513.640002,
                    "p95": 2552.801681,
                    "p99": 2552.801681,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1361.44823,
                    "min": 1321.858869,
                    "p50": 1335.5067709999998,
                    "p95": 1361.44823,
                    "p99": 1361.44823,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 813.47176,
                    "min": 747.9405419999999,
                    "p50": 784.5755909999999,
                    "p95": 813.47176,
                    "p99": 813.47176,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2919.065525,
                    "min": 2806.041025,
                    "p50": 2873.6680699999997,
                    "p95": 2919.065525,
                    "p99": 2919.065525,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2720.023628,
                    "min": 2644.436832,
                    "p50": 2690.695099,
                    "p95": 2720.023628,
                    "p99": 2720.023628,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3338.3576599999997,
                    "min": 3247.6781889999997,
                    "p50": 3306.239904,
                    "p95": 3338.3576599999997,
                    "p99": 3338.3576599999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1554.386746,
                    "min": 1491.8496169999999,
                    "p50": 1507.985823,
                    "p95": 1554.386746,
                    "p99": 1554.386746,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2306.1106689999997,
                    "min": 2206.179429,
                    "p50": 2286.366023,
                    "p95": 2306.1106689999997,
                    "p99": 2306.1106689999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 183.82752499999998,
                    "min": 147.396675,
                    "p50": 172.118142,
                    "p95": 183.82752499999998,
                    "p99": 183.82752499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.261109,
                    "min": 114.28952799999999,
                    "p50": 122.356708,
                    "p95": 139.261109,
                    "p99": 139.261109,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 310.529926,
                    "min": 191.920144,
                    "p50": 210.262675,
                    "p95": 310.529926,
                    "p99": 310.529926,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 358.60956899999996,
                    "min": 304.65655499999997,
                    "p50": 340.24568999999997,
                    "p95": 358.60956899999996,
                    "p99": 358.60956899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1124.315547,
                    "min": 1025.646317,
                    "p50": 1094.186277,
                    "p95": 1124.315547,
                    "p99": 1124.315547,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 497.79464299999995,
                    "min": 423.502933,
                    "p50": 455.529346,
                    "p95": 497.79464299999995,
                    "p99": 497.79464299999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 136.54688199999998,
                    "min": 128.182731,
                    "p50": 133.958945,
                    "p95": 136.54688199999998,
                    "p99": 136.54688199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.127668,
                    "min": 28.198656,
                    "p50": 52.806306,
                    "p95": 61.127668,
                    "p99": 61.127668,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 594.0453289999999,
                    "min": 511.8076,
                    "p50": 563.0440689999999,
                    "p95": 594.0453289999999,
                    "p99": 594.0453289999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.049799,
                    "min": 97.324376,
                    "p50": 107.66600799999999,
                    "p95": 137.049799,
                    "p99": 137.049799,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 180.160094,
                    "min": 86.510759,
                    "p50": 108.67053899999999,
                    "p95": 180.160094,
                    "p99": 180.160094,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 148.11362699999998,
                    "min": 113.875253,
                    "p50": 117.696659,
                    "p95": 148.11362699999998,
                    "p99": 148.11362699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 255.44484699999998,
                    "min": 165.535409,
                    "p50": 203.426809,
                    "p95": 255.44484699999998,
                    "p99": 255.44484699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 121.454386,
                    "min": 45.504908,
                    "p50": 86.735113,
                    "p95": 121.454386,
                    "p99": 121.454386,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 91.569116,
                    "min": 80.91934499999999,
                    "p50": 87.749003,
                    "p95": 91.569116,
                    "p99": 91.569116,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 211.576717,
                    "min": 128.988754,
                    "p50": 194.003225,
                    "p95": 211.576717,
                    "p99": 211.576717,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 182.07547599999998,
                    "min": 132.90267599999999,
                    "p50": 151.29411,
                    "p95": 182.07547599999998,
                    "p99": 182.07547599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.980587,
                    "min": 56.56055,
                    "p50": 70.602454,
                    "p95": 85.980587,
                    "p99": 85.980587,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 182.12704499999998,
                    "min": 117.46828599999999,
                    "p50": 178.35018499999998,
                    "p95": 182.12704499999998,
                    "p99": 182.12704499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2736.114186,
                    "min": 2643.550267,
                    "p50": 2698.249379,
                    "p95": 2736.114186,
                    "p99": 2736.114186,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1147.138505,
                    "min": 1052.95949,
                    "p50": 1109.996752,
                    "p95": 1147.138505,
                    "p99": 1147.138505,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 853.38155,
                    "min": 797.572237,
                    "p50": 816.398567,
                    "p95": 853.38155,
                    "p99": 853.38155,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1899.645562,
                    "min": 1831.107685,
                    "p50": 1874.8391809999998,
                    "p95": 1899.645562,
                    "p99": 1899.645562,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1303.179529,
                    "min": 1231.2624939999998,
                    "p50": 1253.8535709999999,
                    "p95": 1303.179529,
                    "p99": 1303.179529,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6188.929539,
                    "min": 6021.790462999999,
                    "p50": 6045.4236009999995,
                    "p95": 6188.929539,
                    "p99": 6188.929539,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1720.700263,
                    "min": 1659.928375,
                    "p50": 1690.148931,
                    "p95": 1720.700263,
                    "p99": 1720.700263,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1001.228843,
                    "min": 923.189544,
                    "p50": 940.279062,
                    "p95": 1001.228843,
                    "p99": 1001.228843,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2010.4502439999999,
                    "min": 1958.916712,
                    "p50": 2000.2631179999998,
                    "p95": 2010.4502439999999,
                    "p99": 2010.4502439999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4587.332307,
                    "min": 4496.284552,
                    "p50": 4556.899311,
                    "p95": 4587.332307,
                    "p99": 4587.332307,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2394.653002,
                    "min": 2255.1682889999997,
                    "p50": 2301.989655,
                    "p95": 2394.653002,
                    "p99": 2394.653002,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3107.886052,
                    "min": 2991.166268,
                    "p50": 3057.0345389999998,
                    "p95": 3107.886052,
                    "p99": 3107.886052,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 511.37303199999997,
                    "min": 459.315113,
                    "p50": 489.72070199999996,
                    "p95": 511.37303199999997,
                    "p99": 511.37303199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2195.046125,
                    "min": 2103.781011,
                    "p50": 2166.265783,
                    "p95": 2195.046125,
                    "p99": 2195.046125,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 669.5003419999999,
                    "min": 626.862923,
                    "p50": 642.3104969999999,
                    "p95": 669.5003419999999,
                    "p99": 669.5003419999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1550.1314639999998,
                    "min": 1498.206647,
                    "p50": 1541.180642,
                    "p95": 1550.1314639999998,
                    "p99": 1550.1314639999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1451.9195849999999,
                    "min": 1353.56311,
                    "p50": 1389.407289,
                    "p95": 1451.9195849999999,
                    "p99": 1451.9195849999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2324.7279209999997,
                    "min": 2263.861853,
                    "p50": 2286.7444689999998,
                    "p95": 2324.7279209999997,
                    "p99": 2324.7279209999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 687.0211939999999,
                    "min": 606.1127779999999,
                    "p50": 649.958367,
                    "p95": 687.0211939999999,
                    "p99": 687.0211939999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1463.28765,
                    "min": 1380.292269,
                    "p50": 1424.211765,
                    "p95": 1463.28765,
                    "p99": 1463.28765,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2137.34517,
                    "min": 1979.858062,
                    "p50": 2016.6944369999999,
                    "p95": 2137.34517,
                    "p99": 2137.34517,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1631.920514,
                    "min": 1533.4211719999998,
                    "p50": 1565.045486,
                    "p95": 1631.920514,
                    "p99": 1631.920514,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1751.3260169999999,
                    "min": 1674.2261159999998,
                    "p50": 1692.1933279999998,
                    "p95": 1751.3260169999999,
                    "p99": 1751.3260169999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3090.183998,
                    "min": 3020.192908,
                    "p50": 3067.394229,
                    "p95": 3090.183998,
                    "p99": 3090.183998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4603.9544559999995,
                    "min": 4533.925705,
                    "p50": 4582.510008,
                    "p95": 4603.9544559999995,
                    "p99": 4603.9544559999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1875.55972,
                    "min": 1814.6413229999998,
                    "p50": 1859.286717,
                    "p95": 1875.55972,
                    "p99": 1875.55972,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 804.818946,
                    "min": 780.5272759999999,
                    "p50": 793.012899,
                    "p95": 804.818946,
                    "p99": 804.818946,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 498.90948699999996,
                    "min": 471.57559999999995,
                    "p50": 488.688967,
                    "p95": 498.90948699999996,
                    "p99": 498.90948699999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 985.761526,
                    "min": 926.1807249999999,
                    "p50": 941.6124699999999,
                    "p95": 985.761526,
                    "p99": 985.761526,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2720.3114229999996,
                    "min": 2627.021158,
                    "p50": 2673.738669,
                    "p95": 2720.3114229999996,
                    "p99": 2720.3114229999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1117.920874,
                    "min": 1078.556261,
                    "p50": 1095.593586,
                    "p95": 1117.920874,
                    "p99": 1117.920874,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2186.753889,
                    "min": 2129.350073,
                    "p50": 2160.48981,
                    "p95": 2186.753889,
                    "p99": 2186.753889,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1308.532297,
                    "min": 1211.728537,
                    "p50": 1234.5760989999999,
                    "p95": 1308.532297,
                    "p99": 1308.532297,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1399.992241,
                    "min": 1308.595746,
                    "p50": 1370.566093,
                    "p95": 1399.992241,
                    "p99": 1399.992241,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 235.712109,
                    "min": 172.526603,
                    "p50": 196.063682,
                    "p95": 235.712109,
                    "p99": 235.712109,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 727.029515,
                    "min": 643.824223,
                    "p50": 711.088188,
                    "p95": 727.029515,
                    "p99": 727.029515,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 191.29666699999999,
                    "min": 96.309393,
                    "p50": 119.742155,
                    "p95": 191.29666699999999,
                    "p99": 191.29666699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 106.07046799999999,
                    "min": 73.587746,
                    "p50": 84.62195,
                    "p95": 106.07046799999999,
                    "p99": 106.07046799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 237.60609699999998,
                    "min": 144.047417,
                    "p50": 182.452819,
                    "p95": 237.60609699999998,
                    "p99": 237.60609699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 598.413383,
                    "min": 458.95075499999996,
                    "p50": 550.871048,
                    "p95": 598.413383,
                    "p99": 598.413383,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 315.671635,
                    "min": 207.78779799999998,
                    "p50": 220.72430899999998,
                    "p95": 315.671635,
                    "p99": 315.671635,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 256.590209,
                    "min": 185.571438,
                    "p50": 209.98388699999998,
                    "p95": 256.590209,
                    "p99": 256.590209,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 293.684028,
                    "min": 221.950887,
                    "p50": 251.428147,
                    "p95": 293.684028,
                    "p99": 293.684028,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.794588,
                    "min": 58.460454,
                    "p50": 96.135571,
                    "p95": 149.794588,
                    "p99": 149.794588,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 201.008263,
                    "min": 141.22286599999998,
                    "p50": 163.958629,
                    "p95": 201.008263,
                    "p99": 201.008263,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 87.00114599999999,
                    "min": 63.941694999999996,
                    "p50": 68.853279,
                    "p95": 87.00114599999999,
                    "p99": 87.00114599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 164.49354599999998,
                    "min": 114.502192,
                    "p50": 132.588371,
                    "p95": 164.49354599999998,
                    "p99": 164.49354599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 120.16050899999999,
                    "min": 93.066678,
                    "p50": 108.431328,
                    "p95": 120.16050899999999,
                    "p99": 120.16050899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 155.403087,
                    "min": 133.25634399999998,
                    "p50": 142.968962,
                    "p95": 155.403087,
                    "p99": 155.403087,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 211.661205,
                    "min": 149.461544,
                    "p50": 179.947049,
                    "p95": 211.661205,
                    "p99": 211.661205,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 444.166342,
                    "min": 372.87288,
                    "p50": 386.65365499999996,
                    "p95": 444.166342,
                    "p99": 444.166342,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 378.594839,
                    "min": 259.127368,
                    "p50": 301.689978,
                    "p95": 378.594839,
                    "p99": 378.594839,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.97603699999999,
                    "min": 59.102663,
                    "p50": 80.358898,
                    "p95": 103.97603699999999,
                    "p99": 103.97603699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 407.39639999999997,
                    "min": 340.275823,
                    "p50": 373.032486,
                    "p95": 407.39639999999997,
                    "p99": 407.39639999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 342.21066099999996,
                    "min": 235.92189199999999,
                    "p50": 311.80302,
                    "p95": 342.21066099999996,
                    "p99": 342.21066099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 241.202428,
                    "min": 177.33954599999998,
                    "p50": 214.599418,
                    "p95": 241.202428,
                    "p99": 241.202428,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 145.21653799999999,
                    "min": 94.76459799999999,
                    "p50": 108.272168,
                    "p95": 145.21653799999999,
                    "p99": 145.21653799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 986.549323,
                    "min": 857.866574,
                    "p50": 956.6452969999999,
                    "p95": 986.549323,
                    "p99": 986.549323,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 513.318446,
                    "min": 430.876225,
                    "p50": 454.836234,
                    "p95": 513.318446,
                    "p99": 513.318446,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 151.610493,
                    "min": 108.235799,
                    "p50": 121.401877,
                    "p95": 151.610493,
                    "p99": 151.610493,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 174.129685,
                    "min": 99.59552599999999,
                    "p50": 141.79948299999998,
                    "p95": 174.129685,
                    "p99": 174.129685,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 135.45837,
                    "min": 60.792576999999994,
                    "p50": 94.88809499999999,
                    "p95": 135.45837,
                    "p99": 135.45837,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 128.333477,
                    "min": 66.73225,
                    "p50": 101.66107,
                    "p95": 128.333477,
                    "p99": 128.333477,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 92.37861199999999,
                    "min": 29.469223,
                    "p50": 58.124435,
                    "p95": 92.37861199999999,
                    "p99": 92.37861199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 211.963559,
                    "min": 123.91775299999999,
                    "p50": 190.956088,
                    "p95": 211.963559,
                    "p99": 211.963559,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 133.095505,
                    "min": 103.094402,
                    "p50": 117.63071199999999,
                    "p95": 133.095505,
                    "p99": 133.095505,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 199.21710099999999,
                    "min": 125.00141199999999,
                    "p50": 148.575221,
                    "p95": 199.21710099999999,
                    "p99": 199.21710099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 179.919098,
                    "min": 86.291349,
                    "p50": 90.534544,
                    "p95": 179.919098,
                    "p99": 179.919098,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 202.05226299999998,
                    "min": 121.60122199999999,
                    "p50": 135.070291,
                    "p95": 202.05226299999998,
                    "p99": 202.05226299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 108.22171,
                    "min": 41.64521,
                    "p50": 69.850415,
                    "p95": 108.22171,
                    "p99": 108.22171,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 93.003878,
                    "min": 24.084336,
                    "p50": 53.655570999999995,
                    "p95": 93.003878,
                    "p99": 93.003878,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 293.41927499999997,
                    "min": 230.802131,
                    "p50": 270.578415,
                    "p95": 293.41927499999997,
                    "p99": 293.41927499999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 182.641112,
                    "min": 92.11176999999999,
                    "p50": 126.975433,
                    "p95": 182.641112,
                    "p99": 182.641112,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 378.811711,
                    "min": 264.825376,
                    "p50": 307.732885,
                    "p95": 378.811711,
                    "p99": 378.811711,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 170.311874,
                    "min": 114.009684,
                    "p50": 127.782844,
                    "p95": 170.311874,
                    "p99": 170.311874,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.17029699999999,
                    "min": 70.533874,
                    "p50": 105.844466,
                    "p95": 123.17029699999999,
                    "p99": 123.17029699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 116.707515,
                    "min": 71.383978,
                    "p50": 84.572102,
                    "p95": 116.707515,
                    "p99": 116.707515,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 269.892367,
                    "min": 191.52273399999999,
                    "p50": 213.028075,
                    "p95": 269.892367,
                    "p99": 269.892367,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 206.617394,
                    "min": 144.552415,
                    "p50": 176.894298,
                    "p95": 206.617394,
                    "p99": 206.617394,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 443.366487,
                    "min": 386.871427,
                    "p50": 414.475486,
                    "p95": 443.366487,
                    "p99": 443.366487,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 202.855934,
                    "min": 106.658971,
                    "p50": 174.889355,
                    "p95": 202.855934,
                    "p99": 202.855934,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1412.1642689999999,
                    "min": 1287.810101,
                    "p50": 1313.761385,
                    "p95": 1412.1642689999999,
                    "p99": 1412.1642689999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 102.43343999999999,
                    "min": 89.50329599999999,
                    "p50": 94.424998,
                    "p95": 102.43343999999999,
                    "p99": 102.43343999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 234.898617,
                    "min": 178.429659,
                    "p50": 211.85708499999998,
                    "p95": 234.898617,
                    "p99": 234.898617,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 207.952516,
                    "min": 157.443671,
                    "p50": 177.36979499999998,
                    "p95": 207.952516,
                    "p99": 207.952516,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 575.052832,
                    "min": 452.74634899999995,
                    "p50": 522.8737659999999,
                    "p95": 575.052832,
                    "p99": 575.052832,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.497385,
                    "min": 61.088362999999994,
                    "p50": 68.228132,
                    "p95": 70.497385,
                    "p99": 70.497385,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 255.05587699999998,
                    "min": 203.343965,
                    "p50": 215.311838,
                    "p95": 255.05587699999998,
                    "p99": 255.05587699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 225.651087,
                    "min": 130.433478,
                    "p50": 172.724371,
                    "p95": 225.651087,
                    "p99": 225.651087,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 713.535683,
                    "min": 607.689489,
                    "p50": 665.7720429999999,
                    "p95": 713.535683,
                    "p99": 713.535683,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 965.284602,
                    "min": 938.105116,
                    "p50": 949.8953019999999,
                    "p95": 965.284602,
                    "p99": 965.284602,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 830.332406,
                    "min": 790.3809669999999,
                    "p50": 815.255046,
                    "p95": 830.332406,
                    "p99": 830.332406,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1220.918629,
                    "min": 1190.307065,
                    "p50": 1206.507783,
                    "p95": 1220.918629,
                    "p99": 1220.918629,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 428.934751,
                    "min": 407.384752,
                    "p50": 419.109599,
                    "p95": 428.934751,
                    "p99": 428.934751,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 554.327355,
                    "min": 514.156401,
                    "p50": 550.163508,
                    "p95": 554.327355,
                    "p99": 554.327355,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1083.406408,
                    "min": 1058.667226,
                    "p50": 1069.238742,
                    "p95": 1083.406408,
                    "p99": 1083.406408,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 692.9611,
                    "min": 643.8670549999999,
                    "p50": 680.229885,
                    "p95": 692.9611,
                    "p99": 692.9611,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1560.3310239999998,
                    "min": 1463.3460719999998,
                    "p50": 1496.676653,
                    "p95": 1560.3310239999998,
                    "p99": 1560.3310239999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 491.11037999999996,
                    "min": 433.96277,
                    "p50": 470.74911399999996,
                    "p95": 491.11037999999996,
                    "p99": 491.11037999999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1247.081843,
                    "min": 1168.1151849999999,
                    "p50": 1192.523293,
                    "p95": 1247.081843,
                    "p99": 1247.081843,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 942.993581,
                    "min": 881.274832,
                    "p50": 899.493087,
                    "p95": 942.993581,
                    "p99": 942.993581,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1070.450877,
                    "min": 1034.2170119999998,
                    "p50": 1044.551501,
                    "p95": 1070.450877,
                    "p99": 1070.450877,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1363.0052839999998,
                    "min": 1309.489024,
                    "p50": 1343.239587,
                    "p95": 1363.0052839999998,
                    "p99": 1363.0052839999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 630.121491,
                    "min": 595.192562,
                    "p50": 618.076511,
                    "p95": 630.121491,
                    "p99": 630.121491,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 771.923956,
                    "min": 741.0370489999999,
                    "p50": 767.1847,
                    "p95": 771.923956,
                    "p99": 771.923956,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1134.750429,
                    "min": 1002.936346,
                    "p50": 1061.650342,
                    "p95": 1134.750429,
                    "p99": 1134.750429,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1961.261145,
                    "min": 1733.7249299999999,
                    "p50": 1839.2115999999999,
                    "p95": 1961.261145,
                    "p99": 1961.261145,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2529.597841,
                    "min": 2232.63326,
                    "p50": 2351.7460379999998,
                    "p95": 2529.597841,
                    "p99": 2529.597841,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1722.805547,
                    "min": 1452.9797569999998,
                    "p50": 1610.747472,
                    "p95": 1722.805547,
                    "p99": 1722.805547,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3340.770744,
                    "min": 2888.9897739999997,
                    "p50": 3099.103104,
                    "p95": 3340.770744,
                    "p99": 3340.770744,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 857.080668,
                    "min": 749.5771149999999,
                    "p50": 799.4439229999999,
                    "p95": 857.080668,
                    "p99": 857.080668,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2775.4852539999997,
                    "min": 2411.55852,
                    "p50": 2631.561359,
                    "p95": 2775.4852539999997,
                    "p99": 2775.4852539999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2232.8897629999997,
                    "min": 1924.587976,
                    "p50": 2101.080592,
                    "p95": 2232.8897629999997,
                    "p99": 2232.8897629999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1407.2398759999999,
                    "min": 1205.639402,
                    "p50": 1305.627649,
                    "p95": 1407.2398759999999,
                    "p99": 1407.2398759999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3068.357684,
                    "min": 2622.4775369999998,
                    "p50": 2901.341962,
                    "p95": 3068.357684,
                    "p99": 3068.357684,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 833.076473,
                    "min": 819.948866,
                    "p50": 826.2856489999999,
                    "p95": 833.076473,
                    "p99": 833.076473,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1113.978932,
                    "min": 1074.98198,
                    "p50": 1092.009791,
                    "p95": 1113.978932,
                    "p99": 1113.978932,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 303.890604,
                    "min": 264.65655599999997,
                    "p50": 299.72493199999997,
                    "p95": 303.890604,
                    "p99": 303.890604,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 571.559429,
                    "min": 540.961853,
                    "p50": 557.306556,
                    "p95": 571.559429,
                    "p99": 571.559429,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 962.461458,
                    "min": 933.7669129999999,
                    "p50": 951.754792,
                    "p95": 962.461458,
                    "p99": 962.461458,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 438.034476,
                    "min": 397.253816,
                    "p50": 430.74591399999997,
                    "p95": 438.034476,
                    "p99": 438.034476,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 701.377137,
                    "min": 676.503115,
                    "p50": 691.339874,
                    "p95": 701.377137,
                    "p99": 701.377137,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2386.694784,
                    "min": 2080.52875,
                    "p50": 2148.273766,
                    "p95": 2386.694784,
                    "p99": 2386.694784,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1196.8681609999999,
                    "min": 1057.6381629999998,
                    "p50": 1112.867239,
                    "p95": 1196.8681609999999,
                    "p99": 1196.8681609999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 698.472225,
                    "min": 615.123915,
                    "p50": 648.891007,
                    "p95": 698.472225,
                    "p99": 698.472225,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2146.200501,
                    "min": 1911.0804289999999,
                    "p50": 2001.07421,
                    "p95": 2146.200501,
                    "p99": 2146.200501,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1698.1886089999998,
                    "min": 1499.014307,
                    "p50": 1552.5061429999998,
                    "p95": 1698.1886089999998,
                    "p99": 1698.1886089999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1331.9605769999998,
                    "min": 1208.6906239999998,
                    "p50": 1268.650443,
                    "p95": 1331.9605769999998,
                    "p99": 1331.9605769999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1971.665499,
                    "min": 1811.04106,
                    "p50": 1863.456354,
                    "p95": 1971.665499,
                    "p99": 1971.665499,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 858.172818,
                    "min": 764.24761,
                    "p50": 796.784599,
                    "p95": 858.172818,
                    "p99": 858.172818,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 529.169147,
                    "min": 452.20930699999997,
                    "p50": 494.463008,
                    "p95": 529.169147,
                    "p99": 529.169147,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2905.996983,
                    "min": 2631.5839189999997,
                    "p50": 2708.530346,
                    "p95": 2905.996983,
                    "p99": 2905.996983,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2482.300369,
                    "min": 2247.785849,
                    "p50": 2322.876743,
                    "p95": 2482.300369,
                    "p99": 2482.300369,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3304.796505,
                    "min": 2967.463946,
                    "p50": 3057.813573,
                    "p95": 3304.796505,
                    "p99": 3304.796505,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1499.872885,
                    "min": 1376.282485,
                    "p50": 1389.29349,
                    "p95": 1499.872885,
                    "p99": 1499.872885,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1844.566501,
                    "min": 1668.963225,
                    "p50": 1737.358236,
                    "p95": 1844.566501,
                    "p99": 1844.566501,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1026.792021,
                    "min": 926.515804,
                    "p50": 950.152846,
                    "p95": 1026.792021,
                    "p99": 1026.792021,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2242.7980239999997,
                    "min": 2036.360475,
                    "p50": 2084.5117259999997,
                    "p95": 2242.7980239999997,
                    "p99": 2242.7980239999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 881.387567,
                    "min": 793.340885,
                    "p50": 830.2406179999999,
                    "p95": 881.387567,
                    "p99": 881.387567,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2550.006347,
                    "min": 2360.516902,
                    "p50": 2427.5410629999997,
                    "p95": 2550.006347,
                    "p99": 2550.006347,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1739.0503589999998,
                    "min": 1582.4153589999999,
                    "p50": 1616.531648,
                    "p95": 1739.0503589999998,
                    "p99": 1739.0503589999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 711.9305019999999,
                    "min": 621.58557,
                    "p50": 668.5032659999999,
                    "p95": 711.9305019999999,
                    "p99": 711.9305019999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1057.1024069999999,
                    "min": 961.567008,
                    "p50": 982.104209,
                    "p95": 1057.1024069999999,
                    "p99": 1057.1024069999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2072.477609,
                    "min": 1883.3804169999999,
                    "p50": 1944.984477,
                    "p95": 2072.477609,
                    "p99": 2072.477609,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2409.950935,
                    "min": 2175.733375,
                    "p50": 2266.687865,
                    "p95": 2409.950935,
                    "p99": 2409.950935,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3441.4163399999998,
                    "min": 3121.310236,
                    "p50": 3208.5909189999998,
                    "p95": 3441.4163399999998,
                    "p99": 3441.4163399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1206.860227,
                    "min": 1106.618963,
                    "p50": 1146.564465,
                    "p95": 1206.860227,
                    "p99": 1206.860227,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2963.8071959999997,
                    "min": 2756.6310169999997,
                    "p50": 2804.011396,
                    "p95": 2963.8071959999997,
                    "p99": 2963.8071959999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1383.7280919999998,
                    "min": 1281.693431,
                    "p50": 1320.0184629999999,
                    "p95": 1383.7280919999998,
                    "p99": 1383.7280919999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1898.496298,
                    "min": 1734.808032,
                    "p50": 1813.02335,
                    "p95": 1898.496298,
                    "p99": 1898.496298,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1557.2128699999998,
                    "min": 1424.805638,
                    "p50": 1471.540523,
                    "p95": 1557.2128699999998,
                    "p99": 1557.2128699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 545.347208,
                    "min": 506.83987299999995,
                    "p50": 518.047358,
                    "p95": 545.347208,
                    "p99": 545.347208,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 871.108089,
                    "min": 741.627347,
                    "p50": 800.4113269999999,
                    "p95": 871.108089,
                    "p99": 871.108089,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1329.6795869999999,
                    "min": 1224.398936,
                    "p50": 1266.1411819999998,
                    "p95": 1329.6795869999999,
                    "p99": 1329.6795869999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1175.5290889999999,
                    "min": 1047.553524,
                    "p50": 1113.5962,
                    "p95": 1175.5290889999999,
                    "p99": 1175.5290889999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2910.370865,
                    "min": 2645.871525,
                    "p50": 2716.791882,
                    "p95": 2910.370865,
                    "p99": 2910.370865,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2506.7135599999997,
                    "min": 2255.652961,
                    "p50": 2334.364906,
                    "p95": 2506.7135599999997,
                    "p99": 2506.7135599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 534.135843,
                    "min": 458.59612599999997,
                    "p50": 493.73889199999996,
                    "p95": 534.135843,
                    "p99": 534.135843,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1837.282442,
                    "min": 1676.1831339999999,
                    "p50": 1727.354591,
                    "p95": 1837.282442,
                    "p99": 1837.282442,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1685.4488,
                    "min": 1515.752305,
                    "p50": 1562.212454,
                    "p95": 1685.4488,
                    "p99": 1685.4488,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 693.2796999999999,
                    "min": 624.472492,
                    "p50": 648.8156389999999,
                    "p95": 693.2796999999999,
                    "p99": 693.2796999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2024.48175,
                    "min": 1811.441053,
                    "p50": 1892.862338,
                    "p95": 2024.48175,
                    "p99": 2024.48175,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1520.8292529999999,
                    "min": 1376.589628,
                    "p50": 1406.3212039999999,
                    "p95": 1520.8292529999999,
                    "p99": 1520.8292529999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3331.273183,
                    "min": 2986.6025059999997,
                    "p50": 3071.942529,
                    "p95": 3331.273183,
                    "p99": 3331.273183,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2333.9102,
                    "min": 2071.558924,
                    "p50": 2195.384113,
                    "p95": 2333.9102,
                    "p99": 2333.9102,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1028.439931,
                    "min": 936.1343029999999,
                    "p50": 967.0482129999999,
                    "p95": 1028.439931,
                    "p99": 1028.439931,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2187.307808,
                    "min": 1975.672738,
                    "p50": 2033.4171509999999,
                    "p95": 2187.307808,
                    "p99": 2187.307808,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3294.671789,
                    "min": 2989.0464549999997,
                    "p50": 3107.5436729999997,
                    "p95": 3294.671789,
                    "p99": 3294.671789,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 687.7863209999999,
                    "min": 629.471732,
                    "p50": 654.797455,
                    "p95": 687.7863209999999,
                    "p99": 687.7863209999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1498.367231,
                    "min": 1362.0565259999998,
                    "p50": 1400.208993,
                    "p95": 1498.367231,
                    "p99": 1498.367231,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1658.2468299999998,
                    "min": 1468.933773,
                    "p50": 1554.8232169999999,
                    "p95": 1658.2468299999998,
                    "p99": 1658.2468299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1821.955268,
                    "min": 1638.922947,
                    "p50": 1745.9512459999999,
                    "p95": 1821.955268,
                    "p99": 1821.955268,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2871.968368,
                    "min": 2581.163224,
                    "p50": 2707.55766,
                    "p95": 2871.968368,
                    "p99": 2871.968368,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2002.8396539999999,
                    "min": 1809.931636,
                    "p50": 1868.3424069999999,
                    "p95": 2002.8396539999999,
                    "p99": 2002.8396539999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2167.484695,
                    "min": 1954.48471,
                    "p50": 2019.556151,
                    "p95": 2167.484695,
                    "p99": 2167.484695,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 528.204584,
                    "min": 486.106292,
                    "p50": 492.408072,
                    "p95": 528.204584,
                    "p99": 528.204584,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1020.3163659999999,
                    "min": 918.935897,
                    "p50": 950.01077,
                    "p95": 1020.3163659999999,
                    "p99": 1020.3163659999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 858.958003,
                    "min": 775.340929,
                    "p50": 802.5399689999999,
                    "p95": 858.958003,
                    "p99": 858.958003,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2476.315427,
                    "min": 2253.133421,
                    "p50": 2302.235624,
                    "p95": 2476.315427,
                    "p99": 2476.315427,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1352.9513479999998,
                    "min": 1222.5365239999999,
                    "p50": 1247.848284,
                    "p95": 1352.9513479999998,
                    "p99": 1352.9513479999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2331.517276,
                    "min": 2100.8558829999997,
                    "p50": 2158.2970809999997,
                    "p95": 2331.517276,
                    "p99": 2331.517276,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1176.606325,
                    "min": 1080.397477,
                    "p50": 1100.404482,
                    "p95": 1176.606325,
                    "p99": 1176.606325,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 833.38919,
                    "min": 775.5681129999999,
                    "p50": 792.0866679999999,
                    "p95": 833.38919,
                    "p99": 833.38919,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 220.374485,
                    "min": 197.798214,
                    "p50": 201.628922,
                    "p95": 220.374485,
                    "p99": 220.374485,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4443.077693,
                    "min": 4012.645728,
                    "p50": 4118.551574,
                    "p95": 4443.077693,
                    "p99": 4443.077693,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 921.419553,
                    "min": 834.114873,
                    "p50": 871.195604,
                    "p95": 921.419553,
                    "p99": 921.419553,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1359.616026,
                    "min": 1233.6696379999998,
                    "p50": 1264.963415,
                    "p95": 1359.616026,
                    "p99": 1359.616026,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 483.746918,
                    "min": 407.280716,
                    "p50": 448.909717,
                    "p95": 483.746918,
                    "p99": 483.746918,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1812.591443,
                    "min": 1629.7045859999998,
                    "p50": 1673.019153,
                    "p95": 1812.591443,
                    "p99": 1812.591443,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 301.145012,
                    "min": 261.20829499999996,
                    "p50": 283.438883,
                    "p95": 301.145012,
                    "p99": 301.145012,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 385.13197499999995,
                    "min": 326.049068,
                    "p50": 365.632788,
                    "p95": 385.13197499999995,
                    "p99": 385.13197499999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 179.971788,
                    "min": 150.91629799999998,
                    "p50": 161.73720699999998,
                    "p95": 179.971788,
                    "p99": 179.971788,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.808696,
                    "min": 363.56607099999997,
                    "p50": 422.075826,
                    "p95": 435.808696,
                    "p99": 435.808696,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.56832299999996,
                    "min": 315.762494,
                    "p50": 326.973407,
                    "p95": 346.56832299999996,
                    "p99": 346.56832299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 526.349816,
                    "min": 474.86947399999997,
                    "p50": 496.7942,
                    "p95": 526.349816,
                    "p99": 526.349816,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 605.174775,
                    "min": 558.734277,
                    "p50": 571.272646,
                    "p95": 605.174775,
                    "p99": 605.174775,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 557.092447,
                    "min": 486.32471499999997,
                    "p50": 528.690304,
                    "p95": 557.092447,
                    "p99": 557.092447,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2237.166768,
                    "min": 2012.937538,
                    "p50": 2089.48565,
                    "p95": 2237.166768,
                    "p99": 2237.166768,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.54576399999996,
                    "min": 234.20650999999998,
                    "p50": 243.693006,
                    "p95": 258.54576399999996,
                    "p99": 258.54576399999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 655.553332,
                    "min": 586.9626059999999,
                    "p50": 617.5661759999999,
                    "p95": 655.553332,
                    "p99": 655.553332,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 699.9924139999999,
                    "min": 609.797421,
                    "p50": 650.871532,
                    "p95": 699.9924139999999,
                    "p99": 699.9924139999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1257.440632,
                    "min": 1012.8164509999999,
                    "p50": 1069.9549849999999,
                    "p95": 1257.440632,
                    "p99": 1257.440632,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 281.79618,
                    "min": 231.500182,
                    "p50": 243.72294,
                    "p95": 281.79618,
                    "p99": 281.79618,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1644.1765349999998,
                    "min": 1346.390617,
                    "p50": 1382.0261859999998,
                    "p95": 1644.1765349999998,
                    "p99": 1644.1765349999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 862.326922,
                    "min": 695.913377,
                    "p50": 713.58408,
                    "p95": 862.326922,
                    "p99": 862.326922,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 610.292289,
                    "min": 494.537129,
                    "p50": 516.388468,
                    "p95": 610.292289,
                    "p99": 610.292289,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 651.912547,
                    "min": 524.651668,
                    "p50": 541.258142,
                    "p95": 651.912547,
                    "p99": 651.912547,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 572.276029,
                    "min": 455.99008699999996,
                    "p50": 476.90461,
                    "p95": 572.276029,
                    "p99": 572.276029,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 757.6007,
                    "min": 597.3707939999999,
                    "p50": 629.639809,
                    "p95": 757.6007,
                    "p99": 757.6007,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.647561,
                    "min": 130.672297,
                    "p50": 139.149173,
                    "p95": 169.647561,
                    "p99": 169.647561,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4086.500471,
                    "min": 3342.9923599999997,
                    "p50": 3401.838045,
                    "p95": 4086.500471,
                    "p99": 4086.500471,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.279284,
                    "min": 158.59144999999998,
                    "p50": 172.55728399999998,
                    "p95": 201.279284,
                    "p99": 201.279284,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 237.78963399999998,
                    "min": 203.599721,
                    "p50": 209.186502,
                    "p95": 237.78963399999998,
                    "p99": 237.78963399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 359.87487799999997,
                    "min": 302.607334,
                    "p50": 312.684756,
                    "p95": 359.87487799999997,
                    "p99": 359.87487799999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 531.32128,
                    "min": 393.550004,
                    "p50": 444.40143,
                    "p95": 531.32128,
                    "p99": 531.32128,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 404.407667,
                    "min": 323.76725899999997,
                    "p50": 347.90347399999996,
                    "p95": 404.407667,
                    "p99": 404.407667,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 490.238926,
                    "min": 403.123566,
                    "p50": 416.825993,
                    "p95": 490.238926,
                    "p99": 490.238926,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 323.179844,
                    "min": 268.02721299999996,
                    "p50": 273.801792,
                    "p95": 323.179844,
                    "p99": 323.179844,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 436.36248,
                    "min": 360.356338,
                    "p50": 376.80051599999996,
                    "p95": 436.36248,
                    "p99": 436.36248,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2084.165582,
                    "min": 1682.88015,
                    "p50": 1742.682251,
                    "p95": 2084.165582,
                    "p99": 2084.165582,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 609.25528,
                    "min": 547.49135,
                    "p50": 569.521385,
                    "p95": 609.25528,
                    "p99": 609.25528,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4410.074232999999,
                    "min": 3994.9646359999997,
                    "p50": 4139.591837,
                    "p95": 4410.074232999999,
                    "p99": 4410.074232999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 651.534039,
                    "min": 599.769536,
                    "p50": 605.406742,
                    "p95": 651.534039,
                    "p99": 651.534039,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 422.213039,
                    "min": 386.564165,
                    "p50": 407.079456,
                    "p95": 422.213039,
                    "p99": 422.213039,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 817.587079,
                    "min": 701.1056619999999,
                    "p50": 756.3434669999999,
                    "p95": 817.587079,
                    "p99": 817.587079,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 911.512515,
                    "min": 827.119837,
                    "p50": 841.261756,
                    "p95": 911.512515,
                    "p99": 911.512515,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.951059,
                    "min": 203.18856,
                    "p50": 238.696927,
                    "p95": 256.951059,
                    "p99": 256.951059,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 476.326299,
                    "min": 430.80082799999997,
                    "p50": 442.920327,
                    "p95": 476.326299,
                    "p99": 476.326299,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 347.76047,
                    "min": 281.572882,
                    "p50": 318.369674,
                    "p95": 347.76047,
                    "p99": 347.76047,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 702.50657,
                    "min": 610.758434,
                    "p50": 650.169815,
                    "p95": 702.50657,
                    "p99": 702.50657,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 566.7894279999999,
                    "min": 478.61758499999996,
                    "p50": 527.001233,
                    "p95": 566.7894279999999,
                    "p99": 566.7894279999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1792.4712789999999,
                    "min": 1606.864407,
                    "p50": 1686.931457,
                    "p95": 1792.4712789999999,
                    "p99": 1792.4712789999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1346.204697,
                    "min": 1231.35978,
                    "p50": 1265.0757919999999,
                    "p95": 1346.204697,
                    "p99": 1346.204697,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 520.391118,
                    "min": 466.09955399999996,
                    "p50": 489.75368399999996,
                    "p95": 520.391118,
                    "p99": 520.391118,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 171.395223,
                    "min": 151.65676399999998,
                    "p50": 161.842297,
                    "p95": 171.395223,
                    "p99": 171.395223,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 391.368535,
                    "min": 345.41743099999997,
                    "p50": 366.051882,
                    "p95": 391.368535,
                    "p99": 391.368535,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.13554299999998,
                    "min": 162.742771,
                    "p50": 202.36746499999998,
                    "p95": 215.13554299999998,
                    "p99": 215.13554299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 300.924878,
                    "min": 244.59766599999998,
                    "p50": 286.735664,
                    "p95": 300.924878,
                    "p99": 300.924878,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2254.34683,
                    "min": 2008.998502,
                    "p50": 2078.483257,
                    "p95": 2254.34683,
                    "p99": 2254.34683,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 505.27709699999997,
                    "min": 415.37260399999997,
                    "p50": 439.994731,
                    "p95": 505.27709699999997,
                    "p99": 505.27709699999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 336.520971,
                    "min": 251.294705,
                    "p50": 297.429558,
                    "p95": 336.520971,
                    "p99": 336.520971,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 208.699423,
                    "min": 180.695159,
                    "p50": 185.237965,
                    "p95": 208.699423,
                    "p99": 208.699423,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 379.269789,
                    "min": 289.227487,
                    "p50": 331.623047,
                    "p95": 379.269789,
                    "p99": 379.269789,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 891.766928,
                    "min": 731.672548,
                    "p50": 768.387569,
                    "p95": 891.766928,
                    "p99": 891.766928,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 164.472594,
                    "min": 141.700157,
                    "p50": 148.478487,
                    "p95": 164.472594,
                    "p99": 164.472594,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4282.787958,
                    "min": 3558.039101,
                    "p50": 3639.234599,
                    "p95": 4282.787958,
                    "p99": 4282.787958,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 779.395553,
                    "min": 649.7832199999999,
                    "p50": 676.228541,
                    "p95": 779.395553,
                    "p99": 779.395553,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 243.851888,
                    "min": 183.522592,
                    "p50": 217.23018199999999,
                    "p95": 243.851888,
                    "p99": 243.851888,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 466.548656,
                    "min": 370.294224,
                    "p50": 396.765973,
                    "p95": 466.548656,
                    "p99": 466.548656,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 627.846275,
                    "min": 497.040412,
                    "p50": 546.392105,
                    "p95": 627.846275,
                    "p99": 627.846275,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 277.422838,
                    "min": 249.167848,
                    "p50": 253.44448699999998,
                    "p95": 277.422838,
                    "p99": 277.422838,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 537.452742,
                    "min": 428.477285,
                    "p50": 475.29542799999996,
                    "p95": 537.452742,
                    "p99": 537.452742,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2157.868985,
                    "min": 1800.386943,
                    "p50": 1847.0890869999998,
                    "p95": 2157.868985,
                    "p99": 2157.868985,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1292.289544,
                    "min": 1083.5110889999999,
                    "p50": 1126.2869369999999,
                    "p95": 1292.289544,
                    "p99": 1292.289544,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 582.843987,
                    "min": 494.179104,
                    "p50": 506.167713,
                    "p95": 582.843987,
                    "p99": 582.843987,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 417.58408599999996,
                    "min": 346.558479,
                    "p50": 362.8394,
                    "p95": 417.58408599999996,
                    "p99": 417.58408599999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 670.875373,
                    "min": 541.477441,
                    "p50": 568.232711,
                    "p95": 670.875373,
                    "p99": 670.875373,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1721.549746,
                    "min": 1447.4878669999998,
                    "p50": 1496.8918959999999,
                    "p95": 1721.549746,
                    "p99": 1721.549746,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 368.147225,
                    "min": 302.755716,
                    "p50": 334.484338,
                    "p95": 368.147225,
                    "p99": 368.147225,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 650.201148,
                    "min": 546.091115,
                    "p50": 589.265894,
                    "p95": 650.201148,
                    "p99": 650.201148,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 533.4373459999999,
                    "min": 497.660108,
                    "p50": 513.642063,
                    "p95": 533.4373459999999,
                    "p99": 533.4373459999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.485488,
                    "min": 251.76453899999998,
                    "p50": 292.66659,
                    "p95": 323.485488,
                    "p99": 323.485488,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 976.37736,
                    "min": 871.7846569999999,
                    "p50": 903.323932,
                    "p95": 976.37736,
                    "p99": 976.37736,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 231.468968,
                    "min": 197.491783,
                    "p50": 207.03203,
                    "p95": 231.468968,
                    "p99": 231.468968,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 416.234285,
                    "min": 370.082075,
                    "p50": 378.015343,
                    "p95": 416.234285,
                    "p99": 416.234285,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 509.169359,
                    "min": 430.83509799999996,
                    "p50": 458.446195,
                    "p95": 509.169359,
                    "p99": 509.169359,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 716.7225219999999,
                    "min": 634.117245,
                    "p50": 675.023326,
                    "p95": 716.7225219999999,
                    "p99": 716.7225219999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1448.489947,
                    "min": 1278.597386,
                    "p50": 1332.7387959999999,
                    "p95": 1448.489947,
                    "p99": 1448.489947,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 607.5798209999999,
                    "min": 527.8837629999999,
                    "p50": 547.5669829999999,
                    "p95": 607.5798209999999,
                    "p99": 607.5798209999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 462.360979,
                    "min": 386.411292,
                    "p50": 422.594899,
                    "p95": 462.360979,
                    "p99": 462.360979,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 276.518562,
                    "min": 223.901649,
                    "p50": 250.92853599999998,
                    "p95": 276.518562,
                    "p99": 276.518562,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 697.825345,
                    "min": 608.067044,
                    "p50": 629.606144,
                    "p95": 697.825345,
                    "p99": 697.825345,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 860.42382,
                    "min": 758.323844,
                    "p50": 784.1145389999999,
                    "p95": 860.42382,
                    "p99": 860.42382,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1906.2946749999999,
                    "min": 1688.582643,
                    "p50": 1752.6656899999998,
                    "p95": 1906.2946749999999,
                    "p99": 1906.2946749999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2400.146919,
                    "min": 2098.873169,
                    "p50": 2166.695339,
                    "p95": 2400.146919,
                    "p99": 2400.146919,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4732.30434,
                    "min": 4130.711362,
                    "p50": 4308.259249,
                    "p95": 4732.30434,
                    "p99": 4732.30434,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 181.581413,
                    "min": 129.446601,
                    "p50": 166.84553599999998,
                    "p95": 181.581413,
                    "p99": 181.581413,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2215.63876,
                    "min": 2012.2681949999999,
                    "p50": 2072.6011399999998,
                    "p95": 2215.63876,
                    "p99": 2215.63876,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 609.341466,
                    "min": 546.1728069999999,
                    "p50": 568.54579,
                    "p95": 609.341466,
                    "p99": 609.341466,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 473.979445,
                    "min": 425.38356999999996,
                    "p50": 446.370953,
                    "p95": 473.979445,
                    "p99": 473.979445,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 696.118509,
                    "min": 616.21035,
                    "p50": 648.462783,
                    "p95": 696.118509,
                    "p99": 696.118509,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 338.17380499999996,
                    "min": 306.93357599999996,
                    "p50": 322.025587,
                    "p95": 338.17380499999996,
                    "p99": 338.17380499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.842658,
                    "min": 205.36368199999998,
                    "p50": 244.84233999999998,
                    "p95": 258.842658,
                    "p99": 258.842658,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.524915,
                    "min": 147.81866,
                    "p50": 164.45199,
                    "p95": 169.524915,
                    "p99": 169.524915,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 517.928308,
                    "min": 460.963559,
                    "p50": 486.12861699999996,
                    "p95": 517.928308,
                    "p99": 517.928308,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 802.529739,
                    "min": 728.9463979999999,
                    "p50": 749.429888,
                    "p95": 802.529739,
                    "p99": 802.529739,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 302.90576,
                    "min": 258.710742,
                    "p50": 289.049335,
                    "p95": 302.90576,
                    "p99": 302.90576,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 389.47049699999997,
                    "min": 349.360687,
                    "p50": 366.365683,
                    "p95": 389.47049699999997,
                    "p99": 389.47049699999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 650.839304,
                    "min": 589.230144,
                    "p50": 622.2283279999999,
                    "p95": 650.839304,
                    "p99": 650.839304,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1778.1630499999999,
                    "min": 1595.949138,
                    "p50": 1670.769316,
                    "p95": 1778.1630499999999,
                    "p99": 1778.1630499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 432.39363799999995,
                    "min": 387.69778299999996,
                    "p50": 406.156498,
                    "p95": 432.39363799999995,
                    "p99": 432.39363799999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 922.5962129999999,
                    "min": 829.047026,
                    "p50": 847.638211,
                    "p95": 922.5962129999999,
                    "p99": 922.5962129999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 559.013289,
                    "min": 480.335105,
                    "p50": 526.649593,
                    "p95": 559.013289,
                    "p99": 559.013289,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.222234,
                    "min": 160.173,
                    "p50": 198.519633,
                    "p95": 210.222234,
                    "p99": 210.222234,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1350.31855,
                    "min": 1212.252963,
                    "p50": 1257.188005,
                    "p95": 1350.31855,
                    "p99": 1350.31855,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 808.3379239999999,
                    "min": 694.1798319999999,
                    "p50": 760.2367849999999,
                    "p95": 808.3379239999999,
                    "p99": 808.3379239999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 622.527736,
                    "min": 556.9290139999999,
                    "p50": 576.8710189999999,
                    "p95": 622.527736,
                    "p99": 622.527736,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 999.8630999999999,
                    "min": 906.7723249999999,
                    "p50": 924.944658,
                    "p95": 999.8630999999999,
                    "p99": 999.8630999999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3910.1689629999996,
                    "min": 3500.698034,
                    "p50": 3575.4145599999997,
                    "p95": 3910.1689629999996,
                    "p99": 3910.1689629999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2554.9756829999997,
                    "min": 2280.129288,
                    "p50": 2335.7297209999997,
                    "p95": 2554.9756829999997,
                    "p99": 2554.9756829999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2973.8101309999997,
                    "min": 2602.605145,
                    "p50": 2725.5294879999997,
                    "p95": 2973.8101309999997,
                    "p99": 2973.8101309999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3412.791171,
                    "min": 3055.641924,
                    "p50": 3158.485658,
                    "p95": 3412.791171,
                    "p99": 3412.791171,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1782.813772,
                    "min": 1588.040982,
                    "p50": 1638.202809,
                    "p95": 1782.813772,
                    "p99": 1782.813772,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1208.039392,
                    "min": 1039.6138819999999,
                    "p50": 1108.765378,
                    "p95": 1208.039392,
                    "p99": 1208.039392,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1592.889379,
                    "min": 1385.645196,
                    "p50": 1467.47819,
                    "p95": 1592.889379,
                    "p99": 1592.889379,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1410.298963,
                    "min": 1250.913899,
                    "p50": 1297.2137559999999,
                    "p95": 1410.298963,
                    "p99": 1410.298963,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1970.6180969999998,
                    "min": 1757.608012,
                    "p50": 1835.823023,
                    "p95": 1970.6180969999998,
                    "p99": 1970.6180969999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2148.476847,
                    "min": 1946.2625799999998,
                    "p50": 1986.885961,
                    "p95": 2148.476847,
                    "p99": 2148.476847,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2730.845667,
                    "min": 2435.7760909999997,
                    "p50": 2507.8118609999997,
                    "p95": 2730.845667,
                    "p99": 2730.845667,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2375.252567,
                    "min": 2112.583506,
                    "p50": 2159.537442,
                    "p95": 2375.252567,
                    "p99": 2375.252567,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2177.310102,
                    "min": 1948.1976969999998,
                    "p50": 1999.573805,
                    "p95": 2177.310102,
                    "p99": 2177.310102,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2571.348502,
                    "min": 2282.8111719999997,
                    "p50": 2355.367297,
                    "p95": 2571.348502,
                    "p99": 2571.348502,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2746.749471,
                    "min": 2471.161682,
                    "p50": 2546.03235,
                    "p95": 2746.749471,
                    "p99": 2746.749471,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 819.849658,
                    "min": 712.031564,
                    "p50": 741.98948,
                    "p95": 819.849658,
                    "p99": 819.849658,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1004.3490009999999,
                    "min": 905.542826,
                    "p50": 929.9987279999999,
                    "p95": 1004.3490009999999,
                    "p99": 1004.3490009999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1389.916599,
                    "min": 1225.424106,
                    "p50": 1294.630373,
                    "p95": 1389.916599,
                    "p99": 1389.916599,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1197.4548829999999,
                    "min": 1052.446682,
                    "p50": 1097.839002,
                    "p95": 1197.4548829999999,
                    "p99": 1197.4548829999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2005.5136329999998,
                    "min": 1749.937128,
                    "p50": 1834.1161559999998,
                    "p95": 2005.5136329999998,
                    "p99": 2005.5136329999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 615.974885,
                    "min": 540.729275,
                    "p50": 568.1213,
                    "p95": 615.974885,
                    "p99": 615.974885,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1587.922891,
                    "min": 1423.934894,
                    "p50": 1469.8036949999998,
                    "p95": 1587.922891,
                    "p99": 1587.922891,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3424.931111,
                    "min": 3076.024826,
                    "p50": 3149.952437,
                    "p95": 3424.931111,
                    "p99": 3424.931111,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3907.3510309999997,
                    "min": 3458.268348,
                    "p50": 3593.822917,
                    "p95": 3907.3510309999997,
                    "p99": 3907.3510309999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2927.115043,
                    "min": 2641.889912,
                    "p50": 2698.17661,
                    "p95": 2927.115043,
                    "p99": 2927.115043,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1787.040489,
                    "min": 1585.8059289999999,
                    "p50": 1641.735297,
                    "p95": 1787.040489,
                    "p99": 1787.040489,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2370.015327,
                    "min": 2120.240695,
                    "p50": 2181.975842,
                    "p95": 2370.015327,
                    "p99": 2370.015327,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2634.31929,
                    "min": 2354.7836899999998,
                    "p50": 2424.59937,
                    "p95": 2634.31929,
                    "p99": 2634.31929,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2414.604018,
                    "min": 2181.501049,
                    "p50": 2238.248262,
                    "p95": 2414.604018,
                    "p99": 2414.604018,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2849.028268,
                    "min": 2508.934792,
                    "p50": 2595.76635,
                    "p95": 2849.028268,
                    "p99": 2849.028268,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3295.168807,
                    "min": 2924.328256,
                    "p50": 3018.442979,
                    "p95": 3295.168807,
                    "p99": 3295.168807,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2244.0025149999997,
                    "min": 1991.496504,
                    "p50": 2062.757775,
                    "p95": 2244.0025149999997,
                    "p99": 2244.0025149999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2055.3497549999997,
                    "min": 1837.8322229999999,
                    "p50": 1907.843874,
                    "p95": 2055.3497549999997,
                    "p99": 2055.3497549999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 594.669274,
                    "min": 499.133441,
                    "p50": 550.729712,
                    "p95": 594.669274,
                    "p99": 594.669274,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3733.039876,
                    "min": 3295.9125449999997,
                    "p50": 3498.9381089999997,
                    "p95": 3733.039876,
                    "p99": 3733.039876,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1873.6196909999999,
                    "min": 1669.493579,
                    "p50": 1732.445333,
                    "p95": 1873.6196909999999,
                    "p99": 1873.6196909999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1694.6107749999999,
                    "min": 1508.439081,
                    "p50": 1578.529255,
                    "p95": 1694.6107749999999,
                    "p99": 1694.6107749999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1140.702701,
                    "min": 1007.488393,
                    "p50": 1065.2977759999999,
                    "p95": 1140.702701,
                    "p99": 1140.702701,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1511.0716659999998,
                    "min": 1362.6314559999998,
                    "p50": 1380.426686,
                    "p95": 1511.0716659999998,
                    "p99": 1511.0716659999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1324.132829,
                    "min": 1176.3418669999999,
                    "p50": 1211.735567,
                    "p95": 1324.132829,
                    "p99": 1324.132829,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 772.323667,
                    "min": 699.891574,
                    "p50": 713.779845,
                    "p95": 772.323667,
                    "p99": 772.323667,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 958.50073,
                    "min": 849.0746809999999,
                    "p50": 883.105912,
                    "p95": 958.50073,
                    "p99": 958.50073,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2732.1767099999997,
                    "min": 2457.68552,
                    "p50": 2528.0649679999997,
                    "p95": 2732.1767099999997,
                    "p99": 2732.1767099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2920.33186,
                    "min": 2614.7025399999998,
                    "p50": 2663.501624,
                    "p95": 2920.33186,
                    "p99": 2920.33186,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2363.9217559999997,
                    "min": 2105.286816,
                    "p50": 2161.945663,
                    "p95": 2363.9217559999997,
                    "p99": 2363.9217559999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3451.789015,
                    "min": 3027.0580339999997,
                    "p50": 3169.479747,
                    "p95": 3451.789015,
                    "p99": 3451.789015,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 807.666972,
                    "min": 723.7401169999999,
                    "p50": 748.828903,
                    "p95": 807.666972,
                    "p99": 807.666972,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2164.729745,
                    "min": 1934.7726619999999,
                    "p50": 1980.301945,
                    "p95": 2164.729745,
                    "p99": 2164.729745,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3930.516116,
                    "min": 3458.991028,
                    "p50": 3611.143302,
                    "p95": 3930.516116,
                    "p99": 3930.516116,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1208.308546,
                    "min": 1064.056089,
                    "p50": 1108.126285,
                    "p95": 1208.308546,
                    "p99": 1208.308546,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1594.204086,
                    "min": 1385.378995,
                    "p50": 1454.970018,
                    "p95": 1594.204086,
                    "p99": 1594.204086,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1393.895158,
                    "min": 1241.428711,
                    "p50": 1283.239241,
                    "p95": 1393.895158,
                    "p99": 1393.895158,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1002.7213109999999,
                    "min": 900.596404,
                    "p50": 932.034058,
                    "p95": 1002.7213109999999,
                    "p99": 1002.7213109999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1789.03336,
                    "min": 1576.057695,
                    "p50": 1629.06658,
                    "p95": 1789.03336,
                    "p99": 1789.03336,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1988.47996,
                    "min": 1748.150981,
                    "p50": 1812.6117179999999,
                    "p95": 1988.47996,
                    "p99": 1988.47996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 615.904467,
                    "min": 550.5745969999999,
                    "p50": 569.04619,
                    "p95": 615.904467,
                    "p99": 615.904467,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2545.176693,
                    "min": 2263.8011469999997,
                    "p50": 2339.311093,
                    "p95": 2545.176693,
                    "p99": 2545.176693,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1616.061972,
                    "min": 1515.616037,
                    "p50": 1570.120418,
                    "p95": 1616.061972,
                    "p99": 1616.061972,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 984.368041,
                    "min": 929.44353,
                    "p50": 962.4147969999999,
                    "p95": 984.368041,
                    "p99": 984.368041,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1189.699729,
                    "min": 1127.152652,
                    "p50": 1143.7711709999999,
                    "p95": 1189.699729,
                    "p99": 1189.699729,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 765.307209,
                    "min": 734.3958759999999,
                    "p50": 743.112855,
                    "p95": 765.307209,
                    "p99": 765.307209,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 656.1074189999999,
                    "min": 631.968254,
                    "p50": 643.7385409999999,
                    "p95": 656.1074189999999,
                    "p99": 656.1074189999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1072.504407,
                    "min": 1020.77919,
                    "p50": 1043.248918,
                    "p95": 1072.504407,
                    "p99": 1072.504407,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 346.565187,
                    "min": 307.076279,
                    "p50": 339.704774,
                    "p95": 346.565187,
                    "p99": 346.565187,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 452.87456799999995,
                    "min": 434.240124,
                    "p50": 441.434214,
                    "p95": 452.87456799999995,
                    "p99": 452.87456799999995,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 870.8107309999999,
                    "min": 834.1767199999999,
                    "p50": 848.685219,
                    "p95": 870.8107309999999,
                    "p99": 870.8107309999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 558.995331,
                    "min": 506.15053,
                    "p50": 541.1687929999999,
                    "p95": 558.995331,
                    "p99": 558.995331,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2114.0883719999997,
                    "min": 2018.233313,
                    "p50": 2050.5119839999998,
                    "p95": 2114.0883719999997,
                    "p99": 2114.0883719999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1266.272645,
                    "min": 1224.8029179999999,
                    "p50": 1240.103367,
                    "p95": 1266.272645,
                    "p99": 1266.272645,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1863.26309,
                    "min": 1767.9707799999999,
                    "p50": 1802.800303,
                    "p95": 1863.26309,
                    "p99": 1863.26309,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1515.33907,
                    "min": 1436.5741309999999,
                    "p50": 1456.273739,
                    "p95": 1515.33907,
                    "p99": 1515.33907,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1366.766085,
                    "min": 1313.853876,
                    "p50": 1350.056779,
                    "p95": 1366.766085,
                    "p99": 1366.766085,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3151.703662,
                    "min": 3017.2848409999997,
                    "p50": 3056.667798,
                    "p95": 3151.703662,
                    "p99": 3151.703662,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2307.284812,
                    "min": 2075.829418,
                    "p50": 2128.728498,
                    "p95": 2307.284812,
                    "p99": 2307.284812,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1686.349593,
                    "min": 1551.0199599999999,
                    "p50": 1602.396192,
                    "p95": 1686.349593,
                    "p99": 1686.349593,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1999.820716,
                    "min": 1849.246745,
                    "p50": 1903.2585769999998,
                    "p95": 1999.820716,
                    "p99": 1999.820716,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3049.473242,
                    "min": 2836.9959,
                    "p50": 2912.73026,
                    "p95": 3049.473242,
                    "p99": 3049.473242,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2691.211831,
                    "min": 2482.9087019999997,
                    "p50": 2541.987882,
                    "p95": 2691.211831,
                    "p99": 2691.211831,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1851.8685719999999,
                    "min": 1702.807834,
                    "p50": 1761.2144919999998,
                    "p95": 1851.8685719999999,
                    "p99": 1851.8685719999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 492.172351,
                    "min": 436.375457,
                    "p50": 462.77425,
                    "p95": 492.172351,
                    "p99": 492.172351,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 643.4239339999999,
                    "min": 596.821506,
                    "p50": 604.684047,
                    "p95": 643.4239339999999,
                    "p99": 643.4239339999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1543.4756209999998,
                    "min": 1429.203242,
                    "p50": 1484.207216,
                    "p95": 1543.4756209999998,
                    "p99": 1543.4756209999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 937.3815529999999,
                    "min": 878.93954,
                    "p50": 893.437656,
                    "p95": 937.3815529999999,
                    "p99": 937.3815529999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1383.896571,
                    "min": 1294.552305,
                    "p50": 1329.4282759999999,
                    "p95": 1383.896571,
                    "p99": 1383.896571,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 800.712037,
                    "min": 711.1363339999999,
                    "p50": 753.366368,
                    "p95": 800.712037,
                    "p99": 800.712037,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2167.409643,
                    "min": 1971.6475799999998,
                    "p50": 2055.2739389999997,
                    "p95": 2167.409643,
                    "p99": 2167.409643,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1235.6164159999998,
                    "min": 1149.068739,
                    "p50": 1193.329892,
                    "p95": 1235.6164159999998,
                    "p99": 1235.6164159999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1101.1884,
                    "min": 989.048741,
                    "p50": 1037.45524,
                    "p95": 1101.1884,
                    "p99": 1101.1884,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1295.355108,
                    "min": 1207.803226,
                    "p50": 1283.028613,
                    "p95": 1295.355108,
                    "p99": 1295.355108,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 551.0505479999999,
                    "min": 511.408103,
                    "p50": 533.431128,
                    "p95": 551.0505479999999,
                    "p99": 551.0505479999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1055.9391249999999,
                    "min": 977.740916,
                    "p50": 1022.2916359999999,
                    "p95": 1055.9391249999999,
                    "p99": 1055.9391249999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 934.42054,
                    "min": 859.0360089999999,
                    "p50": 905.8196829999999,
                    "p95": 934.42054,
                    "p99": 934.42054,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 795.9065089999999,
                    "min": 710.077456,
                    "p50": 775.490695,
                    "p95": 795.9065089999999,
                    "p99": 795.9065089999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1958.828043,
                    "min": 1799.9095479999999,
                    "p50": 1887.8670089999998,
                    "p95": 1958.828043,
                    "p99": 1958.828043,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1683.709235,
                    "min": 1550.6356959999998,
                    "p50": 1625.05443,
                    "p95": 1683.709235,
                    "p99": 1683.709235,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2596.366852,
                    "min": 2378.151285,
                    "p50": 2492.030996,
                    "p95": 2596.366852,
                    "p99": 2596.366852,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3873.3574569999996,
                    "min": 3531.078529,
                    "p50": 3715.4100869999997,
                    "p95": 3873.3574569999996,
                    "p99": 3873.3574569999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1569.449918,
                    "min": 1436.367634,
                    "p50": 1495.3476449999998,
                    "p95": 1569.449918,
                    "p99": 1569.449918,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 686.023918,
                    "min": 625.500817,
                    "p50": 646.901662,
                    "p95": 686.023918,
                    "p99": 686.023918,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1478.302784,
                    "min": 1321.182327,
                    "p50": 1384.470435,
                    "p95": 1478.302784,
                    "p99": 1478.302784,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 426.53549899999996,
                    "min": 384.477797,
                    "p50": 408.73468499999996,
                    "p95": 426.53549899999996,
                    "p99": 426.53549899999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1855.331227,
                    "min": 1668.792808,
                    "p50": 1749.000468,
                    "p95": 1855.331227,
                    "p99": 1855.331227,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2301.88375,
                    "min": 2091.604653,
                    "p50": 2179.653939,
                    "p95": 2301.88375,
                    "p99": 2301.88375,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1180.043469,
                    "min": 1093.1719249999999,
                    "p50": 1137.422451,
                    "p95": 1180.043469,
                    "p99": 1180.043469,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2449.8526119999997,
                    "min": 2330.850109,
                    "p50": 2367.5212619999998,
                    "p95": 2449.8526119999997,
                    "p99": 2449.8526119999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 581.714627,
                    "min": 550.980101,
                    "p50": 565.152908,
                    "p95": 581.714627,
                    "p99": 581.714627,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 400.839303,
                    "min": 366.72119299999997,
                    "p50": 385.497237,
                    "p95": 400.839303,
                    "p99": 400.839303,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 762.384297,
                    "min": 695.7850649999999,
                    "p50": 727.016097,
                    "p95": 762.384297,
                    "p99": 762.384297,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 272.232469,
                    "min": 246.999752,
                    "p50": 269.52722,
                    "p95": 272.232469,
                    "p99": 272.232469,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1241.934499,
                    "min": 1174.027231,
                    "p50": 1205.34112,
                    "p95": 1241.934499,
                    "p99": 1241.934499,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 917.450918,
                    "min": 889.618395,
                    "p50": 905.127927,
                    "p95": 917.450918,
                    "p99": 917.450918,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 869.418497,
                    "min": 832.093142,
                    "p50": 851.2887099999999,
                    "p95": 869.418497,
                    "p99": 869.418497,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.930744,
                    "min": 183.768304,
                    "p50": 202.125494,
                    "p95": 213.930744,
                    "p99": 213.930744,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 329.933511,
                    "min": 310.82602299999996,
                    "p50": 325.90301999999997,
                    "p95": 329.933511,
                    "p99": 329.933511,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1085.001638,
                    "min": 1034.989689,
                    "p50": 1051.9835,
                    "p95": 1085.001638,
                    "p99": 1085.001638,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 513.224958,
                    "min": 471.077318,
                    "p50": 496.588075,
                    "p95": 513.224958,
                    "p99": 513.224958,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 698.9667979999999,
                    "min": 660.285582,
                    "p50": 676.2720959999999,
                    "p95": 698.9667979999999,
                    "p99": 698.9667979999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 559.416014,
                    "min": 415.524011,
                    "p50": 444.471566,
                    "p95": 559.416014,
                    "p99": 559.416014,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 819.7393619999999,
                    "min": 763.167483,
                    "p50": 791.629507,
                    "p95": 819.7393619999999,
                    "p99": 819.7393619999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1845.278953,
                    "min": 1747.213957,
                    "p50": 1776.9249229999998,
                    "p95": 1845.278953,
                    "p99": 1845.278953,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3078.510021,
                    "min": 2903.8403679999997,
                    "p50": 2937.676803,
                    "p95": 3078.510021,
                    "p99": 3078.510021,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 634.013254,
                    "min": 582.6172869999999,
                    "p50": 613.0433939999999,
                    "p95": 634.013254,
                    "p99": 634.013254,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 468.198539,
                    "min": 450.18208,
                    "p50": 464.14068799999995,
                    "p95": 468.198539,
                    "p99": 468.198539,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1259.8341149999999,
                    "min": 1205.267693,
                    "p50": 1251.8033209999999,
                    "p95": 1259.8341149999999,
                    "p99": 1259.8341149999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1875.611573,
                    "min": 1828.953401,
                    "p50": 1852.43681,
                    "p95": 1875.611573,
                    "p99": 1875.611573,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3109.1960879999997,
                    "min": 3035.009976,
                    "p50": 3078.101762,
                    "p95": 3109.1960879999997,
                    "p99": 3109.1960879999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2482.4830589999997,
                    "min": 2417.384904,
                    "p50": 2455.65071,
                    "p95": 2482.4830589999997,
                    "p99": 2482.4830589999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 526.903685,
                    "min": 512.0472179999999,
                    "p50": 520.55763,
                    "p95": 526.903685,
                    "p99": 526.903685,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1260.938258,
                    "min": 1063.548237,
                    "p50": 1102.905793,
                    "p95": 1260.938258,
                    "p99": 1260.938258,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 423.81562299999996,
                    "min": 379.624825,
                    "p50": 403.39102399999996,
                    "p95": 423.81562299999996,
                    "p99": 423.81562299999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 889.3338339999999,
                    "min": 855.678651,
                    "p50": 878.6270109999999,
                    "p95": 889.3338339999999,
                    "p99": 889.3338339999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 961.7197289999999,
                    "min": 902.5333589999999,
                    "p50": 946.7324679999999,
                    "p95": 961.7197289999999,
                    "p99": 961.7197289999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 283.799628,
                    "min": 262.745927,
                    "p50": 279.658573,
                    "p95": 283.799628,
                    "p99": 283.799628,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 709.716585,
                    "min": 690.371855,
                    "p50": 702.9127239999999,
                    "p95": 709.716585,
                    "p99": 709.716585,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 854.1247169999999,
                    "min": 730.25486,
                    "p50": 766.0346069999999,
                    "p95": 854.1247169999999,
                    "p99": 854.1247169999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.890508,
                    "min": 321.921157,
                    "p50": 341.33033,
                    "p95": 346.890508,
                    "p99": 346.890508,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.68407,
                    "min": 185.67578999999998,
                    "p50": 221.14840199999998,
                    "p95": 221.68407,
                    "p99": 221.68407,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 835.4716219999999,
                    "min": 800.051265,
                    "p50": 827.212684,
                    "p95": 835.4716219999999,
                    "p99": 835.4716219999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 665.249747,
                    "min": 635.3852939999999,
                    "p50": 647.071746,
                    "p95": 665.249747,
                    "p99": 665.249747,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 589.783196,
                    "min": 577.938551,
                    "p50": 585.627359,
                    "p95": 589.783196,
                    "p99": 589.783196,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 987.393869,
                    "min": 946.3080239999999,
                    "p50": 953.298465,
                    "p95": 987.393869,
                    "p99": 987.393869,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1523.168479,
                    "min": 1444.387033,
                    "p50": 1472.082934,
                    "p95": 1523.168479,
                    "p99": 1523.168479,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1302.768936,
                    "min": 1238.821543,
                    "p50": 1274.94147,
                    "p95": 1302.768936,
                    "p99": 1302.768936,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 348.206018,
                    "min": 313.24699,
                    "p50": 343.34752399999996,
                    "p95": 348.206018,
                    "p99": 348.206018,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2154.556881,
                    "min": 2061.9059549999997,
                    "p50": 2101.8423,
                    "p95": 2154.556881,
                    "p99": 2154.556881,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 881.121893,
                    "min": 824.2206239999999,
                    "p50": 864.673592,
                    "p95": 881.121893,
                    "p99": 881.121893,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 567.083166,
                    "min": 514.068568,
                    "p50": 552.087806,
                    "p95": 567.083166,
                    "p99": 567.083166,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1205.500113,
                    "min": 1148.968314,
                    "p50": 1157.254215,
                    "p95": 1205.500113,
                    "p99": 1205.500113,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 671.63153,
                    "min": 642.9495099999999,
                    "p50": 651.549371,
                    "p95": 671.63153,
                    "p99": 671.63153,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1897.465542,
                    "min": 1790.707612,
                    "p50": 1840.0773299999998,
                    "p95": 1897.465542,
                    "p99": 1897.465542,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 465.81960499999997,
                    "min": 442.900354,
                    "p50": 452.435998,
                    "p95": 465.81960499999997,
                    "p99": 465.81960499999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1640.144282,
                    "min": 1550.1057389999999,
                    "p50": 1587.134001,
                    "p95": 1640.144282,
                    "p99": 1640.144282,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 786.455199,
                    "min": 731.035187,
                    "p50": 760.833989,
                    "p95": 786.455199,
                    "p99": 786.455199,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1416.630606,
                    "min": 1352.871261,
                    "p50": 1369.971484,
                    "p95": 1416.630606,
                    "p99": 1416.630606,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1101.684684,
                    "min": 1044.387151,
                    "p50": 1059.6125359999999,
                    "p95": 1101.684684,
                    "p99": 1101.684684,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 699.4067749999999,
                    "min": 611.204977,
                    "p50": 641.250803,
                    "p95": 699.4067749999999,
                    "p99": 699.4067749999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1930.042939,
                    "min": 1652.010051,
                    "p50": 1800.5995209999999,
                    "p95": 1930.042939,
                    "p99": 1930.042939,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1175.7807229999999,
                    "min": 993.223664,
                    "p50": 1112.208929,
                    "p95": 1175.7807229999999,
                    "p99": 1175.7807229999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1686.791696,
                    "min": 1448.435755,
                    "p50": 1590.582676,
                    "p95": 1686.791696,
                    "p99": 1686.791696,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2580.432445,
                    "min": 2192.853027,
                    "p50": 2435.258808,
                    "p95": 2580.432445,
                    "p99": 2580.432445,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1428.3731329999998,
                    "min": 1228.0768,
                    "p50": 1358.950055,
                    "p95": 1428.3731329999998,
                    "p99": 1428.3731329999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1812.1917959999998,
                    "min": 1554.099293,
                    "p50": 1713.473523,
                    "p95": 1812.1917959999998,
                    "p99": 1812.1917959999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3826.7722919999997,
                    "min": 3348.3995379999997,
                    "p50": 3640.682429,
                    "p95": 3826.7722919999997,
                    "p99": 3826.7722919999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 920.6390319999999,
                    "min": 783.297069,
                    "p50": 875.35012,
                    "p95": 920.6390319999999,
                    "p99": 920.6390319999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 423.32699099999996,
                    "min": 336.197434,
                    "p50": 398.508359,
                    "p95": 423.32699099999996,
                    "p99": 423.32699099999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1294.156741,
                    "min": 1114.734154,
                    "p50": 1244.466539,
                    "p95": 1294.156741,
                    "p99": 1294.156741,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 790.595787,
                    "min": 683.3622459999999,
                    "p50": 759.831118,
                    "p95": 790.595787,
                    "p99": 790.595787,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 541.7252579999999,
                    "min": 470.60353499999997,
                    "p50": 518.995063,
                    "p95": 541.7252579999999,
                    "p99": 541.7252579999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1040.5892569999999,
                    "min": 893.4855379999999,
                    "p50": 981.79612,
                    "p95": 1040.5892569999999,
                    "p99": 1040.5892569999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2267.041109,
                    "min": 1921.975545,
                    "p50": 2145.428266,
                    "p95": 2267.041109,
                    "p99": 2267.041109,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1582.749523,
                    "min": 1327.837207,
                    "p50": 1480.2419869999999,
                    "p95": 1582.749523,
                    "p99": 1582.749523,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1410.723424,
                    "min": 1358.679344,
                    "p50": 1395.390755,
                    "p95": 1410.723424,
                    "p99": 1410.723424,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1665.574287,
                    "min": 1589.590853,
                    "p50": 1627.66887,
                    "p95": 1665.574287,
                    "p99": 1665.574287,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1764.172087,
                    "min": 1703.646243,
                    "p50": 1744.119782,
                    "p95": 1764.172087,
                    "p99": 1764.172087,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1075.989386,
                    "min": 1029.741343,
                    "p50": 1052.053539,
                    "p95": 1075.989386,
                    "p99": 1075.989386,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 729.850388,
                    "min": 698.157746,
                    "p50": 712.394471,
                    "p95": 729.850388,
                    "p99": 729.850388,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 964.357976,
                    "min": 934.790252,
                    "p50": 940.6985229999999,
                    "p95": 964.357976,
                    "p99": 964.357976,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 503.41407999999996,
                    "min": 472.22878199999997,
                    "p50": 492.037067,
                    "p95": 503.41407999999996,
                    "p99": 503.41407999999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 616.097094,
                    "min": 589.873143,
                    "p50": 604.954387,
                    "p95": 616.097094,
                    "p99": 616.097094,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1188.853769,
                    "min": 1148.911764,
                    "p50": 1163.8550579999999,
                    "p95": 1188.853769,
                    "p99": 1188.853769,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 846.880808,
                    "min": 809.405316,
                    "p50": 832.8687709999999,
                    "p95": 846.880808,
                    "p99": 846.880808,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2376.37423,
                    "min": 2255.2394529999997,
                    "p50": 2317.310767,
                    "p95": 2376.37423,
                    "p99": 2376.37423,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1320.088943,
                    "min": 1251.840936,
                    "p50": 1281.559253,
                    "p95": 1320.088943,
                    "p99": 1320.088943,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2072.554806,
                    "min": 1965.9521499999998,
                    "p50": 2034.1964679999999,
                    "p95": 2072.554806,
                    "p99": 2072.554806,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 386.59335699999997,
                    "min": 373.170328,
                    "p50": 381.083762,
                    "p95": 386.59335699999997,
                    "p99": 386.59335699999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1553.809749,
                    "min": 1482.924788,
                    "p50": 1511.176869,
                    "p95": 1553.809749,
                    "p99": 1553.809749,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1020.405033,
                    "min": 962.474875,
                    "p50": 990.9463979999999,
                    "p95": 1020.405033,
                    "p99": 1020.405033,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 532.860089,
                    "min": 496.68940499999997,
                    "p50": 512.712033,
                    "p95": 532.860089,
                    "p99": 532.860089,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 372.002231,
                    "min": 333.244783,
                    "p50": 354.53901099999996,
                    "p95": 372.002231,
                    "p99": 372.002231,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.203684,
                    "min": 268.373785,
                    "p50": 275.41331099999996,
                    "p95": 283.203684,
                    "p99": 283.203684,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1112.110205,
                    "min": 1033.800708,
                    "p50": 1066.064752,
                    "p95": 1112.110205,
                    "p99": 1112.110205,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1269.372247,
                    "min": 1206.1594029999999,
                    "p50": 1222.4542549999999,
                    "p95": 1269.372247,
                    "p99": 1269.372247,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 768.984576,
                    "min": 740.353075,
                    "p50": 743.4944509999999,
                    "p95": 768.984576,
                    "p99": 768.984576,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1670.806085,
                    "min": 1573.862359,
                    "p50": 1611.820479,
                    "p95": 1670.806085,
                    "p99": 1670.806085,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 893.4231699999999,
                    "min": 806.516854,
                    "p50": 824.927243,
                    "p95": 893.4231699999999,
                    "p99": 893.4231699999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 608.3947559999999,
                    "min": 575.653332,
                    "p50": 592.131216,
                    "p95": 608.3947559999999,
                    "p99": 608.3947559999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1473.881412,
                    "min": 1400.237056,
                    "p50": 1422.457442,
                    "p95": 1473.881412,
                    "p99": 1473.881412,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1173.829965,
                    "min": 1130.9430869999999,
                    "p50": 1143.5618789999999,
                    "p95": 1173.829965,
                    "p99": 1173.829965,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 452.842649,
                    "min": 400.46428399999996,
                    "p50": 431.92850699999997,
                    "p95": 452.842649,
                    "p99": 452.842649,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 686.049948,
                    "min": 658.771837,
                    "p50": 668.115593,
                    "p95": 686.049948,
                    "p99": 686.049948,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2507.006755,
                    "min": 2379.1177199999997,
                    "p50": 2400.111104,
                    "p95": 2507.006755,
                    "p99": 2507.006755,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 953.9200069999999,
                    "min": 870.3948839999999,
                    "p50": 904.048313,
                    "p95": 953.9200069999999,
                    "p99": 953.9200069999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3327.366242,
                    "min": 3163.5930719999997,
                    "p50": 3226.764107,
                    "p95": 3327.366242,
                    "p99": 3327.366242,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1075.109452,
                    "min": 1015.761588,
                    "p50": 1045.356808,
                    "p95": 1075.109452,
                    "p99": 1075.109452,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 557.122182,
                    "min": 505.305866,
                    "p50": 547.7818139999999,
                    "p95": 557.122182,
                    "p99": 557.122182,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2126.91671,
                    "min": 2007.2714409999999,
                    "p50": 2069.473958,
                    "p95": 2126.91671,
                    "p99": 2126.91671,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1483.298787,
                    "min": 1398.931227,
                    "p50": 1459.017769,
                    "p95": 1483.298787,
                    "p99": 1483.298787,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 660.962728,
                    "min": 601.591592,
                    "p50": 648.591325,
                    "p95": 660.962728,
                    "p99": 660.962728,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1592.4918089999999,
                    "min": 1537.780859,
                    "p50": 1562.4383189999999,
                    "p95": 1592.4918089999999,
                    "p99": 1592.4918089999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 761.289989,
                    "min": 711.3924579999999,
                    "p50": 750.462648,
                    "p95": 761.289989,
                    "p99": 761.289989,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1280.221529,
                    "min": 1239.724179,
                    "p50": 1257.045556,
                    "p95": 1280.221529,
                    "p99": 1280.221529,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 973.3612559999999,
                    "min": 919.8844929999999,
                    "p50": 952.504373,
                    "p95": 973.3612559999999,
                    "p99": 973.3612559999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1382.9953229999999,
                    "min": 1327.4720049999999,
                    "p50": 1353.508527,
                    "p95": 1382.9953229999999,
                    "p99": 1382.9953229999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1873.2743759999998,
                    "min": 1776.8856489999998,
                    "p50": 1829.7901689999999,
                    "p95": 1873.2743759999998,
                    "p99": 1873.2743759999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 873.349344,
                    "min": 828.066861,
                    "p50": 856.0302969999999,
                    "p95": 873.349344,
                    "p99": 873.349344,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1181.837831,
                    "min": 1138.834621,
                    "p50": 1158.573335,
                    "p95": 1181.837831,
                    "p99": 1181.837831,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 348.495972,
                    "min": 325.72781699999996,
                    "p50": 342.70834199999996,
                    "p95": 348.495972,
                    "p99": 348.495972,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 466.330789,
                    "min": 424.659547,
                    "p50": 447.010449,
                    "p95": 466.330789,
                    "p99": 466.330789,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1430.3208,
                    "min": 1357.696185,
                    "p50": 1389.2817659999998,
                    "p95": 1430.3208,
                    "p99": 1430.3208,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 609.652984,
                    "min": 547.495695,
                    "p50": 580.124075,
                    "p95": 609.652984,
                    "p99": 609.652984,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1705.1364979999998,
                    "min": 1632.927895,
                    "p50": 1660.878442,
                    "p95": 1705.1364979999998,
                    "p99": 1705.1364979999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1961.645771,
                    "min": 1889.947299,
                    "p50": 1900.3184469999999,
                    "p95": 1961.645771,
                    "p99": 1961.645771,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 729.730554,
                    "min": 695.386398,
                    "p50": 715.6986569999999,
                    "p95": 729.730554,
                    "p99": 729.730554,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1278.868888,
                    "min": 1227.761176,
                    "p50": 1247.925483,
                    "p95": 1278.868888,
                    "p99": 1278.868888,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1121.148579,
                    "min": 1087.864091,
                    "p50": 1102.715146,
                    "p95": 1121.148579,
                    "p99": 1121.148579,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 852.3608969999999,
                    "min": 828.9511739999999,
                    "p50": 840.1243059999999,
                    "p95": 852.3608969999999,
                    "p99": 852.3608969999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 452.02844799999997,
                    "min": 433.635546,
                    "p50": 439.565087,
                    "p95": 452.02844799999997,
                    "p99": 452.02844799999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2439.067043,
                    "min": 2342.659421,
                    "p50": 2395.023507,
                    "p95": 2439.067043,
                    "p99": 2439.067043,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1524.731482,
                    "min": 1471.757858,
                    "p50": 1510.250781,
                    "p95": 1524.731482,
                    "p99": 1524.731482,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1811.1135359999998,
                    "min": 1764.728205,
                    "p50": 1784.578796,
                    "p95": 1811.1135359999998,
                    "p99": 1811.1135359999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2789.0831239999998,
                    "min": 2679.885933,
                    "p50": 2713.989431,
                    "p95": 2789.0831239999998,
                    "p99": 2789.0831239999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2108.263865,
                    "min": 1986.2511909999998,
                    "p50": 2037.490898,
                    "p95": 2108.263865,
                    "p99": 2108.263865,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1004.6132369999999,
                    "min": 938.173377,
                    "p50": 974.678379,
                    "p95": 1004.6132369999999,
                    "p99": 1004.6132369999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1876.760789,
                    "min": 1792.8060759999998,
                    "p50": 1818.2097489999999,
                    "p95": 1876.760789,
                    "p99": 1876.760789,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1086.424722,
                    "min": 1055.674066,
                    "p50": 1062.575231,
                    "p95": 1086.424722,
                    "p99": 1086.424722,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1540.5918829999998,
                    "min": 1452.52562,
                    "p50": 1468.772111,
                    "p95": 1540.5918829999998,
                    "p99": 1540.5918829999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1628.88557,
                    "min": 1562.1951689999999,
                    "p50": 1581.66025,
                    "p95": 1628.88557,
                    "p99": 1628.88557,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2149.960729,
                    "min": 2078.723677,
                    "p50": 2102.758421,
                    "p95": 2149.960729,
                    "p99": 2149.960729,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1195.5511529999999,
                    "min": 1152.1587769999999,
                    "p50": 1167.91172,
                    "p95": 1195.5511529999999,
                    "p99": 1195.5511529999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 668.401181,
                    "min": 647.482233,
                    "p50": 657.135774,
                    "p95": 668.401181,
                    "p99": 668.401181,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 879.810451,
                    "min": 843.3129809999999,
                    "p50": 857.422516,
                    "p95": 879.810451,
                    "p99": 879.810451,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1396.586406,
                    "min": 1340.882531,
                    "p50": 1370.449574,
                    "p95": 1396.586406,
                    "p99": 1396.586406,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1307.228058,
                    "min": 1254.6118179999999,
                    "p50": 1276.905947,
                    "p95": 1307.228058,
                    "p99": 1307.228058,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3178.728529,
                    "min": 3087.966897,
                    "p50": 3122.3989229999997,
                    "p95": 3178.728529,
                    "p99": 3178.728529,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 772.7834829999999,
                    "min": 740.9189279999999,
                    "p50": 757.441378,
                    "p95": 772.7834829999999,
                    "p99": 772.7834829999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 351.995685,
                    "min": 309.127459,
                    "p50": 343.77164899999997,
                    "p95": 351.995685,
                    "p99": 351.995685,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 565.988425,
                    "min": 530.240279,
                    "p50": 550.446343,
                    "p95": 565.988425,
                    "p99": 565.988425,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 987.675536,
                    "min": 937.628552,
                    "p50": 963.106421,
                    "p95": 987.675536,
                    "p99": 987.675536,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 466.69078299999995,
                    "min": 417.04529199999996,
                    "p50": 446.0155,
                    "p95": 466.69078299999995,
                    "p99": 466.69078299999995,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1600.135848,
                    "min": 1499.211824,
                    "p50": 1558.493984,
                    "p95": 1600.135848,
                    "p99": 1600.135848,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 772.336769,
                    "min": 730.136758,
                    "p50": 750.50682,
                    "p95": 772.336769,
                    "p99": 772.336769,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 349.468031,
                    "min": 317.407221,
                    "p50": 340.460112,
                    "p95": 349.468031,
                    "p99": 349.468031,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 454.046805,
                    "min": 408.48783399999996,
                    "p50": 445.64799899999997,
                    "p95": 454.046805,
                    "p99": 454.046805,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1077.003888,
                    "min": 1033.453463,
                    "p50": 1054.868463,
                    "p95": 1077.003888,
                    "p99": 1077.003888,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 672.0897209999999,
                    "min": 632.26924,
                    "p50": 649.3766929999999,
                    "p95": 672.0897209999999,
                    "p99": 672.0897209999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2113.964372,
                    "min": 2021.2263719999999,
                    "p50": 2075.550923,
                    "p95": 2113.964372,
                    "p99": 2113.964372,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 570.434626,
                    "min": 526.485787,
                    "p50": 547.19278,
                    "p95": 570.434626,
                    "p99": 570.434626,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1184.405201,
                    "min": 1137.911497,
                    "p50": 1159.461991,
                    "p95": 1184.405201,
                    "p99": 1184.405201,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 864.577505,
                    "min": 838.516839,
                    "p50": 843.3933599999999,
                    "p95": 864.577505,
                    "p99": 864.577505,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1290.689656,
                    "min": 1239.9114789999999,
                    "p50": 1262.519942,
                    "p95": 1290.689656,
                    "p99": 1290.689656,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1401.9343649999998,
                    "min": 1332.161744,
                    "p50": 1348.6799119999998,
                    "p95": 1401.9343649999998,
                    "p99": 1401.9343649999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1888.219034,
                    "min": 1768.061195,
                    "p50": 1821.760796,
                    "p95": 1888.219034,
                    "p99": 1888.219034,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1511.884394,
                    "min": 1440.6152419999999,
                    "p50": 1452.30128,
                    "p95": 1511.884394,
                    "p99": 1511.884394,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 972.720727,
                    "min": 946.312072,
                    "p50": 958.6326889999999,
                    "p95": 972.720727,
                    "p99": 972.720727,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 541.5444259999999,
                    "min": 521.3537739999999,
                    "p50": 535.3434649999999,
                    "p95": 541.5444259999999,
                    "p99": 541.5444259999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1918.925319,
                    "min": 1869.976559,
                    "p50": 1894.224917,
                    "p95": 1918.925319,
                    "p99": 1918.925319,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1421.188255,
                    "min": 1374.2893299999998,
                    "p50": 1387.4290819999999,
                    "p95": 1421.188255,
                    "p99": 1421.188255,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1164.006832,
                    "min": 1141.357164,
                    "p50": 1155.901152,
                    "p95": 1164.006832,
                    "p99": 1164.006832,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 801.382848,
                    "min": 770.9649099999999,
                    "p50": 785.6276829999999,
                    "p95": 801.382848,
                    "p99": 801.382848,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 419.07568399999997,
                    "min": 405.40691999999996,
                    "p50": 411.68987599999997,
                    "p95": 419.07568399999997,
                    "p99": 419.07568399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 669.9694119999999,
                    "min": 652.417198,
                    "p50": 659.8235199999999,
                    "p95": 669.9694119999999,
                    "p99": 669.9694119999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1812.6920639999998,
                    "min": 1759.001787,
                    "p50": 1765.958463,
                    "p95": 1812.6920639999998,
                    "p99": 1812.6920639999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2269.497329,
                    "min": 2176.083506,
                    "p50": 2201.8181879999997,
                    "p95": 2269.497329,
                    "p99": 2269.497329,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 921.9339679999999,
                    "min": 866.790448,
                    "p50": 902.8353629999999,
                    "p95": 921.9339679999999,
                    "p99": 921.9339679999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1307.340827,
                    "min": 1248.1332479999999,
                    "p50": 1271.9798039999998,
                    "p95": 1307.340827,
                    "p99": 1307.340827,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2578.8040419999998,
                    "min": 2461.793612,
                    "p50": 2513.2169799999997,
                    "p95": 2578.8040419999998,
                    "p99": 2578.8040419999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1541.6637449999998,
                    "min": 1475.554389,
                    "p50": 1522.7048889999999,
                    "p95": 1541.6637449999998,
                    "p99": 1541.6637449999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1056.013561,
                    "min": 1010.1039219999999,
                    "p50": 1029.366264,
                    "p95": 1056.013561,
                    "p99": 1056.013561,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1670.3589299999999,
                    "min": 1622.567887,
                    "p50": 1644.403593,
                    "p95": 1670.3589299999999,
                    "p99": 1670.3589299999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2518.1935479999997,
                    "min": 2333.886834,
                    "p50": 2483.708001,
                    "p95": 2518.1935479999997,
                    "p99": 2518.1935479999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1378.21063,
                    "min": 1252.476234,
                    "p50": 1342.293263,
                    "p95": 1378.21063,
                    "p99": 1378.21063,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1743.5812019999998,
                    "min": 1566.4451729999998,
                    "p50": 1668.627094,
                    "p95": 1743.5812019999998,
                    "p99": 1743.5812019999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1914.5926989999998,
                    "min": 1719.5618989999998,
                    "p50": 1841.712399,
                    "p95": 1914.5926989999998,
                    "p99": 1914.5926989999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2422.137483,
                    "min": 2164.849934,
                    "p50": 2314.785556,
                    "p95": 2422.137483,
                    "p99": 2422.137483,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2260.898276,
                    "min": 2018.2435899999998,
                    "p50": 2153.9962769999997,
                    "p95": 2260.898276,
                    "p99": 2260.898276,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 721.288224,
                    "min": 651.98176,
                    "p50": 693.0842789999999,
                    "p95": 721.288224,
                    "p99": 721.288224,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1573.841616,
                    "min": 1387.6333439999999,
                    "p50": 1499.328884,
                    "p95": 1573.841616,
                    "p99": 1573.841616,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2084.542814,
                    "min": 1852.3436239999999,
                    "p50": 1987.436442,
                    "p95": 2084.542814,
                    "p99": 2084.542814,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2973.110444,
                    "min": 2697.050234,
                    "p50": 2871.2839409999997,
                    "p95": 2973.110444,
                    "p99": 2973.110444,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 878.170802,
                    "min": 786.171806,
                    "p50": 852.209491,
                    "p95": 878.170802,
                    "p99": 878.170802,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1201.991967,
                    "min": 1115.500471,
                    "p50": 1183.424664,
                    "p95": 1201.991967,
                    "p99": 1201.991967,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 557.927372,
                    "min": 476.73576199999997,
                    "p50": 527.82042,
                    "p95": 557.927372,
                    "p99": 557.927372,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1059.61647,
                    "min": 944.9421679999999,
                    "p50": 1021.7380909999999,
                    "p95": 1059.61647,
                    "p99": 1059.61647,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3403.775441,
                    "min": 3068.8827969999998,
                    "p50": 3284.2988849999997,
                    "p95": 3403.775441,
                    "p99": 3403.775441,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3355.393134,
                    "min": 3096.3905889999996,
                    "p50": 3314.9308739999997,
                    "p95": 3355.393134,
                    "p99": 3355.393134,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2372.5842159999997,
                    "min": 2177.5367459999998,
                    "p50": 2331.748181,
                    "p95": 2372.5842159999997,
                    "p99": 2372.5842159999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2036.944703,
                    "min": 1880.082322,
                    "p50": 2000.57982,
                    "p95": 2036.944703,
                    "p99": 2036.944703,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1527.8368839999998,
                    "min": 1416.423523,
                    "p50": 1514.998151,
                    "p95": 1527.8368839999998,
                    "p99": 1527.8368839999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1412.173382,
                    "min": 1262.81722,
                    "p50": 1352.2079079999999,
                    "p95": 1412.173382,
                    "p99": 1412.173382,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1059.539025,
                    "min": 961.628298,
                    "p50": 1021.566865,
                    "p95": 1059.539025,
                    "p99": 1059.539025,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2279.830617,
                    "min": 1998.309047,
                    "p50": 2168.0871349999998,
                    "p95": 2279.830617,
                    "p99": 2279.830617,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 726.23916,
                    "min": 636.67972,
                    "p50": 695.577316,
                    "p95": 726.23916,
                    "p99": 726.23916,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1935.324341,
                    "min": 1718.526709,
                    "p50": 1834.233524,
                    "p95": 1935.324341,
                    "p99": 1935.324341,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 899.007792,
                    "min": 794.464151,
                    "p50": 860.371329,
                    "p95": 899.007792,
                    "p99": 899.007792,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3047.903297,
                    "min": 2699.153696,
                    "p50": 2893.9188489999997,
                    "p95": 3047.903297,
                    "p99": 3047.903297,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 554.791403,
                    "min": 502.153013,
                    "p50": 528.7821799999999,
                    "p95": 554.791403,
                    "p99": 554.791403,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1225.7675709999999,
                    "min": 1113.249767,
                    "p50": 1191.247609,
                    "p95": 1225.7675709999999,
                    "p99": 1225.7675709999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2607.137132,
                    "min": 2311.269855,
                    "p50": 2500.889118,
                    "p95": 2607.137132,
                    "p99": 2607.137132,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1748.599783,
                    "min": 1558.427545,
                    "p50": 1676.44628,
                    "p95": 1748.599783,
                    "p99": 1748.599783,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1882.6784169999999,
                    "min": 1735.722926,
                    "p50": 1854.7262489999998,
                    "p95": 1882.6784169999999,
                    "p99": 1882.6784169999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1055.3081949999998,
                    "min": 961.7095059999999,
                    "p50": 1024.634153,
                    "p95": 1055.3081949999998,
                    "p99": 1055.3081949999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 901.689225,
                    "min": 809.455306,
                    "p50": 873.122798,
                    "p95": 901.689225,
                    "p99": 901.689225,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1749.8398399999999,
                    "min": 1593.15808,
                    "p50": 1688.017022,
                    "p95": 1749.8398399999999,
                    "p99": 1749.8398399999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3513.1936389999996,
                    "min": 3114.611509,
                    "p50": 3371.7024189999997,
                    "p95": 3513.1936389999996,
                    "p99": 3513.1936389999996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 731.8602579999999,
                    "min": 657.8625979999999,
                    "p50": 703.020624,
                    "p95": 731.8602579999999,
                    "p99": 731.8602579999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1227.906757,
                    "min": 1113.7804409999999,
                    "p50": 1193.263668,
                    "p95": 1227.906757,
                    "p99": 1227.906757,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 551.807473,
                    "min": 499.562184,
                    "p50": 539.553575,
                    "p95": 551.807473,
                    "p99": 551.807473,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2632.179374,
                    "min": 2358.42971,
                    "p50": 2510.493242,
                    "p95": 2632.179374,
                    "p99": 2632.179374,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2457.182295,
                    "min": 2197.628114,
                    "p50": 2348.811678,
                    "p95": 2457.182295,
                    "p99": 2457.182295,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2127.677651,
                    "min": 1894.418829,
                    "p50": 2013.801841,
                    "p95": 2127.677651,
                    "p99": 2127.677651,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2314.828943,
                    "min": 2042.768157,
                    "p50": 2187.732993,
                    "p95": 2314.828943,
                    "p99": 2314.828943,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1604.6104659999999,
                    "min": 1440.55602,
                    "p50": 1536.64255,
                    "p95": 1604.6104659999999,
                    "p99": 1604.6104659999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3039.273234,
                    "min": 2735.151058,
                    "p50": 2943.840549,
                    "p95": 3039.273234,
                    "p99": 3039.273234,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1419.604994,
                    "min": 1256.060605,
                    "p50": 1364.512549,
                    "p95": 1419.604994,
                    "p99": 1419.604994,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 833.3245069999999,
                    "min": 797.5084049999999,
                    "p50": 812.40298,
                    "p95": 833.3245069999999,
                    "p99": 833.3245069999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 460.196035,
                    "min": 424.489939,
                    "p50": 452.00327,
                    "p95": 460.196035,
                    "p99": 460.196035,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 957.637297,
                    "min": 896.640757,
                    "p50": 938.413091,
                    "p95": 957.637297,
                    "p99": 957.637297,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1115.172952,
                    "min": 1039.383465,
                    "p50": 1084.178318,
                    "p95": 1115.172952,
                    "p99": 1115.172952,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.477285,
                    "min": 176.94303299999999,
                    "p50": 214.896254,
                    "p95": 221.477285,
                    "p99": 221.477285,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 764.2582239999999,
                    "min": 733.999413,
                    "p50": 752.079521,
                    "p95": 764.2582239999999,
                    "p99": 764.2582239999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 401.400485,
                    "min": 358.59650899999997,
                    "p50": 393.200042,
                    "p95": 401.400485,
                    "p99": 401.400485,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 279.292052,
                    "min": 252.378989,
                    "p50": 271.882295,
                    "p95": 279.292052,
                    "p99": 279.292052,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1842.970048,
                    "min": 1791.131185,
                    "p50": 1828.4028119999998,
                    "p95": 1842.970048,
                    "p99": 1842.970048,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 623.732909,
                    "min": 559.404691,
                    "p50": 571.878341,
                    "p95": 623.732909,
                    "p99": 623.732909,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 699.0486659999999,
                    "min": 680.3702989999999,
                    "p50": 692.867067,
                    "p95": 699.0486659999999,
                    "p99": 699.0486659999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 881.040565,
                    "min": 855.164501,
                    "p50": 870.2017119999999,
                    "p95": 881.040565,
                    "p99": 881.040565,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 340.234398,
                    "min": 324.76419899999996,
                    "p50": 331.053401,
                    "p95": 340.234398,
                    "p99": 340.234398,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3050.707351,
                    "min": 2970.453778,
                    "p50": 3023.384001,
                    "p95": 3050.707351,
                    "p99": 3050.707351,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1254.583876,
                    "min": 1220.669498,
                    "p50": 1226.9494849999999,
                    "p95": 1254.583876,
                    "p99": 1254.583876,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 680.6891959999999,
                    "min": 624.949847,
                    "p50": 634.873212,
                    "p95": 680.6891959999999,
                    "p99": 680.6891959999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 518.5087609999999,
                    "min": 479.02356399999996,
                    "p50": 513.870194,
                    "p95": 518.5087609999999,
                    "p99": 518.5087609999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2502.588453,
                    "min": 2381.030518,
                    "p50": 2409.118599,
                    "p95": 2502.588453,
                    "p99": 2502.588453,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2820.9407929999998,
                    "min": 2665.544234,
                    "p50": 2700.6014689999997,
                    "p95": 2820.9407929999998,
                    "p99": 2820.9407929999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 874.263659,
                    "min": 822.226832,
                    "p50": 852.406154,
                    "p95": 874.263659,
                    "p99": 874.263659,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1835.4730479999998,
                    "min": 1751.805069,
                    "p50": 1779.008793,
                    "p95": 1835.4730479999998,
                    "p99": 1835.4730479999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1319.585632,
                    "min": 1208.217652,
                    "p50": 1252.978911,
                    "p95": 1319.585632,
                    "p99": 1319.585632,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1437.189754,
                    "min": 1355.909614,
                    "p50": 1385.6186989999999,
                    "p95": 1437.189754,
                    "p99": 1437.189754,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 443.11918499999996,
                    "min": 420.949099,
                    "p50": 438.114515,
                    "p95": 443.11918499999996,
                    "p99": 443.11918499999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1590.3050899999998,
                    "min": 1493.022587,
                    "p50": 1517.832305,
                    "p95": 1590.3050899999998,
                    "p99": 1590.3050899999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 738.432047,
                    "min": 684.872516,
                    "p50": 715.067876,
                    "p95": 738.432047,
                    "p99": 738.432047,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2003.698991,
                    "min": 1884.3289539999998,
                    "p50": 1908.5821799999999,
                    "p95": 2003.698991,
                    "p99": 2003.698991,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1151.0650289999999,
                    "min": 1088.368593,
                    "p50": 1101.120259,
                    "p95": 1151.0650289999999,
                    "p99": 1151.0650289999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2478.009949,
                    "min": 2346.60643,
                    "p50": 2392.350486,
                    "p95": 2478.009949,
                    "p99": 2478.009949,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1701.1708859999999,
                    "min": 1619.11392,
                    "p50": 1654.14669,
                    "p95": 1701.1708859999999,
                    "p99": 1701.1708859999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1000.8170339999999,
                    "min": 942.2050879999999,
                    "p50": 970.490994,
                    "p95": 1000.8170339999999,
                    "p99": 1000.8170339999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 592.26485,
                    "min": 567.733116,
                    "p50": 573.854257,
                    "p95": 592.26485,
                    "p99": 592.26485,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2113.888485,
                    "min": 2020.349921,
                    "p50": 2059.750046,
                    "p95": 2113.888485,
                    "p99": 2113.888485,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4160.81743,
                    "min": 3999.904858,
                    "p50": 4081.191401,
                    "p95": 4160.81743,
                    "p99": 4160.81743,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 929.1801489999999,
                    "min": 867.917888,
                    "p50": 906.294817,
                    "p95": 929.1801489999999,
                    "p99": 929.1801489999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1019.662392,
                    "min": 1003.091197,
                    "p50": 1018.2122599999999,
                    "p95": 1019.662392,
                    "p99": 1019.662392,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 536.223898,
                    "min": 489.99490299999997,
                    "p50": 527.995325,
                    "p95": 536.223898,
                    "p99": 536.223898,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 830.486085,
                    "min": 809.84452,
                    "p50": 819.588681,
                    "p95": 830.486085,
                    "p99": 830.486085,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1429.064729,
                    "min": 1378.18786,
                    "p50": 1422.669649,
                    "p95": 1429.064729,
                    "p99": 1429.064729,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 340.93985,
                    "min": 300.939614,
                    "p50": 332.400355,
                    "p95": 340.93985,
                    "p99": 340.93985,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3034.968477,
                    "min": 2946.042344,
                    "p50": 2982.0956579999997,
                    "p95": 3034.968477,
                    "p99": 3034.968477,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1133.089242,
                    "min": 1083.834828,
                    "p50": 1118.141083,
                    "p95": 1133.089242,
                    "p99": 1133.089242,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1328.029362,
                    "min": 1299.365621,
                    "p50": 1318.9057209999999,
                    "p95": 1328.029362,
                    "p99": 1328.029362,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 631.829743,
                    "min": 621.454208,
                    "p50": 628.589313,
                    "p95": 631.829743,
                    "p99": 631.829743,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1779.0016679999999,
                    "min": 1729.97722,
                    "p50": 1765.675967,
                    "p95": 1779.0016679999999,
                    "p99": 1779.0016679999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1232.6824119999999,
                    "min": 1201.401376,
                    "p50": 1212.672168,
                    "p95": 1232.6824119999999,
                    "p99": 1232.6824119999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 733.017796,
                    "min": 714.577466,
                    "p50": 727.060763,
                    "p95": 733.017796,
                    "p99": 733.017796,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3989.778323,
                    "min": 3892.6858549999997,
                    "p50": 3974.7667069999998,
                    "p95": 3989.778323,
                    "p99": 3989.778323,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 433.630726,
                    "min": 399.359201,
                    "p50": 426.23071,
                    "p95": 433.630726,
                    "p99": 433.630726,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1520.656203,
                    "min": 1488.815572,
                    "p50": 1514.53035,
                    "p95": 1520.656203,
                    "p99": 1520.656203,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2024.285739,
                    "min": 1964.857975,
                    "p50": 1996.9319859999998,
                    "p95": 2024.285739,
                    "p99": 2024.285739,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom16KBytes",
        "RipemdFrom8Bytes",
        "RipemdFrom1024Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}