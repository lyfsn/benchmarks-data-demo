{
    "nethermind": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "345.49",
            "p50": "269.33",
            "p95": "199.27",
            "p99": "316.25",
            "min": "162.71",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "891.25",
            "p50": "750.82",
            "p95": "640.98",
            "p99": "841.20",
            "min": "596.82",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "452.57",
            "p50": "407.47",
            "p95": "329.99",
            "p99": "428.06",
            "min": "308.36",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "260.86",
            "p50": "242.52",
            "p95": "221.14",
            "p99": "252.92",
            "min": "211.21",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "10418.38",
            "p50": "4154.66",
            "p95": "1101.02",
            "p99": "8554.91",
            "min": "1101.02",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "985.60",
            "p50": "810.96",
            "p95": "479.43",
            "p99": "884.37",
            "min": "479.43",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13032.25",
            "p50": "4507.89",
            "p95": "1163.79",
            "p99": "10658.56",
            "min": "1163.79",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20212.06",
            "p50": "4539.23",
            "p95": "1131.50",
            "p99": "16395.95",
            "min": "1131.50",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1043.20",
            "p50": "801.38",
            "p95": "530.70",
            "p99": "940.70",
            "min": "530.70",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "428.19",
            "p50": "371.58",
            "p95": "280.63",
            "p99": "398.68",
            "min": "272.87",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "237.23",
            "p50": "231.82",
            "p95": "188.11",
            "p99": "227.41",
            "min": "175.84",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "70.91",
            "p50": "70.40",
            "p95": "67.50",
            "p99": "70.23",
            "min": "67.12",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "79.23",
            "p50": "76.43",
            "p95": "72.38",
            "p99": "77.86",
            "min": "71.61",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2267.85",
            "p50": "1892.46",
            "p95": "1007.08",
            "p99": "2015.69",
            "min": "1007.08",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "69.85",
            "p50": "68.15",
            "p95": "64.50",
            "p99": "68.78",
            "min": "63.91",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "69.97",
            "p50": "68.85",
            "p95": "64.27",
            "p99": "68.83",
            "min": "63.26",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1423.89",
            "p50": "1278.01",
            "p95": "683.69",
            "p99": "1275.85",
            "min": "683.69",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3342.19",
            "p50": "2116.78",
            "p95": "1117.92",
            "p99": "2897.34",
            "min": "1117.92",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1444.41",
            "p50": "1172.83",
            "p95": "626.06",
            "p99": "1280.74",
            "min": "626.06",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.41",
            "p50": "133.56",
            "p95": "131.24",
            "p99": "134.57",
            "min": "124.98",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "134.86",
            "p50": "129.42",
            "p95": "131.03",
            "p99": "134.10",
            "min": "126.35",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "185.62",
            "p50": "174.78",
            "p95": "171.33",
            "p99": "182.76",
            "min": "159.64",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "194.99",
            "p50": "158.10",
            "p95": "173.41",
            "p99": "190.67",
            "min": "141.06",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "130.99",
            "p50": "123.28",
            "p95": "117.99",
            "p99": "128.39",
            "min": "114.74",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "153.70",
            "p50": "146.28",
            "p95": "128.44",
            "p99": "148.65",
            "min": "122.13",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "132.66",
            "p50": "126.81",
            "p95": "112.18",
            "p99": "128.56",
            "min": "107.07",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "134.87",
            "p50": "125.64",
            "p95": "121.29",
            "p99": "132.15",
            "min": "117.90",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "826.71",
            "p50": "706.38",
            "p95": "445.90",
            "p99": "750.55",
            "min": "445.90",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "749.86",
            "p50": "722.73",
            "p95": "368.84",
            "p99": "673.66",
            "min": "368.84",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "829.47",
            "p50": "724.96",
            "p95": "521.94",
            "p99": "767.97",
            "min": "521.94",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "743.98",
            "p50": "643.70",
            "p95": "356.25",
            "p99": "666.43",
            "min": "356.25",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "738.46",
            "p50": "671.41",
            "p95": "416.85",
            "p99": "674.14",
            "min": "416.85",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "830.91",
            "p50": "762.92",
            "p95": "502.61",
            "p99": "765.25",
            "min": "485.33",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "240.04",
            "p50": "217.97",
            "p95": "180.00",
            "p99": "228.04",
            "min": "164.99",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "234.90",
            "p50": "208.84",
            "p95": "182.59",
            "p99": "224.44",
            "min": "169.51",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "243.85",
            "p50": "222.98",
            "p95": "195.65",
            "p99": "234.21",
            "min": "183.60",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "234.39",
            "p50": "205.04",
            "p95": "182.21",
            "p99": "223.95",
            "min": "169.16",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "235.22",
            "p50": "219.52",
            "p95": "191.94",
            "p99": "226.57",
            "min": "184.31",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "295.11",
            "p50": "276.00",
            "p95": "249.90",
            "p99": "286.07",
            "min": "238.60",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "320.73",
            "p50": "304.56",
            "p95": "238.67",
            "p99": "304.32",
            "min": "224.19",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "410.30",
            "p50": "386.73",
            "p95": "336.46",
            "p99": "395.53",
            "min": "332.58",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "635.68",
            "p50": "598.99",
            "p95": "478.30",
            "p99": "604.20",
            "min": "470.01",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "271.26",
            "p50": "267.37",
            "p95": "227.19",
            "p99": "262.45",
            "min": "216.18",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "252.27",
            "p50": "241.41",
            "p95": "195.19",
            "p99": "240.85",
            "min": "185.12",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "253.48",
            "p50": "242.37",
            "p95": "221.47",
            "p99": "247.08",
            "min": "213.47",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "358.90",
            "p50": "324.97",
            "p95": "253.20",
            "p99": "337.76",
            "min": "241.46",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "233.60",
            "p50": "225.40",
            "p95": "208.02",
            "p99": "228.49",
            "min": "201.62",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "278.91",
            "p50": "263.29",
            "p95": "235.14",
            "p99": "270.16",
            "min": "224.20",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "274.83",
            "p50": "252.30",
            "p95": "210.38",
            "p99": "261.94",
            "min": "199.01",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "218.04",
            "p50": "208.38",
            "p95": "191.82",
            "p99": "212.80",
            "min": "185.26",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "274.43",
            "p50": "266.77",
            "p95": "214.35",
            "p99": "262.41",
            "min": "199.33",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "123.52",
            "p50": "121.59",
            "p95": "111.98",
            "p99": "121.21",
            "min": "109.09",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "122.94",
            "p50": "121.51",
            "p95": "113.53",
            "p99": "121.06",
            "min": "111.18",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "123.36",
            "p50": "121.85",
            "p95": "109.15",
            "p99": "120.52",
            "min": "105.60",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "370.16",
            "p50": "352.17",
            "p95": "256.88",
            "p99": "347.50",
            "min": "250.92",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "253.05",
            "p50": "245.67",
            "p95": "216.11",
            "p99": "245.67",
            "min": "209.59",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "421.23",
            "p50": "410.29",
            "p95": "294.52",
            "p99": "395.89",
            "min": "280.44",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "700.23",
            "p50": "598.22",
            "p95": "440.90",
            "p99": "648.36",
            "min": "376.07",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1617.14",
            "p50": "1019.66",
            "p95": "1066.41",
            "p99": "1506.99",
            "min": "969.22",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "859.48",
            "p50": "656.12",
            "p95": "501.00",
            "p99": "787.78",
            "min": "437.74",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "714.63",
            "p50": "592.87",
            "p95": "438.25",
            "p99": "659.35",
            "min": "369.15",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "7225.76",
            "p50": "4884.17",
            "p95": "1168.58",
            "p99": "6014.32",
            "min": "1168.58",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "784.24",
            "p50": "649.54",
            "p95": "407.85",
            "p99": "708.97",
            "min": "407.85",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13394.20",
            "p50": "4937.66",
            "p95": "1229.95",
            "p99": "10961.35",
            "min": "1229.95",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21829.46",
            "p50": "4883.32",
            "p95": "1238.48",
            "p99": "17711.27",
            "min": "1238.48",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "799.59",
            "p50": "646.84",
            "p95": "395.20",
            "p99": "718.71",
            "min": "395.20",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "421.64",
            "p50": "369.15",
            "p95": "279.54",
            "p99": "393.22",
            "min": "272.06",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "226.48",
            "p50": "215.01",
            "p95": "199.34",
            "p99": "221.05",
            "min": "192.56",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.66",
            "p50": "70.17",
            "p95": "65.42",
            "p99": "70.41",
            "min": "64.72",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "81.24",
            "p50": "76.59",
            "p95": "72.15",
            "p99": "79.43",
            "min": "71.14",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "168.55",
            "p50": "160.70",
            "p95": "140.84",
            "p99": "163.01",
            "min": "140.84",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.45",
            "p50": "51.28",
            "p95": "48.65",
            "p99": "51.69",
            "min": "48.22",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.14",
            "p50": "51.41",
            "p95": "49.81",
            "p99": "51.67",
            "min": "49.40",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1203.00",
            "p50": "845.67",
            "p95": "540.47",
            "p99": "1070.49",
            "min": "540.47",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "4787.88",
            "p50": "2914.05",
            "p95": "1135.51",
            "p99": "4057.40",
            "min": "1135.51",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1039.14",
            "p50": "778.74",
            "p95": "513.60",
            "p99": "934.03",
            "min": "513.60",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "65.53",
            "p50": "62.85",
            "p95": "64.11",
            "p99": "65.25",
            "min": "61.97",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "68.92",
            "p50": "67.40",
            "p95": "66.31",
            "p99": "68.39",
            "min": "63.12",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "315.92",
            "p50": "278.77",
            "p95": "273.91",
            "p99": "307.51",
            "min": "239.55",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "85.02",
            "p50": "72.80",
            "p95": "79.06",
            "p99": "83.83",
            "min": "70.11",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "460.74",
            "p50": "399.29",
            "p95": "338.42",
            "p99": "436.28",
            "min": "307.84",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "436.84",
            "p50": "416.22",
            "p95": "319.68",
            "p99": "413.41",
            "min": "290.39",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "466.81",
            "p50": "398.06",
            "p95": "350.35",
            "p99": "443.52",
            "min": "321.24",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "435.20",
            "p50": "391.51",
            "p95": "317.00",
            "p99": "411.56",
            "min": "287.46",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1513.61",
            "p50": "1028.00",
            "p95": "715.23",
            "p99": "1353.93",
            "min": "715.23",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1348.90",
            "p50": "998.87",
            "p95": "649.48",
            "p99": "1209.02",
            "min": "649.48",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1429.17",
            "p50": "1039.19",
            "p95": "743.16",
            "p99": "1291.97",
            "min": "743.16",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1340.24",
            "p50": "948.18",
            "p95": "641.25",
            "p99": "1200.44",
            "min": "641.25",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1235.68",
            "p50": "923.19",
            "p95": "635.40",
            "p99": "1115.62",
            "min": "635.40",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1475.51",
            "p50": "1025.97",
            "p95": "778.62",
            "p99": "1336.13",
            "min": "741.94",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "394.03",
            "p50": "354.59",
            "p95": "298.81",
            "p99": "374.99",
            "min": "275.00",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "369.52",
            "p50": "347.52",
            "p95": "285.11",
            "p99": "352.64",
            "min": "264.01",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "424.69",
            "p50": "371.96",
            "p95": "301.14",
            "p99": "399.98",
            "min": "270.26",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "376.98",
            "p50": "348.70",
            "p95": "282.63",
            "p99": "358.11",
            "min": "259.05",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "271.10",
            "p50": "253.69",
            "p95": "222.83",
            "p99": "261.45",
            "min": "214.32",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "643.31",
            "p50": "596.30",
            "p95": "423.19",
            "p99": "599.29",
            "min": "368.16",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "795.77",
            "p50": "679.62",
            "p95": "435.26",
            "p99": "723.67",
            "min": "371.64",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "514.60",
            "p50": "449.30",
            "p95": "318.36",
            "p99": "475.35",
            "min": "308.03",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "845.19",
            "p50": "684.44",
            "p95": "481.64",
            "p99": "772.48",
            "min": "462.51",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "487.19",
            "p50": "431.84",
            "p95": "339.80",
            "p99": "457.71",
            "min": "302.95",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "548.99",
            "p50": "477.43",
            "p95": "391.73",
            "p99": "517.54",
            "min": "363.98",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "635.30",
            "p50": "583.16",
            "p95": "406.75",
            "p99": "589.59",
            "min": "349.61",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "858.38",
            "p50": "693.64",
            "p95": "488.08",
            "p99": "784.32",
            "min": "446.94",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "266.42",
            "p50": "245.89",
            "p95": "212.69",
            "p99": "255.67",
            "min": "199.26",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "674.91",
            "p50": "548.32",
            "p95": "431.96",
            "p99": "626.32",
            "min": "371.23",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "705.64",
            "p50": "586.64",
            "p95": "501.54",
            "p99": "664.82",
            "min": "465.53",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "230.11",
            "p50": "216.99",
            "p95": "191.36",
            "p99": "222.36",
            "min": "181.67",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "634.79",
            "p50": "563.96",
            "p95": "424.36",
            "p99": "592.70",
            "min": "371.75",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "143.51",
            "p50": "138.08",
            "p95": "125.63",
            "p99": "139.94",
            "min": "121.15",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "150.04",
            "p50": "143.51",
            "p95": "131.34",
            "p99": "146.30",
            "min": "126.66",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "150.32",
            "p50": "142.83",
            "p95": "130.85",
            "p99": "146.43",
            "min": "125.99",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "450.09",
            "p50": "396.44",
            "p95": "290.72",
            "p99": "418.22",
            "min": "282.33",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "710.64",
            "p50": "579.07",
            "p95": "446.46",
            "p99": "657.80",
            "min": "399.84",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "700.71",
            "p50": "580.60",
            "p95": "410.70",
            "p99": "642.71",
            "min": "378.48",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "82.83",
            "p50": "79.47",
            "p95": "66.71",
            "p99": "79.60",
            "min": "62.68",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "633.55",
            "p50": "418.55",
            "p95": "263.58",
            "p99": "559.56",
            "min": "198.29",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "137.83",
            "p50": "132.96",
            "p95": "120.70",
            "p99": "134.40",
            "min": "117.68",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "70.52",
            "p50": "69.06",
            "p95": "66.34",
            "p99": "69.68",
            "min": "65.30",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2505.15",
            "p50": "1801.71",
            "p95": "1094.35",
            "p99": "2222.99",
            "min": "1094.35",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "280.90",
            "p50": "232.52",
            "p95": "166.56",
            "p99": "258.03",
            "min": "166.56",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3723.76",
            "p50": "1405.53",
            "p95": "596.00",
            "p99": "3098.21",
            "min": "596.00",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11330.52",
            "p50": "4503.33",
            "p95": "1172.13",
            "p99": "9298.84",
            "min": "1172.13",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "276.64",
            "p50": "245.72",
            "p95": "178.19",
            "p99": "256.95",
            "min": "178.19",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "221.92",
            "p50": "203.02",
            "p95": "181.11",
            "p99": "213.76",
            "min": "178.96",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "97.16",
            "p50": "93.10",
            "p95": "67.00",
            "p99": "91.13",
            "min": "59.46",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "70.47",
            "p50": "69.16",
            "p95": "66.56",
            "p99": "69.69",
            "min": "66.13",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "53.64",
            "p50": "52.01",
            "p95": "49.15",
            "p99": "52.74",
            "min": "48.65",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1010.09",
            "p50": "835.54",
            "p95": "490.67",
            "p99": "906.21",
            "min": "490.67",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "66.09",
            "p50": "63.93",
            "p95": "59.49",
            "p99": "64.77",
            "min": "58.76",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "67.02",
            "p50": "64.41",
            "p95": "59.96",
            "p99": "65.61",
            "min": "58.72",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "819.98",
            "p50": "632.70",
            "p95": "470.76",
            "p99": "750.14",
            "min": "470.76",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1153.89",
            "p50": "926.01",
            "p95": "561.93",
            "p99": "1035.50",
            "min": "561.93",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "752.75",
            "p50": "643.76",
            "p95": "440.64",
            "p99": "690.33",
            "min": "440.64",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "74.82",
            "p50": "73.71",
            "p95": "73.12",
            "p99": "74.48",
            "min": "70.56",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "66.58",
            "p50": "65.91",
            "p95": "64.94",
            "p99": "66.25",
            "min": "62.92",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "35.67",
            "p50": "34.82",
            "p95": "34.79",
            "p99": "35.50",
            "min": "34.06",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "99.72",
            "p50": "86.28",
            "p95": "93.11",
            "p99": "98.40",
            "min": "83.19",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "58.81",
            "p50": "57.85",
            "p95": "56.95",
            "p99": "58.44",
            "min": "56.49",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "58.15",
            "p50": "56.47",
            "p95": "54.50",
            "p99": "57.42",
            "min": "53.59",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "58.17",
            "p50": "57.37",
            "p95": "55.30",
            "p99": "57.59",
            "min": "54.58",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "58.76",
            "p50": "57.83",
            "p95": "55.71",
            "p99": "58.15",
            "min": "54.95",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "221.15",
            "p50": "207.54",
            "p95": "171.70",
            "p99": "211.26",
            "min": "171.70",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "292.49",
            "p50": "269.84",
            "p95": "209.98",
            "p99": "275.99",
            "min": "209.98",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "221.63",
            "p50": "209.71",
            "p95": "171.87",
            "p99": "211.68",
            "min": "171.87",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "272.73",
            "p50": "249.37",
            "p95": "203.78",
            "p99": "258.94",
            "min": "203.78",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "220.93",
            "p50": "205.97",
            "p95": "173.23",
            "p99": "211.39",
            "min": "173.23",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "218.75",
            "p50": "206.64",
            "p95": "174.71",
            "p99": "209.94",
            "min": "172.39",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "49.55",
            "p50": "49.05",
            "p95": "47.31",
            "p99": "49.10",
            "min": "46.74",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "48.92",
            "p50": "48.30",
            "p95": "46.88",
            "p99": "48.52",
            "min": "46.37",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "51.76",
            "p50": "51.20",
            "p95": "50.08",
            "p99": "51.42",
            "min": "49.66",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "49.69",
            "p50": "49.13",
            "p95": "47.22",
            "p99": "49.20",
            "min": "46.60",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "96.84",
            "p50": "94.68",
            "p95": "90.76",
            "p99": "95.62",
            "min": "89.69",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "69.30",
            "p50": "66.00",
            "p95": "64.03",
            "p99": "68.25",
            "min": "62.71",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "80.50",
            "p50": "79.18",
            "p95": "73.17",
            "p99": "79.03",
            "min": "71.87",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "174.60",
            "p50": "163.86",
            "p95": "143.72",
            "p99": "168.42",
            "min": "142.10",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "165.29",
            "p50": "157.20",
            "p95": "138.36",
            "p99": "159.90",
            "min": "136.94",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "95.48",
            "p50": "93.00",
            "p95": "88.04",
            "p99": "93.99",
            "min": "86.18",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "77.69",
            "p50": "74.56",
            "p95": "69.76",
            "p99": "76.10",
            "min": "68.36",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "86.89",
            "p50": "84.99",
            "p95": "81.15",
            "p99": "85.74",
            "min": "79.71",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.63",
            "p50": "125.09",
            "p95": "111.24",
            "p99": "125.15",
            "min": "109.31",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "96.88",
            "p50": "93.53",
            "p95": "88.08",
            "p99": "95.12",
            "min": "85.88",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "73.67",
            "p50": "72.33",
            "p95": "69.43",
            "p99": "72.82",
            "min": "68.37",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "95.72",
            "p50": "93.01",
            "p95": "87.50",
            "p99": "94.08",
            "min": "86.05",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "96.22",
            "p50": "94.31",
            "p95": "88.10",
            "p99": "94.60",
            "min": "86.07",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "79.32",
            "p50": "77.92",
            "p95": "75.05",
            "p99": "78.46",
            "min": "73.98",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "59.88",
            "p50": "58.78",
            "p95": "56.78",
            "p99": "59.26",
            "min": "56.00",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "59.73",
            "p50": "58.58",
            "p95": "56.08",
            "p99": "59.00",
            "min": "55.16",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "59.01",
            "p50": "57.92",
            "p95": "56.58",
            "p99": "58.52",
            "min": "55.97",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "166.55",
            "p50": "160.32",
            "p95": "143.90",
            "p99": "162.02",
            "min": "142.71",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "73.54",
            "p50": "72.19",
            "p95": "68.90",
            "p99": "72.61",
            "min": "68.08",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "100.35",
            "p50": "98.24",
            "p95": "90.68",
            "p99": "98.42",
            "min": "89.61",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    }
}