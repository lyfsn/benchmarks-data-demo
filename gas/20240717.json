{
    "nethermind": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "351.47",
            "p50": "303.51",
            "p95": "159.03",
            "p99": "115.44",
            "min": "108.46",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "944.65",
            "p50": "713.63",
            "p95": "577.29",
            "p99": "544.23",
            "min": "539.88",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "458.46",
            "p50": "392.32",
            "p95": "308.75",
            "p99": "277.99",
            "min": "277.69",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "264.06",
            "p50": "239.95",
            "p95": "205.24",
            "p99": "192.33",
            "min": "191.21",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11072.02",
            "p50": "4143.26",
            "p95": "1319.17",
            "p99": "1101.40",
            "min": "1093.92",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "991.82",
            "p50": "734.19",
            "p95": "481.89",
            "p99": "212.97",
            "min": "161.20",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13896.74",
            "p50": "4470.58",
            "p95": "1326.88",
            "p99": "1074.13",
            "min": "1070.61",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21341.64",
            "p50": "4537.31",
            "p95": "1218.69",
            "p99": "1100.29",
            "min": "1099.70",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1096.46",
            "p50": "801.00",
            "p95": "536.26",
            "p99": "510.26",
            "min": "502.05",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "424.29",
            "p50": "363.98",
            "p95": "281.04",
            "p99": "258.65",
            "min": "258.02",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "240.09",
            "p50": "224.58",
            "p95": "187.96",
            "p99": "174.27",
            "min": "174.07",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.18",
            "p50": "69.78",
            "p95": "66.14",
            "p99": "64.49",
            "min": "64.35",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.87",
            "p50": "76.63",
            "p95": "72.10",
            "p99": "68.92",
            "min": "68.79",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2321.45",
            "p50": "1534.77",
            "p95": "1043.00",
            "p99": "951.35",
            "min": "928.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.67",
            "p50": "68.44",
            "p95": "63.62",
            "p99": "62.69",
            "min": "62.68",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "70.61",
            "p50": "68.53",
            "p95": "65.22",
            "p99": "63.51",
            "min": "63.15",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1456.73",
            "p50": "1108.14",
            "p95": "680.64",
            "p99": "641.97",
            "min": "637.80",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3622.56",
            "p50": "2182.19",
            "p95": "1120.36",
            "p99": "1090.24",
            "min": "1085.62",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1501.28",
            "p50": "1090.62",
            "p95": "696.76",
            "p99": "588.66",
            "min": "561.33",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.83",
            "p50": "127.66",
            "p95": "117.15",
            "p99": "123.97",
            "min": "115.01",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "138.03",
            "p50": "131.55",
            "p95": "118.42",
            "p99": "122.14",
            "min": "113.59",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "201.59",
            "p50": "170.51",
            "p95": "148.80",
            "p99": "148.71",
            "min": "136.31",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "193.54",
            "p50": "148.29",
            "p95": "141.04",
            "p99": "162.88",
            "min": "139.75",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "130.31",
            "p50": "123.39",
            "p95": "111.17",
            "p99": "106.89",
            "min": "106.66",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "152.75",
            "p50": "143.66",
            "p95": "132.16",
            "p99": "122.04",
            "min": "120.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "132.57",
            "p50": "124.56",
            "p95": "110.82",
            "p99": "90.67",
            "min": "86.28",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "132.69",
            "p50": "124.22",
            "p95": "115.42",
            "p99": "107.86",
            "min": "107.02",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "832.42",
            "p50": "651.92",
            "p95": "453.69",
            "p99": "258.45",
            "min": "217.53",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "782.81",
            "p50": "715.22",
            "p95": "457.75",
            "p99": "344.45",
            "min": "314.73",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "852.44",
            "p50": "691.27",
            "p95": "435.62",
            "p99": "396.80",
            "min": "386.48",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "775.18",
            "p50": "667.20",
            "p95": "416.89",
            "p99": "364.44",
            "min": "362.98",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "751.33",
            "p50": "641.34",
            "p95": "409.82",
            "p99": "352.01",
            "min": "349.47",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "849.93",
            "p50": "704.56",
            "p95": "487.55",
            "p99": "408.43",
            "min": "387.64",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "242.88",
            "p50": "216.25",
            "p95": "172.77",
            "p99": "159.85",
            "min": "159.61",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "240.43",
            "p50": "213.77",
            "p95": "189.63",
            "p99": "89.16",
            "min": "67.28",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "252.12",
            "p50": "219.46",
            "p95": "181.92",
            "p99": "170.06",
            "min": "169.01",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "242.73",
            "p50": "214.17",
            "p95": "180.58",
            "p99": "80.10",
            "min": "57.54",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "238.62",
            "p50": "220.82",
            "p95": "186.72",
            "p99": "129.60",
            "min": "112.27",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "295.40",
            "p50": "270.66",
            "p95": "224.35",
            "p99": "206.81",
            "min": "205.00",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "320.43",
            "p50": "299.32",
            "p95": "240.98",
            "p99": "220.13",
            "min": "219.03",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "415.35",
            "p50": "398.29",
            "p95": "317.16",
            "p99": "271.46",
            "min": "261.33",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "641.05",
            "p50": "581.96",
            "p95": "420.85",
            "p99": "336.35",
            "min": "335.34",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "283.00",
            "p50": "260.97",
            "p95": "213.64",
            "p99": "96.58",
            "min": "69.67",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "254.32",
            "p50": "235.10",
            "p95": "199.22",
            "p99": "185.84",
            "min": "185.73",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "272.24",
            "p50": "250.91",
            "p95": "214.97",
            "p99": "194.83",
            "min": "194.75",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "383.85",
            "p50": "348.37",
            "p95": "270.22",
            "p99": "246.17",
            "min": "244.17",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "233.76",
            "p50": "217.64",
            "p95": "194.82",
            "p99": "175.35",
            "min": "174.49",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "284.07",
            "p50": "271.09",
            "p95": "224.63",
            "p99": "202.56",
            "min": "202.11",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "277.69",
            "p50": "264.32",
            "p95": "218.60",
            "p99": "199.84",
            "min": "199.73",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "228.62",
            "p50": "214.56",
            "p95": "185.38",
            "p99": "176.90",
            "min": "176.47",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "285.08",
            "p50": "265.54",
            "p95": "226.87",
            "p99": "216.81",
            "min": "216.52",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "125.94",
            "p50": "119.89",
            "p95": "109.68",
            "p99": "105.11",
            "min": "104.48",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "126.36",
            "p50": "119.36",
            "p95": "110.32",
            "p99": "104.40",
            "min": "103.64",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "126.18",
            "p50": "119.94",
            "p95": "110.60",
            "p99": "105.56",
            "min": "105.55",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "384.80",
            "p50": "357.59",
            "p95": "289.28",
            "p99": "254.31",
            "min": "251.73",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "260.82",
            "p50": "247.08",
            "p95": "202.65",
            "p99": "189.44",
            "min": "189.08",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "426.15",
            "p50": "403.51",
            "p95": "296.33",
            "p99": "272.92",
            "min": "266.94",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "192.30",
            "p50": "172.37",
            "p95": "144.02",
            "p99": "120.08",
            "min": "119.64",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "854.79",
            "p50": "598.96",
            "p95": "455.42",
            "p99": "416.54",
            "min": "409.28",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "250.46",
            "p50": "216.31",
            "p95": "171.17",
            "p99": "159.15",
            "min": "156.02",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "158.78",
            "p50": "147.05",
            "p95": "126.33",
            "p99": "115.29",
            "min": "114.56",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2707.48",
            "p50": "1504.00",
            "p95": "1133.13",
            "p99": "957.69",
            "min": "862.85",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "330.75",
            "p50": "289.86",
            "p95": "212.20",
            "p99": "162.45",
            "min": "153.08",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4142.64",
            "p50": "2455.30",
            "p95": "1174.18",
            "p99": "1106.80",
            "min": "1094.37",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "9340.74",
            "p50": "4509.44",
            "p95": "1191.67",
            "p99": "1105.74",
            "min": "1104.49",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "370.67",
            "p50": "315.61",
            "p95": "233.35",
            "p99": "197.38",
            "min": "195.73",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "166.59",
            "p50": "150.49",
            "p95": "127.30",
            "p99": "115.06",
            "min": "113.16",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "145.83",
            "p50": "136.10",
            "p95": "118.75",
            "p99": "103.87",
            "min": "101.74",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "242.13",
            "p50": "216.97",
            "p95": "169.74",
            "p99": "148.14",
            "min": "144.86",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.37",
            "p50": "48.73",
            "p95": "45.64",
            "p99": "45.33",
            "min": "45.27",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "209.33",
            "p50": "191.37",
            "p95": "159.27",
            "p99": "153.44",
            "min": "153.24",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "87.45",
            "p50": "82.86",
            "p95": "75.96",
            "p99": "68.80",
            "min": "68.49",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.79",
            "p50": "82.73",
            "p95": "76.94",
            "p99": "74.13",
            "min": "73.89",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.50",
            "p50": "89.19",
            "p95": "80.45",
            "p99": "77.17",
            "min": "75.99",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "215.67",
            "p50": "194.70",
            "p95": "158.60",
            "p99": "133.05",
            "min": "123.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.86",
            "p50": "89.80",
            "p95": "81.59",
            "p99": "78.32",
            "min": "77.47",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "106.75",
            "p50": "102.43",
            "p95": "95.38",
            "p99": "97.90",
            "min": "91.22",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "113.33",
            "p50": "107.55",
            "p95": "99.00",
            "p99": "100.77",
            "min": "94.01",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "281.43",
            "p50": "229.10",
            "p95": "179.05",
            "p99": "184.47",
            "min": "161.73",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "162.06",
            "p50": "119.24",
            "p95": "107.71",
            "p99": "123.41",
            "min": "94.26",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "485.07",
            "p50": "377.04",
            "p95": "274.65",
            "p99": "239.12",
            "min": "238.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "522.05",
            "p50": "386.11",
            "p95": "272.89",
            "p99": "257.17",
            "min": "256.38",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "506.64",
            "p50": "377.57",
            "p95": "266.20",
            "p99": "228.78",
            "min": "227.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "493.76",
            "p50": "374.96",
            "p95": "265.93",
            "p99": "222.54",
            "min": "219.24",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1009.54",
            "p50": "731.26",
            "p95": "509.71",
            "p99": "445.54",
            "min": "445.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "806.67",
            "p50": "610.01",
            "p95": "400.95",
            "p99": "394.29",
            "min": "392.49",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1017.92",
            "p50": "712.39",
            "p95": "487.58",
            "p99": "434.08",
            "min": "433.05",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "819.51",
            "p50": "616.92",
            "p95": "409.04",
            "p99": "382.98",
            "min": "360.66",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "875.84",
            "p50": "635.01",
            "p95": "432.89",
            "p99": "414.13",
            "min": "410.77",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "932.00",
            "p50": "672.52",
            "p95": "476.19",
            "p99": "436.59",
            "min": "423.25",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "406.31",
            "p50": "340.38",
            "p95": "248.14",
            "p99": "213.26",
            "min": "212.73",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "403.39",
            "p50": "330.96",
            "p95": "248.84",
            "p99": "217.17",
            "min": "216.55",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "399.12",
            "p50": "328.51",
            "p95": "249.65",
            "p99": "233.50",
            "min": "231.27",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "414.59",
            "p50": "345.93",
            "p95": "268.01",
            "p99": "250.48",
            "min": "250.43",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "68.15",
            "p50": "66.03",
            "p95": "61.12",
            "p99": "57.72",
            "min": "56.97",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "155.64",
            "p50": "145.71",
            "p95": "125.89",
            "p99": "121.24",
            "min": "121.11",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "153.50",
            "p50": "142.15",
            "p95": "121.74",
            "p99": "96.95",
            "min": "94.91",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "166.06",
            "p50": "153.78",
            "p95": "130.10",
            "p99": "127.58",
            "min": "127.12",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "227.77",
            "p50": "208.16",
            "p95": "166.06",
            "p99": "147.09",
            "min": "137.37",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "144.16",
            "p50": "134.83",
            "p95": "116.44",
            "p99": "97.45",
            "min": "96.54",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "199.08",
            "p50": "182.06",
            "p95": "151.53",
            "p99": "146.74",
            "min": "146.46",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "157.56",
            "p50": "147.47",
            "p95": "126.65",
            "p99": "123.63",
            "min": "123.57",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "223.74",
            "p50": "205.38",
            "p95": "164.15",
            "p99": "146.13",
            "min": "140.57",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "109.94",
            "p50": "102.25",
            "p95": "91.64",
            "p99": "87.04",
            "min": "86.95",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "192.26",
            "p50": "176.97",
            "p95": "146.91",
            "p99": "142.70",
            "min": "141.82",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "159.23",
            "p50": "149.59",
            "p95": "127.28",
            "p99": "119.67",
            "min": "118.99",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "145.70",
            "p50": "136.21",
            "p95": "118.27",
            "p99": "109.00",
            "min": "108.56",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "191.22",
            "p50": "176.32",
            "p95": "147.77",
            "p99": "116.89",
            "min": "114.77",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "70.59",
            "p50": "67.93",
            "p95": "63.07",
            "p99": "58.91",
            "min": "58.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "72.03",
            "p50": "69.53",
            "p95": "63.35",
            "p99": "58.88",
            "min": "58.49",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "76.08",
            "p50": "73.56",
            "p95": "67.16",
            "p99": "64.62",
            "min": "64.43",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "169.80",
            "p50": "157.36",
            "p95": "132.01",
            "p99": "119.96",
            "min": "119.52",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "193.35",
            "p50": "177.69",
            "p95": "142.92",
            "p99": "109.50",
            "min": "106.30",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "197.76",
            "p50": "183.07",
            "p95": "148.42",
            "p99": "128.73",
            "min": "125.91",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "726.44",
            "p50": "588.42",
            "p95": "376.80",
            "p99": "351.86",
            "min": "349.25",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1555.40",
            "p50": "1018.72",
            "p95": "962.45",
            "p99": "880.20",
            "min": "856.96",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "858.71",
            "p50": "673.50",
            "p95": "451.43",
            "p99": "429.02",
            "min": "426.11",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "716.02",
            "p50": "575.01",
            "p95": "371.46",
            "p99": "359.34",
            "min": "358.06",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8128.94",
            "p50": "4940.86",
            "p95": "1179.44",
            "p99": "1129.74",
            "min": "1128.95",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "813.94",
            "p50": "648.60",
            "p95": "423.87",
            "p99": "403.04",
            "min": "402.00",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13976.25",
            "p50": "4932.65",
            "p95": "1239.65",
            "p99": "1169.85",
            "min": "1130.60",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "37860.49",
            "p50": "4901.57",
            "p95": "1249.95",
            "p99": "1220.27",
            "min": "1213.28",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "812.28",
            "p50": "652.28",
            "p95": "408.40",
            "p99": "399.93",
            "min": "398.70",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "440.94",
            "p50": "369.16",
            "p95": "272.60",
            "p99": "262.70",
            "min": "262.21",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "242.07",
            "p50": "220.83",
            "p95": "187.68",
            "p99": "160.73",
            "min": "156.80",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "72.58",
            "p50": "70.34",
            "p95": "65.36",
            "p99": "64.73",
            "min": "64.55",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "81.81",
            "p50": "76.87",
            "p95": "72.56",
            "p99": "69.90",
            "min": "69.82",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "169.21",
            "p50": "160.53",
            "p95": "144.41",
            "p99": "136.78",
            "min": "136.41",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.84",
            "p50": "51.49",
            "p95": "49.12",
            "p99": "48.56",
            "min": "48.52",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.85",
            "p50": "51.54",
            "p95": "49.12",
            "p99": "48.67",
            "min": "48.61",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1208.37",
            "p50": "876.30",
            "p95": "586.67",
            "p99": "538.22",
            "min": "524.88",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5900.48",
            "p50": "2840.96",
            "p95": "1377.21",
            "p99": "1055.34",
            "min": "957.13",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1052.23",
            "p50": "782.66",
            "p95": "514.29",
            "p99": "488.35",
            "min": "487.47",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "65.24",
            "p50": "62.13",
            "p95": "60.32",
            "p99": "62.07",
            "min": "59.68",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "70.02",
            "p50": "67.10",
            "p95": "63.26",
            "p99": "65.31",
            "min": "62.78",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "312.87",
            "p50": "269.68",
            "p95": "220.79",
            "p99": "231.85",
            "min": "212.85",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "87.05",
            "p50": "72.83",
            "p95": "69.30",
            "p99": "76.58",
            "min": "68.68",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "470.26",
            "p50": "396.98",
            "p95": "290.00",
            "p99": "277.63",
            "min": "275.94",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "478.40",
            "p50": "413.40",
            "p95": "319.26",
            "p99": "287.36",
            "min": "286.74",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "472.33",
            "p50": "400.34",
            "p95": "290.77",
            "p99": "281.83",
            "min": "281.25",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "463.98",
            "p50": "395.79",
            "p95": "310.04",
            "p99": "286.66",
            "min": "286.50",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1542.69",
            "p50": "1064.71",
            "p95": "738.34",
            "p99": "685.29",
            "min": "650.71",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1348.33",
            "p50": "957.11",
            "p95": "660.85",
            "p99": "607.22",
            "min": "595.08",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1521.19",
            "p50": "1060.20",
            "p95": "751.59",
            "p99": "646.23",
            "min": "643.30",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1362.57",
            "p50": "955.59",
            "p95": "647.41",
            "p99": "619.83",
            "min": "618.93",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1321.25",
            "p50": "962.85",
            "p95": "653.61",
            "p99": "596.75",
            "min": "586.24",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1503.72",
            "p50": "1053.42",
            "p95": "749.90",
            "p99": "699.49",
            "min": "697.76",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "401.87",
            "p50": "351.25",
            "p95": "277.33",
            "p99": "250.75",
            "min": "250.40",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "406.57",
            "p50": "351.43",
            "p95": "268.19",
            "p99": "260.49",
            "min": "260.40",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "428.97",
            "p50": "373.00",
            "p95": "285.65",
            "p99": "270.89",
            "min": "270.75",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "403.57",
            "p50": "351.35",
            "p95": "275.89",
            "p99": "260.55",
            "min": "260.15",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "274.11",
            "p50": "249.80",
            "p95": "200.60",
            "p99": "198.19",
            "min": "197.55",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "738.23",
            "p50": "573.82",
            "p95": "397.48",
            "p99": "363.54",
            "min": "363.47",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "797.28",
            "p50": "629.41",
            "p95": "419.30",
            "p99": "345.49",
            "min": "332.46",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "529.29",
            "p50": "453.36",
            "p95": "336.74",
            "p99": "305.73",
            "min": "304.96",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "916.01",
            "p50": "716.66",
            "p95": "463.54",
            "p99": "434.99",
            "min": "434.78",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "504.82",
            "p50": "426.91",
            "p95": "304.72",
            "p99": "291.52",
            "min": "290.25",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "586.16",
            "p50": "488.87",
            "p95": "342.64",
            "p99": "301.81",
            "min": "290.91",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "728.91",
            "p50": "571.20",
            "p95": "377.72",
            "p99": "359.42",
            "min": "357.39",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "932.22",
            "p50": "717.78",
            "p95": "470.73",
            "p99": "448.65",
            "min": "445.87",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "271.09",
            "p50": "247.60",
            "p95": "206.75",
            "p99": "198.91",
            "min": "198.82",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "680.01",
            "p50": "546.00",
            "p95": "362.89",
            "p99": "347.04",
            "min": "346.46",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "715.30",
            "p50": "583.47",
            "p95": "383.37",
            "p99": "361.23",
            "min": "358.74",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "240.46",
            "p50": "221.19",
            "p95": "181.47",
            "p99": "179.26",
            "min": "179.10",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "729.69",
            "p50": "591.11",
            "p95": "395.77",
            "p99": "369.99",
            "min": "369.23",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "150.61",
            "p50": "139.48",
            "p95": "126.11",
            "p99": "120.96",
            "min": "120.73",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "152.35",
            "p50": "143.39",
            "p95": "125.71",
            "p99": "124.18",
            "min": "124.08",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "153.45",
            "p50": "143.23",
            "p95": "127.24",
            "p99": "123.13",
            "min": "123.02",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "457.40",
            "p50": "398.43",
            "p95": "311.86",
            "p99": "273.14",
            "min": "271.30",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "720.14",
            "p50": "578.32",
            "p95": "387.52",
            "p99": "366.52",
            "min": "365.81",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "711.19",
            "p50": "576.19",
            "p95": "385.10",
            "p99": "357.35",
            "min": "354.50",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "158.29",
            "p50": "152.99",
            "p95": "141.15",
            "p99": "119.92",
            "min": "117.24",
            "n": "112",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "207.32",
            "p50": "179.11",
            "p95": "145.30",
            "p99": "159.14",
            "min": "141.32",
            "n": "72",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "202.65",
            "p50": "193.23",
            "p95": "168.59",
            "p99": "143.34",
            "min": "142.81",
            "n": "104",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "159.33",
            "p50": "153.31",
            "p95": "142.12",
            "p99": "132.59",
            "min": "130.83",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2222.63",
            "p50": "1456.45",
            "p95": "740.45",
            "p99": "555.92",
            "min": "555.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "340.55",
            "p50": "319.87",
            "p95": "268.43",
            "p99": "229.08",
            "min": "227.38",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3831.55",
            "p50": "2153.08",
            "p95": "827.76",
            "p99": "729.09",
            "min": "720.87",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11484.74",
            "p50": "3725.44",
            "p95": "1117.96",
            "p99": "1067.93",
            "min": "1065.17",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "337.23",
            "p50": "311.85",
            "p95": "266.71",
            "p99": "213.34",
            "min": "206.93",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "162.91",
            "p50": "153.94",
            "p95": "135.87",
            "p99": "126.09",
            "min": "126.06",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "119.13",
            "p50": "115.42",
            "p95": "106.26",
            "p99": "101.18",
            "min": "101.14",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "238.05",
            "p50": "224.85",
            "p95": "196.74",
            "p99": "165.45",
            "min": "160.36",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.77",
            "p50": "49.65",
            "p95": "48.23",
            "p99": "47.64",
            "min": "47.63",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "205.71",
            "p50": "195.24",
            "p95": "173.33",
            "p99": "158.50",
            "min": "154.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.20",
            "p50": "84.23",
            "p95": "79.42",
            "p99": "75.82",
            "min": "75.38",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.66",
            "p50": "84.02",
            "p95": "80.70",
            "p99": "76.93",
            "min": "76.22",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.82",
            "p50": "90.32",
            "p95": "86.03",
            "p99": "82.01",
            "min": "81.95",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "211.50",
            "p50": "200.34",
            "p95": "178.58",
            "p99": "170.89",
            "min": "167.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.95",
            "p50": "90.14",
            "p95": "85.28",
            "p99": "81.64",
            "min": "81.17",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "109.50",
            "p50": "106.05",
            "p95": "97.94",
            "p99": "100.08",
            "min": "92.98",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "111.97",
            "p50": "108.04",
            "p95": "100.09",
            "p99": "103.46",
            "min": "98.88",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "158.43",
            "p50": "149.36",
            "p95": "134.09",
            "p99": "132.72",
            "min": "126.69",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.31",
            "p50": "124.13",
            "p95": "115.52",
            "p99": "128.16",
            "min": "112.20",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "244.54",
            "p50": "219.02",
            "p95": "178.59",
            "p99": "167.27",
            "min": "167.22",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "271.97",
            "p50": "241.15",
            "p95": "201.83",
            "p99": "183.42",
            "min": "182.55",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "240.48",
            "p50": "219.44",
            "p95": "192.68",
            "p99": "175.95",
            "min": "174.79",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "249.39",
            "p50": "218.59",
            "p95": "183.69",
            "p99": "166.49",
            "min": "166.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "852.87",
            "p50": "713.19",
            "p95": "525.95",
            "p99": "391.43",
            "min": "338.10",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "820.49",
            "p50": "684.98",
            "p95": "500.75",
            "p99": "325.95",
            "min": "323.21",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "819.20",
            "p50": "685.69",
            "p95": "527.12",
            "p99": "429.43",
            "min": "415.52",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "800.58",
            "p50": "680.32",
            "p95": "527.54",
            "p99": "403.18",
            "min": "371.84",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "776.70",
            "p50": "659.04",
            "p95": "520.42",
            "p99": "471.24",
            "min": "460.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "798.23",
            "p50": "673.93",
            "p95": "517.48",
            "p99": "379.43",
            "min": "376.33",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "215.54",
            "p50": "198.47",
            "p95": "177.43",
            "p99": "164.61",
            "min": "164.10",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "210.39",
            "p50": "197.61",
            "p95": "180.13",
            "p99": "164.76",
            "min": "164.29",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "220.82",
            "p50": "201.52",
            "p95": "177.11",
            "p99": "157.81",
            "min": "154.65",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "217.37",
            "p50": "203.14",
            "p95": "181.99",
            "p99": "177.16",
            "min": "177.13",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "89.76",
            "p50": "87.09",
            "p95": "82.88",
            "p99": "78.03",
            "min": "76.89",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "83.13",
            "p50": "80.65",
            "p95": "75.97",
            "p99": "72.32",
            "min": "71.98",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "77.05",
            "p50": "74.79",
            "p95": "70.29",
            "p99": "67.83",
            "min": "67.63",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "120.66",
            "p50": "116.11",
            "p95": "103.03",
            "p99": "86.51",
            "min": "75.93",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "179.24",
            "p50": "170.00",
            "p95": "150.41",
            "p99": "143.96",
            "min": "142.82",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "120.83",
            "p50": "117.34",
            "p95": "109.51",
            "p99": "108.01",
            "min": "107.87",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "177.46",
            "p50": "167.62",
            "p95": "150.28",
            "p99": "129.05",
            "min": "124.93",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "158.32",
            "p50": "152.81",
            "p95": "137.44",
            "p99": "120.76",
            "min": "119.86",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "178.22",
            "p50": "169.42",
            "p95": "152.11",
            "p99": "125.47",
            "min": "125.43",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "90.75",
            "p50": "86.85",
            "p95": "80.98",
            "p99": "76.82",
            "min": "76.67",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "158.33",
            "p50": "152.12",
            "p95": "134.08",
            "p99": "121.89",
            "min": "120.50",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "133.94",
            "p50": "129.38",
            "p95": "119.96",
            "p99": "113.18",
            "min": "112.28",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "118.54",
            "p50": "114.96",
            "p95": "104.67",
            "p99": "100.50",
            "min": "100.07",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "157.81",
            "p50": "151.98",
            "p95": "137.46",
            "p99": "123.08",
            "min": "120.24",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "63.32",
            "p50": "61.81",
            "p95": "58.89",
            "p99": "55.32",
            "min": "54.89",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "64.21",
            "p50": "62.84",
            "p95": "59.66",
            "p99": "58.57",
            "min": "58.47",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "67.31",
            "p50": "65.74",
            "p95": "61.91",
            "p99": "60.46",
            "min": "60.26",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "145.42",
            "p50": "139.39",
            "p95": "127.02",
            "p99": "117.47",
            "min": "117.32",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "159.53",
            "p50": "152.81",
            "p95": "135.54",
            "p99": "126.01",
            "min": "124.70",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "162.84",
            "p50": "155.17",
            "p95": "141.57",
            "p99": "131.73",
            "min": "130.46",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "84.57",
            "p50": "80.67",
            "p95": "62.54",
            "p99": "59.97",
            "min": "59.77",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "618.00",
            "p50": "414.02",
            "p95": "202.68",
            "p99": "180.52",
            "min": "179.00",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "138.66",
            "p50": "132.18",
            "p95": "120.69",
            "p99": "116.09",
            "min": "115.97",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "88.17",
            "p50": "70.14",
            "p95": "66.41",
            "p99": "64.84",
            "min": "64.66",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "3139.39",
            "p50": "2058.13",
            "p95": "1092.49",
            "p99": "945.29",
            "min": "919.22",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "279.19",
            "p50": "242.76",
            "p95": "189.61",
            "p99": "153.74",
            "min": "149.02",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4952.53",
            "p50": "1401.03",
            "p95": "683.53",
            "p99": "609.54",
            "min": "590.79",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "15145.17",
            "p50": "4507.56",
            "p95": "1184.59",
            "p99": "1020.27",
            "min": "944.08",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "283.37",
            "p50": "233.34",
            "p95": "187.85",
            "p99": "169.86",
            "min": "158.56",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "228.15",
            "p50": "193.70",
            "p95": "152.19",
            "p99": "124.84",
            "min": "117.67",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "98.48",
            "p50": "92.02",
            "p95": "72.48",
            "p99": "61.29",
            "min": "61.25",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "70.95",
            "p50": "69.02",
            "p95": "64.97",
            "p99": "63.89",
            "min": "63.67",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "54.93",
            "p50": "52.51",
            "p95": "49.39",
            "p99": "46.97",
            "min": "46.10",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1092.93",
            "p50": "799.94",
            "p95": "471.36",
            "p99": "315.00",
            "min": "252.11",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "67.62",
            "p50": "64.57",
            "p95": "61.00",
            "p99": "58.55",
            "min": "57.98",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.93",
            "p50": "64.64",
            "p95": "60.82",
            "p99": "57.42",
            "min": "56.65",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "821.67",
            "p50": "653.44",
            "p95": "415.49",
            "p99": "272.96",
            "min": "259.85",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1381.50",
            "p50": "900.20",
            "p95": "564.21",
            "p99": "361.43",
            "min": "285.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "893.74",
            "p50": "682.55",
            "p95": "427.80",
            "p99": "277.44",
            "min": "251.56",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "77.83",
            "p50": "73.90",
            "p95": "71.58",
            "p99": "73.91",
            "min": "70.95",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "69.55",
            "p50": "66.42",
            "p95": "63.04",
            "p99": "65.05",
            "min": "62.63",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "40.49",
            "p50": "38.44",
            "p95": "36.72",
            "p99": "37.03",
            "min": "36.21",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "111.72",
            "p50": "86.55",
            "p95": "82.39",
            "p99": "94.63",
            "min": "81.74",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "67.54",
            "p50": "63.54",
            "p95": "59.23",
            "p99": "57.76",
            "min": "57.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "64.78",
            "p50": "61.55",
            "p95": "57.90",
            "p99": "56.32",
            "min": "56.16",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "66.99",
            "p50": "63.60",
            "p95": "58.60",
            "p99": "56.93",
            "min": "56.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "67.69",
            "p50": "64.12",
            "p95": "59.66",
            "p99": "57.48",
            "min": "57.20",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "248.76",
            "p50": "224.37",
            "p95": "189.51",
            "p99": "179.60",
            "min": "176.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "302.71",
            "p50": "274.59",
            "p95": "229.53",
            "p99": "211.76",
            "min": "211.27",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "252.52",
            "p50": "225.88",
            "p95": "190.19",
            "p99": "179.01",
            "min": "178.13",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "282.82",
            "p50": "257.86",
            "p95": "215.83",
            "p99": "204.59",
            "min": "203.31",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "240.26",
            "p50": "219.82",
            "p95": "185.81",
            "p99": "176.18",
            "min": "175.72",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "250.54",
            "p50": "224.37",
            "p95": "190.05",
            "p99": "181.14",
            "min": "180.09",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "57.76",
            "p50": "54.90",
            "p95": "50.37",
            "p99": "48.25",
            "min": "47.94",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "57.73",
            "p50": "54.64",
            "p95": "50.47",
            "p99": "48.62",
            "min": "48.46",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "60.66",
            "p50": "58.01",
            "p95": "52.93",
            "p99": "50.95",
            "min": "50.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "57.79",
            "p50": "55.07",
            "p95": "50.55",
            "p99": "48.51",
            "min": "48.31",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "100.44",
            "p50": "95.95",
            "p95": "89.86",
            "p99": "86.39",
            "min": "85.88",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "81.72",
            "p50": "70.86",
            "p95": "64.89",
            "p99": "62.89",
            "min": "62.55",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "85.41",
            "p50": "74.66",
            "p95": "70.12",
            "p99": "68.64",
            "min": "68.63",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "174.72",
            "p50": "164.77",
            "p95": "145.13",
            "p99": "139.53",
            "min": "139.46",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "167.00",
            "p50": "157.49",
            "p95": "140.39",
            "p99": "135.50",
            "min": "135.31",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "97.63",
            "p50": "93.29",
            "p95": "88.45",
            "p99": "85.42",
            "min": "85.30",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "93.39",
            "p50": "80.86",
            "p95": "71.51",
            "p99": "65.78",
            "min": "64.94",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "89.20",
            "p50": "86.13",
            "p95": "80.40",
            "p99": "77.51",
            "min": "77.10",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "127.46",
            "p50": "121.10",
            "p95": "110.53",
            "p99": "107.56",
            "min": "107.09",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "100.27",
            "p50": "95.19",
            "p95": "88.48",
            "p99": "87.16",
            "min": "87.04",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "75.33",
            "p50": "72.41",
            "p95": "68.88",
            "p99": "62.46",
            "min": "62.00",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "98.06",
            "p50": "94.80",
            "p95": "88.34",
            "p99": "87.13",
            "min": "87.13",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "100.51",
            "p50": "95.19",
            "p95": "89.34",
            "p99": "87.21",
            "min": "87.18",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "81.88",
            "p50": "78.55",
            "p95": "74.42",
            "p99": "72.76",
            "min": "72.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "62.16",
            "p50": "59.69",
            "p95": "56.72",
            "p99": "55.27",
            "min": "55.14",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "61.91",
            "p50": "59.14",
            "p95": "56.41",
            "p99": "54.67",
            "min": "54.54",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "61.07",
            "p50": "58.65",
            "p95": "56.20",
            "p99": "53.56",
            "min": "53.36",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "168.23",
            "p50": "160.32",
            "p95": "142.44",
            "p99": "133.35",
            "min": "130.09",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "75.32",
            "p50": "73.03",
            "p95": "68.76",
            "p99": "67.57",
            "min": "67.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "103.79",
            "p50": "99.56",
            "p95": "91.66",
            "p99": "90.35",
            "min": "89.88",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    }
}