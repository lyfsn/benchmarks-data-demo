{
    "clients": {
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1867.206684,
                    "min": 1687.488934,
                    "p50": 1797.730903,
                    "p95": 1867.206684,
                    "p99": 1867.206684,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1267.5926849999998,
                    "min": 1165.7599659999998,
                    "p50": 1220.627499,
                    "p95": 1267.5926849999998,
                    "p99": 1267.5926849999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1866.7071409999999,
                    "min": 1832.596642,
                    "p50": 1839.797539,
                    "p95": 1866.7071409999999,
                    "p99": 1866.7071409999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1600.514305,
                    "min": 1530.757363,
                    "p50": 1582.7367319999998,
                    "p95": 1600.514305,
                    "p99": 1600.514305,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1243.3850459999999,
                    "min": 1182.844768,
                    "p50": 1226.059555,
                    "p95": 1243.3850459999999,
                    "p99": 1243.3850459999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1488.483699,
                    "min": 1438.456757,
                    "p50": 1469.5541489999998,
                    "p95": 1488.483699,
                    "p99": 1488.483699,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1735.4784499999998,
                    "min": 1658.258543,
                    "p50": 1714.7832079999998,
                    "p95": 1735.4784499999998,
                    "p99": 1735.4784499999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 399.864271,
                    "min": 390.466834,
                    "p50": 396.06596299999995,
                    "p95": 399.864271,
                    "p99": 399.864271,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 517.451381,
                    "min": 500.345043,
                    "p50": 513.534076,
                    "p95": 517.451381,
                    "p99": 517.451381,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 686.309975,
                    "min": 629.5358719999999,
                    "p50": 640.095693,
                    "p95": 686.309975,
                    "p99": 686.309975,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2599.7597849999997,
                    "min": 2403.2859169999997,
                    "p50": 2434.7275609999997,
                    "p95": 2599.7597849999997,
                    "p99": 2599.7597849999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 816.703505,
                    "min": 739.321971,
                    "p50": 755.472818,
                    "p95": 816.703505,
                    "p99": 816.703505,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2351.453572,
                    "min": 2103.857394,
                    "p50": 2263.892417,
                    "p95": 2351.453572,
                    "p99": 2351.453572,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1066.126213,
                    "min": 967.38249,
                    "p50": 1021.879877,
                    "p95": 1066.126213,
                    "p99": 1066.126213,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 901.7549309999999,
                    "min": 865.626408,
                    "p50": 877.1596099999999,
                    "p95": 901.7549309999999,
                    "p99": 901.7549309999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 484.16594499999997,
                    "min": 428.44796499999995,
                    "p50": 454.46831899999995,
                    "p95": 484.16594499999997,
                    "p99": 484.16594499999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 679.310539,
                    "min": 433.25780799999995,
                    "p50": 454.11415,
                    "p95": 679.310539,
                    "p99": 679.310539,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 520.72863,
                    "min": 464.406768,
                    "p50": 500.848928,
                    "p95": 520.72863,
                    "p99": 520.72863,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 128.62206799999998,
                    "min": 99.102505,
                    "p50": 117.58500599999999,
                    "p95": 128.62206799999998,
                    "p99": 128.62206799999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 209.052721,
                    "min": 164.734554,
                    "p50": 203.35554199999999,
                    "p95": 209.052721,
                    "p99": 209.052721,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 340.660847,
                    "min": 310.75344,
                    "p50": 325.712308,
                    "p95": 340.660847,
                    "p99": 340.660847,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 105.119889,
                    "min": 62.298966,
                    "p50": 99.11295,
                    "p95": 105.119889,
                    "p99": 105.119889,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 175.749583,
                    "min": 136.54867,
                    "p50": 155.234177,
                    "p95": 175.749583,
                    "p99": 175.749583,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 172.537678,
                    "min": 154.22499399999998,
                    "p50": 168.097671,
                    "p95": 172.537678,
                    "p99": 172.537678,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 835.9796369999999,
                    "min": 782.158117,
                    "p50": 793.15959,
                    "p95": 835.9796369999999,
                    "p99": 835.9796369999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1013.7828559999999,
                    "min": 935.2306659999999,
                    "p50": 960.9785149999999,
                    "p95": 1013.7828559999999,
                    "p99": 1013.7828559999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 239.08513599999998,
                    "min": 203.700301,
                    "p50": 211.91411399999998,
                    "p95": 239.08513599999998,
                    "p99": 239.08513599999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3544.922822,
                    "min": 3344.906466,
                    "p50": 3416.007857,
                    "p95": 3544.922822,
                    "p99": 3544.922822,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.8176,
                    "min": 64.862265,
                    "p50": 91.446203,
                    "p95": 106.8176,
                    "p99": 106.8176,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 159.929419,
                    "min": 145.349226,
                    "p50": 150.227474,
                    "p95": 159.929419,
                    "p99": 159.929419,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1019.3086529999999,
                    "min": 934.665747,
                    "p50": 1002.754049,
                    "p95": 1019.3086529999999,
                    "p99": 1019.3086529999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 911.105602,
                    "min": 815.365956,
                    "p50": 864.5367749999999,
                    "p95": 911.105602,
                    "p99": 911.105602,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 726.392442,
                    "min": 673.359822,
                    "p50": 692.714567,
                    "p95": 726.392442,
                    "p99": 726.392442,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 783.853221,
                    "min": 753.0187189999999,
                    "p50": 768.19215,
                    "p95": 783.853221,
                    "p99": 783.853221,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 403.039354,
                    "min": 369.898353,
                    "p50": 396.898233,
                    "p95": 403.039354,
                    "p99": 403.039354,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2241.726315,
                    "min": 2153.092394,
                    "p50": 2194.223862,
                    "p95": 2241.726315,
                    "p99": 2241.726315,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1311.4344509999999,
                    "min": 1246.901501,
                    "p50": 1296.486786,
                    "p95": 1311.4344509999999,
                    "p99": 1311.4344509999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 979.4529729999999,
                    "min": 950.2127909999999,
                    "p50": 974.5435319999999,
                    "p95": 979.4529729999999,
                    "p99": 979.4529729999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 910.346428,
                    "min": 876.110116,
                    "p50": 900.126002,
                    "p95": 910.346428,
                    "p99": 910.346428,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 544.998431,
                    "min": 537.7357959999999,
                    "p50": 542.102548,
                    "p95": 544.998431,
                    "p99": 544.998431,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1494.720875,
                    "min": 1457.473026,
                    "p50": 1482.148205,
                    "p95": 1494.720875,
                    "p99": 1494.720875,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.895337,
                    "min": 249.679946,
                    "p50": 255.06141,
                    "p95": 260.895337,
                    "p99": 260.895337,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1127.022962,
                    "min": 1087.466101,
                    "p50": 1114.994794,
                    "p95": 1127.022962,
                    "p99": 1127.022962,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 621.107753,
                    "min": 611.2153999999999,
                    "p50": 613.782075,
                    "p95": 621.107753,
                    "p99": 621.107753,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 477.95564299999995,
                    "min": 439.39821,
                    "p50": 468.66191899999995,
                    "p95": 477.95564299999995,
                    "p99": 477.95564299999995,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 333.391129,
                    "min": 323.67307,
                    "p50": 327.699363,
                    "p95": 333.391129,
                    "p99": 333.391129,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1065.830404,
                    "min": 1029.7847749999999,
                    "p50": 1051.203431,
                    "p95": 1065.830404,
                    "p99": 1065.830404,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2551.175739,
                    "min": 2004.0673519999998,
                    "p50": 2446.181017,
                    "p95": 2551.175739,
                    "p99": 2551.175739,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 461.39337,
                    "min": 343.947818,
                    "p50": 452.914828,
                    "p95": 461.39337,
                    "p99": 461.39337,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1736.6840929999998,
                    "min": 1367.767251,
                    "p50": 1692.41652,
                    "p95": 1736.6840929999998,
                    "p99": 1736.6840929999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1887.371664,
                    "min": 1491.62356,
                    "p50": 1846.090823,
                    "p95": 1887.371664,
                    "p99": 1887.371664,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 615.355241,
                    "min": 467.237644,
                    "p50": 581.9024069999999,
                    "p95": 615.355241,
                    "p99": 615.355241,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1601.0070409999998,
                    "min": 1268.1688789999998,
                    "p50": 1570.57996,
                    "p95": 1601.0070409999998,
                    "p99": 1601.0070409999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2164.48374,
                    "min": 1714.388319,
                    "p50": 2133.262749,
                    "p95": 2164.48374,
                    "p99": 2164.48374,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 877.5366879999999,
                    "min": 709.07454,
                    "p50": 857.070169,
                    "p95": 877.5366879999999,
                    "p99": 877.5366879999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1316.598385,
                    "min": 1043.764708,
                    "p50": 1285.184098,
                    "p95": 1316.598385,
                    "p99": 1316.598385,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1182.869582,
                    "min": 923.0034929999999,
                    "p50": 1145.079718,
                    "p95": 1182.869582,
                    "p99": 1182.869582,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2864.691278,
                    "min": 2287.074553,
                    "p50": 2804.120527,
                    "p95": 2864.691278,
                    "p99": 2864.691278,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1455.6876929999999,
                    "min": 1172.31191,
                    "p50": 1414.157808,
                    "p95": 1455.6876929999999,
                    "p99": 1455.6876929999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1028.673671,
                    "min": 819.6653339999999,
                    "p50": 996.114518,
                    "p95": 1028.673671,
                    "p99": 1028.673671,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 746.841236,
                    "min": 593.749408,
                    "p50": 730.618483,
                    "p95": 746.841236,
                    "p99": 746.841236,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2002.466082,
                    "min": 1585.936485,
                    "p50": 1949.0236089999999,
                    "p95": 2002.466082,
                    "p99": 2002.466082,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 127.850065,
                    "min": 104.578913,
                    "p50": 114.665151,
                    "p95": 127.850065,
                    "p99": 127.850065,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 46.395572,
                    "min": 25.470639,
                    "p50": 41.908476,
                    "p95": 46.395572,
                    "p99": 46.395572,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 236.603725,
                    "min": 200.240848,
                    "p50": 219.50708899999998,
                    "p95": 236.603725,
                    "p99": 236.603725,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 477.541559,
                    "min": 425.62206699999996,
                    "p50": 467.247301,
                    "p95": 477.541559,
                    "p99": 477.541559,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 54.498318999999995,
                    "min": 32.213013,
                    "p50": 51.300008999999996,
                    "p95": 54.498318999999995,
                    "p99": 54.498318999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 55.514891999999996,
                    "min": 44.559653,
                    "p50": 53.253983999999996,
                    "p95": 55.514891999999996,
                    "p99": 55.514891999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 217.398293,
                    "min": 168.416397,
                    "p50": 190.61572999999999,
                    "p95": 217.398293,
                    "p99": 217.398293,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 49.061839,
                    "min": 42.818670999999995,
                    "p50": 44.761047999999995,
                    "p95": 49.061839,
                    "p99": 49.061839,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 31.557568,
                    "min": 26.641724,
                    "p50": 27.465149,
                    "p95": 31.557568,
                    "p99": 31.557568,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 81.94376299999999,
                    "min": 71.532263,
                    "p50": 73.562061,
                    "p95": 81.94376299999999,
                    "p99": 81.94376299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 213.32895599999998,
                    "min": 125.405935,
                    "p50": 132.297307,
                    "p95": 213.32895599999998,
                    "p99": 213.32895599999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.46756,
                    "min": 21.29458,
                    "p50": 26.993613,
                    "p95": 27.46756,
                    "p99": 27.46756,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 58.552186999999996,
                    "min": 48.889534999999995,
                    "p50": 51.741256,
                    "p95": 58.552186999999996,
                    "p99": 58.552186999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 72.441957,
                    "min": 62.762384999999995,
                    "p50": 64.30508999999999,
                    "p95": 72.441957,
                    "p99": 72.441957,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 83.49058,
                    "min": 28.55905,
                    "p50": 48.118615999999996,
                    "p95": 83.49058,
                    "p99": 83.49058,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 84.842804,
                    "min": 43.446127999999995,
                    "p50": 53.809413,
                    "p95": 84.842804,
                    "p99": 84.842804,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 60.515072999999994,
                    "min": 55.675278999999996,
                    "p50": 58.570319999999995,
                    "p95": 60.515072999999994,
                    "p99": 60.515072999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 144.413892,
                    "min": 43.658716999999996,
                    "p50": 53.976395999999994,
                    "p95": 144.413892,
                    "p99": 144.413892,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 60.290822,
                    "min": 46.112362,
                    "p50": 55.848034,
                    "p95": 60.290822,
                    "p99": 60.290822,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 377.196688,
                    "min": 356.655481,
                    "p50": 365.345305,
                    "p95": 377.196688,
                    "p99": 377.196688,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.961548,
                    "min": 200.692095,
                    "p50": 204.38467699999998,
                    "p95": 214.961548,
                    "p99": 214.961548,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 690.911163,
                    "min": 522.6003019999999,
                    "p50": 593.519107,
                    "p95": 690.911163,
                    "p99": 690.911163,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.340293,
                    "min": 209.475611,
                    "p50": 251.261644,
                    "p95": 323.340293,
                    "p99": 323.340293,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 504.454948,
                    "min": 410.865924,
                    "p50": 462.324398,
                    "p95": 504.454948,
                    "p99": 504.454948,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2249.556456,
                    "min": 1951.774358,
                    "p50": 2026.907507,
                    "p95": 2249.556456,
                    "p99": 2249.556456,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 513.358224,
                    "min": 379.094412,
                    "p50": 428.862776,
                    "p95": 513.358224,
                    "p99": 513.358224,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 641.109247,
                    "min": 486.14464699999996,
                    "p50": 574.1850909999999,
                    "p95": 641.109247,
                    "p99": 641.109247,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 826.8322469999999,
                    "min": 618.064548,
                    "p50": 731.3304939999999,
                    "p95": 826.8322469999999,
                    "p99": 826.8322469999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 382.687575,
                    "min": 273.446893,
                    "p50": 306.08784399999996,
                    "p95": 382.687575,
                    "p99": 382.687575,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1823.519531,
                    "min": 1477.3976699999998,
                    "p50": 1574.439965,
                    "p95": 1823.519531,
                    "p99": 1823.519531,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 285.75131799999997,
                    "min": 259.334546,
                    "p50": 278.828369,
                    "p95": 285.75131799999997,
                    "p99": 285.75131799999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 472.63994499999995,
                    "min": 427.5422,
                    "p50": 446.835563,
                    "p95": 472.63994499999995,
                    "p99": 472.63994499999995,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1197.318295,
                    "min": 1031.6340619999999,
                    "p50": 1117.9643079999998,
                    "p95": 1197.318295,
                    "p99": 1197.318295,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 265.236558,
                    "min": 161.269715,
                    "p50": 176.88085099999998,
                    "p95": 265.236558,
                    "p99": 265.236558,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4160.873679,
                    "min": 3829.618414,
                    "p50": 4037.533771,
                    "p95": 4160.873679,
                    "p99": 4160.873679,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 192.298213,
                    "min": 130.764937,
                    "p50": 140.559297,
                    "p95": 192.298213,
                    "p99": 192.298213,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 632.6230969999999,
                    "min": 541.3614299999999,
                    "p50": 589.9130289999999,
                    "p95": 632.6230969999999,
                    "p99": 632.6230969999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 908.7371509999999,
                    "min": 720.393187,
                    "p50": 827.3753879999999,
                    "p95": 908.7371509999999,
                    "p99": 908.7371509999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 66.91572099999999,
                    "min": 59.486152999999995,
                    "p50": 63.420978999999996,
                    "p95": 66.91572099999999,
                    "p99": 66.91572099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 89.84098399999999,
                    "min": 73.528879,
                    "p50": 83.39676399999999,
                    "p95": 89.84098399999999,
                    "p99": 89.84098399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.823730999999995,
                    "min": 40.915244,
                    "p50": 50.336884999999995,
                    "p95": 57.823730999999995,
                    "p99": 57.823730999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 81.457962,
                    "min": 60.674921,
                    "p50": 74.620386,
                    "p95": 81.457962,
                    "p99": 81.457962,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 43.872341999999996,
                    "min": 26.296819,
                    "p50": 32.224123999999996,
                    "p95": 43.872341999999996,
                    "p99": 43.872341999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 194.37441099999998,
                    "min": 164.989429,
                    "p50": 185.373439,
                    "p95": 194.37441099999998,
                    "p99": 194.37441099999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 175.50786,
                    "min": 106.35248299999999,
                    "p50": 110.935789,
                    "p95": 175.50786,
                    "p99": 175.50786,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 122.25321199999999,
                    "min": 62.046696999999995,
                    "p50": 78.16660399999999,
                    "p95": 122.25321199999999,
                    "p99": 122.25321199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 304.93100999999996,
                    "min": 257.311289,
                    "p50": 296.058525,
                    "p95": 304.93100999999996,
                    "p99": 304.93100999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 118.683236,
                    "min": 52.125026999999996,
                    "p50": 58.218821,
                    "p95": 118.683236,
                    "p99": 118.683236,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 63.341626999999995,
                    "min": 38.355191,
                    "p50": 60.556225,
                    "p95": 63.341626999999995,
                    "p99": 63.341626999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 128.870005,
                    "min": 87.83049799999999,
                    "p50": 106.495246,
                    "p95": 128.870005,
                    "p99": 128.870005,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 76.277954,
                    "min": 47.201488999999995,
                    "p50": 74.015186,
                    "p95": 76.277954,
                    "p99": 76.277954,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 118.12199199999999,
                    "min": 94.997435,
                    "p50": 110.380867,
                    "p95": 118.12199199999999,
                    "p99": 118.12199199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 572.289132,
                    "min": 482.07626899999997,
                    "p50": 521.494429,
                    "p95": 572.289132,
                    "p99": 572.289132,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 122.338825,
                    "min": 81.178822,
                    "p50": 93.06557699999999,
                    "p95": 122.338825,
                    "p99": 122.338825,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 298.73862199999996,
                    "min": 209.27528099999998,
                    "p50": 216.681336,
                    "p95": 298.73862199999996,
                    "p99": 298.73862199999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 178.826419,
                    "min": 109.485969,
                    "p50": 123.755888,
                    "p95": 178.826419,
                    "p99": 178.826419,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 101.600422,
                    "min": 85.462025,
                    "p50": 93.10419999999999,
                    "p95": 101.600422,
                    "p99": 101.600422,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 73.32930499999999,
                    "min": 47.156692,
                    "p50": 65.96316,
                    "p95": 73.32930499999999,
                    "p99": 73.32930499999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.999567,
                    "min": 25.862823,
                    "p50": 27.537335,
                    "p95": 27.999567,
                    "p99": 27.999567,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 50.354364999999994,
                    "min": 26.653471999999997,
                    "p50": 27.220097,
                    "p95": 50.354364999999994,
                    "p99": 50.354364999999994,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 29.808007,
                    "min": 26.290661,
                    "p50": 27.060688,
                    "p95": 29.808007,
                    "p99": 29.808007,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.380452,
                    "min": 25.957131999999998,
                    "p50": 26.827019999999997,
                    "p95": 27.380452,
                    "p99": 27.380452,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.0425,
                    "min": 25.932532,
                    "p50": 26.761388999999998,
                    "p95": 27.0425,
                    "p99": 27.0425,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 26.905293999999998,
                    "min": 21.848035,
                    "p50": 26.660172,
                    "p95": 26.905293999999998,
                    "p99": 26.905293999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 110.84616199999999,
                    "min": 23.908246,
                    "p50": 26.583524999999998,
                    "p95": 110.84616199999999,
                    "p99": 110.84616199999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 30.604056,
                    "min": 19.215714,
                    "p50": 26.749288999999997,
                    "p95": 30.604056,
                    "p99": 30.604056,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 43.845946999999995,
                    "min": 32.566841,
                    "p50": 43.101835,
                    "p95": 43.845946999999995,
                    "p99": 43.845946999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.461567,
                    "min": 24.797601999999998,
                    "p50": 27.120908999999997,
                    "p95": 27.461567,
                    "p99": 27.461567,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 37.943294,
                    "min": 27.013510999999998,
                    "p50": 33.42818,
                    "p95": 37.943294,
                    "p99": 37.943294,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.60481,
                    "min": 24.715967,
                    "p50": 26.613702999999997,
                    "p95": 27.60481,
                    "p99": 27.60481,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 113.064782,
                    "min": 18.966074,
                    "p50": 26.977572,
                    "p95": 113.064782,
                    "p99": 113.064782,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.362294,
                    "min": 24.147246,
                    "p50": 26.695919999999997,
                    "p95": 27.362294,
                    "p99": 27.362294,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 129.509314,
                    "min": 79.250924,
                    "p50": 85.978259,
                    "p95": 129.509314,
                    "p99": 129.509314,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 28.086985,
                    "min": 22.706325,
                    "p50": 27.036610999999997,
                    "p95": 28.086985,
                    "p99": 28.086985,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.555073999999998,
                    "min": 26.167606,
                    "p50": 26.972718,
                    "p95": 27.555073999999998,
                    "p99": 27.555073999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.259832,
                    "min": 22.505606999999998,
                    "p50": 26.592862999999998,
                    "p95": 27.259832,
                    "p99": 27.259832,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 378.101628,
                    "min": 348.423495,
                    "p50": 362.002953,
                    "p95": 378.101628,
                    "p99": 378.101628,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.861541,
                    "min": 137.887802,
                    "p50": 141.45076699999998,
                    "p95": 153.861541,
                    "p99": 153.861541,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4550.825207,
                    "min": 4193.495464,
                    "p50": 4353.4503239999995,
                    "p95": 4550.825207,
                    "p99": 4550.825207,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 939.154232,
                    "min": 739.006585,
                    "p50": 883.145719,
                    "p95": 939.154232,
                    "p99": 939.154232,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 364.655346,
                    "min": 269.243026,
                    "p50": 343.08358999999996,
                    "p95": 364.655346,
                    "p99": 364.655346,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.651026,
                    "min": 165.264341,
                    "p50": 173.26246999999998,
                    "p95": 215.651026,
                    "p99": 215.651026,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 307.11594199999996,
                    "min": 242.383491,
                    "p50": 250.59753899999998,
                    "p95": 307.11594199999996,
                    "p99": 307.11594199999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1468.220859,
                    "min": 1157.3441269999998,
                    "p50": 1324.5814289999998,
                    "p95": 1468.220859,
                    "p99": 1468.220859,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 661.845874,
                    "min": 496.04182799999995,
                    "p50": 561.1672209999999,
                    "p95": 661.845874,
                    "p99": 661.845874,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 502.711094,
                    "min": 420.689528,
                    "p50": 472.655336,
                    "p95": 502.711094,
                    "p99": 502.711094,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1873.4682269999998,
                    "min": 1509.995596,
                    "p50": 1566.552686,
                    "p95": 1873.4682269999998,
                    "p99": 1873.4682269999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2319.162203,
                    "min": 1966.1032329999998,
                    "p50": 2104.0416529999998,
                    "p95": 2319.162203,
                    "p99": 2319.162203,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 654.456186,
                    "min": 548.605095,
                    "p50": 586.824886,
                    "p95": 654.456186,
                    "p99": 654.456186,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 264.581006,
                    "min": 210.126908,
                    "p50": 222.389622,
                    "p95": 264.581006,
                    "p99": 264.581006,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 983.697274,
                    "min": 683.400392,
                    "p50": 712.823928,
                    "p95": 983.697274,
                    "p99": 983.697274,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 456.144707,
                    "min": 347.77027699999996,
                    "p50": 437.37970099999995,
                    "p95": 456.144707,
                    "p99": 456.144707,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 634.7170249999999,
                    "min": 459.625003,
                    "p50": 508.566807,
                    "p95": 634.7170249999999,
                    "p99": 634.7170249999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 727.893203,
                    "min": 568.024829,
                    "p50": 638.709082,
                    "p95": 727.893203,
                    "p99": 727.893203,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 358.10961499999996,
                    "min": 304.673889,
                    "p50": 322.593565,
                    "p95": 358.10961499999996,
                    "p99": 358.10961499999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1550.779883,
                    "min": 1384.3297679999998,
                    "p50": 1499.524412,
                    "p95": 1550.779883,
                    "p99": 1550.779883,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 306.53256,
                    "min": 192.604794,
                    "p50": 274.02761,
                    "p95": 306.53256,
                    "p99": 306.53256,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 539.681928,
                    "min": 416.534389,
                    "p50": 431.867547,
                    "p95": 539.681928,
                    "p99": 539.681928,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 758.2530849999999,
                    "min": 623.4126769999999,
                    "p50": 658.329751,
                    "p95": 758.2530849999999,
                    "p99": 758.2530849999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 326.52869699999997,
                    "min": 216.84397299999998,
                    "p50": 248.74283599999998,
                    "p95": 326.52869699999997,
                    "p99": 326.52869699999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 866.080606,
                    "min": 704.853429,
                    "p50": 751.350003,
                    "p95": 866.080606,
                    "p99": 866.080606,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 540.169166,
                    "min": 390.85415,
                    "p50": 474.10576599999996,
                    "p95": 540.169166,
                    "p99": 540.169166,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1070.731074,
                    "min": 770.032569,
                    "p50": 821.004997,
                    "p95": 1070.731074,
                    "p99": 1070.731074,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 344.24931899999996,
                    "min": 290.823735,
                    "p50": 298.088283,
                    "p95": 344.24931899999996,
                    "p99": 344.24931899999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 595.754608,
                    "min": 460.000883,
                    "p50": 513.772036,
                    "p95": 595.754608,
                    "p99": 595.754608,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2211.6179349999998,
                    "min": 1842.0046009999999,
                    "p50": 1924.793614,
                    "p95": 2211.6179349999998,
                    "p99": 2211.6179349999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 645.3350029999999,
                    "min": 488.01523699999996,
                    "p50": 608.396172,
                    "p95": 645.3350029999999,
                    "p99": 645.3350029999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 462.745548,
                    "min": 326.065053,
                    "p50": 434.201756,
                    "p95": 462.745548,
                    "p99": 462.745548,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 728.099372,
                    "min": 533.492062,
                    "p50": 625.86509,
                    "p95": 728.099372,
                    "p99": 728.099372,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.864082,
                    "min": 130.558693,
                    "p50": 166.71659499999998,
                    "p95": 244.864082,
                    "p99": 244.864082,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 651.624004,
                    "min": 584.307176,
                    "p50": 638.955158,
                    "p95": 651.624004,
                    "p99": 651.624004,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1308.158081,
                    "min": 897.669214,
                    "p50": 1017.298136,
                    "p95": 1308.158081,
                    "p99": 1308.158081,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2582.352031,
                    "min": 2424.305462,
                    "p50": 2554.372337,
                    "p95": 2582.352031,
                    "p99": 2582.352031,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 473.845065,
                    "min": 381.085067,
                    "p50": 410.67938899999996,
                    "p95": 473.845065,
                    "p99": 473.845065,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 824.969962,
                    "min": 636.061471,
                    "p50": 664.359958,
                    "p95": 824.969962,
                    "p99": 824.969962,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 712.1959459999999,
                    "min": 510.960424,
                    "p50": 548.573574,
                    "p95": 712.1959459999999,
                    "p99": 712.1959459999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1132.6021899999998,
                    "min": 1041.335141,
                    "p50": 1072.5790729999999,
                    "p95": 1132.6021899999998,
                    "p99": 1132.6021899999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1040.4552119999998,
                    "min": 921.5678819999999,
                    "p50": 986.7993349999999,
                    "p95": 1040.4552119999998,
                    "p99": 1040.4552119999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1372.849728,
                    "min": 1220.7940019999999,
                    "p50": 1273.498684,
                    "p95": 1372.849728,
                    "p99": 1372.849728,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2069.803513,
                    "min": 1529.5437,
                    "p50": 1599.6551809999999,
                    "p95": 2069.803513,
                    "p99": 2069.803513,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1387.581591,
                    "min": 1323.016746,
                    "p50": 1369.3277779999999,
                    "p95": 1387.581591,
                    "p99": 1387.581591,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1202.010695,
                    "min": 1118.076793,
                    "p50": 1165.258079,
                    "p95": 1202.010695,
                    "p99": 1202.010695,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2163.6970389999997,
                    "min": 2039.482886,
                    "p50": 2118.047178,
                    "p95": 2163.6970389999997,
                    "p99": 2163.6970389999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 803.239861,
                    "min": 726.986728,
                    "p50": 771.734728,
                    "p95": 803.239861,
                    "p99": 803.239861,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 467.521572,
                    "min": 432.568248,
                    "p50": 440.57751299999995,
                    "p95": 467.521572,
                    "p99": 467.521572,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1913.1007299999999,
                    "min": 1827.569298,
                    "p50": 1882.4745349999998,
                    "p95": 1913.1007299999999,
                    "p99": 1913.1007299999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 933.322909,
                    "min": 850.229441,
                    "p50": 891.216006,
                    "p95": 933.322909,
                    "p99": 933.322909,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1571.7514529999999,
                    "min": 1449.1089029999998,
                    "p50": 1541.405041,
                    "p95": 1571.7514529999999,
                    "p99": 1571.7514529999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 910.1543939999999,
                    "min": 875.289465,
                    "p50": 898.709564,
                    "p95": 910.1543939999999,
                    "p99": 910.1543939999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2057.266275,
                    "min": 2016.550818,
                    "p50": 2035.157912,
                    "p95": 2057.266275,
                    "p99": 2057.266275,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2910.751301,
                    "min": 2859.9670929999997,
                    "p50": 2885.5738039999997,
                    "p95": 2910.751301,
                    "p99": 2910.751301,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5735.504648,
                    "min": 5675.97307,
                    "p50": 5719.937151,
                    "p95": 5735.504648,
                    "p99": 5735.504648,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1604.6159519999999,
                    "min": 1569.929056,
                    "p50": 1589.708738,
                    "p95": 1604.6159519999999,
                    "p99": 1604.6159519999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 747.50864,
                    "min": 712.284364,
                    "p50": 744.4483789999999,
                    "p95": 747.50864,
                    "p99": 747.50864,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 607.204265,
                    "min": 597.574069,
                    "p50": 604.223082,
                    "p95": 607.204265,
                    "p99": 607.204265,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1739.849798,
                    "min": 1727.324547,
                    "p50": 1734.591498,
                    "p95": 1739.849798,
                    "p99": 1739.849798,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4314.0844179999995,
                    "min": 4249.378224,
                    "p50": 4275.855687,
                    "p95": 4314.0844179999995,
                    "p99": 4314.0844179999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2529.823399,
                    "min": 2479.4437829999997,
                    "p50": 2515.1722569999997,
                    "p95": 2529.823399,
                    "p99": 2529.823399,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2173.117241,
                    "min": 2118.7902799999997,
                    "p50": 2152.719509,
                    "p95": 2173.117241,
                    "p99": 2173.117241,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1172.6055,
                    "min": 1162.196321,
                    "p50": 1165.617716,
                    "p95": 1172.6055,
                    "p99": 1172.6055,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1483.018045,
                    "min": 1420.901101,
                    "p50": 1454.0111709999999,
                    "p95": 1483.018045,
                    "p99": 1483.018045,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1038.395383,
                    "min": 988.1883819999999,
                    "p50": 1025.085685,
                    "p95": 1038.395383,
                    "p99": 1038.395383,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 474.37424999999996,
                    "min": 452.84402,
                    "p50": 464.836997,
                    "p95": 474.37424999999996,
                    "p99": 474.37424999999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1915.4865399999999,
                    "min": 1865.1830599999998,
                    "p50": 1882.89562,
                    "p95": 1915.4865399999999,
                    "p99": 1915.4865399999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1330.758267,
                    "min": 1295.9851489999999,
                    "p50": 1307.594289,
                    "p95": 1330.758267,
                    "p99": 1330.758267,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 623.637466,
                    "min": 591.5808589999999,
                    "p50": 611.834709,
                    "p95": 623.637466,
                    "p99": 623.637466,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1924.7623159999998,
                    "min": 1865.766477,
                    "p50": 1886.008474,
                    "p95": 1924.7623159999998,
                    "p99": 1924.7623159999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3838.1740409999998,
                    "min": 3749.9959209999997,
                    "p50": 3801.6588939999997,
                    "p95": 3838.1740409999998,
                    "p99": 3838.1740409999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2133.911693,
                    "min": 2045.3994699999998,
                    "p50": 2100.694163,
                    "p95": 2133.911693,
                    "p99": 2133.911693,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5604.685616,
                    "min": 5514.8117409999995,
                    "p50": 5567.947524,
                    "p95": 5604.685616,
                    "p99": 5604.685616,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1202.379489,
                    "min": 1136.195477,
                    "p50": 1170.380766,
                    "p95": 1202.379489,
                    "p99": 1202.379489,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1737.4457599999998,
                    "min": 1685.156554,
                    "p50": 1720.550047,
                    "p95": 1737.4457599999998,
                    "p99": 1737.4457599999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7503.595394999999,
                    "min": 7319.413019,
                    "p50": 7379.253758,
                    "p95": 7503.595394999999,
                    "p99": 7503.595394999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1001.8017739999999,
                    "min": 959.3600769999999,
                    "p50": 983.631279,
                    "p95": 1001.8017739999999,
                    "p99": 1001.8017739999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2543.2720059999997,
                    "min": 2460.352066,
                    "p50": 2511.01149,
                    "p95": 2543.2720059999997,
                    "p99": 2543.2720059999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1361.389711,
                    "min": 1288.981223,
                    "p50": 1331.437735,
                    "p95": 1361.389711,
                    "p99": 1361.389711,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 797.842139,
                    "min": 762.254116,
                    "p50": 787.640303,
                    "p95": 797.842139,
                    "p99": 797.842139,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2916.234058,
                    "min": 2845.5523399999997,
                    "p50": 2877.769867,
                    "p95": 2916.234058,
                    "p99": 2916.234058,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2731.725043,
                    "min": 2639.271672,
                    "p50": 2689.9208209999997,
                    "p95": 2731.725043,
                    "p99": 2731.725043,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3307.2795659999997,
                    "min": 3250.63854,
                    "p50": 3281.380432,
                    "p95": 3307.2795659999997,
                    "p99": 3307.2795659999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1570.334709,
                    "min": 1480.789867,
                    "p50": 1512.536741,
                    "p95": 1570.334709,
                    "p99": 1570.334709,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2335.731944,
                    "min": 2245.707532,
                    "p50": 2285.670074,
                    "p95": 2335.731944,
                    "p99": 2335.731944,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 207.960794,
                    "min": 164.116479,
                    "p50": 201.53732499999998,
                    "p95": 207.960794,
                    "p99": 207.960794,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.669366,
                    "min": 87.377248,
                    "p50": 123.815029,
                    "p95": 154.669366,
                    "p99": 154.669366,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 268.611407,
                    "min": 176.88924799999998,
                    "p50": 258.541387,
                    "p95": 268.611407,
                    "p99": 268.611407,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 357.124059,
                    "min": 278.322829,
                    "p50": 349.840665,
                    "p95": 357.124059,
                    "p99": 357.124059,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1146.4987509999999,
                    "min": 1026.105624,
                    "p50": 1101.032428,
                    "p95": 1146.4987509999999,
                    "p99": 1146.4987509999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 485.249548,
                    "min": 428.05900199999996,
                    "p50": 445.29835499999996,
                    "p95": 485.249548,
                    "p99": 485.249548,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 192.556614,
                    "min": 109.37562,
                    "p50": 137.592481,
                    "p95": 192.556614,
                    "p99": 192.556614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.71627099999999,
                    "min": 51.891853999999995,
                    "p50": 55.196441,
                    "p95": 64.71627099999999,
                    "p99": 64.71627099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 595.418876,
                    "min": 487.952497,
                    "p50": 579.515623,
                    "p95": 595.418876,
                    "p99": 595.418876,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 157.754741,
                    "min": 93.637919,
                    "p50": 99.923144,
                    "p95": 157.754741,
                    "p99": 157.754741,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.37823699999998,
                    "min": 71.44236599999999,
                    "p50": 107.202694,
                    "p95": 148.37823699999998,
                    "p99": 148.37823699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 191.434565,
                    "min": 114.044361,
                    "p50": 127.987094,
                    "p95": 191.434565,
                    "p99": 191.434565,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 234.61075499999998,
                    "min": 183.529008,
                    "p50": 190.10934,
                    "p95": 234.61075499999998,
                    "p99": 234.61075499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.169502,
                    "min": 45.760411999999995,
                    "p50": 81.89625099999999,
                    "p95": 114.169502,
                    "p99": 114.169502,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 129.158667,
                    "min": 89.33962,
                    "p50": 91.555945,
                    "p95": 129.158667,
                    "p99": 129.158667,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 203.75840599999998,
                    "min": 163.865073,
                    "p50": 170.23739,
                    "p95": 203.75840599999998,
                    "p99": 203.75840599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 189.662297,
                    "min": 133.08974999999998,
                    "p50": 142.63206,
                    "p95": 189.662297,
                    "p99": 189.662297,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 100.103839,
                    "min": 67.88865299999999,
                    "p50": 69.218274,
                    "p95": 100.103839,
                    "p99": 100.103839,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 268.511795,
                    "min": 141.02765499999998,
                    "p50": 186.83176799999998,
                    "p95": 268.511795,
                    "p99": 268.511795,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2966.506188,
                    "min": 2653.006026,
                    "p50": 2730.543012,
                    "p95": 2966.506188,
                    "p99": 2966.506188,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1190.968378,
                    "min": 1077.753176,
                    "p50": 1111.517576,
                    "p95": 1190.968378,
                    "p99": 1190.968378,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 881.356323,
                    "min": 776.438727,
                    "p50": 787.9122219999999,
                    "p95": 881.356323,
                    "p99": 881.356323,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1994.6405539999998,
                    "min": 1820.853316,
                    "p50": 1869.9038739999999,
                    "p95": 1994.6405539999998,
                    "p99": 1994.6405539999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1411.8482979999999,
                    "min": 1221.488909,
                    "p50": 1263.236247,
                    "p95": 1411.8482979999999,
                    "p99": 1411.8482979999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6530.421819,
                    "min": 5995.072368,
                    "p50": 6064.039016,
                    "p95": 6530.421819,
                    "p99": 6530.421819,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1866.49724,
                    "min": 1650.3289989999998,
                    "p50": 1693.431662,
                    "p95": 1866.49724,
                    "p99": 1866.49724,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1025.5233349999999,
                    "min": 923.9464009999999,
                    "p50": 977.8264369999999,
                    "p95": 1025.5233349999999,
                    "p99": 1025.5233349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2150.969477,
                    "min": 1992.623105,
                    "p50": 2019.1179319999999,
                    "p95": 2150.969477,
                    "p99": 2150.969477,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4933.3366049999995,
                    "min": 4516.87166,
                    "p50": 4564.631079,
                    "p95": 4933.3366049999995,
                    "p99": 4933.3366049999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2584.2452639999997,
                    "min": 2248.4411999999998,
                    "p50": 2297.70566,
                    "p95": 2584.2452639999997,
                    "p99": 2584.2452639999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3375.0268229999997,
                    "min": 3020.6000169999998,
                    "p50": 3069.779352,
                    "p95": 3375.0268229999997,
                    "p99": 3375.0268229999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 527.749827,
                    "min": 492.36503799999997,
                    "p50": 497.197303,
                    "p95": 527.749827,
                    "p99": 527.749827,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2431.107925,
                    "min": 2125.505178,
                    "p50": 2184.094353,
                    "p95": 2431.107925,
                    "p99": 2431.107925,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 695.890486,
                    "min": 637.847079,
                    "p50": 677.241502,
                    "p95": 695.890486,
                    "p99": 695.890486,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1655.666504,
                    "min": 1528.8487659999998,
                    "p50": 1547.8783509999998,
                    "p95": 1655.666504,
                    "p99": 1655.666504,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1509.359404,
                    "min": 1362.683781,
                    "p50": 1413.295261,
                    "p95": 1509.359404,
                    "p99": 1509.359404,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2555.98502,
                    "min": 2260.543788,
                    "p50": 2316.325266,
                    "p95": 2555.98502,
                    "p99": 2555.98502,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 679.264328,
                    "min": 615.832308,
                    "p50": 643.536986,
                    "p95": 679.264328,
                    "p99": 679.264328,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1592.518748,
                    "min": 1357.8548759999999,
                    "p50": 1388.172165,
                    "p95": 1592.518748,
                    "p99": 1592.518748,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2163.676948,
                    "min": 1971.109649,
                    "p50": 2030.5186259999998,
                    "p95": 2163.676948,
                    "p99": 2163.676948,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1681.036334,
                    "min": 1500.842655,
                    "p50": 1564.829092,
                    "p95": 1681.036334,
                    "p99": 1681.036334,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1899.8496169999999,
                    "min": 1679.198346,
                    "p50": 1698.3405989999999,
                    "p95": 1899.8496169999999,
                    "p99": 1899.8496169999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3332.9996469999996,
                    "min": 2993.348106,
                    "p50": 3061.307667,
                    "p95": 3332.9996469999996,
                    "p99": 3332.9996469999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4990.992185,
                    "min": 4492.246664,
                    "p50": 4637.345488,
                    "p95": 4990.992185,
                    "p99": 4990.992185,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1999.260333,
                    "min": 1807.783493,
                    "p50": 1860.501611,
                    "p95": 1999.260333,
                    "p99": 1999.260333,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 830.504836,
                    "min": 782.0646019999999,
                    "p50": 797.9671569999999,
                    "p95": 830.504836,
                    "p99": 830.504836,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 533.777421,
                    "min": 469.62828199999996,
                    "p50": 495.463962,
                    "p95": 533.777421,
                    "p99": 533.777421,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1016.1392979999999,
                    "min": 936.15028,
                    "p50": 946.5232159999999,
                    "p95": 1016.1392979999999,
                    "p99": 1016.1392979999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2895.9914019999997,
                    "min": 2621.8349519999997,
                    "p50": 2696.288064,
                    "p95": 2895.9914019999997,
                    "p99": 2895.9914019999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1181.894973,
                    "min": 1076.300188,
                    "p50": 1106.9268889999998,
                    "p95": 1181.894973,
                    "p99": 1181.894973,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2311.806606,
                    "min": 2122.0530759999997,
                    "p50": 2179.436934,
                    "p95": 2311.806606,
                    "p99": 2311.806606,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1350.8514,
                    "min": 1234.377685,
                    "p50": 1258.198062,
                    "p95": 1350.8514,
                    "p99": 1350.8514,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1370.756465,
                    "min": 1247.059654,
                    "p50": 1343.006383,
                    "p95": 1370.756465,
                    "p99": 1370.756465,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 241.362053,
                    "min": 186.262945,
                    "p50": 198.11297299999998,
                    "p95": 241.362053,
                    "p99": 241.362053,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 715.863356,
                    "min": 614.732932,
                    "p50": 668.195783,
                    "p95": 715.863356,
                    "p99": 715.863356,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 153.991603,
                    "min": 109.57804399999999,
                    "p50": 117.713161,
                    "p95": 153.991603,
                    "p99": 153.991603,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 151.450108,
                    "min": 68.881148,
                    "p50": 84.311837,
                    "p95": 151.450108,
                    "p99": 151.450108,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 280.204749,
                    "min": 161.498964,
                    "p50": 177.972553,
                    "p95": 280.204749,
                    "p99": 280.204749,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 582.7607479999999,
                    "min": 518.634317,
                    "p50": 549.781982,
                    "p95": 582.7607479999999,
                    "p99": 582.7607479999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 228.69959599999999,
                    "min": 174.531175,
                    "p50": 217.86402199999998,
                    "p95": 228.69959599999999,
                    "p99": 228.69959599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 242.04499099999998,
                    "min": 172.70602599999998,
                    "p50": 189.328882,
                    "p95": 242.04499099999998,
                    "p99": 242.04499099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 288.098078,
                    "min": 234.73844,
                    "p50": 279.77270899999996,
                    "p95": 288.098078,
                    "p99": 288.098078,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 148.690024,
                    "min": 79.941614,
                    "p50": 97.109833,
                    "p95": 148.690024,
                    "p99": 148.690024,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 184.223308,
                    "min": 143.945807,
                    "p50": 163.103558,
                    "p95": 184.223308,
                    "p99": 184.223308,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.860967,
                    "min": 65.629446,
                    "p50": 67.818092,
                    "p95": 106.860967,
                    "p99": 106.860967,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 227.107888,
                    "min": 99.32008599999999,
                    "p50": 133.289177,
                    "p95": 227.107888,
                    "p99": 227.107888,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 129.39171199999998,
                    "min": 98.525662,
                    "p50": 109.849499,
                    "p95": 129.39171199999998,
                    "p99": 129.39171199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 153.14586599999998,
                    "min": 129.50915799999999,
                    "p50": 141.168599,
                    "p95": 153.14586599999998,
                    "p99": 153.14586599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 206.746858,
                    "min": 126.905819,
                    "p50": 151.37281199999998,
                    "p95": 206.746858,
                    "p99": 206.746858,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 482.47493399999996,
                    "min": 386.704818,
                    "p50": 455.026708,
                    "p95": 482.47493399999996,
                    "p99": 482.47493399999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 301.982614,
                    "min": 247.20823299999998,
                    "p50": 273.068691,
                    "p95": 301.982614,
                    "p99": 301.982614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 116.014243,
                    "min": 80.38417799999999,
                    "p50": 94.140745,
                    "p95": 116.014243,
                    "p99": 116.014243,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 416.890422,
                    "min": 359.992325,
                    "p50": 401.81465499999996,
                    "p95": 416.890422,
                    "p99": 416.890422,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 366.438476,
                    "min": 262.704748,
                    "p50": 321.883992,
                    "p95": 366.438476,
                    "p99": 366.438476,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 260.358122,
                    "min": 148.590351,
                    "p50": 193.65120399999998,
                    "p95": 260.358122,
                    "p99": 260.358122,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.299475,
                    "min": 77.598028,
                    "p50": 122.515322,
                    "p95": 180.299475,
                    "p99": 180.299475,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1032.497546,
                    "min": 927.81594,
                    "p50": 978.176026,
                    "p95": 1032.497546,
                    "p99": 1032.497546,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 532.85061,
                    "min": 440.201573,
                    "p50": 474.80186199999997,
                    "p95": 532.85061,
                    "p99": 532.85061,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.324487,
                    "min": 97.791404,
                    "p50": 126.81190799999999,
                    "p95": 183.324487,
                    "p99": 183.324487,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 203.951043,
                    "min": 125.06845299999999,
                    "p50": 139.01813199999998,
                    "p95": 203.951043,
                    "p99": 203.951043,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 116.989831,
                    "min": 95.269162,
                    "p50": 98.607513,
                    "p95": 116.989831,
                    "p99": 116.989831,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 169.078755,
                    "min": 98.593497,
                    "p50": 104.83187,
                    "p95": 169.078755,
                    "p99": 169.078755,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 88.295603,
                    "min": 30.629592,
                    "p50": 59.022414,
                    "p95": 88.295603,
                    "p99": 88.295603,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 217.71021,
                    "min": 128.85595999999998,
                    "p50": 165.916868,
                    "p95": 217.71021,
                    "p99": 217.71021,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 146.62769,
                    "min": 80.965836,
                    "p50": 119.374309,
                    "p95": 146.62769,
                    "p99": 146.62769,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 205.832021,
                    "min": 139.37048099999998,
                    "p50": 190.43362299999998,
                    "p95": 205.832021,
                    "p99": 205.832021,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 134.171895,
                    "min": 81.248858,
                    "p50": 114.14380999999999,
                    "p95": 134.171895,
                    "p99": 134.171895,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 200.415394,
                    "min": 118.69631299999999,
                    "p50": 135.367342,
                    "p95": 200.415394,
                    "p99": 200.415394,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 76.33578,
                    "min": 48.971573,
                    "p50": 72.178887,
                    "p95": 76.33578,
                    "p99": 76.33578,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 52.516033,
                    "min": 23.843529,
                    "p50": 44.497997,
                    "p95": 52.516033,
                    "p99": 52.516033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 295.572547,
                    "min": 194.41251599999998,
                    "p50": 250.009264,
                    "p95": 295.572547,
                    "p99": 295.572547,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 166.125214,
                    "min": 105.27169599999999,
                    "p50": 129.015153,
                    "p95": 166.125214,
                    "p99": 166.125214,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 310.91490699999997,
                    "min": 223.04137699999998,
                    "p50": 267.833803,
                    "p95": 310.91490699999997,
                    "p99": 310.91490699999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 117.40417099999999,
                    "min": 79.636112,
                    "p50": 114.27776899999999,
                    "p95": 117.40417099999999,
                    "p99": 117.40417099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.17727699999999,
                    "min": 72.357528,
                    "p50": 105.03921799999999,
                    "p95": 127.17727699999999,
                    "p99": 127.17727699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 115.413344,
                    "min": 45.742588,
                    "p50": 82.816858,
                    "p95": 115.413344,
                    "p99": 115.413344,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 246.81783399999998,
                    "min": 185.00571,
                    "p50": 233.338777,
                    "p95": 246.81783399999998,
                    "p99": 246.81783399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 199.614057,
                    "min": 149.720916,
                    "p50": 158.962192,
                    "p95": 199.614057,
                    "p99": 199.614057,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 460.521415,
                    "min": 357.916155,
                    "p50": 436.44014599999997,
                    "p95": 460.521415,
                    "p99": 460.521415,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 208.464764,
                    "min": 125.441639,
                    "p50": 142.128566,
                    "p95": 208.464764,
                    "p99": 208.464764,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1390.180283,
                    "min": 1278.380429,
                    "p50": 1320.686972,
                    "p95": 1390.180283,
                    "p99": 1390.180283,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 143.257086,
                    "min": 78.766443,
                    "p50": 94.669156,
                    "p95": 143.257086,
                    "p99": 143.257086,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.90596299999999,
                    "min": 157.820644,
                    "p50": 211.227882,
                    "p95": 219.90596299999999,
                    "p99": 219.90596299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.976486,
                    "min": 163.754097,
                    "p50": 172.098973,
                    "p95": 205.976486,
                    "p99": 205.976486,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 603.071923,
                    "min": 515.608528,
                    "p50": 527.221223,
                    "p95": 603.071923,
                    "p99": 603.071923,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.433899,
                    "min": 65.346424,
                    "p50": 66.64121999999999,
                    "p95": 76.433899,
                    "p99": 76.433899,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 235.14998899999998,
                    "min": 189.027347,
                    "p50": 214.220252,
                    "p95": 235.14998899999998,
                    "p99": 235.14998899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 186.16188499999998,
                    "min": 111.71924899999999,
                    "p50": 148.027027,
                    "p95": 186.16188499999998,
                    "p99": 186.16188499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 691.624478,
                    "min": 593.653702,
                    "p50": 660.1290759999999,
                    "p95": 691.624478,
                    "p99": 691.624478,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 982.293144,
                    "min": 929.126077,
                    "p50": 947.6071089999999,
                    "p95": 982.293144,
                    "p99": 982.293144,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 825.563509,
                    "min": 784.281966,
                    "p50": 815.060218,
                    "p95": 825.563509,
                    "p99": 825.563509,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1202.729431,
                    "min": 1177.651132,
                    "p50": 1197.9670899999999,
                    "p95": 1202.729431,
                    "p99": 1202.729431,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 423.18132299999996,
                    "min": 386.631109,
                    "p50": 417.61972099999997,
                    "p95": 423.18132299999996,
                    "p99": 423.18132299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 557.37049,
                    "min": 517.604081,
                    "p50": 553.44363,
                    "p95": 557.37049,
                    "p99": 557.37049,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1081.58169,
                    "min": 1068.3609139999999,
                    "p50": 1070.744228,
                    "p95": 1081.58169,
                    "p99": 1081.58169,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 693.663093,
                    "min": 662.6875749999999,
                    "p50": 679.357031,
                    "p95": 693.663093,
                    "p99": 693.663093,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1572.8072869999999,
                    "min": 1467.177837,
                    "p50": 1486.595181,
                    "p95": 1572.8072869999999,
                    "p99": 1572.8072869999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 478.823542,
                    "min": 442.45444999999995,
                    "p50": 471.526837,
                    "p95": 478.823542,
                    "p99": 478.823542,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1216.349571,
                    "min": 1177.71796,
                    "p50": 1193.6270909999998,
                    "p95": 1216.349571,
                    "p99": 1216.349571,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 926.7632259999999,
                    "min": 893.9792669999999,
                    "p50": 907.766348,
                    "p95": 926.7632259999999,
                    "p99": 926.7632259999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1057.260722,
                    "min": 1022.437206,
                    "p50": 1046.695403,
                    "p95": 1057.260722,
                    "p99": 1057.260722,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1349.755868,
                    "min": 1321.237658,
                    "p50": 1336.19167,
                    "p95": 1349.755868,
                    "p99": 1349.755868,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 628.305633,
                    "min": 576.8417549999999,
                    "p50": 615.602727,
                    "p95": 628.305633,
                    "p99": 628.305633,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 770.2108039999999,
                    "min": 752.400312,
                    "p50": 758.8344649999999,
                    "p95": 770.2108039999999,
                    "p99": 770.2108039999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1139.209409,
                    "min": 1004.927554,
                    "p50": 1052.819684,
                    "p95": 1139.209409,
                    "p99": 1139.209409,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1957.339499,
                    "min": 1751.9138169999999,
                    "p50": 1802.5376529999999,
                    "p95": 1957.339499,
                    "p99": 1957.339499,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2512.909526,
                    "min": 2236.4761519999997,
                    "p50": 2307.628905,
                    "p95": 2512.909526,
                    "p99": 2512.909526,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1701.380895,
                    "min": 1514.112641,
                    "p50": 1562.179974,
                    "p95": 1701.380895,
                    "p99": 1701.380895,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3354.460104,
                    "min": 2948.110441,
                    "p50": 3100.660934,
                    "p95": 3354.460104,
                    "p99": 3354.460104,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 855.4118129999999,
                    "min": 764.7606089999999,
                    "p50": 796.847772,
                    "p95": 855.4118129999999,
                    "p99": 855.4118129999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2792.802781,
                    "min": 2497.299201,
                    "p50": 2573.200254,
                    "p95": 2792.802781,
                    "p99": 2792.802781,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2226.906637,
                    "min": 1978.035639,
                    "p50": 2050.4021,
                    "p95": 2226.906637,
                    "p99": 2226.906637,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1412.459197,
                    "min": 1258.0047439999998,
                    "p50": 1267.130853,
                    "p95": 1412.459197,
                    "p99": 1412.459197,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3091.2069549999997,
                    "min": 2688.174784,
                    "p50": 2772.472929,
                    "p95": 3091.2069549999997,
                    "p99": 3091.2069549999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 832.105958,
                    "min": 803.863525,
                    "p50": 824.860471,
                    "p95": 832.105958,
                    "p99": 832.105958,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1097.936843,
                    "min": 1061.263124,
                    "p50": 1090.898314,
                    "p95": 1097.936843,
                    "p99": 1097.936843,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 303.83475799999997,
                    "min": 287.449554,
                    "p50": 301.144561,
                    "p95": 303.83475799999997,
                    "p99": 303.83475799999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 565.157307,
                    "min": 543.647881,
                    "p50": 559.694744,
                    "p95": 565.157307,
                    "p99": 565.157307,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 960.8863789999999,
                    "min": 937.3639129999999,
                    "p50": 955.5107869999999,
                    "p95": 960.8863789999999,
                    "p99": 960.8863789999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 435.851392,
                    "min": 427.949167,
                    "p50": 431.79334,
                    "p95": 435.851392,
                    "p99": 435.851392,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 701.794679,
                    "min": 676.728577,
                    "p50": 692.3859719999999,
                    "p95": 701.794679,
                    "p99": 701.794679,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2358.01951,
                    "min": 2101.042106,
                    "p50": 2127.399407,
                    "p95": 2358.01951,
                    "p99": 2358.01951,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1170.347656,
                    "min": 1048.720092,
                    "p50": 1082.104053,
                    "p95": 1170.347656,
                    "p99": 1170.347656,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 685.1167029999999,
                    "min": 628.553647,
                    "p50": 634.284815,
                    "p95": 685.1167029999999,
                    "p99": 685.1167029999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2144.751962,
                    "min": 1950.592385,
                    "p50": 1975.706039,
                    "p95": 2144.751962,
                    "p99": 2144.751962,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1674.997967,
                    "min": 1522.4022519999999,
                    "p50": 1526.2227619999999,
                    "p95": 1674.997967,
                    "p99": 1674.997967,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1334.52154,
                    "min": 1224.0961989999998,
                    "p50": 1232.805021,
                    "p95": 1334.52154,
                    "p99": 1334.52154,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1955.6461259999999,
                    "min": 1786.6994499999998,
                    "p50": 1839.1795459999998,
                    "p95": 1955.6461259999999,
                    "p99": 1955.6461259999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 857.208,
                    "min": 773.487354,
                    "p50": 786.0576689999999,
                    "p95": 857.208,
                    "p99": 857.208,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 530.353131,
                    "min": 451.87323,
                    "p50": 482.688765,
                    "p95": 530.353131,
                    "p99": 530.353131,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2892.278586,
                    "min": 2612.442776,
                    "p50": 2651.875583,
                    "p95": 2892.278586,
                    "p99": 2892.278586,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2456.143385,
                    "min": 2242.6615469999997,
                    "p50": 2284.0816299999997,
                    "p95": 2456.143385,
                    "p99": 2456.143385,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3276.232172,
                    "min": 2975.337591,
                    "p50": 3016.667117,
                    "p95": 3276.232172,
                    "p99": 3276.232172,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1485.4365779999998,
                    "min": 1359.514322,
                    "p50": 1372.990415,
                    "p95": 1485.4365779999998,
                    "p99": 1485.4365779999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1804.5028679999998,
                    "min": 1629.438267,
                    "p50": 1669.2234589999998,
                    "p95": 1804.5028679999998,
                    "p99": 1804.5028679999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1014.43881,
                    "min": 893.189755,
                    "p50": 932.5243439999999,
                    "p95": 1014.43881,
                    "p99": 1014.43881,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2258.225241,
                    "min": 2052.316958,
                    "p50": 2069.419803,
                    "p95": 2258.225241,
                    "p99": 2258.225241,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 863.534869,
                    "min": 803.885496,
                    "p50": 816.328229,
                    "p95": 863.534869,
                    "p99": 863.534869,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2539.1020829999998,
                    "min": 2364.756932,
                    "p50": 2381.736646,
                    "p95": 2539.1020829999998,
                    "p99": 2539.1020829999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1716.29566,
                    "min": 1546.561813,
                    "p50": 1600.853385,
                    "p95": 1716.29566,
                    "p99": 1716.29566,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 707.645408,
                    "min": 646.695204,
                    "p50": 656.692986,
                    "p95": 707.645408,
                    "p99": 707.645408,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1043.124591,
                    "min": 957.17431,
                    "p50": 969.049174,
                    "p95": 1043.124591,
                    "p99": 1043.124591,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2034.868782,
                    "min": 1857.39256,
                    "p50": 1906.621263,
                    "p95": 2034.868782,
                    "p99": 2034.868782,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2369.627614,
                    "min": 2177.876275,
                    "p50": 2228.540036,
                    "p95": 2369.627614,
                    "p99": 2369.627614,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3381.911464,
                    "min": 3119.0869909999997,
                    "p50": 3147.8421479999997,
                    "p95": 3381.911464,
                    "p99": 3381.911464,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1209.7260959999999,
                    "min": 1111.1677479999998,
                    "p50": 1124.34896,
                    "p95": 1209.7260959999999,
                    "p99": 1209.7260959999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2944.302572,
                    "min": 2726.033306,
                    "p50": 2773.503757,
                    "p95": 2944.302572,
                    "p99": 2944.302572,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1369.8476899999998,
                    "min": 1252.907141,
                    "p50": 1286.312522,
                    "p95": 1369.8476899999998,
                    "p99": 1369.8476899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1883.27154,
                    "min": 1726.655657,
                    "p50": 1746.33654,
                    "p95": 1883.27154,
                    "p99": 1883.27154,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1553.164571,
                    "min": 1401.817916,
                    "p50": 1437.053903,
                    "p95": 1553.164571,
                    "p99": 1553.164571,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 545.465658,
                    "min": 473.33881399999996,
                    "p50": 506.45025,
                    "p95": 545.465658,
                    "p99": 545.465658,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 888.2833049999999,
                    "min": 761.983217,
                    "p50": 785.6171029999999,
                    "p95": 888.2833049999999,
                    "p99": 888.2833049999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1336.257161,
                    "min": 1230.7101049999999,
                    "p50": 1242.341731,
                    "p95": 1336.257161,
                    "p99": 1336.257161,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1193.96393,
                    "min": 1037.915792,
                    "p50": 1094.471084,
                    "p95": 1193.96393,
                    "p99": 1193.96393,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2920.015243,
                    "min": 2635.040608,
                    "p50": 2655.8636509999997,
                    "p95": 2920.015243,
                    "p99": 2920.015243,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2518.657255,
                    "min": 2257.001303,
                    "p50": 2286.690176,
                    "p95": 2518.657255,
                    "p99": 2518.657255,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 527.734103,
                    "min": 449.127924,
                    "p50": 488.93103099999996,
                    "p95": 527.734103,
                    "p99": 527.734103,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1846.263185,
                    "min": 1665.87934,
                    "p50": 1686.213344,
                    "p95": 1846.263185,
                    "p99": 1846.263185,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1699.2231339999998,
                    "min": 1515.46528,
                    "p50": 1531.0774159999999,
                    "p95": 1699.2231339999998,
                    "p99": 1699.2231339999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 691.4350989999999,
                    "min": 614.839651,
                    "p50": 644.3675119999999,
                    "p95": 691.4350989999999,
                    "p99": 691.4350989999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2033.069959,
                    "min": 1814.713096,
                    "p50": 1838.2290639999999,
                    "p95": 2033.069959,
                    "p99": 2033.069959,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1512.880702,
                    "min": 1372.20283,
                    "p50": 1392.196451,
                    "p95": 1512.880702,
                    "p99": 1512.880702,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3306.1619379999997,
                    "min": 3010.840637,
                    "p50": 3058.469155,
                    "p95": 3306.1619379999997,
                    "p99": 3306.1619379999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2327.87769,
                    "min": 2112.9936669999997,
                    "p50": 2158.807383,
                    "p95": 2327.87769,
                    "p99": 2327.87769,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1000.053192,
                    "min": 914.347901,
                    "p50": 935.8912479999999,
                    "p95": 1000.053192,
                    "p99": 1000.053192,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2196.0921599999997,
                    "min": 1965.83432,
                    "p50": 1979.301049,
                    "p95": 2196.0921599999997,
                    "p99": 2196.0921599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3345.8830989999997,
                    "min": 2972.414248,
                    "p50": 3022.416949,
                    "p95": 3345.8830989999997,
                    "p99": 3345.8830989999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 683.759731,
                    "min": 628.835188,
                    "p50": 639.589307,
                    "p95": 683.759731,
                    "p99": 683.759731,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1510.0507249999998,
                    "min": 1322.804913,
                    "p50": 1390.499644,
                    "p95": 1510.0507249999998,
                    "p99": 1510.0507249999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1668.491935,
                    "min": 1512.2664459999999,
                    "p50": 1531.7573849999999,
                    "p95": 1668.491935,
                    "p99": 1668.491935,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1816.898719,
                    "min": 1677.054881,
                    "p50": 1691.629205,
                    "p95": 1816.898719,
                    "p99": 1816.898719,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2874.832656,
                    "min": 2616.808756,
                    "p50": 2650.028968,
                    "p95": 2874.832656,
                    "p99": 2874.832656,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2010.12549,
                    "min": 1768.371927,
                    "p50": 1829.382977,
                    "p95": 2010.12549,
                    "p99": 2010.12549,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2167.541997,
                    "min": 1937.336932,
                    "p50": 1979.7667079999999,
                    "p95": 2167.541997,
                    "p99": 2167.541997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 530.2141439999999,
                    "min": 475.43726399999997,
                    "p50": 488.730529,
                    "p95": 530.2141439999999,
                    "p99": 530.2141439999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1011.97493,
                    "min": 916.739336,
                    "p50": 932.06869,
                    "p95": 1011.97493,
                    "p99": 1011.97493,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 853.6441659999999,
                    "min": 773.749142,
                    "p50": 790.317197,
                    "p95": 853.6441659999999,
                    "p99": 853.6441659999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2464.844197,
                    "min": 2243.593743,
                    "p50": 2261.588128,
                    "p95": 2464.844197,
                    "p99": 2464.844197,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1344.8235539999998,
                    "min": 1220.417387,
                    "p50": 1232.3937859999999,
                    "p95": 1344.8235539999998,
                    "p99": 1344.8235539999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2297.3926699999997,
                    "min": 2090.826587,
                    "p50": 2123.599875,
                    "p95": 2297.3926699999997,
                    "p99": 2297.3926699999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1165.311417,
                    "min": 1067.6977299999999,
                    "p50": 1081.241311,
                    "p95": 1165.311417,
                    "p99": 1165.311417,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 826.359738,
                    "min": 764.722419,
                    "p50": 784.971249,
                    "p95": 826.359738,
                    "p99": 826.359738,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.005981,
                    "min": 195.639129,
                    "p50": 202.232106,
                    "p95": 209.005981,
                    "p99": 209.005981,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4449.804714,
                    "min": 4028.401105,
                    "p50": 4077.967233,
                    "p95": 4449.804714,
                    "p99": 4449.804714,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 917.501312,
                    "min": 828.281072,
                    "p50": 853.886882,
                    "p95": 917.501312,
                    "p99": 917.501312,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1348.361213,
                    "min": 1233.195319,
                    "p50": 1249.311048,
                    "p95": 1348.361213,
                    "p99": 1348.361213,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 476.48920699999996,
                    "min": 426.288927,
                    "p50": 442.639813,
                    "p95": 476.48920699999996,
                    "p99": 476.48920699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1798.5264769999999,
                    "min": 1624.568364,
                    "p50": 1665.2576359999998,
                    "p95": 1798.5264769999999,
                    "p99": 1798.5264769999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.071149,
                    "min": 260.11916099999996,
                    "p50": 284.183802,
                    "p95": 304.071149,
                    "p99": 304.071149,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.062924,
                    "min": 354.677863,
                    "p50": 367.04953,
                    "p95": 394.062924,
                    "p99": 394.062924,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.011521,
                    "min": 139.603507,
                    "p50": 160.012343,
                    "p95": 169.011521,
                    "p99": 169.011521,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 437.408622,
                    "min": 387.286628,
                    "p50": 407.016815,
                    "p95": 437.408622,
                    "p99": 437.408622,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.790679,
                    "min": 293.703428,
                    "p50": 326.084428,
                    "p95": 348.790679,
                    "p99": 348.790679,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.414122,
                    "min": 459.976088,
                    "p50": 489.732826,
                    "p95": 525.414122,
                    "p99": 525.414122,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 580.795919,
                    "min": 539.367487,
                    "p50": 570.522734,
                    "p95": 580.795919,
                    "p99": 580.795919,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 564.261353,
                    "min": 521.6683419999999,
                    "p50": 528.578756,
                    "p95": 564.261353,
                    "p99": 564.261353,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2221.390774,
                    "min": 2055.174592,
                    "p50": 2080.350589,
                    "p95": 2221.390774,
                    "p99": 2221.390774,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.10972699999996,
                    "min": 230.79540899999998,
                    "p50": 243.762034,
                    "p95": 260.10972699999996,
                    "p99": 260.10972699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 658.931611,
                    "min": 583.462088,
                    "p50": 610.274671,
                    "p95": 658.931611,
                    "p99": 658.931611,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 692.2451219999999,
                    "min": 632.231397,
                    "p50": 652.7518749999999,
                    "p95": 692.2451219999999,
                    "p99": 692.2451219999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 612.641246,
                    "min": 541.015123,
                    "p50": 572.084307,
                    "p95": 612.641246,
                    "p99": 612.641246,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4435.101356,
                    "min": 4006.238186,
                    "p50": 4072.0845679999998,
                    "p95": 4435.101356,
                    "p99": 4435.101356,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 636.233201,
                    "min": 587.6895559999999,
                    "p50": 600.7864579999999,
                    "p95": 636.233201,
                    "p99": 636.233201,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 431.83282499999996,
                    "min": 398.064645,
                    "p50": 401.011199,
                    "p95": 431.83282499999996,
                    "p99": 431.83282499999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 797.545392,
                    "min": 712.106418,
                    "p50": 742.42802,
                    "p95": 797.545392,
                    "p99": 797.545392,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 907.925022,
                    "min": 833.170351,
                    "p50": 842.3107349999999,
                    "p95": 907.925022,
                    "p99": 907.925022,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 243.381202,
                    "min": 201.620085,
                    "p50": 238.53188799999998,
                    "p95": 243.381202,
                    "p99": 243.381202,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 468.390178,
                    "min": 419.281476,
                    "p50": 442.909771,
                    "p95": 468.390178,
                    "p99": 468.390178,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.652905,
                    "min": 286.194566,
                    "p50": 319.746002,
                    "p95": 345.652905,
                    "p99": 345.652905,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 697.1589299999999,
                    "min": 613.962105,
                    "p50": 643.817542,
                    "p95": 697.1589299999999,
                    "p99": 697.1589299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 554.232367,
                    "min": 521.225193,
                    "p50": 529.006254,
                    "p95": 554.232367,
                    "p99": 554.232367,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1780.7037719999998,
                    "min": 1615.540109,
                    "p50": 1663.1258759999998,
                    "p95": 1780.7037719999998,
                    "p99": 1780.7037719999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1358.5590519999998,
                    "min": 1217.415379,
                    "p50": 1252.308443,
                    "p95": 1358.5590519999998,
                    "p99": 1358.5590519999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 505.915684,
                    "min": 469.04780999999997,
                    "p50": 486.571423,
                    "p95": 505.915684,
                    "p99": 505.915684,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.353374,
                    "min": 123.55948799999999,
                    "p50": 158.673497,
                    "p95": 170.353374,
                    "p99": 170.353374,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 389.563926,
                    "min": 359.075153,
                    "p50": 364.303707,
                    "p95": 389.563926,
                    "p99": 389.563926,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 203.426944,
                    "min": 190.586942,
                    "p50": 200.278154,
                    "p95": 203.426944,
                    "p99": 203.426944,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 296.901123,
                    "min": 276.89496099999997,
                    "p50": 286.3761,
                    "p95": 296.901123,
                    "p99": 296.901123,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2214.598676,
                    "min": 2038.818452,
                    "p50": 2075.521398,
                    "p95": 2214.598676,
                    "p99": 2214.598676,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 338.57912799999997,
                    "min": 288.623767,
                    "p50": 330.908529,
                    "p95": 338.57912799999997,
                    "p99": 338.57912799999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 600.558595,
                    "min": 538.236977,
                    "p50": 580.9494,
                    "p95": 600.558595,
                    "p99": 600.558595,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 527.904356,
                    "min": 474.29677599999997,
                    "p50": 494.415328,
                    "p95": 527.904356,
                    "p99": 527.904356,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.1833,
                    "min": 278.222511,
                    "p50": 288.16677599999997,
                    "p95": 306.1833,
                    "p99": 306.1833,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 924.753514,
                    "min": 862.378236,
                    "p50": 879.745367,
                    "p95": 924.753514,
                    "p99": 924.753514,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 212.72854099999998,
                    "min": 191.897191,
                    "p50": 205.093986,
                    "p95": 212.72854099999998,
                    "p99": 212.72854099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 398.75181699999996,
                    "min": 340.413303,
                    "p50": 372.692576,
                    "p95": 398.75181699999996,
                    "p99": 398.75181699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 486.386756,
                    "min": 436.81728699999996,
                    "p50": 456.25298,
                    "p95": 486.386756,
                    "p99": 486.386756,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 700.666704,
                    "min": 649.415294,
                    "p50": 667.6708679999999,
                    "p95": 700.666704,
                    "p99": 700.666704,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1382.389534,
                    "min": 1269.271202,
                    "p50": 1295.534473,
                    "p95": 1382.389534,
                    "p99": 1382.389534,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 574.375937,
                    "min": 507.31823399999996,
                    "p50": 546.346766,
                    "p95": 574.375937,
                    "p99": 574.375937,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 441.789433,
                    "min": 402.673866,
                    "p50": 414.159176,
                    "p95": 441.789433,
                    "p99": 441.789433,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.982246,
                    "min": 210.671058,
                    "p50": 249.032624,
                    "p95": 257.982246,
                    "p99": 257.982246,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 660.343922,
                    "min": 614.716246,
                    "p50": 626.337916,
                    "p95": 660.343922,
                    "p99": 660.343922,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 813.109377,
                    "min": 727.67275,
                    "p50": 773.2644419999999,
                    "p95": 813.109377,
                    "p99": 813.109377,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1803.2967939999999,
                    "min": 1682.9081509999999,
                    "p50": 1731.223421,
                    "p95": 1803.2967939999999,
                    "p99": 1803.2967939999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2267.054546,
                    "min": 2094.412304,
                    "p50": 2143.021529,
                    "p95": 2267.054546,
                    "p99": 2267.054546,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4483.526812,
                    "min": 4100.563999,
                    "p50": 4250.326478999999,
                    "p95": 4483.526812,
                    "p99": 4483.526812,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 163.763783,
                    "min": 136.603375,
                    "p50": 160.54878399999998,
                    "p95": 163.763783,
                    "p99": 163.763783,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2203.809889,
                    "min": 2018.9628859999998,
                    "p50": 2037.849939,
                    "p95": 2203.809889,
                    "p99": 2203.809889,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 599.573641,
                    "min": 553.664808,
                    "p50": 563.43521,
                    "p95": 599.573641,
                    "p99": 599.573641,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 476.32652199999995,
                    "min": 407.92744799999997,
                    "p50": 438.692414,
                    "p95": 476.32652199999995,
                    "p99": 476.32652199999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 691.915624,
                    "min": 633.163541,
                    "p50": 639.72798,
                    "p95": 691.915624,
                    "p99": 691.915624,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.42356,
                    "min": 316.12296699999996,
                    "p50": 321.235798,
                    "p95": 348.42356,
                    "p99": 348.42356,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 256.996483,
                    "min": 233.941734,
                    "p50": 238.627084,
                    "p95": 256.996483,
                    "p99": 256.996483,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 166.45617199999998,
                    "min": 141.18345,
                    "p50": 158.19600699999998,
                    "p95": 166.45617199999998,
                    "p99": 166.45617199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 521.0299719999999,
                    "min": 441.73812899999996,
                    "p50": 479.635422,
                    "p95": 521.0299719999999,
                    "p99": 521.0299719999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 797.434275,
                    "min": 720.118287,
                    "p50": 743.360547,
                    "p95": 797.434275,
                    "p99": 797.434275,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.055126,
                    "min": 267.919407,
                    "p50": 281.305845,
                    "p95": 303.055126,
                    "p99": 303.055126,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 386.652456,
                    "min": 352.919182,
                    "p50": 362.27500799999996,
                    "p95": 386.652456,
                    "p99": 386.652456,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 650.259448,
                    "min": 590.851849,
                    "p50": 606.86376,
                    "p95": 650.259448,
                    "p99": 650.259448,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1750.991012,
                    "min": 1627.0774239999998,
                    "p50": 1663.984093,
                    "p95": 1750.991012,
                    "p99": 1750.991012,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4409.276299,
                    "min": 3951.525319,
                    "p50": 4083.023433,
                    "p95": 4409.276299,
                    "p99": 4409.276299,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 426.26838599999996,
                    "min": 396.38219,
                    "p50": 400.987079,
                    "p95": 426.26838599999996,
                    "p99": 426.26838599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 894.637892,
                    "min": 837.6225059999999,
                    "p50": 843.0161039999999,
                    "p95": 894.637892,
                    "p99": 894.637892,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 559.495713,
                    "min": 505.574128,
                    "p50": 526.825665,
                    "p95": 559.495713,
                    "p99": 559.495713,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.477823,
                    "min": 190.553363,
                    "p50": 199.470202,
                    "p95": 211.477823,
                    "p99": 211.477823,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1342.487729,
                    "min": 1212.295246,
                    "p50": 1238.2558099999999,
                    "p95": 1342.487729,
                    "p99": 1342.487729,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 801.3953849999999,
                    "min": 703.8992529999999,
                    "p50": 742.220748,
                    "p95": 801.3953849999999,
                    "p99": 801.3953849999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 614.173531,
                    "min": 553.66775,
                    "p50": 563.696738,
                    "p95": 614.173531,
                    "p99": 614.173531,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 977.3360369999999,
                    "min": 890.210784,
                    "p50": 897.099376,
                    "p95": 977.3360369999999,
                    "p99": 977.3360369999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3916.780062,
                    "min": 3504.65942,
                    "p50": 3552.9688969999997,
                    "p95": 3916.780062,
                    "p99": 3916.780062,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2539.077052,
                    "min": 2267.266575,
                    "p50": 2311.302936,
                    "p95": 2539.077052,
                    "p99": 2539.077052,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2925.991168,
                    "min": 2637.411467,
                    "p50": 2673.79304,
                    "p95": 2925.991168,
                    "p99": 2925.991168,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3445.3116929999997,
                    "min": 3055.4070629999997,
                    "p50": 3103.5807,
                    "p95": 3445.3116929999997,
                    "p99": 3445.3116929999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1784.732493,
                    "min": 1583.8623599999999,
                    "p50": 1611.306507,
                    "p95": 1784.732493,
                    "p99": 1784.732493,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1184.906503,
                    "min": 1047.426375,
                    "p50": 1091.835511,
                    "p95": 1184.906503,
                    "p99": 1184.906503,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1581.526085,
                    "min": 1425.4096849999999,
                    "p50": 1453.5583139999999,
                    "p95": 1581.526085,
                    "p99": 1581.526085,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1400.2648179999999,
                    "min": 1247.193784,
                    "p50": 1260.394306,
                    "p95": 1400.2648179999999,
                    "p99": 1400.2648179999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1990.695634,
                    "min": 1761.5028029999999,
                    "p50": 1785.842995,
                    "p95": 1990.695634,
                    "p99": 1990.695634,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2176.3484789999998,
                    "min": 1941.5338769999998,
                    "p50": 1976.418534,
                    "p95": 2176.3484789999998,
                    "p99": 2176.3484789999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2727.9554129999997,
                    "min": 2431.104562,
                    "p50": 2490.072832,
                    "p95": 2727.9554129999997,
                    "p99": 2727.9554129999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2351.325896,
                    "min": 2101.7114269999997,
                    "p50": 2140.809973,
                    "p95": 2351.325896,
                    "p99": 2351.325896,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2177.359211,
                    "min": 1961.121627,
                    "p50": 1973.56928,
                    "p95": 2177.359211,
                    "p99": 2177.359211,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2550.133125,
                    "min": 2302.669062,
                    "p50": 2339.537551,
                    "p95": 2550.133125,
                    "p99": 2550.133125,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2747.7700339999997,
                    "min": 2444.349307,
                    "p50": 2507.481579,
                    "p95": 2747.7700339999997,
                    "p99": 2747.7700339999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 799.403738,
                    "min": 727.273334,
                    "p50": 743.818003,
                    "p95": 799.403738,
                    "p99": 799.403738,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 989.63153,
                    "min": 883.201417,
                    "p50": 915.872765,
                    "p95": 989.63153,
                    "p99": 989.63153,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1384.5749879999998,
                    "min": 1249.886924,
                    "p50": 1270.0137009999999,
                    "p95": 1384.5749879999998,
                    "p99": 1384.5749879999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1192.419539,
                    "min": 1066.959826,
                    "p50": 1090.820712,
                    "p95": 1192.419539,
                    "p99": 1192.419539,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1980.26848,
                    "min": 1763.18065,
                    "p50": 1805.3510939999999,
                    "p95": 1980.26848,
                    "p99": 1980.26848,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 588.914681,
                    "min": 557.547663,
                    "p50": 567.074746,
                    "p95": 588.914681,
                    "p99": 588.914681,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1575.9400269999999,
                    "min": 1420.2878429999998,
                    "p50": 1441.1526159999999,
                    "p95": 1575.9400269999999,
                    "p99": 1575.9400269999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3419.909742,
                    "min": 3062.8341419999997,
                    "p50": 3132.610944,
                    "p95": 3419.909742,
                    "p99": 3419.909742,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3880.776551,
                    "min": 3527.562539,
                    "p50": 3557.6335999999997,
                    "p95": 3880.776551,
                    "p99": 3880.776551,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2920.876202,
                    "min": 2654.3945439999998,
                    "p50": 2684.167501,
                    "p95": 2920.876202,
                    "p99": 2920.876202,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1765.944223,
                    "min": 1597.1647879999998,
                    "p50": 1624.0558059999998,
                    "p95": 1765.944223,
                    "p99": 1765.944223,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2356.782688,
                    "min": 2120.686787,
                    "p50": 2157.3416549999997,
                    "p95": 2356.782688,
                    "p99": 2356.782688,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2618.998996,
                    "min": 2343.213177,
                    "p50": 2366.156948,
                    "p95": 2618.998996,
                    "p99": 2618.998996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2432.7693919999997,
                    "min": 2171.4683489999998,
                    "p50": 2211.496349,
                    "p95": 2432.7693919999997,
                    "p99": 2432.7693919999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2788.5096409999996,
                    "min": 2503.921092,
                    "p50": 2550.087802,
                    "p95": 2788.5096409999996,
                    "p99": 2788.5096409999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3244.0849949999997,
                    "min": 2927.914575,
                    "p50": 2960.036004,
                    "p95": 3244.0849949999997,
                    "p99": 3244.0849949999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2228.3375069999997,
                    "min": 2008.370252,
                    "p50": 2055.122817,
                    "p95": 2228.3375069999997,
                    "p99": 2228.3375069999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2052.807614,
                    "min": 1852.371819,
                    "p50": 1881.185753,
                    "p95": 2052.807614,
                    "p99": 2052.807614,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 591.77238,
                    "min": 512.4651339999999,
                    "p50": 539.535187,
                    "p95": 591.77238,
                    "p99": 591.77238,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3736.0273049999996,
                    "min": 3305.958048,
                    "p50": 3392.556604,
                    "p95": 3736.0273049999996,
                    "p99": 3736.0273049999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1860.108287,
                    "min": 1678.089508,
                    "p50": 1716.585629,
                    "p95": 1860.108287,
                    "p99": 1860.108287,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1693.642467,
                    "min": 1510.3660869999999,
                    "p50": 1544.868385,
                    "p95": 1693.642467,
                    "p99": 1693.642467,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1135.5680579999998,
                    "min": 1027.656779,
                    "p50": 1045.1830949999999,
                    "p95": 1135.5680579999998,
                    "p99": 1135.5680579999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1503.660477,
                    "min": 1341.131484,
                    "p50": 1378.582498,
                    "p95": 1503.660477,
                    "p99": 1503.660477,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1321.573023,
                    "min": 1194.651349,
                    "p50": 1210.9073759999999,
                    "p95": 1321.573023,
                    "p99": 1321.573023,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 776.090111,
                    "min": 691.078528,
                    "p50": 708.213293,
                    "p95": 776.090111,
                    "p99": 776.090111,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 953.9926389999999,
                    "min": 860.275987,
                    "p50": 873.968981,
                    "p95": 953.9926389999999,
                    "p99": 953.9926389999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2730.520604,
                    "min": 2451.793776,
                    "p50": 2489.633593,
                    "p95": 2730.520604,
                    "p99": 2730.520604,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2900.104199,
                    "min": 2624.218942,
                    "p50": 2675.358876,
                    "p95": 2900.104199,
                    "p99": 2900.104199,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2394.999763,
                    "min": 2098.359364,
                    "p50": 2145.2767289999997,
                    "p95": 2394.999763,
                    "p99": 2394.999763,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3413.402928,
                    "min": 3074.501412,
                    "p50": 3112.488667,
                    "p95": 3413.402928,
                    "p99": 3413.402928,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 806.939232,
                    "min": 719.51182,
                    "p50": 739.1483959999999,
                    "p95": 806.939232,
                    "p99": 806.939232,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2153.584916,
                    "min": 1940.6951179999999,
                    "p50": 1980.720625,
                    "p95": 2153.584916,
                    "p99": 2153.584916,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3911.9272889999997,
                    "min": 3502.165102,
                    "p50": 3535.729356,
                    "p95": 3911.9272889999997,
                    "p99": 3911.9272889999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1189.589076,
                    "min": 1075.488627,
                    "p50": 1089.406845,
                    "p95": 1189.589076,
                    "p99": 1189.589076,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1589.417829,
                    "min": 1428.226148,
                    "p50": 1452.190815,
                    "p95": 1589.417829,
                    "p99": 1589.417829,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1390.8981239999998,
                    "min": 1245.690728,
                    "p50": 1261.7913099999998,
                    "p95": 1390.8981239999998,
                    "p99": 1390.8981239999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1001.325569,
                    "min": 903.2119869999999,
                    "p50": 921.984657,
                    "p95": 1001.325569,
                    "p99": 1001.325569,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1783.862785,
                    "min": 1551.6051579999998,
                    "p50": 1621.9661529999998,
                    "p95": 1783.862785,
                    "p99": 1783.862785,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1957.1093799999999,
                    "min": 1740.7482439999999,
                    "p50": 1788.940422,
                    "p95": 1957.1093799999999,
                    "p99": 1957.1093799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 624.822068,
                    "min": 541.582357,
                    "p50": 559.218971,
                    "p95": 624.822068,
                    "p99": 624.822068,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2533.394549,
                    "min": 2279.65773,
                    "p50": 2317.9661539999997,
                    "p95": 2533.394549,
                    "p99": 2533.394549,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1602.119031,
                    "min": 1517.034163,
                    "p50": 1584.090201,
                    "p95": 1602.119031,
                    "p99": 1602.119031,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 980.2800179999999,
                    "min": 922.606189,
                    "p50": 950.681599,
                    "p95": 980.2800179999999,
                    "p99": 980.2800179999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1215.309751,
                    "min": 1116.352273,
                    "p50": 1137.255954,
                    "p95": 1215.309751,
                    "p99": 1215.309751,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 755.41255,
                    "min": 712.925347,
                    "p50": 740.201148,
                    "p95": 755.41255,
                    "p99": 755.41255,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 655.6261579999999,
                    "min": 595.422208,
                    "p50": 640.707637,
                    "p95": 655.6261579999999,
                    "p99": 655.6261579999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1073.17338,
                    "min": 1004.826864,
                    "p50": 1048.26109,
                    "p95": 1073.17338,
                    "p99": 1073.17338,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 343.36686599999996,
                    "min": 324.914243,
                    "p50": 340.270779,
                    "p95": 343.36686599999996,
                    "p99": 343.36686599999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 450.45825299999996,
                    "min": 425.521279,
                    "p50": 439.149749,
                    "p95": 450.45825299999996,
                    "p99": 450.45825299999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 854.739968,
                    "min": 823.94287,
                    "p50": 843.064174,
                    "p95": 854.739968,
                    "p99": 854.739968,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 557.114702,
                    "min": 522.479794,
                    "p50": 545.471245,
                    "p95": 557.114702,
                    "p99": 557.114702,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2070.2994,
                    "min": 1991.449113,
                    "p50": 2040.501581,
                    "p95": 2070.2994,
                    "p99": 2070.2994,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1258.9325999999999,
                    "min": 1199.225559,
                    "p50": 1239.291731,
                    "p95": 1258.9325999999999,
                    "p99": 1258.9325999999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1830.927256,
                    "min": 1755.927501,
                    "p50": 1788.0544419999999,
                    "p95": 1830.927256,
                    "p99": 1830.927256,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1461.035126,
                    "min": 1402.050071,
                    "p50": 1439.843101,
                    "p95": 1461.035126,
                    "p99": 1461.035126,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1354.603067,
                    "min": 1305.617221,
                    "p50": 1340.829536,
                    "p95": 1354.603067,
                    "p99": 1354.603067,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3103.076538,
                    "min": 2986.659022,
                    "p50": 3064.998759,
                    "p95": 3103.076538,
                    "p99": 3103.076538,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2222.572515,
                    "min": 1835.7225649999998,
                    "p50": 2051.2074669999997,
                    "p95": 2222.572515,
                    "p99": 2222.572515,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1638.7705979999998,
                    "min": 1314.566776,
                    "p50": 1579.415242,
                    "p95": 1638.7705979999998,
                    "p99": 1638.7705979999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1930.587198,
                    "min": 1554.554031,
                    "p50": 1876.5493529999999,
                    "p95": 1930.587198,
                    "p99": 1930.587198,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2952.684811,
                    "min": 2357.273633,
                    "p50": 2844.672319,
                    "p95": 2952.684811,
                    "p99": 2952.684811,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2587.846568,
                    "min": 2043.9171039999999,
                    "p50": 2503.208252,
                    "p95": 2587.846568,
                    "p99": 2587.846568,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1806.575703,
                    "min": 1404.443061,
                    "p50": 1724.910883,
                    "p95": 1806.575703,
                    "p99": 1806.575703,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 476.13266999999996,
                    "min": 392.00231299999996,
                    "p50": 465.422436,
                    "p95": 476.13266999999996,
                    "p99": 476.13266999999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 615.509007,
                    "min": 510.08942299999995,
                    "p50": 602.369974,
                    "p95": 615.509007,
                    "p99": 615.509007,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1492.2987369999998,
                    "min": 1207.097827,
                    "p50": 1444.1430599999999,
                    "p95": 1492.2987369999998,
                    "p99": 1492.2987369999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 918.984426,
                    "min": 752.5153809999999,
                    "p50": 876.190615,
                    "p95": 918.984426,
                    "p99": 918.984426,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1356.866951,
                    "min": 1084.55759,
                    "p50": 1304.354977,
                    "p95": 1356.866951,
                    "p99": 1356.866951,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 778.3510329999999,
                    "min": 587.313375,
                    "p50": 737.51569,
                    "p95": 778.3510329999999,
                    "p99": 778.3510329999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2085.96898,
                    "min": 1664.978645,
                    "p50": 1998.705331,
                    "p95": 2085.96898,
                    "p99": 2085.96898,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1207.852578,
                    "min": 953.020859,
                    "p50": 1178.741616,
                    "p95": 1207.852578,
                    "p99": 1207.852578,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1056.5632779999999,
                    "min": 839.7497079999999,
                    "p50": 1011.4311849999999,
                    "p95": 1056.5632779999999,
                    "p99": 1056.5632779999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1363.2326309999999,
                    "min": 1193.49045,
                    "p50": 1321.7540609999999,
                    "p95": 1363.2326309999999,
                    "p99": 1363.2326309999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 588.385237,
                    "min": 510.94604899999996,
                    "p50": 554.385513,
                    "p95": 588.385237,
                    "p99": 588.385237,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1128.756568,
                    "min": 985.614602,
                    "p50": 1062.209158,
                    "p95": 1128.756568,
                    "p99": 1128.756568,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 995.26744,
                    "min": 867.913776,
                    "p50": 925.639767,
                    "p95": 995.26744,
                    "p99": 995.26744,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 863.755966,
                    "min": 745.876407,
                    "p50": 806.371443,
                    "p95": 863.755966,
                    "p99": 863.755966,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2070.699373,
                    "min": 1806.9124029999998,
                    "p50": 1956.499791,
                    "p95": 2070.699373,
                    "p99": 2070.699373,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1778.255764,
                    "min": 1588.4944229999999,
                    "p50": 1706.5913859999998,
                    "p95": 1778.255764,
                    "p99": 1778.255764,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2731.9252229999997,
                    "min": 2415.519167,
                    "p50": 2581.366559,
                    "p95": 2731.9252229999997,
                    "p99": 2731.9252229999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4073.5449909999998,
                    "min": 3606.0282479999996,
                    "p50": 3877.488199,
                    "p95": 4073.5449909999998,
                    "p99": 4073.5449909999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1684.6725689999998,
                    "min": 1465.975569,
                    "p50": 1569.733741,
                    "p95": 1684.6725689999998,
                    "p99": 1684.6725689999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 714.638411,
                    "min": 628.5542479999999,
                    "p50": 662.7404789999999,
                    "p95": 714.638411,
                    "p99": 714.638411,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1532.287396,
                    "min": 1377.8394309999999,
                    "p50": 1435.504735,
                    "p95": 1532.287396,
                    "p99": 1532.287396,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 450.62728599999997,
                    "min": 392.454238,
                    "p50": 408.998043,
                    "p95": 450.62728599999997,
                    "p99": 450.62728599999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1913.482994,
                    "min": 1702.016733,
                    "p50": 1821.1395659999998,
                    "p95": 1913.482994,
                    "p99": 1913.482994,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2428.0017629999998,
                    "min": 2121.787229,
                    "p50": 2274.0971099999997,
                    "p95": 2428.0017629999998,
                    "p99": 2428.0017629999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1264.672337,
                    "min": 1117.7930119999999,
                    "p50": 1184.3636099999999,
                    "p95": 1264.672337,
                    "p99": 1264.672337,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2369.631911,
                    "min": 2289.719583,
                    "p50": 2335.371065,
                    "p95": 2369.631911,
                    "p99": 2369.631911,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 564.20038,
                    "min": 533.070115,
                    "p50": 556.856412,
                    "p95": 564.20038,
                    "p99": 564.20038,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 387.079923,
                    "min": 356.28770099999997,
                    "p50": 379.47488899999996,
                    "p95": 387.079923,
                    "p99": 387.079923,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 740.9249649999999,
                    "min": 697.852702,
                    "p50": 724.439892,
                    "p95": 740.9249649999999,
                    "p99": 740.9249649999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 272.19701,
                    "min": 259.656741,
                    "p50": 270.351933,
                    "p95": 272.19701,
                    "p99": 272.19701,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1200.3328139999999,
                    "min": 1157.466907,
                    "p50": 1186.975437,
                    "p95": 1200.3328139999999,
                    "p99": 1200.3328139999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 941.53865,
                    "min": 879.252653,
                    "p50": 899.716922,
                    "p95": 941.53865,
                    "p99": 941.53865,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 853.621139,
                    "min": 792.314728,
                    "p50": 826.766346,
                    "p95": 853.621139,
                    "p99": 853.621139,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 212.700457,
                    "min": 175.153542,
                    "p50": 208.255588,
                    "p95": 212.700457,
                    "p99": 212.700457,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 332.028236,
                    "min": 291.378274,
                    "p50": 320.655195,
                    "p95": 332.028236,
                    "p99": 332.028236,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1072.888935,
                    "min": 997.97442,
                    "p50": 1043.4052199999999,
                    "p95": 1072.888935,
                    "p99": 1072.888935,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 505.06672399999997,
                    "min": 471.597943,
                    "p50": 499.155824,
                    "p95": 505.06672399999997,
                    "p99": 505.06672399999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 681.6846909999999,
                    "min": 641.6547059999999,
                    "p50": 672.538226,
                    "p95": 681.6846909999999,
                    "p99": 681.6846909999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 448.579676,
                    "min": 420.057297,
                    "p50": 441.21662399999997,
                    "p95": 448.579676,
                    "p99": 448.579676,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 794.4980539999999,
                    "min": 749.755372,
                    "p50": 772.598743,
                    "p95": 794.4980539999999,
                    "p99": 794.4980539999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1783.0334149999999,
                    "min": 1714.3691139999999,
                    "p50": 1748.256496,
                    "p95": 1783.0334149999999,
                    "p99": 1783.0334149999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2974.060803,
                    "min": 2812.9356479999997,
                    "p50": 2884.744277,
                    "p95": 2974.060803,
                    "p99": 2974.060803,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 621.459928,
                    "min": 577.573413,
                    "p50": 602.197956,
                    "p95": 621.459928,
                    "p99": 621.459928,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 465.00665499999997,
                    "min": 443.70896799999997,
                    "p50": 460.541932,
                    "p95": 465.00665499999997,
                    "p99": 465.00665499999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1309.598894,
                    "min": 1216.202125,
                    "p50": 1252.8428099999999,
                    "p95": 1309.598894,
                    "p99": 1309.598894,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1877.816795,
                    "min": 1805.581586,
                    "p50": 1866.396153,
                    "p95": 1877.816795,
                    "p99": 1877.816795,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3100.347156,
                    "min": 2977.731387,
                    "p50": 3066.651762,
                    "p95": 3100.347156,
                    "p99": 3100.347156,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2477.887906,
                    "min": 2381.812155,
                    "p50": 2462.284012,
                    "p95": 2477.887906,
                    "p99": 2477.887906,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 525.91097,
                    "min": 503.354988,
                    "p50": 522.133486,
                    "p95": 525.91097,
                    "p99": 525.91097,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1112.8551459999999,
                    "min": 1061.4940219999999,
                    "p50": 1102.360457,
                    "p95": 1112.8551459999999,
                    "p99": 1112.8551459999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 411.255454,
                    "min": 379.848151,
                    "p50": 403.83745,
                    "p95": 411.255454,
                    "p99": 411.255454,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 909.619143,
                    "min": 858.3680049999999,
                    "p50": 883.6963119999999,
                    "p95": 909.619143,
                    "p99": 909.619143,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 959.4663069999999,
                    "min": 915.602087,
                    "p50": 948.3439989999999,
                    "p95": 959.4663069999999,
                    "p99": 959.4663069999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 283.200376,
                    "min": 256.04062,
                    "p50": 277.791675,
                    "p95": 283.200376,
                    "p99": 283.200376,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 709.732818,
                    "min": 684.920494,
                    "p50": 698.396002,
                    "p95": 709.732818,
                    "p99": 709.732818,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 779.1017929999999,
                    "min": 746.651478,
                    "p50": 767.693638,
                    "p95": 779.1017929999999,
                    "p99": 779.1017929999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.208457,
                    "min": 320.800911,
                    "p50": 338.084695,
                    "p95": 345.208457,
                    "p99": 345.208457,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.710424,
                    "min": 212.695234,
                    "p50": 217.92149999999998,
                    "p95": 224.710424,
                    "p99": 224.710424,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 834.8786789999999,
                    "min": 798.954081,
                    "p50": 827.685621,
                    "p95": 834.8786789999999,
                    "p99": 834.8786789999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 655.937362,
                    "min": 624.907198,
                    "p50": 648.796781,
                    "p95": 655.937362,
                    "p99": 655.937362,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 687.130556,
                    "min": 565.228931,
                    "p50": 582.011629,
                    "p95": 687.130556,
                    "p99": 687.130556,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 978.3009129999999,
                    "min": 938.4457,
                    "p50": 953.709991,
                    "p95": 978.3009129999999,
                    "p99": 978.3009129999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1521.2403319999999,
                    "min": 1457.206884,
                    "p50": 1469.2206529999999,
                    "p95": 1521.2403319999999,
                    "p99": 1521.2403319999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1296.9793009999999,
                    "min": 1250.815606,
                    "p50": 1264.460848,
                    "p95": 1296.9793009999999,
                    "p99": 1296.9793009999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 350.616337,
                    "min": 323.175074,
                    "p50": 343.234273,
                    "p95": 350.616337,
                    "p99": 350.616337,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2161.169364,
                    "min": 2059.854011,
                    "p50": 2100.059388,
                    "p95": 2161.169364,
                    "p99": 2161.169364,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 883.0258819999999,
                    "min": 841.6689299999999,
                    "p50": 860.7016239999999,
                    "p95": 883.0258819999999,
                    "p99": 883.0258819999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 566.475007,
                    "min": 543.290397,
                    "p50": 556.7058989999999,
                    "p95": 566.475007,
                    "p99": 566.475007,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1195.821788,
                    "min": 1152.609391,
                    "p50": 1163.994577,
                    "p95": 1195.821788,
                    "p99": 1195.821788,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 669.380649,
                    "min": 646.570217,
                    "p50": 650.941124,
                    "p95": 669.380649,
                    "p99": 669.380649,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1914.356267,
                    "min": 1807.4160829999998,
                    "p50": 1829.271362,
                    "p95": 1914.356267,
                    "p99": 1914.356267,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 461.380904,
                    "min": 443.55377599999997,
                    "p50": 446.23574499999995,
                    "p95": 461.380904,
                    "p99": 461.380904,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1648.707943,
                    "min": 1564.679001,
                    "p50": 1570.20391,
                    "p95": 1648.707943,
                    "p99": 1648.707943,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 778.014857,
                    "min": 740.1928009999999,
                    "p50": 754.707802,
                    "p95": 778.014857,
                    "p99": 778.014857,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1416.4174719999999,
                    "min": 1351.532777,
                    "p50": 1370.1369969999998,
                    "p95": 1416.4174719999999,
                    "p99": 1416.4174719999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1086.124545,
                    "min": 1049.252926,
                    "p50": 1061.094472,
                    "p95": 1086.124545,
                    "p99": 1086.124545,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 664.879787,
                    "min": 615.496549,
                    "p50": 633.135284,
                    "p95": 664.879787,
                    "p99": 664.879787,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1871.6347819999999,
                    "min": 1597.595461,
                    "p50": 1801.2532079999999,
                    "p95": 1871.6347819999999,
                    "p99": 1871.6347819999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1146.1832239999999,
                    "min": 992.9040239999999,
                    "p50": 1101.699199,
                    "p95": 1146.1832239999999,
                    "p99": 1146.1832239999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1636.290327,
                    "min": 1437.3082399999998,
                    "p50": 1572.1567029999999,
                    "p95": 1636.290327,
                    "p99": 1636.290327,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2481.2630599999998,
                    "min": 2180.529995,
                    "p50": 2381.925702,
                    "p95": 2481.2630599999998,
                    "p99": 2481.2630599999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1391.8347509999999,
                    "min": 1223.1440619999998,
                    "p50": 1338.382696,
                    "p95": 1391.8347509999999,
                    "p99": 1391.8347509999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1755.782473,
                    "min": 1532.411856,
                    "p50": 1696.1220959999998,
                    "p95": 1755.782473,
                    "p99": 1755.782473,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3715.422323,
                    "min": 3259.1632879999997,
                    "p50": 3595.576291,
                    "p95": 3715.422323,
                    "p99": 3715.422323,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 899.436282,
                    "min": 782.8272049999999,
                    "p50": 872.081247,
                    "p95": 899.436282,
                    "p99": 899.436282,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 404.830405,
                    "min": 357.743401,
                    "p50": 393.934392,
                    "p95": 404.830405,
                    "p99": 404.830405,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1267.419429,
                    "min": 1100.750531,
                    "p50": 1222.952257,
                    "p95": 1267.419429,
                    "p99": 1267.419429,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 775.426015,
                    "min": 680.9666129999999,
                    "p50": 742.772438,
                    "p95": 775.426015,
                    "p99": 775.426015,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 531.163772,
                    "min": 463.499468,
                    "p50": 490.437998,
                    "p95": 531.163772,
                    "p99": 531.163772,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1033.384115,
                    "min": 889.1790229999999,
                    "p50": 965.4537369999999,
                    "p95": 1033.384115,
                    "p99": 1033.384115,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2203.1543819999997,
                    "min": 1919.534584,
                    "p50": 2132.980225,
                    "p95": 2203.1543819999997,
                    "p99": 2203.1543819999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1513.994635,
                    "min": 1351.268097,
                    "p50": 1466.26548,
                    "p95": 1513.994635,
                    "p99": 1513.994635,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1422.6983679999998,
                    "min": 1354.6511249999999,
                    "p50": 1378.9446229999999,
                    "p95": 1422.6983679999998,
                    "p99": 1422.6983679999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1675.3905359999999,
                    "min": 1588.8534009999998,
                    "p50": 1626.536269,
                    "p95": 1675.3905359999999,
                    "p99": 1675.3905359999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1757.696082,
                    "min": 1699.10916,
                    "p50": 1736.9013869999999,
                    "p95": 1757.696082,
                    "p99": 1757.696082,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1074.2948529999999,
                    "min": 1034.72857,
                    "p50": 1058.502166,
                    "p95": 1074.2948529999999,
                    "p99": 1074.2948529999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 726.5553289999999,
                    "min": 680.478441,
                    "p50": 723.144914,
                    "p95": 726.5553289999999,
                    "p99": 726.5553289999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 965.173498,
                    "min": 926.940474,
                    "p50": 954.556484,
                    "p95": 965.173498,
                    "p99": 965.173498,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 498.63519399999996,
                    "min": 485.43268,
                    "p50": 491.33558999999997,
                    "p95": 498.63519399999996,
                    "p99": 498.63519399999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 611.349413,
                    "min": 589.802725,
                    "p50": 606.256492,
                    "p95": 611.349413,
                    "p99": 611.349413,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1188.22612,
                    "min": 1150.946578,
                    "p50": 1167.895667,
                    "p95": 1188.22612,
                    "p99": 1188.22612,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 835.289682,
                    "min": 819.483897,
                    "p50": 830.618981,
                    "p95": 835.289682,
                    "p99": 835.289682,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2333.891354,
                    "min": 2266.207368,
                    "p50": 2304.397024,
                    "p95": 2333.891354,
                    "p99": 2333.891354,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1298.6380809999998,
                    "min": 1232.66445,
                    "p50": 1284.408197,
                    "p95": 1298.6380809999998,
                    "p99": 1298.6380809999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2054.1303439999997,
                    "min": 1980.750712,
                    "p50": 2009.876934,
                    "p95": 2054.1303439999997,
                    "p99": 2054.1303439999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 381.88884099999996,
                    "min": 371.31568,
                    "p50": 375.41976999999997,
                    "p95": 381.88884099999996,
                    "p99": 381.88884099999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1532.498869,
                    "min": 1475.319825,
                    "p50": 1504.3265219999998,
                    "p95": 1532.498869,
                    "p99": 1532.498869,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1018.642121,
                    "min": 957.162978,
                    "p50": 978.97114,
                    "p95": 1018.642121,
                    "p99": 1018.642121,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 522.72731,
                    "min": 495.225289,
                    "p50": 510.30619299999995,
                    "p95": 522.72731,
                    "p99": 522.72731,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 359.78384,
                    "min": 334.70807199999996,
                    "p50": 350.740576,
                    "p95": 359.78384,
                    "p99": 359.78384,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 284.519888,
                    "min": 258.553539,
                    "p50": 273.090175,
                    "p95": 284.519888,
                    "p99": 284.519888,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1084.515252,
                    "min": 1027.1151009999999,
                    "p50": 1052.311346,
                    "p95": 1084.515252,
                    "p99": 1084.515252,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1250.180337,
                    "min": 1172.140868,
                    "p50": 1218.529215,
                    "p95": 1250.180337,
                    "p99": 1250.180337,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 753.574086,
                    "min": 700.902215,
                    "p50": 751.6112889999999,
                    "p95": 753.574086,
                    "p99": 753.574086,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1652.6594149999999,
                    "min": 1550.004373,
                    "p50": 1598.3236929999998,
                    "p95": 1652.6594149999999,
                    "p99": 1652.6594149999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 833.259147,
                    "min": 786.9794539999999,
                    "p50": 819.617584,
                    "p95": 833.259147,
                    "p99": 833.259147,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 598.58169,
                    "min": 567.12194,
                    "p50": 584.562779,
                    "p95": 598.58169,
                    "p99": 598.58169,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1446.69676,
                    "min": 1368.76247,
                    "p50": 1409.828662,
                    "p95": 1446.69676,
                    "p99": 1446.69676,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1165.193497,
                    "min": 1097.7763989999999,
                    "p50": 1138.85054,
                    "p95": 1165.193497,
                    "p99": 1165.193497,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 440.835331,
                    "min": 413.29105699999997,
                    "p50": 430.917438,
                    "p95": 440.835331,
                    "p99": 440.835331,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 684.9821119999999,
                    "min": 637.052591,
                    "p50": 661.744017,
                    "p95": 684.9821119999999,
                    "p99": 684.9821119999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2463.5499879999998,
                    "min": 2324.079608,
                    "p50": 2368.8947639999997,
                    "p95": 2463.5499879999998,
                    "p99": 2463.5499879999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 924.436562,
                    "min": 879.067099,
                    "p50": 885.063364,
                    "p95": 924.436562,
                    "p99": 924.436562,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3218.354172,
                    "min": 3073.09138,
                    "p50": 3150.193143,
                    "p95": 3218.354172,
                    "p99": 3218.354172,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1055.514752,
                    "min": 1000.823039,
                    "p50": 1045.416582,
                    "p95": 1055.514752,
                    "p99": 1055.514752,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 551.7071119999999,
                    "min": 528.414478,
                    "p50": 546.470612,
                    "p95": 551.7071119999999,
                    "p99": 551.7071119999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2088.363857,
                    "min": 2012.794213,
                    "p50": 2074.813004,
                    "p95": 2088.363857,
                    "p99": 2088.363857,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1477.630978,
                    "min": 1442.05294,
                    "p50": 1461.7412319999999,
                    "p95": 1477.630978,
                    "p99": 1477.630978,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 650.035748,
                    "min": 634.940562,
                    "p50": 642.7260759999999,
                    "p95": 650.035748,
                    "p99": 650.035748,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1579.1153399999998,
                    "min": 1531.628931,
                    "p50": 1560.2106629999998,
                    "p95": 1579.1153399999998,
                    "p99": 1579.1153399999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 756.710352,
                    "min": 727.368874,
                    "p50": 747.5522579999999,
                    "p95": 756.710352,
                    "p99": 756.710352,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1284.064057,
                    "min": 1217.454515,
                    "p50": 1256.4811539999998,
                    "p95": 1284.064057,
                    "p99": 1284.064057,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 963.5178229999999,
                    "min": 923.1918049999999,
                    "p50": 949.824435,
                    "p95": 963.5178229999999,
                    "p99": 963.5178229999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1371.99091,
                    "min": 1292.448622,
                    "p50": 1354.061211,
                    "p95": 1371.99091,
                    "p99": 1371.99091,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1848.9159949999998,
                    "min": 1734.732139,
                    "p50": 1825.5205059999998,
                    "p95": 1848.9159949999998,
                    "p99": 1848.9159949999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 863.5718029999999,
                    "min": 827.603253,
                    "p50": 857.2332859999999,
                    "p95": 863.5718029999999,
                    "p99": 863.5718029999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1171.7816189999999,
                    "min": 1122.7763969999999,
                    "p50": 1161.55187,
                    "p95": 1171.7816189999999,
                    "p99": 1171.7816189999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 348.416514,
                    "min": 322.98418599999997,
                    "p50": 340.918566,
                    "p95": 348.416514,
                    "p99": 348.416514,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 450.806447,
                    "min": 407.46597599999996,
                    "p50": 445.108006,
                    "p95": 450.806447,
                    "p99": 450.806447,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1384.45353,
                    "min": 1330.469956,
                    "p50": 1365.324596,
                    "p95": 1384.45353,
                    "p99": 1384.45353,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 610.880423,
                    "min": 556.919275,
                    "p50": 570.7553419999999,
                    "p95": 610.880423,
                    "p99": 610.880423,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1658.646045,
                    "min": 1610.1416299999999,
                    "p50": 1640.747067,
                    "p95": 1658.646045,
                    "p99": 1658.646045,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1953.3988809999998,
                    "min": 1887.028138,
                    "p50": 1916.804938,
                    "p95": 1953.3988809999998,
                    "p99": 1953.3988809999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 709.838565,
                    "min": 695.766635,
                    "p50": 703.94808,
                    "p95": 709.838565,
                    "p99": 709.838565,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1262.202873,
                    "min": 1222.4985729999999,
                    "p50": 1239.268497,
                    "p95": 1262.202873,
                    "p99": 1262.202873,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1126.305383,
                    "min": 1090.490299,
                    "p50": 1105.12302,
                    "p95": 1126.305383,
                    "p99": 1126.305383,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 852.8769729999999,
                    "min": 805.808266,
                    "p50": 838.291624,
                    "p95": 852.8769729999999,
                    "p99": 852.8769729999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 459.62262,
                    "min": 418.665059,
                    "p50": 440.70917199999997,
                    "p95": 459.62262,
                    "p99": 459.62262,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2396.110389,
                    "min": 2328.263465,
                    "p50": 2378.441878,
                    "p95": 2396.110389,
                    "p99": 2396.110389,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1516.519077,
                    "min": 1472.967576,
                    "p50": 1500.9558459999998,
                    "p95": 1516.519077,
                    "p99": 1516.519077,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1792.0736889999998,
                    "min": 1727.4388279999998,
                    "p50": 1766.000278,
                    "p95": 1792.0736889999998,
                    "p99": 1792.0736889999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2732.12711,
                    "min": 2631.1745849999998,
                    "p50": 2699.543967,
                    "p95": 2732.12711,
                    "p99": 2732.12711,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2046.5274299999999,
                    "min": 2014.2905059999998,
                    "p50": 2038.8235399999999,
                    "p95": 2046.5274299999999,
                    "p99": 2046.5274299999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 977.27825,
                    "min": 956.8328469999999,
                    "p50": 975.204841,
                    "p95": 977.27825,
                    "p99": 977.27825,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1823.4089829999998,
                    "min": 1752.69222,
                    "p50": 1812.735164,
                    "p95": 1823.4089829999998,
                    "p99": 1823.4089829999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1073.644805,
                    "min": 1023.992523,
                    "p50": 1054.084549,
                    "p95": 1073.644805,
                    "p99": 1073.644805,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1488.9464189999999,
                    "min": 1430.6965739999998,
                    "p50": 1468.953073,
                    "p95": 1488.9464189999999,
                    "p99": 1488.9464189999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1589.0027539999999,
                    "min": 1530.223553,
                    "p50": 1576.561597,
                    "p95": 1589.0027539999999,
                    "p99": 1589.0027539999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2100.2344279999998,
                    "min": 2029.532552,
                    "p50": 2095.24806,
                    "p95": 2100.2344279999998,
                    "p99": 2100.2344279999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1167.39668,
                    "min": 1133.1675719999998,
                    "p50": 1154.749006,
                    "p95": 1167.39668,
                    "p99": 1167.39668,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 661.5545079999999,
                    "min": 618.7079679999999,
                    "p50": 651.3352269999999,
                    "p95": 661.5545079999999,
                    "p99": 661.5545079999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 872.2704709999999,
                    "min": 841.2041889999999,
                    "p50": 851.577721,
                    "p95": 872.2704709999999,
                    "p99": 872.2704709999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1394.9320739999998,
                    "min": 1350.311375,
                    "p50": 1363.553751,
                    "p95": 1394.9320739999998,
                    "p99": 1394.9320739999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1275.0305879999999,
                    "min": 1222.424116,
                    "p50": 1257.783381,
                    "p95": 1275.0305879999999,
                    "p99": 1275.0305879999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3116.881679,
                    "min": 3020.3892819999996,
                    "p50": 3107.443759,
                    "p95": 3116.881679,
                    "p99": 3116.881679,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 758.2413359999999,
                    "min": 711.578032,
                    "p50": 757.021438,
                    "p95": 758.2413359999999,
                    "p99": 758.2413359999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 347.86686299999997,
                    "min": 306.083118,
                    "p50": 339.366405,
                    "p95": 347.86686299999997,
                    "p99": 347.86686299999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 552.0066499999999,
                    "min": 517.759914,
                    "p50": 549.199672,
                    "p95": 552.0066499999999,
                    "p99": 552.0066499999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 963.816384,
                    "min": 933.1233119999999,
                    "p50": 961.2785329999999,
                    "p95": 963.816384,
                    "p99": 963.816384,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 450.787655,
                    "min": 435.432544,
                    "p50": 446.247486,
                    "p95": 450.787655,
                    "p99": 450.787655,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1568.7316739999999,
                    "min": 1515.061591,
                    "p50": 1543.730398,
                    "p95": 1568.7316739999999,
                    "p99": 1568.7316739999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 758.3888589999999,
                    "min": 711.765638,
                    "p50": 745.20159,
                    "p95": 758.3888589999999,
                    "p99": 758.3888589999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 344.626586,
                    "min": 330.811732,
                    "p50": 340.82329799999997,
                    "p95": 344.626586,
                    "p99": 344.626586,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 451.716206,
                    "min": 433.31116199999997,
                    "p50": 439.607806,
                    "p95": 451.716206,
                    "p99": 451.716206,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1062.5073929999999,
                    "min": 1014.1706919999999,
                    "p50": 1052.3419,
                    "p95": 1062.5073929999999,
                    "p99": 1062.5073929999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 661.2767349999999,
                    "min": 604.8852019999999,
                    "p50": 647.520461,
                    "p95": 661.2767349999999,
                    "p99": 661.2767349999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2131.549797,
                    "min": 2017.598857,
                    "p50": 2069.894609,
                    "p95": 2131.549797,
                    "p99": 2131.549797,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 551.493234,
                    "min": 524.8322039999999,
                    "p50": 542.228398,
                    "p95": 551.493234,
                    "p99": 551.493234,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1175.357579,
                    "min": 1136.87945,
                    "p50": 1153.250574,
                    "p95": 1175.357579,
                    "p99": 1175.357579,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 863.749095,
                    "min": 833.899944,
                    "p50": 850.9308629999999,
                    "p95": 863.749095,
                    "p99": 863.749095,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1273.204403,
                    "min": 1234.932464,
                    "p50": 1256.127376,
                    "p95": 1273.204403,
                    "p99": 1273.204403,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1377.092933,
                    "min": 1328.643108,
                    "p50": 1360.010853,
                    "p95": 1377.092933,
                    "p99": 1377.092933,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1857.893321,
                    "min": 1787.4134119999999,
                    "p50": 1809.8655139999998,
                    "p95": 1857.893321,
                    "p99": 1857.893321,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1478.6497749999999,
                    "min": 1427.603737,
                    "p50": 1458.380449,
                    "p95": 1478.6497749999999,
                    "p99": 1478.6497749999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 958.7462859999999,
                    "min": 927.337357,
                    "p50": 956.895324,
                    "p95": 958.7462859999999,
                    "p99": 958.7462859999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 537.32106,
                    "min": 515.569874,
                    "p50": 527.843139,
                    "p95": 537.32106,
                    "p99": 537.32106,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1925.2994199999998,
                    "min": 1869.768276,
                    "p50": 1894.4217859999999,
                    "p95": 1925.2994199999998,
                    "p99": 1925.2994199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1419.1144279999999,
                    "min": 1384.401844,
                    "p50": 1396.308194,
                    "p95": 1419.1144279999999,
                    "p99": 1419.1144279999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1172.297061,
                    "min": 1124.612257,
                    "p50": 1143.890241,
                    "p95": 1172.297061,
                    "p99": 1172.297061,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 791.129956,
                    "min": 747.8471589999999,
                    "p50": 776.5107439999999,
                    "p95": 791.129956,
                    "p99": 791.129956,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 413.278478,
                    "min": 400.11714,
                    "p50": 406.750855,
                    "p95": 413.278478,
                    "p99": 413.278478,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 665.724962,
                    "min": 646.0214149999999,
                    "p50": 657.218269,
                    "p95": 665.724962,
                    "p99": 665.724962,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1803.0532879999998,
                    "min": 1733.9249969999998,
                    "p50": 1757.2486159999999,
                    "p95": 1803.0532879999998,
                    "p99": 1803.0532879999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2234.036913,
                    "min": 2156.336275,
                    "p50": 2202.9119849999997,
                    "p95": 2234.036913,
                    "p99": 2234.036913,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 916.555568,
                    "min": 864.175297,
                    "p50": 900.5316789999999,
                    "p95": 916.555568,
                    "p99": 916.555568,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1298.117873,
                    "min": 1246.4516489999999,
                    "p50": 1273.031113,
                    "p95": 1298.117873,
                    "p99": 1298.117873,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2550.500665,
                    "min": 2465.2063559999997,
                    "p50": 2520.951517,
                    "p95": 2550.500665,
                    "p99": 2550.500665,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1545.170462,
                    "min": 1488.8984799999998,
                    "p50": 1517.797007,
                    "p95": 1545.170462,
                    "p99": 1545.170462,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1063.775665,
                    "min": 1009.401892,
                    "p50": 1033.6592839999998,
                    "p95": 1063.775665,
                    "p99": 1063.775665,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1679.410805,
                    "min": 1618.224915,
                    "p50": 1651.0005099999998,
                    "p95": 1679.410805,
                    "p99": 1679.410805,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2647.8439989999997,
                    "min": 2464.907926,
                    "p50": 2500.032193,
                    "p95": 2647.8439989999997,
                    "p99": 2647.8439989999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1436.595388,
                    "min": 1316.83774,
                    "p50": 1342.5941129999999,
                    "p95": 1436.595388,
                    "p99": 1436.595388,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1777.226037,
                    "min": 1624.365824,
                    "p50": 1680.928596,
                    "p95": 1777.226037,
                    "p99": 1777.226037,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1975.465636,
                    "min": 1800.990343,
                    "p50": 1852.444613,
                    "p95": 1975.465636,
                    "p99": 1975.465636,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2475.5411129999998,
                    "min": 2289.495546,
                    "p50": 2346.733056,
                    "p95": 2475.5411129999998,
                    "p99": 2475.5411129999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2317.71046,
                    "min": 2114.500003,
                    "p50": 2164.516948,
                    "p95": 2317.71046,
                    "p99": 2317.71046,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 740.5438019999999,
                    "min": 671.3293219999999,
                    "p50": 691.675294,
                    "p95": 740.5438019999999,
                    "p99": 740.5438019999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1601.240358,
                    "min": 1468.266875,
                    "p50": 1513.123681,
                    "p95": 1601.240358,
                    "p99": 1601.240358,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2144.774131,
                    "min": 1921.276128,
                    "p50": 2019.6555839999999,
                    "p95": 2144.774131,
                    "p99": 2144.774131,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3112.0279659999997,
                    "min": 2824.8687,
                    "p50": 2920.102744,
                    "p95": 3112.0279659999997,
                    "p99": 3112.0279659999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 920.877205,
                    "min": 821.607141,
                    "p50": 856.117904,
                    "p95": 920.877205,
                    "p99": 920.877205,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1264.103138,
                    "min": 1160.617675,
                    "p50": 1178.9515179999999,
                    "p95": 1264.103138,
                    "p99": 1264.103138,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 569.978247,
                    "min": 519.2087849999999,
                    "p50": 528.495506,
                    "p95": 569.978247,
                    "p99": 569.978247,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1050.481085,
                    "min": 993.1313369999999,
                    "p50": 1021.8028499999999,
                    "p95": 1050.481085,
                    "p99": 1050.481085,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3521.696418,
                    "min": 3237.4309369999996,
                    "p50": 3322.9772599999997,
                    "p95": 3521.696418,
                    "p99": 3521.696418,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3537.71141,
                    "min": 3269.15526,
                    "p50": 3336.668428,
                    "p95": 3537.71141,
                    "p99": 3537.71141,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2480.254484,
                    "min": 2295.7749129999997,
                    "p50": 2350.711639,
                    "p95": 2480.254484,
                    "p99": 2480.254484,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2133.754345,
                    "min": 1971.686731,
                    "p50": 2030.371414,
                    "p95": 2133.754345,
                    "p99": 2133.754345,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1615.1364179999998,
                    "min": 1472.673822,
                    "p50": 1532.238128,
                    "p95": 1615.1364179999998,
                    "p99": 1615.1364179999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1442.667541,
                    "min": 1325.058304,
                    "p50": 1348.111169,
                    "p95": 1442.667541,
                    "p99": 1442.667541,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1094.795791,
                    "min": 1000.5959029999999,
                    "p50": 1032.651154,
                    "p95": 1094.795791,
                    "p99": 1094.795791,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2306.3724549999997,
                    "min": 2149.090999,
                    "p50": 2190.176132,
                    "p95": 2306.3724549999997,
                    "p99": 2306.3724549999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 732.63343,
                    "min": 675.871817,
                    "p50": 687.558287,
                    "p95": 732.63343,
                    "p99": 732.63343,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1963.778664,
                    "min": 1813.256488,
                    "p50": 1859.316351,
                    "p95": 1963.778664,
                    "p99": 1963.778664,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 921.623202,
                    "min": 840.463885,
                    "p50": 868.080829,
                    "p95": 921.623202,
                    "p99": 921.623202,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3118.335626,
                    "min": 2839.6883359999997,
                    "p50": 2919.204275,
                    "p95": 3118.335626,
                    "p99": 3118.335626,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 536.5229499999999,
                    "min": 527.613506,
                    "p50": 531.872531,
                    "p95": 536.5229499999999,
                    "p99": 536.5229499999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1256.2800069999998,
                    "min": 1162.575241,
                    "p50": 1188.14194,
                    "p95": 1256.2800069999998,
                    "p99": 1256.2800069999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2666.5915999999997,
                    "min": 2454.124162,
                    "p50": 2512.9101419999997,
                    "p95": 2666.5915999999997,
                    "p99": 2666.5915999999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1791.989887,
                    "min": 1657.305165,
                    "p50": 1685.328554,
                    "p95": 1791.989887,
                    "p99": 1791.989887,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1947.3468129999999,
                    "min": 1809.711184,
                    "p50": 1878.301338,
                    "p95": 1947.3468129999999,
                    "p99": 1947.3468129999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1103.92501,
                    "min": 1016.5747869999999,
                    "p50": 1039.4204399999999,
                    "p95": 1103.92501,
                    "p99": 1103.92501,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 918.1781119999999,
                    "min": 839.689126,
                    "p50": 873.904579,
                    "p95": 918.1781119999999,
                    "p99": 918.1781119999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1802.6550209999998,
                    "min": 1670.62528,
                    "p50": 1714.9825449999998,
                    "p95": 1802.6550209999998,
                    "p99": 1802.6550209999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3595.6142839999998,
                    "min": 3274.8149359999998,
                    "p50": 3372.365887,
                    "p95": 3595.6142839999998,
                    "p99": 3595.6142839999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 745.232094,
                    "min": 671.7131499999999,
                    "p50": 704.819809,
                    "p95": 745.232094,
                    "p99": 745.232094,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1279.308685,
                    "min": 1140.426106,
                    "p50": 1206.512242,
                    "p95": 1279.308685,
                    "p99": 1279.308685,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 563.3589939999999,
                    "min": 503.697844,
                    "p50": 537.1863979999999,
                    "p95": 563.3589939999999,
                    "p99": 563.3589939999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2703.66003,
                    "min": 2470.500744,
                    "p50": 2536.269737,
                    "p95": 2703.66003,
                    "p99": 2703.66003,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2534.181521,
                    "min": 2329.812245,
                    "p50": 2366.760375,
                    "p95": 2534.181521,
                    "p99": 2534.181521,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2169.391299,
                    "min": 1983.343162,
                    "p50": 2041.126043,
                    "p95": 2169.391299,
                    "p99": 2169.391299,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2340.7285429999997,
                    "min": 2127.139158,
                    "p50": 2195.429264,
                    "p95": 2340.7285429999997,
                    "p99": 2340.7285429999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1640.1406049999998,
                    "min": 1496.66223,
                    "p50": 1530.1635449999999,
                    "p95": 1640.1406049999998,
                    "p99": 1640.1406049999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3132.549799,
                    "min": 2882.248483,
                    "p50": 2935.1615819999997,
                    "p95": 3132.549799,
                    "p99": 3132.549799,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1449.6556839999998,
                    "min": 1347.247337,
                    "p50": 1366.6511639999999,
                    "p95": 1449.6556839999998,
                    "p99": 1449.6556839999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 814.965065,
                    "min": 803.6356,
                    "p50": 812.693089,
                    "p95": 814.965065,
                    "p99": 814.965065,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 455.61047399999995,
                    "min": 440.28634,
                    "p50": 451.841552,
                    "p95": 455.61047399999995,
                    "p99": 455.61047399999995,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 943.7474669999999,
                    "min": 891.874524,
                    "p50": 926.616361,
                    "p95": 943.7474669999999,
                    "p99": 943.7474669999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1094.521268,
                    "min": 1062.0776839999999,
                    "p50": 1076.031704,
                    "p95": 1094.521268,
                    "p99": 1094.521268,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.940835,
                    "min": 180.547373,
                    "p50": 214.473715,
                    "p95": 221.940835,
                    "p99": 221.940835,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 766.450693,
                    "min": 738.600468,
                    "p50": 754.370328,
                    "p95": 766.450693,
                    "p99": 766.450693,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 421.13989999999995,
                    "min": 387.68648099999996,
                    "p50": 393.84365399999996,
                    "p95": 421.13989999999995,
                    "p99": 421.13989999999995,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.14847299999997,
                    "min": 240.726947,
                    "p50": 276.040796,
                    "p95": 280.14847299999997,
                    "p99": 280.14847299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1835.3421469999998,
                    "min": 1775.408085,
                    "p50": 1828.009274,
                    "p95": 1835.3421469999998,
                    "p99": 1835.3421469999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 583.547862,
                    "min": 564.0520309999999,
                    "p50": 574.3373349999999,
                    "p95": 583.547862,
                    "p99": 583.547862,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.3313119999999,
                    "min": 677.4629719999999,
                    "p50": 691.52481,
                    "p95": 697.3313119999999,
                    "p99": 697.3313119999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 897.611547,
                    "min": 845.018821,
                    "p50": 869.69229,
                    "p95": 897.611547,
                    "p99": 897.611547,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 339.677753,
                    "min": 301.42736099999996,
                    "p50": 335.031899,
                    "p95": 339.677753,
                    "p99": 339.677753,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3050.9092929999997,
                    "min": 2950.265077,
                    "p50": 3026.9073839999996,
                    "p95": 3050.9092929999997,
                    "p99": 3050.9092929999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1241.036122,
                    "min": 1195.180621,
                    "p50": 1222.57646,
                    "p95": 1241.036122,
                    "p99": 1241.036122,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 646.708184,
                    "min": 608.608039,
                    "p50": 636.224872,
                    "p95": 646.708184,
                    "p99": 646.708184,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 523.777575,
                    "min": 501.75064599999996,
                    "p50": 510.048504,
                    "p95": 523.777575,
                    "p99": 523.777575,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2441.747234,
                    "min": 2360.759281,
                    "p50": 2417.448679,
                    "p95": 2441.747234,
                    "p99": 2441.747234,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2739.7873299999997,
                    "min": 2606.9343599999997,
                    "p50": 2706.292544,
                    "p95": 2739.7873299999997,
                    "p99": 2739.7873299999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 850.055117,
                    "min": 813.3205059999999,
                    "p50": 842.678107,
                    "p95": 850.055117,
                    "p99": 850.055117,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1796.691885,
                    "min": 1691.657827,
                    "p50": 1774.49543,
                    "p95": 1796.691885,
                    "p99": 1796.691885,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1262.8475549999998,
                    "min": 1182.607225,
                    "p50": 1241.4345449999998,
                    "p95": 1262.8475549999998,
                    "p99": 1262.8475549999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1387.490899,
                    "min": 1323.541497,
                    "p50": 1370.219474,
                    "p95": 1387.490899,
                    "p99": 1387.490899,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 446.849454,
                    "min": 424.061131,
                    "p50": 437.48862599999995,
                    "p95": 446.849454,
                    "p99": 446.849454,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1535.4268949999998,
                    "min": 1461.074742,
                    "p50": 1500.6630189999998,
                    "p95": 1535.4268949999998,
                    "p99": 1535.4268949999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 716.049549,
                    "min": 670.901435,
                    "p50": 704.593581,
                    "p95": 716.049549,
                    "p99": 716.049549,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1938.933936,
                    "min": 1851.536783,
                    "p50": 1902.847546,
                    "p95": 1938.933936,
                    "p99": 1938.933936,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1105.0833069999999,
                    "min": 1088.4950139999999,
                    "p50": 1101.3396089999999,
                    "p95": 1105.0833069999999,
                    "p99": 1105.0833069999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2412.661201,
                    "min": 2334.800629,
                    "p50": 2364.122941,
                    "p95": 2412.661201,
                    "p99": 2412.661201,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1684.024003,
                    "min": 1606.5036029999999,
                    "p50": 1641.956038,
                    "p95": 1684.024003,
                    "p99": 1684.024003,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1002.488708,
                    "min": 948.420838,
                    "p50": 977.5821719999999,
                    "p95": 1002.488708,
                    "p99": 1002.488708,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 579.123601,
                    "min": 562.382395,
                    "p50": 570.6228629999999,
                    "p95": 579.123601,
                    "p99": 579.123601,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2067.848962,
                    "min": 1995.019356,
                    "p50": 2043.1160989999998,
                    "p95": 2067.848962,
                    "p99": 2067.848962,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4104.5534529999995,
                    "min": 3958.58545,
                    "p50": 4044.588702,
                    "p95": 4104.5534529999995,
                    "p99": 4104.5534529999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 914.302693,
                    "min": 890.178404,
                    "p50": 905.060653,
                    "p95": 914.302693,
                    "p99": 914.302693,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1020.209307,
                    "min": 990.1195359999999,
                    "p50": 1008.922146,
                    "p95": 1020.209307,
                    "p99": 1020.209307,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 530.871776,
                    "min": 512.908061,
                    "p50": 523.1340819999999,
                    "p95": 530.871776,
                    "p99": 530.871776,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 828.1317889999999,
                    "min": 792.905127,
                    "p50": 819.282504,
                    "p95": 828.1317889999999,
                    "p99": 828.1317889999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1414.1646469999998,
                    "min": 1382.5636459999998,
                    "p50": 1399.1908549999998,
                    "p95": 1414.1646469999998,
                    "p99": 1414.1646469999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 332.709179,
                    "min": 314.101473,
                    "p50": 325.530892,
                    "p95": 332.709179,
                    "p99": 332.709179,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3005.686116,
                    "min": 2914.52673,
                    "p50": 2957.170142,
                    "p95": 3005.686116,
                    "p99": 3005.686116,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1137.5903289999999,
                    "min": 1091.903044,
                    "p50": 1099.06398,
                    "p95": 1137.5903289999999,
                    "p99": 1137.5903289999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1337.115575,
                    "min": 1279.860952,
                    "p50": 1294.615991,
                    "p95": 1337.115575,
                    "p99": 1337.115575,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 643.142787,
                    "min": 584.833484,
                    "p50": 615.627981,
                    "p95": 643.142787,
                    "p99": 643.142787,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1777.450216,
                    "min": 1715.37976,
                    "p50": 1748.9145449999999,
                    "p95": 1777.450216,
                    "p99": 1777.450216,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1232.947473,
                    "min": 1166.463945,
                    "p50": 1194.24275,
                    "p95": 1232.947473,
                    "p99": 1232.947473,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 741.0695599999999,
                    "min": 679.998695,
                    "p50": 711.3073089999999,
                    "p95": 741.0695599999999,
                    "p99": 741.0695599999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4031.2596209999997,
                    "min": 3879.712708,
                    "p50": 3924.699525,
                    "p95": 4031.2596209999997,
                    "p99": 4031.2596209999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 432.952144,
                    "min": 421.043208,
                    "p50": 427.34900999999996,
                    "p95": 432.952144,
                    "p99": 432.952144,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1528.2855989999998,
                    "min": 1478.651253,
                    "p50": 1501.3971219999999,
                    "p95": 1528.2855989999998,
                    "p99": 1528.2855989999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2024.186332,
                    "min": 1961.8507749999999,
                    "p50": 1980.183051,
                    "p95": 2024.186332,
                    "p99": 2024.186332,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom8Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}