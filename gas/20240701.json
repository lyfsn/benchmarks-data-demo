{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1102.53475,
                    "min": 618.177245,
                    "p50": 743.848156,
                    "p95": 1102.53475,
                    "p99": 1102.53475,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 306.664916,
                    "min": 293.539854,
                    "p50": 300.731309,
                    "p95": 306.664916,
                    "p99": 306.664916,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 489.302232,
                    "min": 429.499448,
                    "p50": 483.062956,
                    "p95": 489.302232,
                    "p99": 489.302232,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 427.491469,
                    "min": 379.82982899999996,
                    "p50": 415.270969,
                    "p95": 427.491469,
                    "p99": 427.491469,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 335.575738,
                    "min": 326.008801,
                    "p50": 331.139497,
                    "p95": 335.575738,
                    "p99": 335.575738,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 405.589997,
                    "min": 378.313136,
                    "p50": 391.34092799999996,
                    "p95": 405.589997,
                    "p99": 405.589997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 452.811464,
                    "min": 414.006719,
                    "p50": 438.302874,
                    "p95": 452.811464,
                    "p99": 452.811464,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 130.642989,
                    "min": 90.076613,
                    "p50": 117.045345,
                    "p95": 130.642989,
                    "p99": 130.642989,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.62455,
                    "min": 135.11965899999998,
                    "p50": 153.150012,
                    "p95": 159.62455,
                    "p99": 159.62455,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 192.037755,
                    "min": 144.755608,
                    "p50": 183.37336499999998,
                    "p95": 192.037755,
                    "p99": 192.037755,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1203.18643,
                    "min": 580.6831129999999,
                    "p50": 632.110585,
                    "p95": 1203.18643,
                    "p99": 1203.18643,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 389.609083,
                    "min": 200.891157,
                    "p50": 217.040507,
                    "p95": 389.609083,
                    "p99": 389.609083,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1042.650868,
                    "min": 532.696392,
                    "p50": 552.8608899999999,
                    "p95": 1042.650868,
                    "p99": 1042.650868,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 497.393603,
                    "min": 257.98641699999996,
                    "p50": 266.410096,
                    "p95": 497.393603,
                    "p99": 497.393603,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 447.12231199999997,
                    "min": 206.583452,
                    "p50": 243.98503699999998,
                    "p95": 447.12231199999997,
                    "p99": 447.12231199999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.454096,
                    "min": 114.060423,
                    "p50": 119.746921,
                    "p95": 170.454096,
                    "p99": 170.454096,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 254.73846699999999,
                    "min": 180.013687,
                    "p50": 203.754867,
                    "p95": 254.73846699999999,
                    "p99": 254.73846699999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 308.654391,
                    "min": 245.454478,
                    "p50": 267.24469999999997,
                    "p95": 308.654391,
                    "p99": 308.654391,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 89.43038399999999,
                    "min": 63.359913999999996,
                    "p50": 83.99456099999999,
                    "p95": 89.43038399999999,
                    "p99": 89.43038399999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 159.016998,
                    "min": 126.428325,
                    "p50": 144.067647,
                    "p95": 159.016998,
                    "p99": 159.016998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 260.29524699999996,
                    "min": 201.803148,
                    "p50": 238.854445,
                    "p95": 260.29524699999996,
                    "p99": 260.29524699999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.536909,
                    "min": 51.870652,
                    "p50": 66.724521,
                    "p95": 69.536909,
                    "p99": 69.536909,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.557085,
                    "min": 108.058458,
                    "p50": 116.431815,
                    "p95": 128.557085,
                    "p99": 128.557085,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 142.873181,
                    "min": 107.615573,
                    "p50": 134.80034799999999,
                    "p95": 142.873181,
                    "p99": 142.873181,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 414.2978,
                    "min": 374.290716,
                    "p50": 400.446017,
                    "p95": 414.2978,
                    "p99": 414.2978,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 508.952705,
                    "min": 464.93303799999995,
                    "p50": 478.36792699999995,
                    "p95": 508.952705,
                    "p99": 508.952705,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 143.84436,
                    "min": 131.389468,
                    "p50": 139.147965,
                    "p95": 143.84436,
                    "p99": 143.84436,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1205.876754,
                    "min": 1081.783698,
                    "p50": 1137.055452,
                    "p95": 1205.876754,
                    "p99": 1205.876754,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 52.052248,
                    "min": 39.598613,
                    "p50": 48.205,
                    "p95": 52.052248,
                    "p99": 52.052248,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.568311,
                    "min": 92.60635099999999,
                    "p50": 98.750951,
                    "p95": 104.568311,
                    "p99": 104.568311,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 612.061875,
                    "min": 530.9839479999999,
                    "p50": 581.381954,
                    "p95": 612.061875,
                    "p99": 612.061875,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 293.292169,
                    "min": 278.761864,
                    "p50": 284.550937,
                    "p95": 293.292169,
                    "p99": 293.292169,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 240.07473199999998,
                    "min": 231.883388,
                    "p50": 237.93614,
                    "p95": 240.07473199999998,
                    "p99": 240.07473199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 265.41481,
                    "min": 220.716706,
                    "p50": 259.56823199999997,
                    "p95": 265.41481,
                    "p99": 265.41481,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 151.91408099999998,
                    "min": 110.860221,
                    "p50": 150.400554,
                    "p95": 151.91408099999998,
                    "p99": 151.91408099999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 714.749111,
                    "min": 692.577239,
                    "p50": 700.446195,
                    "p95": 714.749111,
                    "p99": 714.749111,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 431.06154599999996,
                    "min": 406.76079599999997,
                    "p50": 425.69554,
                    "p95": 431.06154599999996,
                    "p99": 431.06154599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 337.366968,
                    "min": 315.253155,
                    "p50": 332.437317,
                    "p95": 337.366968,
                    "p99": 337.366968,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 312.075344,
                    "min": 269.577717,
                    "p50": 304.388785,
                    "p95": 312.075344,
                    "p99": 312.075344,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 196.830346,
                    "min": 182.542568,
                    "p50": 194.086625,
                    "p95": 196.830346,
                    "p99": 196.830346,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 486.721417,
                    "min": 441.174856,
                    "p50": 480.823698,
                    "p95": 486.721417,
                    "p99": 486.721417,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 107.489453,
                    "min": 66.71027099999999,
                    "p50": 105.74812399999999,
                    "p95": 107.489453,
                    "p99": 107.489453,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 374.93267,
                    "min": 357.837154,
                    "p50": 369.06462,
                    "p95": 374.93267,
                    "p99": 374.93267,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 220.50217899999998,
                    "min": 195.371741,
                    "p50": 215.622604,
                    "p95": 220.50217899999998,
                    "p99": 220.50217899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 180.67889699999998,
                    "min": 159.153965,
                    "p50": 172.55747399999998,
                    "p95": 180.67889699999998,
                    "p99": 180.67889699999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 133.20217599999998,
                    "min": 89.057554,
                    "p50": 127.860642,
                    "p95": 133.20217599999998,
                    "p99": 133.20217599999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 358.024617,
                    "min": 326.078895,
                    "p50": 346.205937,
                    "p95": 358.024617,
                    "p99": 358.024617,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 737.202461,
                    "min": 682.018816,
                    "p50": 711.3167119999999,
                    "p95": 737.202461,
                    "p99": 737.202461,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 161.36725199999998,
                    "min": 137.338023,
                    "p50": 151.447585,
                    "p95": 161.36725199999998,
                    "p99": 161.36725199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 509.531522,
                    "min": 472.685359,
                    "p50": 492.036751,
                    "p95": 509.531522,
                    "p99": 509.531522,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 552.758651,
                    "min": 504.77077299999996,
                    "p50": 539.236501,
                    "p95": 552.758651,
                    "p99": 552.758651,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.34240699999998,
                    "min": 155.558326,
                    "p50": 192.165959,
                    "p95": 198.34240699999998,
                    "p99": 198.34240699999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 472.56535299999996,
                    "min": 425.644677,
                    "p50": 462.67522199999996,
                    "p95": 472.56535299999996,
                    "p99": 472.56535299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 623.1333139999999,
                    "min": 578.0870199999999,
                    "p50": 610.318418,
                    "p95": 623.1333139999999,
                    "p99": 623.1333139999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 273.125017,
                    "min": 230.156963,
                    "p50": 262.538967,
                    "p95": 273.125017,
                    "p99": 273.125017,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 395.524076,
                    "min": 363.513369,
                    "p50": 373.499591,
                    "p95": 395.524076,
                    "p99": 395.524076,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 360.60226,
                    "min": 305.260341,
                    "p50": 348.44692299999997,
                    "p95": 360.60226,
                    "p99": 360.60226,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 832.497765,
                    "min": 774.8395009999999,
                    "p50": 792.640083,
                    "p95": 832.497765,
                    "p99": 832.497765,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 429.848841,
                    "min": 410.747258,
                    "p50": 421.193806,
                    "p95": 429.848841,
                    "p99": 429.848841,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 313.571277,
                    "min": 278.750316,
                    "p50": 306.291924,
                    "p95": 313.571277,
                    "p99": 313.571277,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 239.19829299999998,
                    "min": 214.72391499999998,
                    "p50": 233.464564,
                    "p95": 239.19829299999998,
                    "p99": 239.19829299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 586.818994,
                    "min": 558.468967,
                    "p50": 578.228475,
                    "p95": 586.818994,
                    "p99": 586.818994,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 66.145645,
                    "min": 29.464937,
                    "p50": 55.999429,
                    "p95": 66.145645,
                    "p99": 66.145645,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.575409,
                    "min": 25.999758999999997,
                    "p50": 27.108316,
                    "p95": 27.575409,
                    "p99": 27.575409,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 67.017507,
                    "min": 47.398357,
                    "p50": 63.538832,
                    "p95": 67.017507,
                    "p99": 67.017507,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 133.774399,
                    "min": 103.892158,
                    "p50": 114.783745,
                    "p95": 133.774399,
                    "p99": 133.774399,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.340705,
                    "min": 21.646099,
                    "p50": 27.069696999999998,
                    "p95": 27.340705,
                    "p99": 27.340705,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.488180999999997,
                    "min": 21.761657,
                    "p50": 27.315673,
                    "p95": 27.488180999999997,
                    "p99": 27.488180999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 57.167432,
                    "min": 34.972623999999996,
                    "p50": 53.968968999999994,
                    "p95": 57.167432,
                    "p99": 57.167432,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 28.049032999999998,
                    "min": 20.517025999999998,
                    "p50": 27.527023999999997,
                    "p95": 28.049032999999998,
                    "p99": 28.049032999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.890749999999997,
                    "min": 21.954401,
                    "p50": 27.212515999999997,
                    "p95": 27.890749999999997,
                    "p99": 27.890749999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.166663999999997,
                    "min": 25.375995,
                    "p50": 27.030497999999998,
                    "p95": 27.166663999999997,
                    "p99": 27.166663999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 40.529962,
                    "min": 34.819218,
                    "p50": 36.897022,
                    "p95": 40.529962,
                    "p99": 40.529962,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.988516999999998,
                    "min": 26.540851,
                    "p50": 27.387251,
                    "p95": 27.988516999999998,
                    "p99": 27.988516999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 36.764514,
                    "min": 19.398433,
                    "p50": 26.808106,
                    "p95": 36.764514,
                    "p99": 36.764514,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.06384,
                    "min": 22.187203999999998,
                    "p50": 25.968118,
                    "p95": 27.06384,
                    "p99": 27.06384,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.423838,
                    "min": 26.509956,
                    "p50": 27.126941,
                    "p95": 27.423838,
                    "p99": 27.423838,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 31.569076,
                    "min": 23.011421,
                    "p50": 26.839999,
                    "p95": 31.569076,
                    "p99": 31.569076,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.409122,
                    "min": 26.345965999999997,
                    "p50": 27.100817,
                    "p95": 27.409122,
                    "p99": 27.409122,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.448528999999997,
                    "min": 22.155551,
                    "p50": 26.97532,
                    "p95": 27.448528999999997,
                    "p99": 27.448528999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.550642,
                    "min": 22.563543,
                    "p50": 27.387480999999998,
                    "p95": 27.550642,
                    "p99": 27.550642,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 188.35776099999998,
                    "min": 179.959317,
                    "p50": 184.246881,
                    "p95": 188.35776099999998,
                    "p99": 188.35776099999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 85.737144,
                    "min": 54.455028,
                    "p50": 78.909765,
                    "p95": 85.737144,
                    "p99": 85.737144,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 192.739781,
                    "min": 146.70928,
                    "p50": 157.764658,
                    "p95": 192.739781,
                    "p99": 192.739781,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 106.139026,
                    "min": 62.514419999999994,
                    "p50": 91.195351,
                    "p95": 106.139026,
                    "p99": 106.139026,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 167.65726999999998,
                    "min": 125.11736499999999,
                    "p50": 155.614421,
                    "p95": 167.65726999999998,
                    "p99": 167.65726999999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 587.912867,
                    "min": 508.87273999999996,
                    "p50": 565.101213,
                    "p95": 587.912867,
                    "p99": 587.912867,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 158.16620799999998,
                    "min": 135.44954099999998,
                    "p50": 152.275882,
                    "p95": 158.16620799999998,
                    "p99": 158.16620799999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 184.194017,
                    "min": 152.846589,
                    "p50": 179.71067499999998,
                    "p95": 184.194017,
                    "p99": 184.194017,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 228.396053,
                    "min": 178.747998,
                    "p50": 210.93435699999998,
                    "p95": 228.396053,
                    "p99": 228.396053,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.91879,
                    "min": 116.612747,
                    "p50": 124.266622,
                    "p95": 126.91879,
                    "p99": 126.91879,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 479.05530899999997,
                    "min": 433.195997,
                    "p50": 456.29096,
                    "p95": 479.05530899999997,
                    "p99": 479.05530899999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.60553999999999,
                    "min": 94.28408999999999,
                    "p50": 114.336585,
                    "p95": 120.60553999999999,
                    "p99": 120.60553999999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 171.503514,
                    "min": 153.97009699999998,
                    "p50": 164.10311099999998,
                    "p95": 171.503514,
                    "p99": 171.503514,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 366.961837,
                    "min": 325.540432,
                    "p50": 353.297573,
                    "p95": 366.961837,
                    "p99": 366.961837,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 138.497606,
                    "min": 64.492761,
                    "p50": 76.38598999999999,
                    "p95": 138.497606,
                    "p99": 138.497606,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1115.743179,
                    "min": 1045.138861,
                    "p50": 1079.418725,
                    "p95": 1115.743179,
                    "p99": 1115.743179,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.573529,
                    "min": 31.410611999999997,
                    "p50": 62.431875999999995,
                    "p95": 75.573529,
                    "p99": 75.573529,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 199.53813599999998,
                    "min": 152.01627,
                    "p50": 184.166889,
                    "p95": 199.53813599999998,
                    "p99": 199.53813599999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 258.925306,
                    "min": 210.46706899999998,
                    "p50": 221.777865,
                    "p95": 258.925306,
                    "p99": 258.925306,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.432769999999998,
                    "min": 18.239076999999998,
                    "p50": 27.20196,
                    "p95": 27.432769999999998,
                    "p99": 27.432769999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.046122999999998,
                    "min": 21.670648999999997,
                    "p50": 27.07206,
                    "p95": 28.046122999999998,
                    "p99": 28.046122999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.874796999999997,
                    "min": 18.446479,
                    "p50": 27.213255,
                    "p95": 27.874796999999997,
                    "p99": 27.874796999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.369450999999998,
                    "min": 21.569922,
                    "p50": 26.966165999999998,
                    "p95": 27.369450999999998,
                    "p99": 27.369450999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 30.048398,
                    "min": 21.57638,
                    "p50": 26.240572999999998,
                    "p95": 30.048398,
                    "p99": 30.048398,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 39.602909,
                    "min": 21.705797999999998,
                    "p50": 26.854115,
                    "p95": 39.602909,
                    "p99": 39.602909,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.865797999999998,
                    "min": 22.032318999999998,
                    "p50": 27.206816,
                    "p95": 27.865797999999998,
                    "p99": 27.865797999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.650945,
                    "min": 19.071821999999997,
                    "p50": 26.863014,
                    "p95": 27.650945,
                    "p99": 27.650945,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 63.866499,
                    "min": 35.131355,
                    "p50": 61.641062999999995,
                    "p95": 63.866499,
                    "p99": 63.866499,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.689362,
                    "min": 26.63947,
                    "p50": 27.169221,
                    "p95": 27.689362,
                    "p99": 27.689362,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 39.987545,
                    "min": 22.048828,
                    "p50": 27.447573,
                    "p95": 39.987545,
                    "p99": 39.987545,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.721501999999997,
                    "min": 17.978783,
                    "p50": 26.725668,
                    "p95": 27.721501999999997,
                    "p99": 27.721501999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.427229999999998,
                    "min": 26.490748999999997,
                    "p50": 26.948159,
                    "p95": 27.427229999999998,
                    "p99": 27.427229999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.387829,
                    "min": 22.093441,
                    "p50": 26.936187999999998,
                    "p95": 27.387829,
                    "p99": 27.387829,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 98.99772899999999,
                    "min": 76.393028,
                    "p50": 82.041147,
                    "p95": 98.99772899999999,
                    "p99": 98.99772899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.493395,
                    "min": 19.154719,
                    "p50": 25.075827999999998,
                    "p95": 27.493395,
                    "p99": 27.493395,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 60.123371999999996,
                    "min": 30.076542,
                    "p50": 55.743520999999994,
                    "p95": 60.123371999999996,
                    "p99": 60.123371999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.332058999999997,
                    "min": 25.150897999999998,
                    "p50": 26.99474,
                    "p95": 27.332058999999997,
                    "p99": 27.332058999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.593557999999998,
                    "min": 26.641778,
                    "p50": 27.213545,
                    "p95": 27.593557999999998,
                    "p99": 27.593557999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.79048,
                    "min": 25.5297,
                    "p50": 27.367236,
                    "p95": 27.79048,
                    "p99": 27.79048,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.159481999999997,
                    "min": 25.172234,
                    "p50": 26.759971999999998,
                    "p95": 27.159481999999997,
                    "p99": 27.159481999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.737864,
                    "min": 18.79456,
                    "p50": 26.691081999999998,
                    "p95": 27.737864,
                    "p99": 27.737864,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.837560999999997,
                    "min": 25.090334,
                    "p50": 27.421863,
                    "p95": 27.837560999999997,
                    "p99": 27.837560999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.606503999999997,
                    "min": 20.591123,
                    "p50": 27.304163,
                    "p95": 27.606503999999997,
                    "p99": 27.606503999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.548586999999998,
                    "min": 22.819896,
                    "p50": 27.003514,
                    "p95": 27.548586999999998,
                    "p99": 27.548586999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.086993999999997,
                    "min": 21.539832999999998,
                    "p50": 27.449323,
                    "p95": 28.086993999999997,
                    "p99": 28.086993999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.243465,
                    "min": 22.282341,
                    "p50": 26.869866,
                    "p95": 27.243465,
                    "p99": 27.243465,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.296633999999997,
                    "min": 21.625069999999997,
                    "p50": 26.794356999999998,
                    "p95": 27.296633999999997,
                    "p99": 27.296633999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 28.181479,
                    "min": 26.737038,
                    "p50": 27.552705,
                    "p95": 28.181479,
                    "p99": 28.181479,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.119218,
                    "min": 21.858193999999997,
                    "p50": 26.711558,
                    "p95": 27.119218,
                    "p99": 27.119218,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.782674,
                    "min": 21.966120999999998,
                    "p50": 26.772536,
                    "p95": 27.782674,
                    "p99": 27.782674,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 26.978811999999998,
                    "min": 22.083547,
                    "p50": 26.673869999999997,
                    "p95": 26.978811999999998,
                    "p99": 26.978811999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.500888,
                    "min": 23.909485,
                    "p50": 26.866459,
                    "p95": 27.500888,
                    "p99": 27.500888,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.543636,
                    "min": 24.795571,
                    "p50": 26.701945,
                    "p95": 27.543636,
                    "p99": 27.543636,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 55.525397999999996,
                    "min": 49.623028999999995,
                    "p50": 52.985813,
                    "p95": 55.525397999999996,
                    "p99": 55.525397999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.614953999999997,
                    "min": 26.522902,
                    "p50": 27.249411,
                    "p95": 27.614953999999997,
                    "p99": 27.614953999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.854955,
                    "min": 19.091278,
                    "p50": 26.833993,
                    "p95": 27.854955,
                    "p99": 27.854955,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 32.5475,
                    "min": 19.225676999999997,
                    "p50": 27.070262999999997,
                    "p95": 32.5475,
                    "p99": 32.5475,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.087297,
                    "min": 92.027104,
                    "p50": 132.936422,
                    "p95": 139.087297,
                    "p99": 139.087297,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.771806999999995,
                    "min": 29.279369,
                    "p50": 56.501329999999996,
                    "p95": 61.771806999999995,
                    "p99": 61.771806999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1022.5491619999999,
                    "min": 954.9737359999999,
                    "p50": 992.0728829999999,
                    "p95": 1022.5491619999999,
                    "p99": 1022.5491619999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 233.64629399999998,
                    "min": 191.395907,
                    "p50": 225.598578,
                    "p95": 233.64629399999998,
                    "p99": 233.64629399999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 109.89742799999999,
                    "min": 64.79691,
                    "p50": 97.096542,
                    "p95": 109.89742799999999,
                    "p99": 109.89742799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.44649299999999,
                    "min": 57.391580999999995,
                    "p50": 77.573741,
                    "p95": 80.44649299999999,
                    "p99": 80.44649299999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.250379,
                    "min": 56.545483,
                    "p50": 95.937075,
                    "p95": 101.250379,
                    "p99": 101.250379,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 327.017444,
                    "min": 276.081754,
                    "p50": 319.03468,
                    "p95": 327.017444,
                    "p99": 327.017444,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 165.936894,
                    "min": 142.042584,
                    "p50": 155.575845,
                    "p95": 165.936894,
                    "p99": 165.936894,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 148.948841,
                    "min": 123.400027,
                    "p50": 144.828376,
                    "p95": 148.948841,
                    "p99": 148.948841,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 436.585678,
                    "min": 391.417346,
                    "p50": 425.06483099999997,
                    "p95": 436.585678,
                    "p99": 436.585678,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 528.491323,
                    "min": 499.943781,
                    "p50": 518.280474,
                    "p95": 528.491323,
                    "p99": 528.491323,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 177.514864,
                    "min": 160.409068,
                    "p50": 173.289323,
                    "p95": 177.514864,
                    "p99": 177.514864,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 91.10766699999999,
                    "min": 74.067301,
                    "p50": 87.903815,
                    "p95": 91.10766699999999,
                    "p99": 91.10766699999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 212.96514499999998,
                    "min": 188.39958,
                    "p50": 209.575479,
                    "p95": 212.96514499999998,
                    "p99": 212.96514499999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 128.42023799999998,
                    "min": 88.483986,
                    "p50": 125.30334599999999,
                    "p95": 128.42023799999998,
                    "p99": 128.42023799999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 158.073454,
                    "min": 141.326777,
                    "p50": 152.450794,
                    "p95": 158.073454,
                    "p99": 158.073454,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 187.061184,
                    "min": 144.021859,
                    "p50": 179.754562,
                    "p95": 187.061184,
                    "p99": 187.061184,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 119.15096299999999,
                    "min": 114.982717,
                    "p50": 117.52136,
                    "p95": 119.15096299999999,
                    "p99": 119.15096299999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 780.3096039999999,
                    "min": 740.871141,
                    "p50": 778.233974,
                    "p95": 780.3096039999999,
                    "p99": 780.3096039999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 136.893099,
                    "min": 129.100236,
                    "p50": 135.041826,
                    "p95": 136.893099,
                    "p99": 136.893099,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 253.540559,
                    "min": 214.89045299999998,
                    "p50": 244.817499,
                    "p95": 253.540559,
                    "p99": 253.540559,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 377.38602199999997,
                    "min": 327.664049,
                    "p50": 372.559467,
                    "p95": 377.38602199999997,
                    "p99": 377.38602199999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 161.023549,
                    "min": 113.26692,
                    "p50": 145.00543299999998,
                    "p95": 161.023549,
                    "p99": 161.023549,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 406.81561,
                    "min": 345.513756,
                    "p50": 393.79926,
                    "p95": 406.81561,
                    "p99": 406.81561,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 239.132491,
                    "min": 190.86406399999998,
                    "p50": 225.720534,
                    "p95": 239.132491,
                    "p99": 239.132491,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 484.04013899999995,
                    "min": 433.35702399999997,
                    "p50": 458.370526,
                    "p95": 484.04013899999995,
                    "p99": 484.04013899999995,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.78554499999998,
                    "min": 142.42700299999998,
                    "p50": 177.846284,
                    "p95": 185.78554499999998,
                    "p99": 185.78554499999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 287.079662,
                    "min": 267.817384,
                    "p50": 277.21268499999996,
                    "p95": 287.079662,
                    "p99": 287.079662,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1024.870709,
                    "min": 957.6525019999999,
                    "p50": 1006.2131589999999,
                    "p95": 1024.870709,
                    "p99": 1024.870709,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 313.82906299999996,
                    "min": 257.96182699999997,
                    "p50": 290.62393499999996,
                    "p95": 313.82906299999996,
                    "p99": 313.82906299999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 221.608927,
                    "min": 187.531951,
                    "p50": 205.823995,
                    "p95": 221.608927,
                    "p99": 221.608927,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 352.70853999999997,
                    "min": 310.340642,
                    "p50": 332.353676,
                    "p95": 352.70853999999997,
                    "p99": 352.70853999999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 118.872878,
                    "min": 74.972833,
                    "p50": 112.23769999999999,
                    "p95": 118.872878,
                    "p99": 118.872878,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 366.08048399999996,
                    "min": 336.832813,
                    "p50": 351.51878899999997,
                    "p95": 366.08048399999996,
                    "p99": 366.08048399999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 569.513384,
                    "min": 486.778172,
                    "p50": 530.909232,
                    "p95": 569.513384,
                    "p99": 569.513384,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1887.070677,
                    "min": 1316.728382,
                    "p50": 1453.731155,
                    "p95": 1887.070677,
                    "p99": 1887.070677,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.86431299999998,
                    "min": 130.638915,
                    "p50": 134.49232,
                    "p95": 169.86431299999998,
                    "p99": 169.86431299999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.842236,
                    "min": 255.601225,
                    "p50": 275.943672,
                    "p95": 304.842236,
                    "p99": 304.842236,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.98920799999996,
                    "min": 214.928899,
                    "p50": 250.549995,
                    "p95": 259.98920799999996,
                    "p99": 259.98920799999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 470.582346,
                    "min": 437.98155399999996,
                    "p50": 463.08435499999996,
                    "p95": 470.582346,
                    "p99": 470.582346,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 438.16004499999997,
                    "min": 391.11306299999995,
                    "p50": 417.255607,
                    "p95": 438.16004499999997,
                    "p99": 438.16004499999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 562.938594,
                    "min": 509.29567299999997,
                    "p50": 546.4091589999999,
                    "p95": 562.938594,
                    "p99": 562.938594,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 693.169211,
                    "min": 631.10953,
                    "p50": 679.2838439999999,
                    "p95": 693.169211,
                    "p99": 693.169211,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 608.8483299999999,
                    "min": 559.943299,
                    "p50": 596.3605,
                    "p95": 608.8483299999999,
                    "p99": 608.8483299999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.0082689999999,
                    "min": 472.10076,
                    "p50": 504.465174,
                    "p95": 522.0082689999999,
                    "p99": 522.0082689999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 923.159998,
                    "min": 840.3689029999999,
                    "p50": 893.1322399999999,
                    "p95": 923.159998,
                    "p99": 923.159998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 351.94120599999997,
                    "min": 296.913215,
                    "p50": 339.215437,
                    "p95": 351.94120599999997,
                    "p99": 351.94120599999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.752532,
                    "min": 174.611626,
                    "p50": 202.65947799999998,
                    "p95": 211.752532,
                    "p99": 211.752532,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 791.273877,
                    "min": 736.827306,
                    "p50": 762.148591,
                    "p95": 791.273877,
                    "p99": 791.273877,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 381.182774,
                    "min": 337.620501,
                    "p50": 348.632943,
                    "p95": 381.182774,
                    "p99": 381.182774,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 651.131907,
                    "min": 590.1284099999999,
                    "p50": 624.610628,
                    "p95": 651.131907,
                    "p99": 651.131907,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 914.0666759999999,
                    "min": 847.728299,
                    "p50": 890.4157839999999,
                    "p95": 914.0666759999999,
                    "p99": 914.0666759999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2010.01849,
                    "min": 1964.329636,
                    "p50": 1997.275031,
                    "p95": 2010.01849,
                    "p99": 2010.01849,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2903.678148,
                    "min": 2827.587158,
                    "p50": 2855.627055,
                    "p95": 2903.678148,
                    "p99": 2903.678148,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5743.7065059999995,
                    "min": 5641.260609,
                    "p50": 5690.8308529999995,
                    "p95": 5743.7065059999995,
                    "p99": 5743.7065059999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1605.4915159999998,
                    "min": 1546.630208,
                    "p50": 1584.294193,
                    "p95": 1605.4915159999998,
                    "p99": 1605.4915159999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 756.377317,
                    "min": 707.135725,
                    "p50": 736.6320099999999,
                    "p95": 756.377317,
                    "p99": 756.377317,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 614.6096299999999,
                    "min": 564.918217,
                    "p50": 605.168497,
                    "p95": 614.6096299999999,
                    "p99": 614.6096299999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1756.664372,
                    "min": 1694.250503,
                    "p50": 1720.642627,
                    "p95": 1756.664372,
                    "p99": 1756.664372,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4323.9405639999995,
                    "min": 4206.062175,
                    "p50": 4277.330833999999,
                    "p95": 4323.9405639999995,
                    "p99": 4323.9405639999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2537.8164229999998,
                    "min": 2455.487836,
                    "p50": 2488.774542,
                    "p95": 2537.8164229999998,
                    "p99": 2537.8164229999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2160.883334,
                    "min": 2137.725541,
                    "p50": 2156.3438109999997,
                    "p95": 2160.883334,
                    "p99": 2160.883334,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1179.1310999999998,
                    "min": 1128.253497,
                    "p50": 1149.649883,
                    "p95": 1179.1310999999998,
                    "p99": 1179.1310999999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1477.970908,
                    "min": 1438.954826,
                    "p50": 1455.2361819999999,
                    "p95": 1477.970908,
                    "p99": 1477.970908,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1032.888171,
                    "min": 985.196382,
                    "p50": 1008.1923949999999,
                    "p95": 1032.888171,
                    "p99": 1032.888171,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 469.43951599999997,
                    "min": 424.77867899999995,
                    "p50": 460.625316,
                    "p95": 469.43951599999997,
                    "p99": 469.43951599999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1893.3828819999999,
                    "min": 1840.9244729999998,
                    "p50": 1862.9175249999998,
                    "p95": 1893.3828819999999,
                    "p99": 1893.3828819999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1335.333114,
                    "min": 1264.8756429999999,
                    "p50": 1304.163423,
                    "p95": 1335.333114,
                    "p99": 1335.333114,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 433.02468899999997,
                    "min": 397.337682,
                    "p50": 429.35217,
                    "p95": 433.02468899999997,
                    "p99": 433.02468899999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1307.992996,
                    "min": 1275.925299,
                    "p50": 1294.256756,
                    "p95": 1307.992996,
                    "p99": 1307.992996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2653.0295739999997,
                    "min": 2552.442315,
                    "p50": 2612.1450409999998,
                    "p95": 2653.0295739999997,
                    "p99": 2653.0295739999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1460.644849,
                    "min": 1407.397685,
                    "p50": 1428.7909829999999,
                    "p95": 1460.644849,
                    "p99": 1460.644849,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3842.30934,
                    "min": 3736.632423,
                    "p50": 3806.4987539999997,
                    "p95": 3842.30934,
                    "p99": 3842.30934,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 809.1177849999999,
                    "min": 775.599509,
                    "p50": 804.210864,
                    "p95": 809.1177849999999,
                    "p99": 809.1177849999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1211.6607999999999,
                    "min": 1156.167708,
                    "p50": 1204.248402,
                    "p95": 1211.6607999999999,
                    "p99": 1211.6607999999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5052.388075,
                    "min": 4936.320603,
                    "p50": 5012.939297999999,
                    "p95": 5052.388075,
                    "p99": 5052.388075,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 700.925769,
                    "min": 654.887217,
                    "p50": 680.6683879999999,
                    "p95": 700.925769,
                    "p99": 700.925769,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1747.576815,
                    "min": 1684.766208,
                    "p50": 1729.6951299999998,
                    "p95": 1747.576815,
                    "p99": 1747.576815,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 936.0212459999999,
                    "min": 880.656399,
                    "p50": 917.433601,
                    "p95": 936.0212459999999,
                    "p99": 936.0212459999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 565.0566769999999,
                    "min": 514.4521639999999,
                    "p50": 529.142925,
                    "p95": 565.0566769999999,
                    "p99": 565.0566769999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1987.8535299999999,
                    "min": 1920.247666,
                    "p50": 1954.781573,
                    "p95": 1987.8535299999999,
                    "p99": 1987.8535299999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1865.6115379999999,
                    "min": 1796.269542,
                    "p50": 1834.2786939999999,
                    "p95": 1865.6115379999999,
                    "p99": 1865.6115379999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2259.654443,
                    "min": 2198.1663559999997,
                    "p50": 2251.484251,
                    "p95": 2259.654443,
                    "p99": 2259.654443,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1054.417878,
                    "min": 1009.4295169999999,
                    "p50": 1042.194733,
                    "p95": 1054.417878,
                    "p99": 1054.417878,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1592.786416,
                    "min": 1522.6586909999999,
                    "p50": 1562.509889,
                    "p95": 1592.786416,
                    "p99": 1592.786416,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 105.177207,
                    "min": 66.83986,
                    "p50": 93.298671,
                    "p95": 105.177207,
                    "p99": 105.177207,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 88.95429,
                    "min": 46.558886,
                    "p50": 85.763362,
                    "p95": 88.95429,
                    "p99": 88.95429,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 130.064834,
                    "min": 88.52368299999999,
                    "p50": 126.36325,
                    "p95": 130.064834,
                    "p99": 130.064834,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 175.008914,
                    "min": 131.393043,
                    "p50": 168.191513,
                    "p95": 175.008914,
                    "p99": 175.008914,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 473.05726699999997,
                    "min": 425.779143,
                    "p50": 468.578915,
                    "p95": 473.05726699999997,
                    "p99": 473.05726699999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 217.38635599999998,
                    "min": 200.540661,
                    "p50": 211.660076,
                    "p95": 217.38635599999998,
                    "p99": 217.38635599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 90.162863,
                    "min": 51.010511,
                    "p50": 88.169069,
                    "p95": 90.162863,
                    "p99": 90.162863,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.413950999999997,
                    "min": 24.565247,
                    "p50": 27.003175,
                    "p95": 31.413950999999997,
                    "p99": 31.413950999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 252.524686,
                    "min": 214.946327,
                    "p50": 220.659168,
                    "p95": 252.524686,
                    "p99": 252.524686,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 64.54064799999999,
                    "min": 34.173093,
                    "p50": 35.144839,
                    "p95": 64.54064799999999,
                    "p99": 64.54064799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 76.20343299999999,
                    "min": 69.871355,
                    "p50": 75.180674,
                    "p95": 76.20343299999999,
                    "p99": 76.20343299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 81.103348,
                    "min": 42.307747,
                    "p50": 62.246416999999994,
                    "p95": 81.103348,
                    "p99": 81.103348,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 115.82181,
                    "min": 78.307486,
                    "p50": 83.52134099999999,
                    "p95": 115.82181,
                    "p99": 115.82181,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 49.367306,
                    "min": 25.984267,
                    "p50": 46.672610999999996,
                    "p95": 49.367306,
                    "p99": 49.367306,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 57.388061,
                    "min": 30.297791,
                    "p50": 43.717062,
                    "p95": 57.388061,
                    "p99": 57.388061,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 110.405971,
                    "min": 104.974183,
                    "p50": 108.96235,
                    "p95": 110.405971,
                    "p99": 110.405971,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 92.187444,
                    "min": 54.838443,
                    "p50": 59.039289,
                    "p95": 92.187444,
                    "p99": 92.187444,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 42.158975,
                    "min": 26.869134,
                    "p50": 27.259717,
                    "p95": 42.158975,
                    "p99": 42.158975,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 100.448656,
                    "min": 61.627281999999994,
                    "p50": 83.789925,
                    "p95": 100.448656,
                    "p99": 100.448656,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2557.3297629999997,
                    "min": 2492.3809969999998,
                    "p50": 2543.233377,
                    "p95": 2557.3297629999997,
                    "p99": 2557.3297629999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1047.045173,
                    "min": 1015.492678,
                    "p50": 1030.778554,
                    "p95": 1047.045173,
                    "p99": 1047.045173,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 760.9009209999999,
                    "min": 725.099702,
                    "p50": 752.0143949999999,
                    "p95": 760.9009209999999,
                    "p99": 760.9009209999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1773.7927129999998,
                    "min": 1721.6198669999999,
                    "p50": 1737.3650739999998,
                    "p95": 1773.7927129999998,
                    "p99": 1773.7927129999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1190.143094,
                    "min": 1136.676591,
                    "p50": 1167.086642,
                    "p95": 1190.143094,
                    "p99": 1190.143094,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5774.757482,
                    "min": 5658.942129999999,
                    "p50": 5717.974109,
                    "p95": 5774.757482,
                    "p99": 5774.757482,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1618.974014,
                    "min": 1573.120694,
                    "p50": 1604.9112309999998,
                    "p95": 1618.974014,
                    "p99": 1618.974014,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 907.800846,
                    "min": 860.622472,
                    "p50": 892.892386,
                    "p95": 907.800846,
                    "p99": 907.800846,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1914.6704619999998,
                    "min": 1866.2612139999999,
                    "p50": 1887.6072729999999,
                    "p95": 1914.6704619999998,
                    "p99": 1914.6704619999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4338.933094999999,
                    "min": 4241.897994999999,
                    "p50": 4305.811363,
                    "p95": 4338.933094999999,
                    "p99": 4338.933094999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2196.325702,
                    "min": 2133.3239599999997,
                    "p50": 2175.236814,
                    "p95": 2196.325702,
                    "p99": 2196.325702,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2906.4007119999997,
                    "min": 2842.705085,
                    "p50": 2889.415702,
                    "p95": 2906.4007119999997,
                    "p99": 2906.4007119999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 481.525917,
                    "min": 440.042537,
                    "p50": 474.608573,
                    "p95": 481.525917,
                    "p99": 481.525917,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2069.173174,
                    "min": 2030.6389689999999,
                    "p50": 2042.68473,
                    "p95": 2069.173174,
                    "p99": 2069.173174,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.795108,
                    "min": 580.1404719999999,
                    "p50": 612.5988679999999,
                    "p95": 616.795108,
                    "p99": 616.795108,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1481.7662679999999,
                    "min": 1431.34717,
                    "p50": 1448.191083,
                    "p95": 1481.7662679999999,
                    "p99": 1481.7662679999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1339.788217,
                    "min": 1278.7315489999999,
                    "p50": 1328.98423,
                    "p95": 1339.788217,
                    "p99": 1339.788217,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2193.844671,
                    "min": 2152.0598999999997,
                    "p50": 2178.5101019999997,
                    "p95": 2193.844671,
                    "p99": 2193.844671,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 618.0215969999999,
                    "min": 574.893123,
                    "p50": 597.476815,
                    "p95": 618.0215969999999,
                    "p99": 618.0215969999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1345.804329,
                    "min": 1296.11756,
                    "p50": 1319.027553,
                    "p95": 1345.804329,
                    "p99": 1345.804329,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1925.857166,
                    "min": 1872.626434,
                    "p50": 1894.367333,
                    "p95": 1925.857166,
                    "p99": 1925.857166,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1497.934143,
                    "min": 1455.291638,
                    "p50": 1462.334799,
                    "p95": 1497.934143,
                    "p99": 1497.934143,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1601.200096,
                    "min": 1570.4957379999998,
                    "p50": 1587.047817,
                    "p95": 1601.200096,
                    "p99": 1601.200096,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2931.074763,
                    "min": 2845.153922,
                    "p50": 2880.703958,
                    "p95": 2931.074763,
                    "p99": 2931.074763,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4338.3126569999995,
                    "min": 4254.692782,
                    "p50": 4278.41915,
                    "p95": 4338.3126569999995,
                    "p99": 4338.3126569999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1764.3715479999998,
                    "min": 1728.244925,
                    "p50": 1755.9345039999998,
                    "p95": 1764.3715479999998,
                    "p99": 1764.3715479999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 767.408092,
                    "min": 746.224937,
                    "p50": 765.155315,
                    "p95": 767.408092,
                    "p99": 767.408092,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 476.882257,
                    "min": 434.463734,
                    "p50": 441.302912,
                    "p95": 476.882257,
                    "p99": 476.882257,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 911.581119,
                    "min": 865.923875,
                    "p50": 905.910224,
                    "p95": 911.581119,
                    "p99": 911.581119,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2573.363096,
                    "min": 2505.043773,
                    "p50": 2536.459492,
                    "p95": 2573.363096,
                    "p99": 2573.363096,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1046.608454,
                    "min": 1001.010591,
                    "p50": 1014.9795969999999,
                    "p95": 1046.608454,
                    "p99": 1046.608454,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2055.891244,
                    "min": 1997.920647,
                    "p50": 2018.7019659999999,
                    "p95": 2055.891244,
                    "p99": 2055.891244,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1201.75099,
                    "min": 1152.0325599999999,
                    "p50": 1187.412691,
                    "p95": 1201.75099,
                    "p99": 1201.75099,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 749.793581,
                    "min": 705.035537,
                    "p50": 729.841373,
                    "p95": 749.793581,
                    "p99": 749.793581,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 125.71438099999999,
                    "min": 98.847293,
                    "p50": 100.407997,
                    "p95": 125.71438099999999,
                    "p99": 125.71438099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 387.988434,
                    "min": 349.587429,
                    "p50": 384.272984,
                    "p95": 387.988434,
                    "p99": 387.988434,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 91.225417,
                    "min": 51.879225999999996,
                    "p50": 77.985599,
                    "p95": 91.225417,
                    "p99": 91.225417,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 61.647282999999995,
                    "min": 31.395671,
                    "p50": 32.224320999999996,
                    "p95": 61.647282999999995,
                    "p99": 61.647282999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 123.654196,
                    "min": 86.250896,
                    "p50": 113.23865599999999,
                    "p95": 123.654196,
                    "p99": 123.654196,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 317.568747,
                    "min": 276.243607,
                    "p50": 312.52633,
                    "p95": 317.568747,
                    "p99": 317.568747,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 138.161861,
                    "min": 108.09966,
                    "p50": 119.12018499999999,
                    "p95": 138.161861,
                    "p99": 138.161861,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 131.072205,
                    "min": 92.919888,
                    "p50": 112.19361099999999,
                    "p95": 131.072205,
                    "p99": 131.072205,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 161.18285699999998,
                    "min": 123.76415999999999,
                    "p50": 148.05060899999998,
                    "p95": 161.18285699999998,
                    "p99": 161.18285699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 71.734327,
                    "min": 38.185725,
                    "p50": 57.489501,
                    "p95": 71.734327,
                    "p99": 71.734327,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 122.18462199999999,
                    "min": 110.475839,
                    "p50": 117.960813,
                    "p95": 122.18462199999999,
                    "p99": 122.18462199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 46.720332,
                    "min": 25.337075,
                    "p50": 36.622986,
                    "p95": 46.720332,
                    "p99": 46.720332,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 99.72359399999999,
                    "min": 59.322146,
                    "p50": 61.217838,
                    "p95": 99.72359399999999,
                    "p99": 99.72359399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 88.592642,
                    "min": 46.661283,
                    "p50": 83.492661,
                    "p95": 88.592642,
                    "p99": 88.592642,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.795261,
                    "min": 65.504586,
                    "p50": 94.064379,
                    "p95": 102.795261,
                    "p99": 102.795261,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 112.981286,
                    "min": 73.239554,
                    "p50": 106.434163,
                    "p95": 112.981286,
                    "p99": 112.981286,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 253.98493399999998,
                    "min": 212.050018,
                    "p50": 239.18826199999998,
                    "p95": 253.98493399999998,
                    "p99": 253.98493399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 177.337121,
                    "min": 139.95953699999998,
                    "p50": 142.265513,
                    "p95": 177.337121,
                    "p99": 177.337121,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 45.153813,
                    "min": 26.59642,
                    "p50": 31.628628,
                    "p95": 45.153813,
                    "p99": 45.153813,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 159.224551,
                    "min": 117.511501,
                    "p50": 153.77012499999998,
                    "p95": 159.224551,
                    "p99": 159.224551,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 125.01541499999999,
                    "min": 85.678304,
                    "p50": 118.85365499999999,
                    "p95": 125.01541499999999,
                    "p99": 125.01541499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 100.198905,
                    "min": 58.700787999999996,
                    "p50": 85.321274,
                    "p95": 100.198905,
                    "p99": 100.198905,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 59.225638,
                    "min": 31.674699999999998,
                    "p50": 46.568787,
                    "p95": 59.225638,
                    "p99": 59.225638,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 316.862954,
                    "min": 274.712449,
                    "p50": 306.50924699999996,
                    "p95": 316.862954,
                    "p99": 316.862954,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 182.28761699999998,
                    "min": 139.27457099999998,
                    "p50": 178.31445399999998,
                    "p95": 182.28761699999998,
                    "p99": 182.28761699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 76.287177,
                    "min": 36.915227,
                    "p50": 54.925466,
                    "p95": 76.287177,
                    "p99": 76.287177,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 78.781784,
                    "min": 42.146356,
                    "p50": 43.407655999999996,
                    "p95": 78.781784,
                    "p99": 78.781784,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 50.545131999999995,
                    "min": 27.181109,
                    "p50": 47.383776,
                    "p95": 50.545131999999995,
                    "p99": 50.545131999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 49.440734,
                    "min": 28.47862,
                    "p50": 42.502815999999996,
                    "p95": 49.440734,
                    "p99": 49.440734,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.841873999999997,
                    "min": 26.64227,
                    "p50": 27.575508,
                    "p95": 29.841873999999997,
                    "p99": 29.841873999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 91.981849,
                    "min": 51.652986999999996,
                    "p50": 76.244514,
                    "p95": 91.981849,
                    "p99": 91.981849,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 66.168973,
                    "min": 34.111956,
                    "p50": 36.102633,
                    "p95": 66.168973,
                    "p99": 66.168973,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 75.735708,
                    "min": 44.652086999999995,
                    "p50": 45.755469,
                    "p95": 75.735708,
                    "p99": 75.735708,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 45.555212,
                    "min": 26.142533999999998,
                    "p50": 44.660838999999996,
                    "p95": 45.555212,
                    "p99": 45.555212,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 78.214535,
                    "min": 39.842236,
                    "p50": 59.119617,
                    "p95": 78.214535,
                    "p99": 78.214535,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 38.091544999999996,
                    "min": 26.589817999999998,
                    "p50": 32.033316,
                    "p95": 38.091544999999996,
                    "p99": 38.091544999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.931845,
                    "min": 22.128666,
                    "p50": 27.068019999999997,
                    "p95": 27.931845,
                    "p99": 27.931845,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 160.74045999999998,
                    "min": 120.92381999999999,
                    "p50": 137.90954,
                    "p95": 160.74045999999998,
                    "p99": 160.74045999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 96.201487,
                    "min": 57.331202999999995,
                    "p50": 58.806799,
                    "p95": 96.201487,
                    "p99": 96.201487,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 178.014928,
                    "min": 137.502431,
                    "p50": 175.750793,
                    "p95": 178.014928,
                    "p99": 178.014928,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 90.478135,
                    "min": 50.629526999999996,
                    "p50": 51.130038,
                    "p95": 90.478135,
                    "p99": 90.478135,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.718605,
                    "min": 44.029528,
                    "p50": 67.054681,
                    "p95": 82.718605,
                    "p99": 82.718605,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 60.757065999999995,
                    "min": 56.895162,
                    "p50": 57.880613999999994,
                    "p95": 60.757065999999995,
                    "p99": 60.757065999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 139.98236,
                    "min": 96.83031799999999,
                    "p50": 136.02101199999998,
                    "p95": 139.98236,
                    "p99": 139.98236,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 109.34275199999999,
                    "min": 77.38606999999999,
                    "p50": 79.496528,
                    "p95": 109.34275199999999,
                    "p99": 109.34275199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 244.11872799999998,
                    "min": 204.399744,
                    "p50": 216.529071,
                    "p95": 244.11872799999998,
                    "p99": 244.11872799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 101.939386,
                    "min": 64.268667,
                    "p50": 65.699747,
                    "p95": 101.939386,
                    "p99": 101.939386,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 706.239054,
                    "min": 666.8620589999999,
                    "p50": 690.777514,
                    "p95": 706.239054,
                    "p99": 706.239054,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 71.473109,
                    "min": 68.171577,
                    "p50": 70.017529,
                    "p95": 71.473109,
                    "p99": 71.473109,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 132.31267599999998,
                    "min": 102.358052,
                    "p50": 127.254865,
                    "p95": 132.31267599999998,
                    "p99": 132.31267599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 124.720185,
                    "min": 84.23406299999999,
                    "p50": 122.438104,
                    "p95": 124.720185,
                    "p99": 124.720185,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 315.295846,
                    "min": 265.976677,
                    "p50": 299.297866,
                    "p95": 315.295846,
                    "p99": 315.295846,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 35.921037,
                    "min": 24.985664999999997,
                    "p50": 27.415443,
                    "p95": 35.921037,
                    "p99": 35.921037,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 148.308419,
                    "min": 105.26088,
                    "p50": 140.93131,
                    "p95": 148.308419,
                    "p99": 148.308419,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 110.08921199999999,
                    "min": 70.76078199999999,
                    "p50": 96.62586399999999,
                    "p95": 110.08921199999999,
                    "p99": 110.08921199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 381.58081699999997,
                    "min": 345.631471,
                    "p50": 367.622881,
                    "p95": 381.58081699999997,
                    "p99": 381.58081699999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 567.076498,
                    "min": 535.5297959999999,
                    "p50": 565.080501,
                    "p95": 567.076498,
                    "p99": 567.076498,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 486.481965,
                    "min": 448.07669799999996,
                    "p50": 480.09473399999996,
                    "p95": 486.481965,
                    "p99": 486.481965,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 708.3289249999999,
                    "min": 668.1291719999999,
                    "p50": 677.029216,
                    "p95": 708.3289249999999,
                    "p99": 708.3289249999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 262.93161499999997,
                    "min": 221.500971,
                    "p50": 258.080552,
                    "p95": 262.93161499999997,
                    "p99": 262.93161499999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.95208199999996,
                    "min": 296.501265,
                    "p50": 297.75012499999997,
                    "p95": 336.95208199999996,
                    "p99": 336.95208199999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 636.523166,
                    "min": 597.1125089999999,
                    "p50": 623.8695829999999,
                    "p95": 636.523166,
                    "p99": 636.523166,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 410.355522,
                    "min": 370.247974,
                    "p50": 406.727764,
                    "p95": 410.355522,
                    "p99": 410.355522,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 760.147509,
                    "min": 726.326107,
                    "p50": 742.9047089999999,
                    "p95": 760.147509,
                    "p99": 760.147509,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 263.602107,
                    "min": 223.59210299999998,
                    "p50": 261.06068999999997,
                    "p95": 263.602107,
                    "p99": 263.602107,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 628.602436,
                    "min": 581.903724,
                    "p50": 612.6317359999999,
                    "p95": 628.602436,
                    "p99": 628.602436,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 482.111997,
                    "min": 438.83777999999995,
                    "p50": 469.822642,
                    "p95": 482.111997,
                    "p99": 482.111997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 556.720527,
                    "min": 511.570413,
                    "p50": 517.692231,
                    "p95": 556.720527,
                    "p99": 556.720527,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 703.2774099999999,
                    "min": 662.548036,
                    "p50": 691.87387,
                    "p95": 703.2774099999999,
                    "p99": 703.2774099999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.925218,
                    "min": 296.808021,
                    "p50": 332.574328,
                    "p95": 336.925218,
                    "p99": 336.925218,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 408.475695,
                    "min": 368.412264,
                    "p50": 397.72234699999996,
                    "p95": 408.475695,
                    "p99": 408.475695,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 264.40977599999997,
                    "min": 215.886364,
                    "p50": 241.974998,
                    "p95": 264.40977599999997,
                    "p99": 264.40977599999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 432.79618999999997,
                    "min": 383.904816,
                    "p50": 399.96871899999996,
                    "p95": 432.79618999999997,
                    "p99": 432.79618999999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 529.829035,
                    "min": 459.579047,
                    "p50": 502.12057999999996,
                    "p95": 529.829035,
                    "p99": 529.829035,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 384.302986,
                    "min": 313.76707899999997,
                    "p50": 359.69503299999997,
                    "p95": 384.302986,
                    "p99": 384.302986,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 735.7382249999999,
                    "min": 650.966606,
                    "p50": 704.931753,
                    "p95": 735.7382249999999,
                    "p99": 735.7382249999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.20763599999998,
                    "min": 150.218867,
                    "p50": 173.415818,
                    "p95": 198.20763599999998,
                    "p99": 198.20763599999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 603.0129019999999,
                    "min": 547.713429,
                    "p50": 574.713798,
                    "p95": 603.0129019999999,
                    "p99": 603.0129019999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 511.389342,
                    "min": 455.297667,
                    "p50": 484.498769,
                    "p95": 511.389342,
                    "p99": 511.389342,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 328.129723,
                    "min": 266.617827,
                    "p50": 312.103368,
                    "p95": 328.129723,
                    "p99": 328.129723,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 679.842913,
                    "min": 623.904764,
                    "p50": 665.966633,
                    "p95": 679.842913,
                    "p99": 679.842913,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 495.09153999999995,
                    "min": 454.07505199999997,
                    "p50": 490.202631,
                    "p95": 495.09153999999995,
                    "p99": 495.09153999999995,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 653.332334,
                    "min": 605.932564,
                    "p50": 625.7571439999999,
                    "p95": 653.332334,
                    "p99": 653.332334,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 189.506939,
                    "min": 154.383151,
                    "p50": 159.999346,
                    "p95": 189.506939,
                    "p99": 189.506939,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 344.138337,
                    "min": 304.04247,
                    "p50": 340.555522,
                    "p95": 344.138337,
                    "p99": 344.138337,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 572.39472,
                    "min": 528.298767,
                    "p50": 566.7085069999999,
                    "p95": 572.39472,
                    "p99": 572.39472,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 268.733113,
                    "min": 227.948909,
                    "p50": 265.801965,
                    "p95": 268.733113,
                    "p99": 268.733113,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 416.109971,
                    "min": 377.97635399999996,
                    "p50": 408.451682,
                    "p95": 416.109971,
                    "p99": 416.109971,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1196.479872,
                    "min": 1091.284072,
                    "p50": 1110.593721,
                    "p95": 1196.479872,
                    "p99": 1196.479872,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 601.298828,
                    "min": 551.636561,
                    "p50": 578.488825,
                    "p95": 601.298828,
                    "p99": 601.298828,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 364.512199,
                    "min": 317.166145,
                    "p50": 348.71214799999996,
                    "p95": 364.512199,
                    "p99": 364.512199,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1083.6828,
                    "min": 986.832636,
                    "p50": 1041.749543,
                    "p95": 1083.6828,
                    "p99": 1083.6828,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 840.4797,
                    "min": 785.94522,
                    "p50": 824.5432189999999,
                    "p95": 840.4797,
                    "p99": 840.4797,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 676.166429,
                    "min": 630.183441,
                    "p50": 665.1277299999999,
                    "p95": 676.166429,
                    "p99": 676.166429,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1004.6643429999999,
                    "min": 941.15675,
                    "p50": 967.7210299999999,
                    "p95": 1004.6643429999999,
                    "p99": 1004.6643429999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 442.622478,
                    "min": 392.26442099999997,
                    "p50": 426.532653,
                    "p95": 442.622478,
                    "p99": 442.622478,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 273.941344,
                    "min": 235.54598099999998,
                    "p50": 244.752985,
                    "p95": 273.941344,
                    "p99": 273.941344,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1406.8527569999999,
                    "min": 1352.301782,
                    "p50": 1375.654546,
                    "p95": 1406.8527569999999,
                    "p99": 1406.8527569999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1242.78729,
                    "min": 1168.92235,
                    "p50": 1230.70434,
                    "p95": 1242.78729,
                    "p99": 1242.78729,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1649.1237529999999,
                    "min": 1542.699522,
                    "p50": 1605.240996,
                    "p95": 1649.1237529999999,
                    "p99": 1649.1237529999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 755.255046,
                    "min": 695.973938,
                    "p50": 729.262438,
                    "p95": 755.255046,
                    "p99": 755.255046,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 924.447673,
                    "min": 860.095161,
                    "p50": 881.470145,
                    "p95": 924.447673,
                    "p99": 924.447673,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 519.3231049999999,
                    "min": 480.109627,
                    "p50": 505.86481,
                    "p95": 519.3231049999999,
                    "p99": 519.3231049999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 926.9210129999999,
                    "min": 872.406071,
                    "p50": 915.147878,
                    "p95": 926.9210129999999,
                    "p99": 926.9210129999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 365.25910799999997,
                    "min": 324.524409,
                    "p50": 350.60218399999997,
                    "p95": 365.25910799999997,
                    "p99": 365.25910799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1046.602263,
                    "min": 988.7189569999999,
                    "p50": 1030.416201,
                    "p95": 1046.602263,
                    "p99": 1046.602263,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 721.423518,
                    "min": 673.349027,
                    "p50": 708.107485,
                    "p95": 721.423518,
                    "p99": 721.423518,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.263313,
                    "min": 271.573852,
                    "p50": 286.43163899999996,
                    "p95": 307.263313,
                    "p99": 307.263313,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 453.55130499999996,
                    "min": 405.121724,
                    "p50": 433.22347199999996,
                    "p95": 453.55130499999996,
                    "p99": 453.55130499999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 872.517713,
                    "min": 804.6374179999999,
                    "p50": 822.153145,
                    "p95": 872.517713,
                    "p99": 872.517713,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1000.458453,
                    "min": 935.1224609999999,
                    "p50": 950.775096,
                    "p95": 1000.458453,
                    "p99": 1000.458453,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1433.648624,
                    "min": 1321.0990339999998,
                    "p50": 1371.520079,
                    "p95": 1433.648624,
                    "p99": 1433.648624,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 488.79542499999997,
                    "min": 472.405713,
                    "p50": 485.40556499999997,
                    "p95": 488.79542499999997,
                    "p99": 488.79542499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1247.4102329999998,
                    "min": 1166.928852,
                    "p50": 1218.55687,
                    "p95": 1247.4102329999998,
                    "p99": 1247.4102329999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 573.779664,
                    "min": 515.1728459999999,
                    "p50": 567.849613,
                    "p95": 573.779664,
                    "p99": 573.779664,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 816.1561859999999,
                    "min": 721.362566,
                    "p50": 772.3507999999999,
                    "p95": 816.1561859999999,
                    "p99": 816.1561859999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 659.037998,
                    "min": 598.4363,
                    "p50": 640.1342,
                    "p95": 659.037998,
                    "p99": 659.037998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 246.44248,
                    "min": 203.05064299999998,
                    "p50": 229.771912,
                    "p95": 246.44248,
                    "p99": 246.44248,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 436.72765,
                    "min": 388.05395,
                    "p50": 415.83701299999996,
                    "p95": 436.72765,
                    "p99": 436.72765,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 674.3617429999999,
                    "min": 626.0195229999999,
                    "p50": 661.391442,
                    "p95": 674.3617429999999,
                    "p99": 674.3617429999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 589.699756,
                    "min": 550.4947,
                    "p50": 573.861903,
                    "p95": 589.699756,
                    "p99": 589.699756,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1410.119218,
                    "min": 1354.3274689999998,
                    "p50": 1391.051796,
                    "p95": 1410.119218,
                    "p99": 1410.119218,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1231.781041,
                    "min": 1170.551606,
                    "p50": 1204.749713,
                    "p95": 1231.781041,
                    "p99": 1231.781041,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 279.591709,
                    "min": 238.822748,
                    "p50": 245.171336,
                    "p95": 279.591709,
                    "p99": 279.591709,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 927.766128,
                    "min": 846.156518,
                    "p50": 885.557062,
                    "p95": 927.766128,
                    "p99": 927.766128,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 842.2681779999999,
                    "min": 757.363837,
                    "p50": 802.7884349999999,
                    "p95": 842.2681779999999,
                    "p99": 842.2681779999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 461.111855,
                    "min": 313.089268,
                    "p50": 343.843325,
                    "p95": 461.111855,
                    "p99": 461.111855,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1007.436659,
                    "min": 921.255547,
                    "p50": 975.48619,
                    "p95": 1007.436659,
                    "p99": 1007.436659,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 766.040576,
                    "min": 699.496278,
                    "p50": 737.802368,
                    "p95": 766.040576,
                    "p99": 766.040576,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1645.518275,
                    "min": 1498.3449429999998,
                    "p50": 1598.8482319999998,
                    "p95": 1645.518275,
                    "p99": 1645.518275,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1119.594761,
                    "min": 1042.1421189999999,
                    "p50": 1077.2511789999999,
                    "p95": 1119.594761,
                    "p99": 1119.594761,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 518.3023979999999,
                    "min": 468.011684,
                    "p50": 499.54130699999996,
                    "p95": 518.3023979999999,
                    "p99": 518.3023979999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1083.301898,
                    "min": 986.605068,
                    "p50": 1036.875437,
                    "p95": 1083.301898,
                    "p99": 1083.301898,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1636.094735,
                    "min": 1536.5405289999999,
                    "p50": 1615.1393389999998,
                    "p95": 1636.094735,
                    "p99": 1636.094735,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 353.597664,
                    "min": 320.282288,
                    "p50": 343.744043,
                    "p95": 353.597664,
                    "p99": 353.597664,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 743.5052139999999,
                    "min": 698.639449,
                    "p50": 723.57647,
                    "p95": 743.5052139999999,
                    "p99": 743.5052139999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 838.742669,
                    "min": 771.812965,
                    "p50": 818.796372,
                    "p95": 838.742669,
                    "p99": 838.742669,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 920.876848,
                    "min": 851.4922369999999,
                    "p50": 889.493476,
                    "p95": 920.876848,
                    "p99": 920.876848,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1438.544892,
                    "min": 1373.4794219999999,
                    "p50": 1410.124442,
                    "p95": 1438.544892,
                    "p99": 1438.544892,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 997.213896,
                    "min": 945.014362,
                    "p50": 958.829481,
                    "p95": 997.213896,
                    "p99": 997.213896,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1069.321036,
                    "min": 999.600285,
                    "p50": 1028.336959,
                    "p95": 1069.321036,
                    "p99": 1069.321036,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 609.780806,
                    "min": 235.32755,
                    "p50": 258.806609,
                    "p95": 609.780806,
                    "p99": 609.780806,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 493.37269699999996,
                    "min": 467.600357,
                    "p50": 476.81836999999996,
                    "p95": 493.37269699999996,
                    "p99": 493.37269699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 445.136012,
                    "min": 390.17513499999995,
                    "p50": 423.90883399999996,
                    "p95": 445.136012,
                    "p99": 445.136012,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1245.1834,
                    "min": 1113.1438839999998,
                    "p50": 1214.343081,
                    "p95": 1245.1834,
                    "p99": 1245.1834,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 684.3802029999999,
                    "min": 626.7473,
                    "p50": 644.661468,
                    "p95": 684.3802029999999,
                    "p99": 684.3802029999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1131.751571,
                    "min": 1059.560997,
                    "p50": 1115.5234679999999,
                    "p95": 1131.751571,
                    "p99": 1131.751571,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 586.3343169999999,
                    "min": 552.5067319999999,
                    "p50": 573.6323679999999,
                    "p95": 586.3343169999999,
                    "p99": 586.3343169999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 355.884972,
                    "min": 313.190974,
                    "p50": 332.012391,
                    "p95": 355.884972,
                    "p99": 355.884972,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.103297,
                    "min": 56.053705,
                    "p50": 89.91775299999999,
                    "p95": 96.103297,
                    "p99": 96.103297,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1294.2849139999998,
                    "min": 1198.151815,
                    "p50": 1256.682785,
                    "p95": 1294.2849139999998,
                    "p99": 1294.2849139999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 301.13960399999996,
                    "min": 263.85911899999996,
                    "p50": 284.02527299999997,
                    "p95": 301.13960399999996,
                    "p99": 301.13960399999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 425.433456,
                    "min": 395.462951,
                    "p50": 415.76331899999997,
                    "p95": 425.433456,
                    "p99": 425.433456,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 169.206483,
                    "min": 128.54431499999998,
                    "p50": 157.71828,
                    "p95": 169.206483,
                    "p99": 169.206483,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 539.452516,
                    "min": 484.30357799999996,
                    "p50": 509.468321,
                    "p95": 539.452516,
                    "p99": 539.452516,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 118.018397,
                    "min": 81.58945299999999,
                    "p50": 109.50846,
                    "p95": 118.018397,
                    "p99": 118.018397,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.277662,
                    "min": 106.37304999999999,
                    "p50": 132.521151,
                    "p95": 143.277662,
                    "p99": 143.277662,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 74.65831299999999,
                    "min": 40.359344,
                    "p50": 63.815751999999996,
                    "p95": 74.65831299999999,
                    "p99": 74.65831299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 152.09068,
                    "min": 113.395871,
                    "p50": 133.71320699999998,
                    "p95": 152.09068,
                    "p99": 152.09068,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 126.984427,
                    "min": 88.359616,
                    "p50": 123.338473,
                    "p95": 126.984427,
                    "p99": 126.984427,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 183.564999,
                    "min": 135.75874,
                    "p50": 174.395252,
                    "p95": 183.564999,
                    "p99": 183.564999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 211.265064,
                    "min": 167.80720399999998,
                    "p50": 204.700573,
                    "p95": 211.265064,
                    "p99": 211.265064,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 193.249864,
                    "min": 152.273638,
                    "p50": 185.990184,
                    "p95": 193.249864,
                    "p99": 193.249864,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 671.325288,
                    "min": 619.4649069999999,
                    "p50": 651.617135,
                    "p95": 671.325288,
                    "p99": 671.325288,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 107.69320499999999,
                    "min": 95.10550599999999,
                    "p50": 105.33989299999999,
                    "p95": 107.69320499999999,
                    "p99": 107.69320499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 226.23376499999998,
                    "min": 182.85554399999998,
                    "p50": 213.423838,
                    "p95": 226.23376499999998,
                    "p99": 226.23376499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 244.315702,
                    "min": 191.582093,
                    "p50": 216.18296999999998,
                    "p95": 244.315702,
                    "p99": 244.315702,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 437.25168199999996,
                    "min": 393.92933899999997,
                    "p50": 425.864877,
                    "p95": 437.25168199999996,
                    "p99": 437.25168199999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 617.524649,
                    "min": 81.66748299999999,
                    "p50": 109.060454,
                    "p95": 617.524649,
                    "p99": 617.524649,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 570.330489,
                    "min": 520.66086,
                    "p50": 561.092619,
                    "p95": 570.330489,
                    "p99": 570.330489,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 304.545393,
                    "min": 258.879378,
                    "p50": 290.304179,
                    "p95": 304.545393,
                    "p99": 304.545393,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 229.418072,
                    "min": 186.298742,
                    "p50": 213.637308,
                    "p95": 229.418072,
                    "p99": 229.418072,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 229.456301,
                    "min": 196.66927199999998,
                    "p50": 204.330341,
                    "p95": 229.456301,
                    "p99": 229.456301,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 205.214878,
                    "min": 171.774262,
                    "p50": 184.579413,
                    "p95": 205.214878,
                    "p99": 205.214878,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 270.777603,
                    "min": 228.856887,
                    "p50": 263.90426199999996,
                    "p95": 270.777603,
                    "p99": 270.777603,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.462778,
                    "min": 42.746468,
                    "p50": 69.937083,
                    "p95": 81.462778,
                    "p99": 81.462778,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1354.613382,
                    "min": 1278.931969,
                    "p50": 1322.6722419999999,
                    "p95": 1354.613382,
                    "p99": 1354.613382,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.18992399999999,
                    "min": 54.832426999999996,
                    "p50": 81.54213899999999,
                    "p95": 96.18992399999999,
                    "p99": 96.18992399999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.62822,
                    "min": 68.770359,
                    "p50": 77.809255,
                    "p95": 105.62822,
                    "p99": 105.62822,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 146.26537,
                    "min": 108.617036,
                    "p50": 143.345585,
                    "p95": 146.26537,
                    "p99": 146.26537,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 163.65447699999999,
                    "min": 157.241007,
                    "p50": 160.83912999999998,
                    "p95": 163.65447699999999,
                    "p99": 163.65447699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 160.724222,
                    "min": 120.119232,
                    "p50": 135.31336299999998,
                    "p95": 160.724222,
                    "p99": 160.724222,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 186.64228599999998,
                    "min": 144.80962499999998,
                    "p50": 150.47736899999998,
                    "p95": 186.64228599999998,
                    "p99": 186.64228599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 132.46067,
                    "min": 94.547754,
                    "p50": 122.990545,
                    "p95": 132.46067,
                    "p99": 132.46067,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 170.57836,
                    "min": 132.276523,
                    "p50": 159.13886,
                    "p95": 170.57836,
                    "p99": 170.57836,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 687.7387669999999,
                    "min": 635.633337,
                    "p50": 665.33249,
                    "p95": 687.7387669999999,
                    "p99": 687.7387669999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 208.99181299999998,
                    "min": 171.509041,
                    "p50": 202.756169,
                    "p95": 208.99181299999998,
                    "p99": 208.99181299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1265.30096,
                    "min": 1222.276063,
                    "p50": 1232.3352069999999,
                    "p95": 1265.30096,
                    "p99": 1265.30096,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 219.249395,
                    "min": 172.66911199999998,
                    "p50": 202.74736,
                    "p95": 219.249395,
                    "p99": 219.249395,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 158.347053,
                    "min": 118.432312,
                    "p50": 148.117901,
                    "p95": 158.347053,
                    "p99": 158.347053,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 260.84844499999997,
                    "min": 216.058931,
                    "p50": 244.85277499999998,
                    "p95": 260.84844499999997,
                    "p99": 260.84844499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 283.145071,
                    "min": 244.17569699999999,
                    "p50": 275.376753,
                    "p95": 283.145071,
                    "p99": 283.145071,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.485534,
                    "min": 67.202345,
                    "p50": 103.72877899999999,
                    "p95": 105.485534,
                    "p99": 105.485534,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 168.550421,
                    "min": 138.50359799999998,
                    "p50": 162.867356,
                    "p95": 168.550421,
                    "p99": 168.550421,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.940631,
                    "min": 91.131766,
                    "p50": 116.525095,
                    "p95": 128.940631,
                    "p99": 128.940631,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 233.033841,
                    "min": 188.104416,
                    "p50": 223.085987,
                    "p95": 233.033841,
                    "p99": 233.033841,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 196.692919,
                    "min": 158.77572999999998,
                    "p50": 176.40249699999998,
                    "p95": 196.692919,
                    "p99": 196.692919,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 537.380578,
                    "min": 490.631786,
                    "p50": 514.4851219999999,
                    "p95": 537.380578,
                    "p99": 537.380578,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 402.84838199999996,
                    "min": 358.806112,
                    "p50": 387.693857,
                    "p95": 402.84838199999996,
                    "p99": 402.84838199999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 180.048107,
                    "min": 131.479985,
                    "p50": 177.72097399999998,
                    "p95": 180.048107,
                    "p99": 180.048107,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.696266,
                    "min": 38.89827,
                    "p50": 59.096498,
                    "p95": 76.696266,
                    "p99": 76.696266,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.831165,
                    "min": 107.343986,
                    "p50": 136.094739,
                    "p95": 143.831165,
                    "p99": 143.831165,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.890591,
                    "min": 54.269259,
                    "p50": 80.122614,
                    "p95": 93.890591,
                    "p99": 93.890591,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.42212699999999,
                    "min": 75.574969,
                    "p50": 106.34284699999999,
                    "p95": 119.42212699999999,
                    "p99": 119.42212699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 679.753151,
                    "min": 628.972089,
                    "p50": 655.158678,
                    "p95": 679.753151,
                    "p99": 679.753151,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 697.676796,
                    "min": 149.15555799999998,
                    "p50": 180.2787,
                    "p95": 697.676796,
                    "p99": 697.676796,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.95243399999998,
                    "min": 97.7037,
                    "p50": 125.30457799999999,
                    "p95": 136.95243399999998,
                    "p99": 136.95243399999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 101.547685,
                    "min": 58.034639999999996,
                    "p50": 58.666016,
                    "p95": 101.547685,
                    "p99": 101.547685,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.911409,
                    "min": 110.668027,
                    "p50": 136.115576,
                    "p95": 148.911409,
                    "p99": 148.911409,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 311.103409,
                    "min": 271.152382,
                    "p50": 289.628712,
                    "p95": 311.103409,
                    "p99": 311.103409,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.15342299999999,
                    "min": 44.353964999999995,
                    "p50": 82.498154,
                    "p95": 83.15342299999999,
                    "p99": 83.15342299999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1380.8796479999999,
                    "min": 1329.358174,
                    "p50": 1346.233438,
                    "p95": 1380.8796479999999,
                    "p99": 1380.8796479999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 279.880873,
                    "min": 236.386104,
                    "p50": 270.447862,
                    "p95": 279.880873,
                    "p99": 279.880873,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 326.380311,
                    "min": 70.609815,
                    "p50": 108.516458,
                    "p95": 326.380311,
                    "p99": 326.380311,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.162915,
                    "min": 134.243369,
                    "p50": 171.321686,
                    "p95": 178.162915,
                    "p99": 178.162915,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 209.485444,
                    "min": 189.541762,
                    "p50": 191.335548,
                    "p95": 209.485444,
                    "p99": 209.485444,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.266227,
                    "min": 84.249332,
                    "p50": 104.236509,
                    "p95": 122.266227,
                    "p99": 122.266227,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 191.94817,
                    "min": 158.39366099999998,
                    "p50": 165.087484,
                    "p95": 191.94817,
                    "p99": 191.94817,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 721.2844739999999,
                    "min": 670.29624,
                    "p50": 694.716369,
                    "p95": 721.2844739999999,
                    "p99": 721.2844739999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 442.37125399999996,
                    "min": 406.28910099999996,
                    "p50": 412.956116,
                    "p95": 442.37125399999996,
                    "p99": 442.37125399999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 217.91851699999998,
                    "min": 175.31165199999998,
                    "p50": 198.74943499999998,
                    "p95": 217.91851699999998,
                    "p99": 217.91851699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 164.869318,
                    "min": 123.786107,
                    "p50": 155.915528,
                    "p95": 164.869318,
                    "p99": 164.869318,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 245.16503699999998,
                    "min": 204.63981199999998,
                    "p50": 239.63099499999998,
                    "p95": 245.16503699999998,
                    "p99": 245.16503699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 835.738921,
                    "min": 521.386877,
                    "p50": 552.6492069999999,
                    "p95": 835.738921,
                    "p99": 835.738921,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.966442,
                    "min": 100.592764,
                    "p50": 139.51178,
                    "p95": 145.966442,
                    "p99": 145.966442,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 231.26108599999998,
                    "min": 181.429237,
                    "p50": 209.400869,
                    "p95": 231.26108599999998,
                    "p99": 231.26108599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 199.61867999999998,
                    "min": 159.85318999999998,
                    "p50": 194.704435,
                    "p95": 199.61867999999998,
                    "p99": 199.61867999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.31147399999999,
                    "min": 84.72581,
                    "p50": 111.993663,
                    "p95": 127.31147399999999,
                    "p99": 127.31147399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 324.210453,
                    "min": 287.185721,
                    "p50": 319.697391,
                    "p95": 324.210453,
                    "p99": 324.210453,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.01758,
                    "min": 58.882186,
                    "p50": 90.32656399999999,
                    "p95": 96.01758,
                    "p99": 96.01758,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 158.112852,
                    "min": 109.75619999999999,
                    "p50": 131.145555,
                    "p95": 158.112852,
                    "p99": 158.112852,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 190.024393,
                    "min": 146.379998,
                    "p50": 182.070503,
                    "p95": 190.024393,
                    "p99": 190.024393,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 260.643396,
                    "min": 210.763856,
                    "p50": 248.23994,
                    "p95": 260.643396,
                    "p99": 260.643396,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 452.44467599999996,
                    "min": 402.081885,
                    "p50": 425.761983,
                    "p95": 452.44467599999996,
                    "p99": 452.44467599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 207.225371,
                    "min": 166.24287099999998,
                    "p50": 199.262258,
                    "p95": 207.225371,
                    "p99": 207.225371,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 149.278525,
                    "min": 125.515683,
                    "p50": 132.599989,
                    "p95": 149.278525,
                    "p99": 149.278525,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.893755,
                    "min": 74.252616,
                    "p50": 101.57814499999999,
                    "p95": 112.893755,
                    "p99": 112.893755,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 239.89669999999998,
                    "min": 200.928068,
                    "p50": 228.80253399999998,
                    "p95": 239.89669999999998,
                    "p99": 239.89669999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 289.60787899999997,
                    "min": 258.129581,
                    "p50": 287.017726,
                    "p95": 289.60787899999997,
                    "p99": 289.60787899999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 620.395713,
                    "min": 568.248597,
                    "p50": 592.890046,
                    "p95": 620.395713,
                    "p99": 620.395713,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 743.6100779999999,
                    "min": 678.3129379999999,
                    "p50": 710.9035719999999,
                    "p95": 743.6100779999999,
                    "p99": 743.6100779999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1432.794889,
                    "min": 1353.291886,
                    "p50": 1407.588968,
                    "p95": 1432.794889,
                    "p99": 1432.794889,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.711806,
                    "min": 47.064308,
                    "p50": 68.274637,
                    "p95": 76.711806,
                    "p99": 76.711806,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 668.929207,
                    "min": 599.9215449999999,
                    "p50": 638.0916199999999,
                    "p95": 668.929207,
                    "p99": 668.929207,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 197.868968,
                    "min": 165.924275,
                    "p50": 169.679011,
                    "p95": 197.868968,
                    "p99": 197.868968,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 170.992287,
                    "min": 128.903379,
                    "p50": 165.93483999999998,
                    "p95": 170.992287,
                    "p99": 170.992287,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 225.148642,
                    "min": 179.78224699999998,
                    "p50": 216.45961499999999,
                    "p95": 225.148642,
                    "p99": 225.148642,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 131.518821,
                    "min": 87.268894,
                    "p50": 120.00219899999999,
                    "p95": 131.518821,
                    "p99": 131.518821,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.989581,
                    "min": 63.368993999999994,
                    "p50": 87.242699,
                    "p95": 106.989581,
                    "p99": 106.989581,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.505173,
                    "min": 41.426939,
                    "p50": 57.078446,
                    "p95": 77.505173,
                    "p99": 77.505173,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 181.861039,
                    "min": 130.921703,
                    "p50": 144.450051,
                    "p95": 181.861039,
                    "p99": 181.861039,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 263.877014,
                    "min": 226.249449,
                    "p50": 252.340907,
                    "p95": 263.877014,
                    "p99": 263.877014,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 112.541124,
                    "min": 71.215644,
                    "p50": 101.379812,
                    "p95": 112.541124,
                    "p99": 112.541124,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 140.162537,
                    "min": 101.497355,
                    "p50": 122.362967,
                    "p95": 140.162537,
                    "p99": 140.162537,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 215.145836,
                    "min": 161.581572,
                    "p50": 186.142797,
                    "p95": 215.145836,
                    "p99": 215.145836,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 548.633814,
                    "min": 481.442634,
                    "p50": 531.682556,
                    "p95": 548.633814,
                    "p99": 548.633814,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 162.655878,
                    "min": 143.600997,
                    "p50": 156.21433,
                    "p95": 162.655878,
                    "p99": 162.655878,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.887753,
                    "min": 241.61666699999998,
                    "p50": 280.324191,
                    "p95": 290.887753,
                    "p99": 290.887753,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.984295,
                    "min": 151.30169999999998,
                    "p50": 155.430612,
                    "p95": 198.984295,
                    "p99": 198.984295,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 92.043281,
                    "min": 50.135044,
                    "p50": 55.607945,
                    "p95": 92.043281,
                    "p99": 92.043281,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 412.596225,
                    "min": 359.275963,
                    "p50": 386.84254799999997,
                    "p95": 412.596225,
                    "p99": 412.596225,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.15398199999998,
                    "min": 222.374237,
                    "p50": 239.755689,
                    "p95": 247.15398199999998,
                    "p99": 247.15398199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.46201,
                    "min": 137.377849,
                    "p50": 167.278642,
                    "p95": 170.46201,
                    "p99": 170.46201,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.821283,
                    "min": 205.65946499999998,
                    "p50": 240.303004,
                    "p95": 261.821283,
                    "p99": 261.821283,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 919.320608,
                    "min": 857.344673,
                    "p50": 901.746358,
                    "p95": 919.320608,
                    "p99": 919.320608,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 630.815785,
                    "min": 565.178798,
                    "p50": 582.0965229999999,
                    "p95": 630.815785,
                    "p99": 630.815785,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 708.7891149999999,
                    "min": 665.510488,
                    "p50": 688.63947,
                    "p95": 708.7891149999999,
                    "p99": 708.7891149999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 856.185872,
                    "min": 724.1357409999999,
                    "p50": 777.7334549999999,
                    "p95": 856.185872,
                    "p99": 856.185872,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 422.79110499999996,
                    "min": 380.26099999999997,
                    "p50": 410.084347,
                    "p95": 422.79110499999996,
                    "p99": 422.79110499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 334.743109,
                    "min": 270.361299,
                    "p50": 307.121534,
                    "p95": 334.743109,
                    "p99": 334.743109,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 414.251738,
                    "min": 359.46846899999997,
                    "p50": 393.90000899999995,
                    "p95": 414.251738,
                    "p99": 414.251738,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 369.73177699999997,
                    "min": 310.775967,
                    "p50": 322.743876,
                    "p95": 369.73177699999997,
                    "p99": 369.73177699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 482.387415,
                    "min": 409.972426,
                    "p50": 454.211262,
                    "p95": 482.387415,
                    "p99": 482.387415,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.77419,
                    "min": 466.538031,
                    "p50": 483.802916,
                    "p95": 522.77419,
                    "p99": 522.77419,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 688.985276,
                    "min": 614.796374,
                    "p50": 659.210955,
                    "p95": 688.985276,
                    "p99": 688.985276,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 588.8737199999999,
                    "min": 497.057438,
                    "p50": 567.143254,
                    "p95": 588.8737199999999,
                    "p99": 588.8737199999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 552.4418979999999,
                    "min": 455.119983,
                    "p50": 505.087986,
                    "p95": 552.4418979999999,
                    "p99": 552.4418979999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 649.9822379999999,
                    "min": 605.4457189999999,
                    "p50": 622.400389,
                    "p95": 649.9822379999999,
                    "p99": 649.9822379999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 661.505685,
                    "min": 600.81227,
                    "p50": 632.23069,
                    "p95": 661.505685,
                    "p99": 661.505685,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 221.500284,
                    "min": 166.770835,
                    "p50": 178.31528899999998,
                    "p95": 221.500284,
                    "p99": 221.500284,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.64243899999997,
                    "min": 213.30055099999998,
                    "p50": 246.415731,
                    "p95": 257.64243899999997,
                    "p99": 257.64243899999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 357.830072,
                    "min": 291.48468399999996,
                    "p50": 333.85535,
                    "p95": 357.830072,
                    "p99": 357.830072,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 311.771123,
                    "min": 266.21173799999997,
                    "p50": 292.29652,
                    "p95": 311.771123,
                    "p99": 311.771123,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 657.002165,
                    "min": 448.226026,
                    "p50": 491.68643399999996,
                    "p95": 657.002165,
                    "p99": 657.002165,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 177.55415,
                    "min": 142.98181399999999,
                    "p50": 169.057921,
                    "p95": 177.55415,
                    "p99": 177.55415,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 404.69868199999996,
                    "min": 331.082097,
                    "p50": 374.402069,
                    "p95": 404.69868199999996,
                    "p99": 404.69868199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 855.159198,
                    "min": 783.9015989999999,
                    "p50": 808.326609,
                    "p95": 855.159198,
                    "p99": 855.159198,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 936.7633999999999,
                    "min": 861.476142,
                    "p50": 899.658374,
                    "p95": 936.7633999999999,
                    "p99": 936.7633999999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 728.1871629999999,
                    "min": 671.468357,
                    "p50": 710.8911009999999,
                    "p95": 728.1871629999999,
                    "p99": 728.1871629999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 432.20865499999996,
                    "min": 385.199433,
                    "p50": 412.795214,
                    "p95": 432.20865499999996,
                    "p99": 432.20865499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 607.81036,
                    "min": 540.020791,
                    "p50": 561.105273,
                    "p95": 607.81036,
                    "p99": 607.81036,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 673.800132,
                    "min": 602.066912,
                    "p50": 637.166525,
                    "p95": 673.800132,
                    "p99": 673.800132,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 611.471698,
                    "min": 538.267832,
                    "p50": 591.958218,
                    "p95": 611.471698,
                    "p99": 611.471698,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 695.467826,
                    "min": 604.927143,
                    "p50": 637.981738,
                    "p95": 695.467826,
                    "p99": 695.467826,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 779.197652,
                    "min": 700.691379,
                    "p50": 737.701946,
                    "p95": 779.197652,
                    "p99": 779.197652,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 579.302607,
                    "min": 508.566786,
                    "p50": 552.132468,
                    "p95": 579.302607,
                    "p99": 579.302607,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 747.37914,
                    "min": 441.76899699999996,
                    "p50": 498.05319699999995,
                    "p95": 747.37914,
                    "p99": 747.37914,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 177.560873,
                    "min": 136.35814299999998,
                    "p50": 164.191677,
                    "p95": 177.560873,
                    "p99": 177.560873,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 877.169419,
                    "min": 803.4482919999999,
                    "p50": 847.846327,
                    "p95": 877.169419,
                    "p99": 877.169419,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 508.961825,
                    "min": 414.58219399999996,
                    "p50": 458.99501999999995,
                    "p95": 508.961825,
                    "p99": 508.961825,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 455.42363,
                    "min": 368.567813,
                    "p50": 430.52405799999997,
                    "p95": 455.42363,
                    "p99": 455.42363,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.855362,
                    "min": 247.08514699999998,
                    "p50": 280.230259,
                    "p95": 313.855362,
                    "p99": 313.855362,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.916133,
                    "min": 354.197591,
                    "p50": 390.089337,
                    "p95": 415.916133,
                    "p99": 415.916133,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 347.229812,
                    "min": 276.199487,
                    "p50": 322.286452,
                    "p95": 347.229812,
                    "p99": 347.229812,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.968236,
                    "min": 161.357837,
                    "p50": 208.328171,
                    "p95": 217.968236,
                    "p99": 217.968236,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.766103,
                    "min": 208.511065,
                    "p50": 234.38116699999998,
                    "p95": 261.766103,
                    "p99": 261.766103,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 686.293308,
                    "min": 627.804323,
                    "p50": 650.5345199999999,
                    "p95": 686.293308,
                    "p99": 686.293308,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 723.345513,
                    "min": 631.460997,
                    "p50": 697.239202,
                    "p95": 723.345513,
                    "p99": 723.345513,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 581.362497,
                    "min": 515.955007,
                    "p50": 557.337896,
                    "p95": 581.362497,
                    "p99": 581.362497,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 806.440421,
                    "min": 736.1048959999999,
                    "p50": 789.395358,
                    "p95": 806.440421,
                    "p99": 806.440421,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 225.919275,
                    "min": 168.03509499999998,
                    "p50": 207.543241,
                    "p95": 225.919275,
                    "p99": 225.919275,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 531.5977419999999,
                    "min": 469.527334,
                    "p50": 512.2371499999999,
                    "p95": 531.5977419999999,
                    "p99": 531.5977419999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 938.570563,
                    "min": 863.720871,
                    "p50": 913.644584,
                    "p95": 938.570563,
                    "p99": 938.570563,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 308.212446,
                    "min": 254.445177,
                    "p50": 287.969838,
                    "p95": 308.212446,
                    "p99": 308.212446,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1082.178764,
                    "min": 339.58840699999996,
                    "p50": 402.706364,
                    "p95": 1082.178764,
                    "p99": 1082.178764,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 369.082158,
                    "min": 320.612515,
                    "p50": 359.144407,
                    "p95": 369.082158,
                    "p99": 369.082158,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 279.327744,
                    "min": 213.60127,
                    "p50": 258.454834,
                    "p95": 279.327744,
                    "p99": 279.327744,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 452.437905,
                    "min": 387.07778199999996,
                    "p50": 421.07973899999996,
                    "p95": 452.437905,
                    "p99": 452.437905,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 509.86296,
                    "min": 449.02408299999996,
                    "p50": 482.827839,
                    "p95": 509.86296,
                    "p99": 509.86296,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.695447,
                    "min": 141.982791,
                    "p50": 163.677452,
                    "p95": 182.695447,
                    "p99": 182.695447,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 642.029581,
                    "min": 588.546711,
                    "p50": 619.9640489999999,
                    "p95": 642.029581,
                    "p99": 642.029581,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 685.578449,
                    "min": 629.473749,
                    "p50": 680.106272,
                    "p95": 685.578449,
                    "p99": 685.578449,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 424.31197599999996,
                    "min": 380.539523,
                    "p50": 396.73805799999997,
                    "p95": 424.31197599999996,
                    "p99": 424.31197599999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 519.8326539999999,
                    "min": 465.49481599999996,
                    "p50": 495.268785,
                    "p95": 519.8326539999999,
                    "p99": 519.8326539999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 347.233101,
                    "min": 301.811197,
                    "p50": 325.745253,
                    "p95": 347.233101,
                    "p99": 347.233101,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 305.845218,
                    "min": 256.51728199999997,
                    "p50": 289.489515,
                    "p95": 305.845218,
                    "p99": 305.845218,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 481.93492699999996,
                    "min": 423.84303,
                    "p50": 473.24161399999997,
                    "p95": 481.93492699999996,
                    "p99": 481.93492699999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.500528,
                    "min": 135.84905899999998,
                    "p50": 168.842758,
                    "p95": 173.500528,
                    "p99": 173.500528,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.674557,
                    "min": 177.17918799999998,
                    "p50": 210.38889,
                    "p95": 217.674557,
                    "p99": 217.674557,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 390.259307,
                    "min": 341.065317,
                    "p50": 374.644796,
                    "p95": 390.259307,
                    "p99": 390.259307,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.373352,
                    "min": 216.265534,
                    "p50": 223.12971,
                    "p95": 261.373352,
                    "p99": 261.373352,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 915.533289,
                    "min": 848.939277,
                    "p50": 880.9908379999999,
                    "p95": 915.533289,
                    "p99": 915.533289,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 563.7324219999999,
                    "min": 510.84313499999996,
                    "p50": 540.731963,
                    "p95": 563.7324219999999,
                    "p99": 563.7324219999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 805.507377,
                    "min": 767.805521,
                    "p50": 785.0298779999999,
                    "p95": 805.507377,
                    "p99": 805.507377,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 644.286672,
                    "min": 595.561286,
                    "p50": 637.777155,
                    "p95": 644.286672,
                    "p99": 644.286672,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 610.1556909999999,
                    "min": 556.2115229999999,
                    "p50": 582.696828,
                    "p95": 610.1556909999999,
                    "p99": 610.1556909999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1350.9359929999998,
                    "min": 1273.990837,
                    "p50": 1322.82847,
                    "p95": 1350.9359929999998,
                    "p99": 1350.9359929999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 586.03577,
                    "min": 479.166788,
                    "p50": 568.218811,
                    "p95": 586.03577,
                    "p99": 586.03577,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 439.894216,
                    "min": 371.395266,
                    "p50": 414.115137,
                    "p95": 439.894216,
                    "p99": 439.894216,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 507.14484899999997,
                    "min": 443.172104,
                    "p50": 484.58000499999997,
                    "p95": 507.14484899999997,
                    "p99": 507.14484899999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 765.850819,
                    "min": 675.900846,
                    "p50": 725.924539,
                    "p95": 765.850819,
                    "p99": 765.850819,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 665.823658,
                    "min": 559.431819,
                    "p50": 634.989769,
                    "p95": 665.823658,
                    "p99": 665.823658,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 474.09937099999996,
                    "min": 411.736502,
                    "p50": 440.24436699999995,
                    "p95": 474.09937099999996,
                    "p99": 474.09937099999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.73270399999998,
                    "min": 105.97721399999999,
                    "p50": 111.43771799999999,
                    "p95": 150.73270399999998,
                    "p99": 150.73270399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 183.155214,
                    "min": 139.83415499999998,
                    "p50": 178.511046,
                    "p95": 183.155214,
                    "p99": 183.155214,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 401.518399,
                    "min": 360.295526,
                    "p50": 381.73272399999996,
                    "p95": 401.518399,
                    "p99": 401.518399,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 245.554125,
                    "min": 217.48168099999998,
                    "p50": 232.86511,
                    "p95": 245.554125,
                    "p99": 245.554125,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 369.19987799999996,
                    "min": 291.593468,
                    "p50": 346.707248,
                    "p95": 369.19987799999996,
                    "p99": 369.19987799999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 204.716499,
                    "min": 173.54258299999998,
                    "p50": 183.537469,
                    "p95": 204.716499,
                    "p99": 204.716499,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 531.569156,
                    "min": 451.28714199999996,
                    "p50": 503.880323,
                    "p95": 531.569156,
                    "p99": 531.569156,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 331.566084,
                    "min": 260.17734,
                    "p50": 311.26818499999996,
                    "p95": 331.566084,
                    "p99": 331.566084,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 565.547139,
                    "min": 228.476858,
                    "p50": 280.014344,
                    "p95": 565.547139,
                    "p99": 565.547139,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 358.628848,
                    "min": 318.22290399999997,
                    "p50": 345.122274,
                    "p95": 358.628848,
                    "p99": 358.628848,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 176.596479,
                    "min": 134.084937,
                    "p50": 163.973285,
                    "p95": 176.596479,
                    "p99": 176.596479,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 308.27108599999997,
                    "min": 255.62053699999998,
                    "p50": 291.95829399999997,
                    "p95": 308.27108599999997,
                    "p99": 308.27108599999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 268.361748,
                    "min": 215.404846,
                    "p50": 232.36022899999998,
                    "p95": 268.361748,
                    "p99": 268.361748,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 233.47800099999998,
                    "min": 192.846879,
                    "p50": 217.75116899999998,
                    "p95": 233.47800099999998,
                    "p99": 233.47800099999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 529.8235169999999,
                    "min": 451.290312,
                    "p50": 507.147611,
                    "p95": 529.8235169999999,
                    "p99": 529.8235169999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 476.85826,
                    "min": 413.152343,
                    "p50": 451.283341,
                    "p95": 476.85826,
                    "p99": 476.85826,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 705.430162,
                    "min": 608.660809,
                    "p50": 656.9077169999999,
                    "p95": 705.430162,
                    "p99": 705.430162,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1056.311004,
                    "min": 915.7471029999999,
                    "p50": 983.235724,
                    "p95": 1056.311004,
                    "p99": 1056.311004,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 443.963853,
                    "min": 359.52243699999997,
                    "p50": 416.776479,
                    "p95": 443.963853,
                    "p99": 443.963853,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 209.934763,
                    "min": 158.807234,
                    "p50": 196.569379,
                    "p95": 209.934763,
                    "p99": 209.934763,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 413.50420599999995,
                    "min": 345.131877,
                    "p50": 374.58527,
                    "p95": 413.50420599999995,
                    "p99": 413.50420599999995,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 139.45246799999998,
                    "min": 96.887433,
                    "p50": 130.563112,
                    "p95": 139.45246799999998,
                    "p99": 139.45246799999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 497.13829599999997,
                    "min": 418.737844,
                    "p50": 478.65018,
                    "p95": 497.13829599999997,
                    "p99": 497.13829599999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 620.218119,
                    "min": 546.402154,
                    "p50": 586.335678,
                    "p95": 620.218119,
                    "p99": 620.218119,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 345.813834,
                    "min": 284.642706,
                    "p50": 317.422848,
                    "p95": 345.813834,
                    "p99": 345.813834,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1017.775778,
                    "min": 967.657391,
                    "p50": 1003.4701279999999,
                    "p95": 1017.775778,
                    "p99": 1017.775778,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 264.954683,
                    "min": 222.251117,
                    "p50": 228.29651299999998,
                    "p95": 264.954683,
                    "p99": 264.954683,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 190.511618,
                    "min": 171.902145,
                    "p50": 187.64263599999998,
                    "p95": 190.511618,
                    "p99": 190.511618,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 333.722453,
                    "min": 293.838186,
                    "p50": 321.56881599999997,
                    "p95": 333.722453,
                    "p99": 333.722453,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 139.493931,
                    "min": 100.963915,
                    "p50": 137.842802,
                    "p95": 139.493931,
                    "p99": 139.493931,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 531.271571,
                    "min": 486.460993,
                    "p50": 511.39223,
                    "p95": 531.271571,
                    "p99": 531.271571,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 402.895803,
                    "min": 366.40570099999997,
                    "p50": 399.39401999999995,
                    "p95": 402.895803,
                    "p99": 402.895803,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 380.952649,
                    "min": 342.094871,
                    "p50": 344.15207,
                    "p95": 380.952649,
                    "p99": 380.952649,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 114.650002,
                    "min": 76.60508,
                    "p50": 77.918503,
                    "p95": 114.650002,
                    "p99": 114.650002,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 164.516935,
                    "min": 124.12066899999999,
                    "p50": 157.36244,
                    "p95": 164.516935,
                    "p99": 164.516935,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 471.293755,
                    "min": 425.45318799999995,
                    "p50": 466.811936,
                    "p95": 471.293755,
                    "p99": 471.293755,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 237.012362,
                    "min": 197.025985,
                    "p50": 226.21618899999999,
                    "p95": 237.012362,
                    "p99": 237.012362,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 305.18836899999997,
                    "min": 271.366175,
                    "p50": 295.489895,
                    "p95": 305.18836899999997,
                    "p99": 305.18836899999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 212.70961599999998,
                    "min": 173.27210599999998,
                    "p50": 209.100847,
                    "p95": 212.70961599999998,
                    "p99": 212.70961599999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 362.23805899999996,
                    "min": 319.380795,
                    "p50": 345.46263799999997,
                    "p95": 362.23805899999996,
                    "p99": 362.23805899999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 782.1460089999999,
                    "min": 728.398115,
                    "p50": 741.7897449999999,
                    "p95": 782.1460089999999,
                    "p99": 782.1460089999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1254.113576,
                    "min": 1215.290878,
                    "p50": 1231.000137,
                    "p95": 1254.113576,
                    "p99": 1254.113576,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 286.029789,
                    "min": 245.73254799999998,
                    "p50": 268.917348,
                    "p95": 286.029789,
                    "p99": 286.029789,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 151.810712,
                    "min": 112.83604,
                    "p50": 145.166371,
                    "p95": 151.810712,
                    "p99": 151.810712,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 356.582466,
                    "min": 315.684153,
                    "p50": 353.555072,
                    "p95": 356.582466,
                    "p99": 356.582466,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 515.162604,
                    "min": 472.244064,
                    "p50": 492.079232,
                    "p95": 515.162604,
                    "p99": 515.162604,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 832.907291,
                    "min": 782.8507529999999,
                    "p50": 819.096238,
                    "p95": 832.907291,
                    "p99": 832.907291,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 676.445103,
                    "min": 624.004631,
                    "p50": 663.163967,
                    "p95": 676.445103,
                    "p99": 676.445103,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 169.914079,
                    "min": 150.17116199999998,
                    "p50": 157.26491,
                    "p95": 169.914079,
                    "p99": 169.914079,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 320.42798799999997,
                    "min": 276.912728,
                    "p50": 314.078329,
                    "p95": 320.42798799999997,
                    "p99": 320.42798799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 140.648263,
                    "min": 97.291765,
                    "p50": 124.217711,
                    "p95": 140.648263,
                    "p99": 140.648263,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 264.47173499999997,
                    "min": 221.629012,
                    "p50": 250.45179299999998,
                    "p95": 264.47173499999997,
                    "p99": 264.47173499999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 275.866342,
                    "min": 238.108935,
                    "p50": 262.806151,
                    "p95": 275.866342,
                    "p99": 275.866342,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 105.40097399999999,
                    "min": 66.593013,
                    "p50": 101.897888,
                    "p95": 105.40097399999999,
                    "p99": 105.40097399999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 215.641502,
                    "min": 175.792428,
                    "p50": 213.501755,
                    "p95": 215.641502,
                    "p99": 215.641502,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 236.961806,
                    "min": 191.05798299999998,
                    "p50": 228.84069499999998,
                    "p95": 236.961806,
                    "p99": 236.961806,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 121.159155,
                    "min": 82.015726,
                    "p50": 114.86116799999999,
                    "p95": 121.159155,
                    "p99": 121.159155,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.151692,
                    "min": 50.837472999999996,
                    "p50": 83.049857,
                    "p95": 89.151692,
                    "p99": 89.151692,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 252.921706,
                    "min": 206.35215699999998,
                    "p50": 244.433076,
                    "p95": 252.921706,
                    "p99": 252.921706,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 199.672707,
                    "min": 161.61742999999998,
                    "p50": 185.912578,
                    "p95": 199.672707,
                    "p99": 199.672707,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 183.729848,
                    "min": 143.894474,
                    "p50": 177.071957,
                    "p95": 183.729848,
                    "p99": 183.729848,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 379.522285,
                    "min": 316.333074,
                    "p50": 354.535209,
                    "p95": 379.522285,
                    "p99": 379.522285,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 547.8486879999999,
                    "min": 489.23178199999995,
                    "p50": 521.396388,
                    "p95": 547.8486879999999,
                    "p99": 547.8486879999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 476.801722,
                    "min": 420.399492,
                    "p50": 474.16621399999997,
                    "p95": 476.801722,
                    "p99": 476.801722,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.914769,
                    "min": 108.575025,
                    "p50": 147.040023,
                    "p95": 156.914769,
                    "p99": 156.914769,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 800.8385529999999,
                    "min": 723.3365749999999,
                    "p50": 750.323302,
                    "p95": 800.8385529999999,
                    "p99": 800.8385529999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 347.59767999999997,
                    "min": 282.321823,
                    "p50": 324.935324,
                    "p95": 347.59767999999997,
                    "p99": 347.59767999999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 226.144501,
                    "min": 180.287154,
                    "p50": 217.66042099999999,
                    "p95": 226.144501,
                    "p99": 226.144501,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 459.361875,
                    "min": 387.302843,
                    "p50": 422.54702499999996,
                    "p95": 459.361875,
                    "p99": 459.361875,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 259.45313999999996,
                    "min": 213.483671,
                    "p50": 234.195723,
                    "p95": 259.45313999999996,
                    "p99": 259.45313999999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 709.863614,
                    "min": 640.908339,
                    "p50": 651.1745569999999,
                    "p95": 709.863614,
                    "p99": 709.863614,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.092378,
                    "min": 147.92525799999999,
                    "p50": 181.44072599999998,
                    "p95": 185.092378,
                    "p99": 185.092378,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 611.859008,
                    "min": 542.7497169999999,
                    "p50": 554.858255,
                    "p95": 611.859008,
                    "p99": 611.859008,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 306.301363,
                    "min": 256.237711,
                    "p50": 297.425788,
                    "p95": 306.301363,
                    "p99": 306.301363,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 516.538825,
                    "min": 457.46442099999996,
                    "p50": 501.73783499999996,
                    "p95": 516.538825,
                    "p99": 516.538825,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 420.194503,
                    "min": 354.21671799999996,
                    "p50": 389.96565799999996,
                    "p95": 420.194503,
                    "p99": 420.194503,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 240.257985,
                    "min": 201.667016,
                    "p50": 237.84431999999998,
                    "p95": 240.257985,
                    "p99": 240.257985,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 641.242178,
                    "min": 601.292799,
                    "p50": 634.1862199999999,
                    "p95": 641.242178,
                    "p99": 641.242178,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 399.29587599999996,
                    "min": 359.205013,
                    "p50": 362.88999,
                    "p95": 399.29587599999996,
                    "p99": 399.29587599999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 559.1382689999999,
                    "min": 515.6288509999999,
                    "p50": 531.44367,
                    "p95": 559.1382689999999,
                    "p99": 559.1382689999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 844.637253,
                    "min": 787.1117869999999,
                    "p50": 819.617564,
                    "p95": 844.637253,
                    "p99": 844.637253,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 478.600556,
                    "min": 441.363833,
                    "p50": 471.797398,
                    "p95": 478.600556,
                    "p99": 478.600556,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 604.735136,
                    "min": 550.441055,
                    "p50": 585.324384,
                    "p95": 604.735136,
                    "p99": 604.735136,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1235.961448,
                    "min": 1182.4729539999998,
                    "p50": 1203.5275789999998,
                    "p95": 1235.961448,
                    "p99": 1235.961448,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 320.331729,
                    "min": 279.924302,
                    "p50": 311.32523299999997,
                    "p95": 320.331729,
                    "p99": 320.331729,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 161.63191999999998,
                    "min": 147.655749,
                    "p50": 160.04610499999998,
                    "p95": 161.63191999999998,
                    "p99": 161.63191999999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 439.955622,
                    "min": 394.291683,
                    "p50": 404.26910899999996,
                    "p95": 439.955622,
                    "p99": 439.955622,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 279.520205,
                    "min": 240.59755099999998,
                    "p50": 270.223615,
                    "p95": 279.520205,
                    "p99": 279.520205,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.110696,
                    "min": 162.707349,
                    "p50": 188.39499899999998,
                    "p95": 201.110696,
                    "p99": 201.110696,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 359.529314,
                    "min": 320.397069,
                    "p50": 345.130542,
                    "p95": 359.529314,
                    "p99": 359.529314,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 744.856085,
                    "min": 695.512383,
                    "p50": 724.6814519999999,
                    "p95": 744.856085,
                    "p99": 744.856085,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 518.8060439999999,
                    "min": 496.993054,
                    "p50": 514.011618,
                    "p95": 518.8060439999999,
                    "p99": 518.8060439999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 497.357803,
                    "min": 475.83910399999996,
                    "p50": 491.34068099999996,
                    "p95": 497.357803,
                    "p99": 497.357803,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 571.844084,
                    "min": 528.806565,
                    "p50": 555.148314,
                    "p95": 571.844084,
                    "p99": 571.844084,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 614.5520819999999,
                    "min": 556.6406999999999,
                    "p50": 590.0759929999999,
                    "p95": 614.5520819999999,
                    "p99": 614.5520819999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 384.511421,
                    "min": 342.343394,
                    "p50": 376.48860199999996,
                    "p95": 384.511421,
                    "p99": 384.511421,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 270.389936,
                    "min": 226.711803,
                    "p50": 265.503606,
                    "p95": 270.389936,
                    "p99": 270.389936,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 347.81667,
                    "min": 299.26866,
                    "p50": 340.401361,
                    "p95": 347.81667,
                    "p99": 347.81667,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 196.43033699999998,
                    "min": 151.760697,
                    "p50": 156.195256,
                    "p95": 196.43033699999998,
                    "p99": 196.43033699999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.88031099999998,
                    "min": 192.40731599999998,
                    "p50": 224.20898799999998,
                    "p95": 233.88031099999998,
                    "p99": 233.88031099999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 415.868448,
                    "min": 374.797556,
                    "p50": 407.731315,
                    "p95": 415.868448,
                    "p99": 415.868448,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 307.32140799999996,
                    "min": 265.399134,
                    "p50": 296.345381,
                    "p95": 307.32140799999996,
                    "p99": 307.32140799999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 812.2715519999999,
                    "min": 755.907439,
                    "p50": 774.624915,
                    "p95": 812.2715519999999,
                    "p99": 812.2715519999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 444.191153,
                    "min": 414.047965,
                    "p50": 433.204886,
                    "p95": 444.191153,
                    "p99": 444.191153,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 707.123705,
                    "min": 658.366867,
                    "p50": 677.820701,
                    "p95": 707.123705,
                    "p99": 707.123705,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 154.49504,
                    "min": 119.329115,
                    "p50": 143.30618099999998,
                    "p95": 154.49504,
                    "p99": 154.49504,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 536.254465,
                    "min": 497.273736,
                    "p50": 516.5830119999999,
                    "p95": 536.254465,
                    "p99": 536.254465,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 357.06768999999997,
                    "min": 314.05758299999997,
                    "p50": 335.126014,
                    "p95": 357.06768999999997,
                    "p99": 357.06768999999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 408.38485599999996,
                    "min": 158.73528399999998,
                    "p50": 162.843044,
                    "p95": 408.38485599999996,
                    "p99": 408.38485599999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 152.29752299999998,
                    "min": 106.64755799999999,
                    "p50": 136.000526,
                    "p95": 152.29752299999998,
                    "p99": 152.29752299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 123.209513,
                    "min": 81.796571,
                    "p50": 86.89599299999999,
                    "p95": 123.209513,
                    "p99": 123.209513,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 378.44318699999997,
                    "min": 344.614776,
                    "p50": 359.535303,
                    "p95": 378.44318699999997,
                    "p99": 378.44318699999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 443.34225,
                    "min": 390.717702,
                    "p50": 424.26354499999997,
                    "p95": 443.34225,
                    "p99": 443.34225,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 286.690267,
                    "min": 239.863331,
                    "p50": 265.483405,
                    "p95": 286.690267,
                    "p99": 286.690267,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 591.5648669999999,
                    "min": 529.9849889999999,
                    "p50": 568.435072,
                    "p95": 591.5648669999999,
                    "p99": 591.5648669999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 317.750835,
                    "min": 262.39201199999997,
                    "p50": 267.722831,
                    "p95": 317.750835,
                    "p99": 317.750835,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 313.530445,
                    "min": 188.37652599999998,
                    "p50": 225.45521599999998,
                    "p95": 313.530445,
                    "p99": 313.530445,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 512.06656,
                    "min": 458.459989,
                    "p50": 500.455385,
                    "p95": 512.06656,
                    "p99": 512.06656,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 407.625296,
                    "min": 386.48540499999996,
                    "p50": 403.095375,
                    "p95": 407.625296,
                    "p99": 407.625296,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 172.66547599999998,
                    "min": 134.840969,
                    "p50": 166.55331099999998,
                    "p95": 172.66547599999998,
                    "p99": 172.66547599999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 254.52292,
                    "min": 214.084173,
                    "p50": 251.338065,
                    "p95": 254.52292,
                    "p99": 254.52292,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 863.748327,
                    "min": 789.086605,
                    "p50": 814.9953409999999,
                    "p95": 863.748327,
                    "p99": 863.748327,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 343.463999,
                    "min": 291.55981399999996,
                    "p50": 317.954528,
                    "p95": 343.463999,
                    "p99": 343.463999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1125.9407119999998,
                    "min": 1048.314081,
                    "p50": 1090.95264,
                    "p95": 1125.9407119999998,
                    "p99": 1125.9407119999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.93857599999996,
                    "min": 440.016255,
                    "p50": 465.99161899999996,
                    "p95": 478.93857599999996,
                    "p99": 478.93857599999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.678224,
                    "min": 214.87047099999998,
                    "p50": 250.01061299999998,
                    "p95": 257.678224,
                    "p99": 257.678224,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 914.1412419999999,
                    "min": 860.189841,
                    "p50": 900.027333,
                    "p95": 914.1412419999999,
                    "p99": 914.1412419999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 649.203303,
                    "min": 596.428054,
                    "p50": 635.39967,
                    "p95": 649.203303,
                    "p99": 649.203303,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.87803099999996,
                    "min": 262.94559599999997,
                    "p50": 293.97209499999997,
                    "p95": 303.87803099999996,
                    "p99": 303.87803099999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 694.185873,
                    "min": 628.558328,
                    "p50": 679.367856,
                    "p95": 694.185873,
                    "p99": 694.185873,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.283768,
                    "min": 296.615891,
                    "p50": 339.383249,
                    "p95": 348.283768,
                    "p99": 348.283768,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 564.492215,
                    "min": 509.421479,
                    "p50": 544.81232,
                    "p95": 564.492215,
                    "p99": 564.492215,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 429.327586,
                    "min": 397.27846999999997,
                    "p50": 424.32221,
                    "p95": 429.327586,
                    "p99": 429.327586,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 594.912733,
                    "min": 548.0378519999999,
                    "p50": 574.853114,
                    "p95": 594.912733,
                    "p99": 594.912733,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 814.481497,
                    "min": 756.099251,
                    "p50": 791.124372,
                    "p95": 814.481497,
                    "p99": 814.481497,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.48301499999997,
                    "min": 355.178467,
                    "p50": 384.16745,
                    "p95": 394.48301499999997,
                    "p99": 394.48301499999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 525.812965,
                    "min": 471.66049399999997,
                    "p50": 503.630385,
                    "p95": 525.812965,
                    "p99": 525.812965,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.117772,
                    "min": 133.42981799999998,
                    "p50": 169.08655299999998,
                    "p95": 175.117772,
                    "p99": 175.117772,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.92737599999998,
                    "min": 172.768923,
                    "p50": 179.693626,
                    "p95": 210.92737599999998,
                    "p99": 210.92737599999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 394.227398,
                    "min": 353.532193,
                    "p50": 363.349228,
                    "p95": 394.227398,
                    "p99": 394.227398,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 180.534817,
                    "min": 146.18071999999998,
                    "p50": 175.33977199999998,
                    "p95": 180.534817,
                    "p99": 180.534817,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 468.48662099999996,
                    "min": 423.52003199999996,
                    "p50": 440.712277,
                    "p95": 468.48662099999996,
                    "p99": 468.48662099999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 533.383873,
                    "min": 497.36868499999997,
                    "p50": 522.681275,
                    "p95": 533.383873,
                    "p99": 533.383873,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.64817,
                    "min": 180.444065,
                    "p50": 182.66269699999998,
                    "p95": 214.64817,
                    "p99": 214.64817,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 358.674001,
                    "min": 320.694598,
                    "p50": 326.402305,
                    "p95": 358.674001,
                    "p99": 358.674001,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 327.85265599999997,
                    "min": 285.09598,
                    "p50": 309.388282,
                    "p95": 327.85265599999997,
                    "p99": 327.85265599999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 244.31259799999998,
                    "min": 214.72696299999998,
                    "p50": 218.621059,
                    "p95": 244.31259799999998,
                    "p99": 244.31259799999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.370867,
                    "min": 111.520015,
                    "p50": 147.82443999999998,
                    "p95": 150.370867,
                    "p99": 150.370867,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 668.52622,
                    "min": 615.665704,
                    "p50": 662.929401,
                    "p95": 668.52622,
                    "p99": 668.52622,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 437.067433,
                    "min": 385.269722,
                    "p50": 421.4708,
                    "p95": 437.067433,
                    "p99": 437.067433,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 505.65351699999997,
                    "min": 459.791538,
                    "p50": 495.95251099999996,
                    "p95": 505.65351699999997,
                    "p99": 505.65351699999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 751.579937,
                    "min": 718.626715,
                    "p50": 743.820029,
                    "p95": 751.579937,
                    "p99": 751.579937,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 576.9904409999999,
                    "min": 536.601215,
                    "p50": 567.364257,
                    "p95": 576.9904409999999,
                    "p99": 576.9904409999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 437.042153,
                    "min": 253.781802,
                    "p50": 287.98629999999997,
                    "p95": 437.042153,
                    "p99": 437.042153,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 703.8367,
                    "min": 660.053544,
                    "p50": 685.454017,
                    "p95": 703.8367,
                    "p99": 703.8367,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 403.912557,
                    "min": 362.703279,
                    "p50": 368.647612,
                    "p95": 403.912557,
                    "p99": 403.912557,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 554.603042,
                    "min": 504.983908,
                    "p50": 542.9746719999999,
                    "p95": 554.603042,
                    "p99": 554.603042,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 579.75963,
                    "min": 543.5935119999999,
                    "p50": 550.5660439999999,
                    "p95": 579.75963,
                    "p99": 579.75963,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 779.9903049999999,
                    "min": 721.145684,
                    "p50": 768.662052,
                    "p95": 779.9903049999999,
                    "p99": 779.9903049999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 438.870007,
                    "min": 398.68116,
                    "p50": 420.227694,
                    "p95": 438.870007,
                    "p99": 438.870007,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 255.673859,
                    "min": 216.49148699999998,
                    "p50": 221.98789499999998,
                    "p95": 255.673859,
                    "p99": 255.673859,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 330.818597,
                    "min": 293.57300299999997,
                    "p50": 325.79173499999996,
                    "p95": 330.818597,
                    "p99": 330.818597,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 524.222187,
                    "min": 473.600086,
                    "p50": 496.96074999999996,
                    "p95": 524.222187,
                    "p99": 524.222187,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 471.660983,
                    "min": 431.34691799999996,
                    "p50": 441.266173,
                    "p95": 471.660983,
                    "p99": 471.660983,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1131.36121,
                    "min": 1082.2764439999999,
                    "p50": 1110.196446,
                    "p95": 1131.36121,
                    "p99": 1131.36121,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 293.950422,
                    "min": 254.713282,
                    "p50": 260.681485,
                    "p95": 293.950422,
                    "p99": 293.950422,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.918873,
                    "min": 111.757707,
                    "p50": 140.250449,
                    "p95": 151.918873,
                    "p99": 151.918873,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 220.99102399999998,
                    "min": 181.824401,
                    "p50": 196.08377199999998,
                    "p95": 220.99102399999998,
                    "p99": 220.99102399999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 366.731292,
                    "min": 326.694558,
                    "p50": 364.560657,
                    "p95": 366.731292,
                    "p99": 366.731292,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.75912599999998,
                    "min": 147.307417,
                    "p50": 150.72157099999998,
                    "p95": 185.75912599999998,
                    "p99": 185.75912599999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 733.46731,
                    "min": 671.8293649999999,
                    "p50": 717.2759639999999,
                    "p95": 733.46731,
                    "p99": 733.46731,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 372.462691,
                    "min": 305.398575,
                    "p50": 352.017061,
                    "p95": 372.462691,
                    "p99": 372.462691,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 177.977085,
                    "min": 134.00486,
                    "p50": 170.357359,
                    "p95": 177.977085,
                    "p99": 177.977085,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 222.73047799999998,
                    "min": 177.23872799999998,
                    "p50": 216.40956599999998,
                    "p95": 222.73047799999998,
                    "p99": 222.73047799999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 493.813806,
                    "min": 441.17443599999996,
                    "p50": 473.44429599999995,
                    "p95": 493.813806,
                    "p99": 493.813806,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 314.75987,
                    "min": 264.577182,
                    "p50": 275.477491,
                    "p95": 314.75987,
                    "p99": 314.75987,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 947.717757,
                    "min": 876.7320599999999,
                    "p50": 915.889024,
                    "p95": 947.717757,
                    "p99": 947.717757,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 266.326162,
                    "min": 221.960655,
                    "p50": 251.54225499999998,
                    "p95": 266.326162,
                    "p99": 266.326162,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 548.979467,
                    "min": 509.19242399999996,
                    "p50": 516.9132079999999,
                    "p95": 548.979467,
                    "p99": 548.979467,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 408.18158,
                    "min": 348.165589,
                    "p50": 387.462074,
                    "p95": 408.18158,
                    "p99": 408.18158,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 590.566167,
                    "min": 524.459253,
                    "p50": 569.534709,
                    "p95": 590.566167,
                    "p99": 590.566167,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 622.705863,
                    "min": 567.8570569999999,
                    "p50": 590.2088739999999,
                    "p95": 622.705863,
                    "p99": 622.705863,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1224.7061589999998,
                    "min": 759.7114359999999,
                    "p50": 825.574516,
                    "p95": 1224.7061589999998,
                    "p99": 1224.7061589999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 696.230552,
                    "min": 609.846459,
                    "p50": 637.7854159999999,
                    "p95": 696.230552,
                    "p99": 696.230552,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 447.42346399999997,
                    "min": 407.668548,
                    "p50": 423.72851399999996,
                    "p95": 447.42346399999997,
                    "p99": 447.42346399999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.85849299999998,
                    "min": 145.444624,
                    "p50": 173.415176,
                    "p95": 185.85849299999998,
                    "p99": 185.85849299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 592.154581,
                    "min": 546.71485,
                    "p50": 575.357362,
                    "p95": 592.154581,
                    "p99": 592.154581,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 437.72052199999996,
                    "min": 391.471043,
                    "p50": 412.267167,
                    "p95": 437.72052199999996,
                    "p99": 437.72052199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 368.734248,
                    "min": 320.79116899999997,
                    "p50": 339.848545,
                    "p95": 368.734248,
                    "p99": 368.734248,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 269.583402,
                    "min": 216.234387,
                    "p50": 245.19631099999998,
                    "p95": 269.583402,
                    "p99": 269.583402,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.04097299999998,
                    "min": 110.18340699999999,
                    "p50": 138.179384,
                    "p95": 150.04097299999998,
                    "p99": 150.04097299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.099292,
                    "min": 180.401831,
                    "p50": 213.125353,
                    "p95": 223.099292,
                    "p99": 223.099292,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 551.004149,
                    "min": 498.643394,
                    "p50": 536.5066939999999,
                    "p95": 551.004149,
                    "p99": 551.004149,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 677.7569,
                    "min": 625.056792,
                    "p50": 637.632561,
                    "p95": 677.7569,
                    "p99": 677.7569,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 296.714618,
                    "min": 251.86157599999999,
                    "p50": 290.700763,
                    "p95": 296.714618,
                    "p99": 296.714618,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.71725599999996,
                    "min": 357.427434,
                    "p50": 388.456806,
                    "p95": 411.71725599999996,
                    "p99": 411.71725599999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 766.6184579999999,
                    "min": 709.882788,
                    "p50": 751.89906,
                    "p95": 766.6184579999999,
                    "p99": 766.6184579999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 479.983258,
                    "min": 429.25794199999996,
                    "p50": 455.85044999999997,
                    "p95": 479.983258,
                    "p99": 479.983258,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 332.31805499999996,
                    "min": 289.414892,
                    "p50": 322.64151,
                    "p95": 332.31805499999996,
                    "p99": 332.31805499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 511.838824,
                    "min": 464.00109299999997,
                    "p50": 503.982899,
                    "p95": 511.838824,
                    "p99": 511.838824,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1278.586898,
                    "min": 1221.2412669999999,
                    "p50": 1246.4098589999999,
                    "p95": 1278.586898,
                    "p99": 1278.586898,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 700.420318,
                    "min": 656.16148,
                    "p50": 676.039353,
                    "p95": 700.420318,
                    "p99": 700.420318,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 858.4007449999999,
                    "min": 829.921698,
                    "p50": 841.6101769999999,
                    "p95": 858.4007449999999,
                    "p99": 858.4007449999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 936.054625,
                    "min": 900.4658119999999,
                    "p50": 913.348674,
                    "p95": 936.054625,
                    "p99": 936.054625,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1201.291243,
                    "min": 1160.194182,
                    "p50": 1184.7862499999999,
                    "p95": 1201.291243,
                    "p99": 1201.291243,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1115.530156,
                    "min": 1058.7827519999998,
                    "p50": 1104.111197,
                    "p95": 1115.530156,
                    "p99": 1115.530156,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 373.990882,
                    "min": 326.93123099999997,
                    "p50": 368.116063,
                    "p95": 373.990882,
                    "p99": 373.990882,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 786.577225,
                    "min": 740.4866049999999,
                    "p50": 752.3535489999999,
                    "p95": 786.577225,
                    "p99": 786.577225,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1024.942298,
                    "min": 987.073354,
                    "p50": 1003.488476,
                    "p95": 1024.942298,
                    "p99": 1024.942298,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1500.4229679999999,
                    "min": 1429.615335,
                    "p50": 1463.538889,
                    "p95": 1500.4229679999999,
                    "p99": 1500.4229679999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 459.639407,
                    "min": 419.972079,
                    "p50": 449.862262,
                    "p95": 459.639407,
                    "p99": 459.639407,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 623.428221,
                    "min": 571.677632,
                    "p50": 610.916436,
                    "p95": 623.428221,
                    "p99": 623.428221,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 287.57208499999996,
                    "min": 249.14212099999997,
                    "p50": 276.032004,
                    "p95": 287.57208499999996,
                    "p99": 287.57208499999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 536.932927,
                    "min": 490.81287899999995,
                    "p50": 499.315901,
                    "p95": 536.932927,
                    "p99": 536.932927,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1691.149725,
                    "min": 1642.373386,
                    "p50": 1662.8484079999998,
                    "p95": 1691.149725,
                    "p99": 1691.149725,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1685.464037,
                    "min": 1625.8955119999998,
                    "p50": 1674.160482,
                    "p95": 1685.464037,
                    "p99": 1685.464037,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1192.375384,
                    "min": 1137.8388459999999,
                    "p50": 1186.573879,
                    "p95": 1192.375384,
                    "p99": 1192.375384,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1034.721991,
                    "min": 988.206049,
                    "p50": 1027.553127,
                    "p95": 1034.721991,
                    "p99": 1034.721991,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 783.1409,
                    "min": 743.918507,
                    "p50": 771.730827,
                    "p95": 783.1409,
                    "p99": 783.1409,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 704.991102,
                    "min": 653.73779,
                    "p50": 665.530502,
                    "p95": 704.991102,
                    "p99": 704.991102,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 535.256629,
                    "min": 492.847587,
                    "p50": 531.37582,
                    "p95": 535.256629,
                    "p99": 535.256629,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1105.539225,
                    "min": 1054.850027,
                    "p50": 1087.969607,
                    "p95": 1105.539225,
                    "p99": 1105.539225,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 376.183225,
                    "min": 329.753286,
                    "p50": 367.196262,
                    "p95": 376.183225,
                    "p99": 376.183225,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 948.441378,
                    "min": 902.8084329999999,
                    "p50": 941.342804,
                    "p95": 948.441378,
                    "p99": 948.441378,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 451.817328,
                    "min": 412.515793,
                    "p50": 444.83210199999996,
                    "p95": 451.817328,
                    "p99": 451.817328,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1491.954377,
                    "min": 1433.0560799999998,
                    "p50": 1468.251832,
                    "p95": 1491.954377,
                    "p99": 1491.954377,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 289.530357,
                    "min": 249.641144,
                    "p50": 274.46833599999997,
                    "p95": 289.530357,
                    "p99": 289.530357,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 613.018726,
                    "min": 577.874916,
                    "p50": 581.168061,
                    "p95": 613.018726,
                    "p99": 613.018726,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1272.676019,
                    "min": 1218.68058,
                    "p50": 1241.122545,
                    "p95": 1272.676019,
                    "p99": 1272.676019,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 870.726218,
                    "min": 823.618975,
                    "p50": 849.512215,
                    "p95": 870.726218,
                    "p99": 870.726218,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 948.810035,
                    "min": 893.5884619999999,
                    "p50": 946.367987,
                    "p95": 948.810035,
                    "p99": 948.810035,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 543.252644,
                    "min": 492.270274,
                    "p50": 501.26901899999996,
                    "p95": 543.252644,
                    "p99": 543.252644,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 454.99502099999995,
                    "min": 411.965935,
                    "p50": 417.23536099999995,
                    "p95": 454.99502099999995,
                    "p99": 454.99502099999995,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 854.2474599999999,
                    "min": 822.5545149999999,
                    "p50": 839.2821779999999,
                    "p95": 854.2474599999999,
                    "p99": 854.2474599999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1684.77866,
                    "min": 1630.216807,
                    "p50": 1668.8080109999999,
                    "p95": 1684.77866,
                    "p99": 1684.77866,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 374.34283899999997,
                    "min": 331.251201,
                    "p50": 369.456599,
                    "p95": 374.34283899999997,
                    "p99": 374.34283899999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 615.8298229999999,
                    "min": 573.76269,
                    "p50": 610.629542,
                    "p95": 615.8298229999999,
                    "p99": 615.8298229999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 294.096007,
                    "min": 252.797541,
                    "p50": 291.274167,
                    "p95": 294.096007,
                    "p99": 294.096007,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1277.7791829999999,
                    "min": 1219.248269,
                    "p50": 1266.95929,
                    "p95": 1277.7791829999999,
                    "p99": 1277.7791829999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1197.05287,
                    "min": 1140.3885539999999,
                    "p50": 1181.290508,
                    "p95": 1197.05287,
                    "p99": 1197.05287,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1033.320974,
                    "min": 991.633477,
                    "p50": 1016.66998,
                    "p95": 1033.320974,
                    "p99": 1033.320974,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1116.427209,
                    "min": 1069.834052,
                    "p50": 1112.6482899999999,
                    "p95": 1116.427209,
                    "p99": 1116.427209,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 777.5550549999999,
                    "min": 736.185877,
                    "p50": 768.588799,
                    "p95": 777.5550549999999,
                    "p99": 777.5550549999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1483.531242,
                    "min": 1429.400702,
                    "p50": 1440.226168,
                    "p95": 1483.531242,
                    "p99": 1483.531242,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 691.438186,
                    "min": 659.962769,
                    "p50": 678.398498,
                    "p95": 691.438186,
                    "p99": 691.438186,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 418.35288499999996,
                    "min": 341.87492499999996,
                    "p50": 382.31826,
                    "p95": 418.35288499999996,
                    "p99": 418.35288499999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 227.87311599999998,
                    "min": 184.858569,
                    "p50": 212.19166099999998,
                    "p95": 227.87311599999998,
                    "p99": 227.87311599999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 443.02968999999996,
                    "min": 392.688966,
                    "p50": 430.647246,
                    "p95": 443.02968999999996,
                    "p99": 443.02968999999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 514.087728,
                    "min": 474.016283,
                    "p50": 498.791435,
                    "p95": 514.087728,
                    "p99": 514.087728,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 121.566848,
                    "min": 81.61370099999999,
                    "p50": 116.893401,
                    "p95": 121.566848,
                    "p99": 121.566848,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 356.910377,
                    "min": 318.25699199999997,
                    "p50": 348.470534,
                    "p95": 356.910377,
                    "p99": 356.910377,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 205.652831,
                    "min": 162.049597,
                    "p50": 189.587057,
                    "p95": 205.652831,
                    "p99": 205.652831,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 150.695239,
                    "min": 106.56188399999999,
                    "p50": 140.225385,
                    "p95": 150.695239,
                    "p99": 150.695239,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 838.889814,
                    "min": 802.2282869999999,
                    "p50": 819.333278,
                    "p95": 838.889814,
                    "p99": 838.889814,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 288.169763,
                    "min": 236.24853299999998,
                    "p50": 249.577259,
                    "p95": 288.169763,
                    "p99": 288.169763,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 333.50648,
                    "min": 283.993741,
                    "p50": 299.368882,
                    "p95": 333.50648,
                    "p99": 333.50648,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 423.245432,
                    "min": 368.579959,
                    "p50": 400.49251699999996,
                    "p95": 423.245432,
                    "p99": 423.245432,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 176.919015,
                    "min": 131.911756,
                    "p50": 138.56795,
                    "p95": 176.919015,
                    "p99": 176.919015,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1378.3827119999999,
                    "min": 1302.9777669999999,
                    "p50": 1358.7574009999998,
                    "p95": 1378.3827119999999,
                    "p99": 1378.3827119999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 579.161403,
                    "min": 518.071093,
                    "p50": 564.551344,
                    "p95": 579.161403,
                    "p99": 579.161403,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 306.356784,
                    "min": 265.06197399999996,
                    "p50": 288.801835,
                    "p95": 306.356784,
                    "p99": 306.356784,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 257.964482,
                    "min": 208.131149,
                    "p50": 221.654301,
                    "p95": 257.964482,
                    "p99": 257.964482,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1178.8208419999999,
                    "min": 1062.784754,
                    "p50": 1096.6122229999999,
                    "p95": 1178.8208419999999,
                    "p99": 1178.8208419999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 810.084708,
                    "min": 763.49743,
                    "p50": 786.9992639999999,
                    "p95": 810.084708,
                    "p99": 810.084708,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 280.282107,
                    "min": 236.59344299999998,
                    "p50": 259.740079,
                    "p95": 280.282107,
                    "p99": 280.282107,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 555.643831,
                    "min": 512.048765,
                    "p50": 535.624152,
                    "p95": 555.643831,
                    "p99": 555.643831,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 393.35007199999995,
                    "min": 350.50302999999997,
                    "p50": 380.054124,
                    "p95": 393.35007199999995,
                    "p99": 393.35007199999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 433.18994899999996,
                    "min": 388.52144499999997,
                    "p50": 407.62618799999996,
                    "p95": 433.18994899999996,
                    "p99": 433.18994899999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.100391,
                    "min": 120.168369,
                    "p50": 145.18107999999998,
                    "p95": 148.100391,
                    "p99": 148.100391,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 464.870745,
                    "min": 423.905192,
                    "p50": 452.043844,
                    "p95": 464.870745,
                    "p99": 464.870745,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 236.29613999999998,
                    "min": 195.791337,
                    "p50": 225.863067,
                    "p95": 236.29613999999998,
                    "p99": 236.29613999999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 594.60992,
                    "min": 543.428044,
                    "p50": 561.462856,
                    "p95": 594.60992,
                    "p99": 594.60992,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 348.52232699999996,
                    "min": 311.876088,
                    "p50": 317.869378,
                    "p95": 348.52232699999996,
                    "p99": 348.52232699999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 724.989689,
                    "min": 674.8256359999999,
                    "p50": 690.539914,
                    "p95": 724.989689,
                    "p99": 724.989689,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 510.32147899999995,
                    "min": 468.186176,
                    "p50": 494.28201099999995,
                    "p95": 510.32147899999995,
                    "p99": 510.32147899999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 301.45009799999997,
                    "min": 268.483202,
                    "p50": 279.150537,
                    "p95": 301.45009799999997,
                    "p99": 301.45009799999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.10634299999998,
                    "min": 156.80724999999998,
                    "p50": 161.650934,
                    "p95": 198.10634299999998,
                    "p99": 198.10634299999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 628.4599479999999,
                    "min": 583.2250399999999,
                    "p50": 614.895276,
                    "p95": 628.4599479999999,
                    "p99": 628.4599479999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1221.4972579999999,
                    "min": 1154.316032,
                    "p50": 1190.365775,
                    "p95": 1221.4972579999999,
                    "p99": 1221.4972579999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 256.496958,
                    "min": 215.379808,
                    "p50": 241.720608,
                    "p95": 256.496958,
                    "p99": 256.496958,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.11605,
                    "min": 239.177549,
                    "p50": 263.109736,
                    "p95": 278.11605,
                    "p99": 278.11605,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 154.380198,
                    "min": 121.856274,
                    "p50": 122.93216699999999,
                    "p95": 154.380198,
                    "p99": 154.380198,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 230.954277,
                    "min": 190.457402,
                    "p50": 213.81303,
                    "p95": 230.954277,
                    "p99": 230.954277,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 372.274438,
                    "min": 328.119215,
                    "p50": 359.779092,
                    "p95": 372.274438,
                    "p99": 372.274438,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 110.907946,
                    "min": 73.231876,
                    "p50": 98.652023,
                    "p95": 110.907946,
                    "p99": 110.907946,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 752.5468159999999,
                    "min": 712.964852,
                    "p50": 743.941479,
                    "p95": 752.5468159999999,
                    "p99": 752.5468159999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 302.758544,
                    "min": 260.315743,
                    "p50": 299.292832,
                    "p95": 302.758544,
                    "p99": 302.758544,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 351.857719,
                    "min": 308.01559199999997,
                    "p50": 338.933943,
                    "p95": 351.857719,
                    "p99": 351.857719,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 184.236946,
                    "min": 141.942928,
                    "p50": 167.52195999999998,
                    "p95": 184.236946,
                    "p99": 184.236946,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 464.215554,
                    "min": 417.67168999999996,
                    "p50": 449.495079,
                    "p95": 464.215554,
                    "p99": 464.215554,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 327.62321,
                    "min": 284.42998,
                    "p50": 317.373805,
                    "p95": 327.62321,
                    "p99": 327.62321,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 207.254795,
                    "min": 186.0575,
                    "p50": 204.614006,
                    "p95": 207.254795,
                    "p99": 207.254795,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 976.262708,
                    "min": 937.1599329999999,
                    "p50": 958.609423,
                    "p95": 976.262708,
                    "p99": 976.262708,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 138.5596,
                    "min": 96.936691,
                    "p50": 124.26727,
                    "p95": 138.5596,
                    "p99": 138.5596,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 398.678753,
                    "min": 355.050092,
                    "p50": 380.863835,
                    "p95": 398.678753,
                    "p99": 398.678753,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 521.3226179999999,
                    "min": 470.065117,
                    "p50": 480.342938,
                    "p95": 521.3226179999999,
                    "p99": 521.3226179999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 660.902468,
                    "min": 604.4309509999999,
                    "p50": 643.7990159999999,
                    "p95": 660.902468,
                    "p99": 660.902468,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 556.807823,
                    "min": 495.67254699999995,
                    "p50": 531.141608,
                    "p95": 556.807823,
                    "p99": 556.807823,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 951.7684009999999,
                    "min": 814.973403,
                    "p50": 849.958799,
                    "p95": 951.7684009999999,
                    "p99": 951.7684009999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 784.22066,
                    "min": 708.041465,
                    "p50": 742.7339599999999,
                    "p95": 784.22066,
                    "p99": 784.22066,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 604.932986,
                    "min": 548.599927,
                    "p50": 565.452911,
                    "p95": 604.932986,
                    "p99": 604.932986,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 737.536314,
                    "min": 651.784738,
                    "p50": 698.269494,
                    "p95": 737.536314,
                    "p99": 737.536314,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 838.926657,
                    "min": 763.015061,
                    "p50": 799.0981539999999,
                    "p95": 838.926657,
                    "p99": 838.926657,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.742481,
                    "min": 202.103375,
                    "p50": 207.05315399999998,
                    "p95": 244.742481,
                    "p99": 244.742481,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.607507,
                    "min": 247.031747,
                    "p50": 253.123268,
                    "p95": 288.607507,
                    "p99": 288.607507,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 359.591789,
                    "min": 265.630786,
                    "p50": 300.59833599999996,
                    "p95": 359.591789,
                    "p99": 359.591789,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1137.996917,
                    "min": 1044.897233,
                    "p50": 1107.064741,
                    "p95": 1137.996917,
                    "p99": 1137.996917,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 404.209303,
                    "min": 354.376135,
                    "p50": 356.893898,
                    "p95": 404.209303,
                    "p99": 404.209303,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1020.8081559999999,
                    "min": 974.357503,
                    "p50": 977.982712,
                    "p95": 1020.8081559999999,
                    "p99": 1020.8081559999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 503.28281799999996,
                    "min": 439.637004,
                    "p50": 471.50652099999996,
                    "p95": 503.28281799999996,
                    "p99": 503.28281799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 480.779764,
                    "min": 388.971674,
                    "p50": 444.247864,
                    "p95": 480.779764,
                    "p99": 480.779764,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.104561,
                    "min": 149.86782499999998,
                    "p50": 154.11374899999998,
                    "p95": 170.104561,
                    "p99": 170.104561,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 243.58662999999999,
                    "min": 217.47421,
                    "p50": 235.832554,
                    "p95": 243.58662999999999,
                    "p99": 243.58662999999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 297.90784199999996,
                    "min": 266.95514,
                    "p50": 283.770537,
                    "p95": 297.90784199999996,
                    "p99": 297.90784199999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 118.66537,
                    "min": 97.435566,
                    "p50": 101.89631299999999,
                    "p95": 118.66537,
                    "p99": 118.66537,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 176.30881,
                    "min": 169.202661,
                    "p50": 172.864063,
                    "p95": 176.30881,
                    "p99": 176.30881,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 284.645326,
                    "min": 251.268499,
                    "p50": 276.241113,
                    "p95": 284.645326,
                    "p99": 284.645326,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.59527399999999,
                    "min": 72.04901199999999,
                    "p50": 89.185321,
                    "p95": 96.59527399999999,
                    "p99": 96.59527399999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 151.80370299999998,
                    "min": 102.11085299999999,
                    "p50": 130.54244,
                    "p95": 151.80370299999998,
                    "p99": 151.80370299999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 175.210501,
                    "min": 120.432189,
                    "p50": 143.88147899999998,
                    "p95": 175.210501,
                    "p99": 175.210501,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 448.249799,
                    "min": 367.55056099999996,
                    "p50": 409.757821,
                    "p95": 448.249799,
                    "p99": 448.249799,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 550.128911,
                    "min": 466.769057,
                    "p50": 517.646294,
                    "p95": 550.128911,
                    "p99": 550.128911,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 211.08641699999998,
                    "min": 180.08318799999998,
                    "p50": 192.249283,
                    "p95": 211.08641699999998,
                    "p99": 211.08641699999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1349.0995269999999,
                    "min": 1190.03876,
                    "p50": 1244.091246,
                    "p95": 1349.0995269999999,
                    "p99": 1349.0995269999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 72.595984,
                    "min": 51.335198999999996,
                    "p50": 65.82454299999999,
                    "p95": 72.595984,
                    "p99": 72.595984,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.06311199999999,
                    "min": 99.335523,
                    "p50": 113.385082,
                    "p95": 124.06311199999999,
                    "p99": 124.06311199999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 693.174903,
                    "min": 594.287005,
                    "p50": 634.6205,
                    "p95": 693.174903,
                    "p99": 693.174903,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 536.0584729999999,
                    "min": 474.673723,
                    "p50": 498.670366,
                    "p95": 536.0584729999999,
                    "p99": 536.0584729999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 493.072366,
                    "min": 402.53967,
                    "p50": 445.559938,
                    "p95": 493.072366,
                    "p99": 493.072366,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 618.3245549999999,
                    "min": 453.642882,
                    "p50": 502.89739,
                    "p95": 618.3245549999999,
                    "p99": 618.3245549999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 301.194502,
                    "min": 217.725854,
                    "p50": 252.442017,
                    "p95": 301.194502,
                    "p99": 301.194502,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1321.473071,
                    "min": 1232.829699,
                    "p50": 1292.722017,
                    "p95": 1321.473071,
                    "p99": 1321.473071,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 881.591381,
                    "min": 745.1526759999999,
                    "p50": 774.179007,
                    "p95": 881.591381,
                    "p99": 881.591381,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 608.227253,
                    "min": 568.40689,
                    "p50": 595.386754,
                    "p95": 608.227253,
                    "p99": 608.227253,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 606.93195,
                    "min": 514.276047,
                    "p50": 572.55597,
                    "p95": 606.93195,
                    "p99": 606.93195,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 334.370415,
                    "min": 325.138895,
                    "p50": 326.928133,
                    "p95": 334.370415,
                    "p99": 334.370415,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 898.485813,
                    "min": 827.940387,
                    "p50": 837.400087,
                    "p95": 898.485813,
                    "p99": 898.485813,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.266412,
                    "min": 161.977186,
                    "p50": 170.202499,
                    "p95": 180.266412,
                    "p99": 180.266412,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 663.6902739999999,
                    "min": 635.8836729999999,
                    "p50": 642.4334699999999,
                    "p95": 663.6902739999999,
                    "p99": 663.6902739999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 378.16924,
                    "min": 341.74832599999996,
                    "p50": 361.833141,
                    "p95": 378.16924,
                    "p99": 378.16924,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 342.82054899999997,
                    "min": 279.74823,
                    "p50": 292.074832,
                    "p95": 342.82054899999997,
                    "p99": 342.82054899999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 212.102429,
                    "min": 168.12248699999998,
                    "p50": 207.444063,
                    "p95": 212.102429,
                    "p99": 212.102429,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 607.8301809999999,
                    "min": 599.640315,
                    "p50": 601.4373909999999,
                    "p95": 607.8301809999999,
                    "p99": 607.8301809999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1166.007145,
                    "min": 1116.402206,
                    "p50": 1137.780448,
                    "p95": 1166.007145,
                    "p99": 1166.007145,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 238.710795,
                    "min": 205.186767,
                    "p50": 236.088756,
                    "p95": 238.710795,
                    "p99": 238.710795,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 845.3556689999999,
                    "min": 776.476245,
                    "p50": 791.771337,
                    "p95": 845.3556689999999,
                    "p99": 845.3556689999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 891.501226,
                    "min": 836.1579459999999,
                    "p50": 849.574563,
                    "p95": 891.501226,
                    "p99": 891.501226,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 356.45365599999997,
                    "min": 288.46641,
                    "p50": 301.92060699999996,
                    "p95": 356.45365599999997,
                    "p99": 356.45365599999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 803.826104,
                    "min": 711.684145,
                    "p50": 730.592815,
                    "p95": 803.826104,
                    "p99": 803.826104,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1066.896915,
                    "min": 968.964521,
                    "p50": 983.7056779999999,
                    "p95": 1066.896915,
                    "p99": 1066.896915,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 461.865172,
                    "min": 409.83252999999996,
                    "p50": 417.538758,
                    "p95": 461.865172,
                    "p99": 461.865172,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 705.7846949999999,
                    "min": 603.547598,
                    "p50": 606.633975,
                    "p95": 705.7846949999999,
                    "p99": 705.7846949999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 603.958348,
                    "min": 537.582488,
                    "p50": 555.5897739999999,
                    "p95": 603.958348,
                    "p99": 603.958348,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1318.553584,
                    "min": 1267.781238,
                    "p50": 1278.789165,
                    "p95": 1318.553584,
                    "p99": 1318.553584,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 728.181173,
                    "min": 648.8670179999999,
                    "p50": 679.6794189999999,
                    "p95": 728.181173,
                    "p99": 728.181173,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 608.341512,
                    "min": 475.065841,
                    "p50": 485.7496,
                    "p95": 608.341512,
                    "p99": 608.341512,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 409.671518,
                    "min": 352.679959,
                    "p50": 357.142808,
                    "p95": 409.671518,
                    "p99": 409.671518,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 943.333083,
                    "min": 894.799226,
                    "p50": 910.0802779999999,
                    "p95": 943.333083,
                    "p99": 943.333083,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 128.74623599999998,
                    "min": 113.59638799999999,
                    "p50": 122.36193499999999,
                    "p95": 128.74623599999998,
                    "p99": 128.74623599999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 36.135217,
                    "min": 28.262594,
                    "p50": 30.521062999999998,
                    "p95": 36.135217,
                    "p99": 36.135217,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 278.18206,
                    "min": 182.069922,
                    "p50": 221.92478799999998,
                    "p95": 278.18206,
                    "p99": 278.18206,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 450.204295,
                    "min": 370.816091,
                    "p50": 417.47684499999997,
                    "p95": 450.204295,
                    "p99": 450.204295,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 106.742426,
                    "min": 54.575548999999995,
                    "p50": 93.970309,
                    "p95": 106.742426,
                    "p99": 106.742426,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 46.455881999999995,
                    "min": 44.122170999999994,
                    "p50": 45.058856,
                    "p95": 46.455881999999995,
                    "p99": 46.455881999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 213.775534,
                    "min": 164.963572,
                    "p50": 188.991382,
                    "p95": 213.775534,
                    "p99": 213.775534,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 40.517438,
                    "min": 34.537171,
                    "p50": 37.034523,
                    "p95": 40.517438,
                    "p99": 40.517438,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 49.033725999999994,
                    "min": 41.606626999999996,
                    "p50": 44.637934,
                    "p95": 49.033725999999994,
                    "p99": 49.033725999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 121.70796899999999,
                    "min": 105.471334,
                    "p50": 110.341657,
                    "p95": 121.70796899999999,
                    "p99": 121.70796899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 190.08922199999998,
                    "min": 142.37729199999998,
                    "p50": 157.797103,
                    "p95": 190.08922199999998,
                    "p99": 190.08922199999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 44.990334999999995,
                    "min": 26.480513,
                    "p50": 27.219552999999998,
                    "p95": 44.990334999999995,
                    "p99": 44.990334999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 82.911435,
                    "min": 44.787352,
                    "p50": 77.993146,
                    "p95": 82.911435,
                    "p99": 82.911435,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 116.039903,
                    "min": 90.20559399999999,
                    "p50": 98.828659,
                    "p95": 116.039903,
                    "p99": 116.039903,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 63.717105,
                    "min": 51.140145999999994,
                    "p50": 53.253336999999995,
                    "p95": 63.717105,
                    "p99": 63.717105,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 63.000873999999996,
                    "min": 57.548629,
                    "p50": 59.895115,
                    "p95": 63.000873999999996,
                    "p99": 63.000873999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 100.00594099999999,
                    "min": 87.192606,
                    "p50": 91.43127799999999,
                    "p95": 100.00594099999999,
                    "p99": 100.00594099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 76.02579,
                    "min": 62.031386999999995,
                    "p50": 65.23687799999999,
                    "p95": 76.02579,
                    "p99": 76.02579,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 84.526089,
                    "min": 72.259075,
                    "p50": 82.32477899999999,
                    "p95": 84.526089,
                    "p99": 84.526089,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 322.174196,
                    "min": 314.433809,
                    "p50": 316.843642,
                    "p95": 322.174196,
                    "p99": 322.174196,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 205.600631,
                    "min": 193.66064599999999,
                    "p50": 201.359882,
                    "p95": 205.600631,
                    "p99": 205.600631,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 513.698348,
                    "min": 458.70548099999996,
                    "p50": 477.02539299999995,
                    "p95": 513.698348,
                    "p99": 513.698348,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 235.55720399999998,
                    "min": 228.159144,
                    "p50": 232.306944,
                    "p95": 235.55720399999998,
                    "p99": 235.55720399999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 423.258134,
                    "min": 377.733391,
                    "p50": 381.310189,
                    "p95": 423.258134,
                    "p99": 423.258134,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1600.238099,
                    "min": 1521.6569709999999,
                    "p50": 1560.7394809999998,
                    "p95": 1600.238099,
                    "p99": 1600.238099,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 383.78817999999995,
                    "min": 345.285939,
                    "p50": 351.91465,
                    "p95": 383.78817999999995,
                    "p99": 383.78817999999995,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 447.395451,
                    "min": 434.571301,
                    "p50": 442.820886,
                    "p95": 447.395451,
                    "p99": 447.395451,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 583.3350909999999,
                    "min": 563.812201,
                    "p50": 580.5602729999999,
                    "p95": 583.3350909999999,
                    "p99": 583.3350909999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 317.080675,
                    "min": 284.960665,
                    "p50": 294.39212599999996,
                    "p95": 317.080675,
                    "p99": 317.080675,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1348.390774,
                    "min": 1237.655518,
                    "p50": 1261.3497479999999,
                    "p95": 1348.390774,
                    "p99": 1348.390774,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 271.539107,
                    "min": 259.841127,
                    "p50": 262.661345,
                    "p95": 271.539107,
                    "p99": 271.539107,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 447.188625,
                    "min": 406.21119999999996,
                    "p50": 424.851521,
                    "p95": 447.188625,
                    "p99": 447.188625,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 996.219983,
                    "min": 927.082949,
                    "p50": 953.072335,
                    "p95": 996.219983,
                    "p99": 996.219983,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.865531,
                    "min": 159.634086,
                    "p50": 172.181029,
                    "p95": 198.865531,
                    "p99": 198.865531,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3082.940736,
                    "min": 3015.5474179999997,
                    "p50": 3059.824831,
                    "p95": 3082.940736,
                    "p99": 3082.940736,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 147.83479,
                    "min": 141.52245,
                    "p50": 142.460576,
                    "p95": 147.83479,
                    "p99": 147.83479,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 537.2235929999999,
                    "min": 495.81077,
                    "p50": 506.177235,
                    "p95": 537.2235929999999,
                    "p99": 537.2235929999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 666.022378,
                    "min": 639.4463529999999,
                    "p50": 652.739162,
                    "p95": 666.022378,
                    "p99": 666.022378,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 46.926123,
                    "min": 34.075054,
                    "p50": 35.137115,
                    "p95": 46.926123,
                    "p99": 46.926123,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 52.194216,
                    "min": 41.991924999999995,
                    "p50": 46.724638,
                    "p95": 52.194216,
                    "p99": 52.194216,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.478865,
                    "min": 26.590559,
                    "p50": 26.975709,
                    "p95": 27.478865,
                    "p99": 27.478865,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 42.349818,
                    "min": 38.433973,
                    "p50": 39.69565,
                    "p95": 42.349818,
                    "p99": 42.349818,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 59.680718999999996,
                    "min": 47.475536,
                    "p50": 53.212342,
                    "p95": 59.680718999999996,
                    "p99": 59.680718999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 143.66581499999998,
                    "min": 112.564247,
                    "p50": 117.522058,
                    "p95": 143.66581499999998,
                    "p99": 143.66581499999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 60.766054,
                    "min": 55.214894,
                    "p50": 56.754352,
                    "p95": 60.766054,
                    "p99": 60.766054,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 35.214863,
                    "min": 26.373485,
                    "p50": 34.219842,
                    "p95": 35.214863,
                    "p99": 35.214863,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 190.25565999999998,
                    "min": 139.009719,
                    "p50": 175.752601,
                    "p95": 190.25565999999998,
                    "p99": 190.25565999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 44.762231,
                    "min": 28.05817,
                    "p50": 37.404074,
                    "p95": 44.762231,
                    "p99": 44.762231,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.286555,
                    "min": 26.285289,
                    "p50": 27.121764,
                    "p95": 29.286555,
                    "p99": 29.286555,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 60.772619,
                    "min": 31.593244,
                    "p50": 52.633385,
                    "p95": 60.772619,
                    "p99": 60.772619,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 33.929638,
                    "min": 26.790423,
                    "p50": 27.436577,
                    "p95": 33.929638,
                    "p99": 33.929638,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 76.171279,
                    "min": 62.149846,
                    "p50": 65.71632,
                    "p95": 76.171279,
                    "p99": 76.171279,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 338.585242,
                    "min": 246.837516,
                    "p50": 307.14608699999997,
                    "p95": 338.585242,
                    "p99": 338.585242,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 32.889409,
                    "min": 29.057340999999997,
                    "p50": 32.330391999999996,
                    "p95": 32.889409,
                    "p99": 32.889409,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 151.49811699999998,
                    "min": 116.714625,
                    "p50": 132.73412299999998,
                    "p95": 151.49811699999998,
                    "p99": 151.49811699999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 84.55737099999999,
                    "min": 45.683617999999996,
                    "p50": 79.443105,
                    "p95": 84.55737099999999,
                    "p99": 84.55737099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 47.833127,
                    "min": 45.565148,
                    "p50": 47.231372,
                    "p95": 47.833127,
                    "p99": 47.833127,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 81.681348,
                    "min": 63.891003,
                    "p50": 69.00701,
                    "p95": 81.681348,
                    "p99": 81.681348,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 30.637078,
                    "min": 22.131083,
                    "p50": 26.916079999999997,
                    "p95": 30.637078,
                    "p99": 30.637078,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 30.920752999999998,
                    "min": 25.092551,
                    "p50": 26.933861,
                    "p95": 30.920752999999998,
                    "p99": 30.920752999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 30.342616,
                    "min": 23.361998,
                    "p50": 26.829583,
                    "p95": 30.342616,
                    "p99": 30.342616,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.960881999999998,
                    "min": 26.424333999999998,
                    "p50": 27.02065,
                    "p95": 27.960881999999998,
                    "p99": 27.960881999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.619671999999998,
                    "min": 24.937676999999997,
                    "p50": 26.723917,
                    "p95": 27.619671999999998,
                    "p99": 27.619671999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.190286,
                    "min": 24.815358999999997,
                    "p50": 26.675758,
                    "p95": 28.190286,
                    "p99": 28.190286,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.97579,
                    "min": 26.234388,
                    "p50": 26.667268999999997,
                    "p95": 26.97579,
                    "p99": 26.97579,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 30.660169,
                    "min": 25.013084,
                    "p50": 26.776525,
                    "p95": 30.660169,
                    "p99": 30.660169,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 65.95209,
                    "min": 56.166646,
                    "p50": 60.775745,
                    "p95": 65.95209,
                    "p99": 65.95209,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 28.659905,
                    "min": 25.163657999999998,
                    "p50": 26.868553,
                    "p95": 28.659905,
                    "p99": 28.659905,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 52.852796999999995,
                    "min": 42.420086,
                    "p50": 43.303551999999996,
                    "p95": 52.852796999999995,
                    "p99": 52.852796999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 32.618476,
                    "min": 30.287277,
                    "p50": 32.216688,
                    "p95": 32.618476,
                    "p99": 32.618476,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 29.045651999999997,
                    "min": 27.085115,
                    "p50": 28.709683,
                    "p95": 29.045651999999997,
                    "p99": 29.045651999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.809416,
                    "min": 25.554859,
                    "p50": 27.024759,
                    "p95": 27.809416,
                    "p99": 27.809416,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 139.81841,
                    "min": 109.74412799999999,
                    "p50": 118.37613499999999,
                    "p95": 139.81841,
                    "p99": 139.81841,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 28.575754999999997,
                    "min": 26.561049999999998,
                    "p50": 26.810803999999997,
                    "p95": 28.575754999999997,
                    "p99": 28.575754999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.678348999999997,
                    "min": 26.232699,
                    "p50": 26.735215,
                    "p95": 27.678348999999997,
                    "p99": 27.678348999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.715231,
                    "min": 21.870787999999997,
                    "p50": 26.95368,
                    "p95": 27.715231,
                    "p99": 27.715231,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 338.409405,
                    "min": 311.184659,
                    "p50": 326.57795799999997,
                    "p95": 338.409405,
                    "p99": 338.409405,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 137.346968,
                    "min": 125.91085299999999,
                    "p50": 133.078621,
                    "p95": 137.346968,
                    "p99": 137.346968,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2823.67431,
                    "min": 2754.6133449999998,
                    "p50": 2794.459706,
                    "p95": 2823.67431,
                    "p99": 2823.67431,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 609.7760589999999,
                    "min": 587.816643,
                    "p50": 606.186922,
                    "p95": 609.7760589999999,
                    "p99": 609.7760589999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 282.45151999999996,
                    "min": 241.91002799999998,
                    "p50": 243.92445999999998,
                    "p95": 282.45151999999996,
                    "p99": 282.45151999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 200.040559,
                    "min": 153.080275,
                    "p50": 164.19538599999998,
                    "p95": 200.040559,
                    "p99": 200.040559,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 236.42759099999998,
                    "min": 199.380358,
                    "p50": 216.391102,
                    "p95": 236.42759099999998,
                    "p99": 236.42759099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 897.677777,
                    "min": 864.2127489999999,
                    "p50": 872.849888,
                    "p95": 897.677777,
                    "p99": 897.677777,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 420.99235899999996,
                    "min": 388.651031,
                    "p50": 405.35740499999997,
                    "p95": 420.99235899999996,
                    "p99": 420.99235899999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 393.80116999999996,
                    "min": 339.15164,
                    "p50": 350.72821,
                    "p95": 393.80116999999996,
                    "p99": 393.80116999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1197.155147,
                    "min": 1131.5716069999999,
                    "p50": 1150.497462,
                    "p95": 1197.155147,
                    "p99": 1197.155147,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1467.114967,
                    "min": 1402.3830639999999,
                    "p50": 1410.670885,
                    "p95": 1467.114967,
                    "p99": 1467.114967,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 452.44295,
                    "min": 429.153266,
                    "p50": 439.79600999999997,
                    "p95": 452.44295,
                    "p99": 452.44295,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 198.07402299999998,
                    "min": 168.86013499999999,
                    "p50": 189.482809,
                    "p95": 198.07402299999998,
                    "p99": 198.07402299999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 580.279142,
                    "min": 523.109738,
                    "p50": 530.8847489999999,
                    "p95": 580.279142,
                    "p99": 580.279142,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 325.84838099999996,
                    "min": 295.75387,
                    "p50": 301.290099,
                    "p95": 325.84838099999996,
                    "p99": 325.84838099999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 385.503802,
                    "min": 377.78781699999996,
                    "p50": 380.52883599999996,
                    "p95": 385.503802,
                    "p99": 385.503802,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 486.220337,
                    "min": 451.43474899999995,
                    "p50": 468.282265,
                    "p95": 486.220337,
                    "p99": 486.220337,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 285.022488,
                    "min": 263.199996,
                    "p50": 273.659634,
                    "p95": 285.022488,
                    "p99": 285.022488,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1990.509302,
                    "min": 1874.184298,
                    "p50": 1931.207825,
                    "p95": 1990.509302,
                    "p99": 1990.509302,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 323.45525699999996,
                    "min": 271.85594499999996,
                    "p50": 287.600695,
                    "p95": 323.45525699999996,
                    "p99": 323.45525699999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 649.5246609999999,
                    "min": 580.4051019999999,
                    "p50": 629.2581829999999,
                    "p95": 649.5246609999999,
                    "p99": 649.5246609999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 975.968117,
                    "min": 886.048407,
                    "p50": 911.571818,
                    "p95": 975.968117,
                    "p99": 975.968117,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 389.61195599999996,
                    "min": 347.67592199999996,
                    "p50": 376.80035899999996,
                    "p95": 389.61195599999996,
                    "p99": 389.61195599999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1085.6274799999999,
                    "min": 925.414803,
                    "p50": 1003.295489,
                    "p95": 1085.6274799999999,
                    "p99": 1085.6274799999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 619.374251,
                    "min": 502.89074899999997,
                    "p50": 550.8139679999999,
                    "p95": 619.374251,
                    "p99": 619.374251,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1173.514428,
                    "min": 1096.75814,
                    "p50": 1139.669508,
                    "p95": 1173.514428,
                    "p99": 1173.514428,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 429.05283399999996,
                    "min": 393.713173,
                    "p50": 409.07318399999997,
                    "p95": 429.05283399999996,
                    "p99": 429.05283399999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 754.207318,
                    "min": 632.257062,
                    "p50": 677.500224,
                    "p95": 754.207318,
                    "p99": 754.207318,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2577.9514529999997,
                    "min": 2447.2779299999997,
                    "p50": 2488.344567,
                    "p95": 2577.9514529999997,
                    "p99": 2577.9514529999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 824.329755,
                    "min": 664.9739069999999,
                    "p50": 727.419861,
                    "p95": 824.329755,
                    "p99": 824.329755,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 543.194839,
                    "min": 444.98826499999996,
                    "p50": 497.37384399999996,
                    "p95": 543.194839,
                    "p99": 543.194839,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 866.372517,
                    "min": 762.7035569999999,
                    "p50": 811.651091,
                    "p95": 866.372517,
                    "p99": 866.372517,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 290.24978899999996,
                    "min": 222.11323299999998,
                    "p50": 225.878616,
                    "p95": 290.24978899999996,
                    "p99": 290.24978899999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 927.661447,
                    "min": 810.544573,
                    "p50": 862.64292,
                    "p95": 927.661447,
                    "p99": 927.661447,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1395.013144,
                    "min": 1242.7273,
                    "p50": 1293.1002839999999,
                    "p95": 1395.013144,
                    "p99": 1395.013144,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3174.4532019999997,
                    "min": 3021.263572,
                    "p50": 3128.6383929999997,
                    "p95": 3174.4532019999997,
                    "p99": 3174.4532019999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 290.772556,
                    "min": 246.774586,
                    "p50": 264.857641,
                    "p95": 290.772556,
                    "p99": 290.772556,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 466.89082399999995,
                    "min": 447.83187699999996,
                    "p50": 456.426586,
                    "p95": 466.89082399999995,
                    "p99": 466.89082399999995,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 410.549695,
                    "min": 374.804309,
                    "p50": 388.84335599999997,
                    "p95": 410.549695,
                    "p99": 410.549695,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 757.8572479999999,
                    "min": 709.4017279999999,
                    "p50": 731.234927,
                    "p95": 757.8572479999999,
                    "p99": 757.8572479999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 720.2062559999999,
                    "min": 637.6085439999999,
                    "p50": 663.189394,
                    "p95": 720.2062559999999,
                    "p99": 720.2062559999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 890.9333439999999,
                    "min": 849.592464,
                    "p50": 859.396171,
                    "p95": 890.9333439999999,
                    "p99": 890.9333439999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1080.0806619999998,
                    "min": 1017.026431,
                    "p50": 1063.8701469999999,
                    "p95": 1080.0806619999998,
                    "p99": 1080.0806619999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1022.0009349999999,
                    "min": 910.1586649999999,
                    "p50": 920.663327,
                    "p95": 1022.0009349999999,
                    "p99": 1022.0009349999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 808.388571,
                    "min": 785.262267,
                    "p50": 791.484953,
                    "p95": 808.388571,
                    "p99": 808.388571,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1479.801258,
                    "min": 1351.462075,
                    "p50": 1415.015895,
                    "p95": 1479.801258,
                    "p99": 1479.801258,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 542.891437,
                    "min": 512.9596779999999,
                    "p50": 522.237547,
                    "p95": 542.891437,
                    "p99": 542.891437,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.02812,
                    "min": 310.52050199999996,
                    "p50": 318.717695,
                    "p95": 322.02812,
                    "p99": 322.02812,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1260.680516,
                    "min": 1211.356308,
                    "p50": 1217.508695,
                    "p95": 1260.680516,
                    "p99": 1260.680516,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 643.797423,
                    "min": 587.164145,
                    "p50": 633.623416,
                    "p95": 643.797423,
                    "p99": 643.797423,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1026.599432,
                    "min": 970.9747749999999,
                    "p50": 995.129885,
                    "p95": 1026.599432,
                    "p99": 1026.599432,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.84968799999996,
                    "min": 288.563355,
                    "p50": 297.003466,
                    "p95": 306.84968799999996,
                    "p99": 306.84968799999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 634.853831,
                    "min": 606.977101,
                    "p50": 630.957,
                    "p95": 634.853831,
                    "p99": 634.853831,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 932.8586409999999,
                    "min": 862.7520159999999,
                    "p50": 878.004024,
                    "p95": 932.8586409999999,
                    "p99": 932.8586409999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1746.17185,
                    "min": 1655.7748849999998,
                    "p50": 1694.766291,
                    "p95": 1746.17185,
                    "p99": 1746.17185,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 512.94885,
                    "min": 497.246982,
                    "p50": 507.84160299999996,
                    "p95": 512.94885,
                    "p99": 512.94885,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.09707499999996,
                    "min": 217.362664,
                    "p50": 255.83827399999998,
                    "p95": 259.09707499999996,
                    "p99": 259.09707499999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 226.282299,
                    "min": 175.634585,
                    "p50": 217.39891,
                    "p95": 226.282299,
                    "p99": 226.282299,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 564.6787919999999,
                    "min": 502.816982,
                    "p50": 542.1334439999999,
                    "p95": 564.6787919999999,
                    "p99": 564.6787919999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1343.8376039999998,
                    "min": 1271.5900689999999,
                    "p50": 1277.16561,
                    "p95": 1343.8376039999998,
                    "p99": 1343.8376039999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 828.759924,
                    "min": 766.854962,
                    "p50": 770.84177,
                    "p95": 828.759924,
                    "p99": 828.759924,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 707.370564,
                    "min": 657.028642,
                    "p50": 677.876117,
                    "p95": 707.370564,
                    "p99": 707.370564,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 409.759254,
                    "min": 374.827383,
                    "p50": 383.01062099999996,
                    "p95": 409.759254,
                    "p99": 409.759254,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 511.062344,
                    "min": 457.291908,
                    "p50": 468.11503999999996,
                    "p95": 511.062344,
                    "p99": 511.062344,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.983054,
                    "min": 331.851357,
                    "p50": 339.608317,
                    "p95": 346.983054,
                    "p99": 346.983054,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 245.215611,
                    "min": 163.74726099999998,
                    "p50": 174.938096,
                    "p95": 245.215611,
                    "p99": 245.215611,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 595.27681,
                    "min": 578.458363,
                    "p50": 591.0979619999999,
                    "p95": 595.27681,
                    "p99": 595.27681,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 438.02959899999996,
                    "min": 420.37255999999996,
                    "p50": 427.864946,
                    "p95": 438.02959899999996,
                    "p99": 438.02959899999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 664.099797,
                    "min": 650.492573,
                    "p50": 658.2263419999999,
                    "p95": 664.099797,
                    "p99": 664.099797,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2093.779066,
                    "min": 2015.804285,
                    "p50": 2042.962478,
                    "p95": 2093.779066,
                    "p99": 2093.779066,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4136.603231,
                    "min": 4020.3574529999996,
                    "p50": 4053.7847469999997,
                    "p95": 4136.603231,
                    "p99": 4136.603231,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2300.562723,
                    "min": 2214.313721,
                    "p50": 2275.825847,
                    "p95": 2300.562723,
                    "p99": 2300.562723,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5992.995695,
                    "min": 5899.059969,
                    "p50": 5947.284501,
                    "p95": 5992.995695,
                    "p99": 5992.995695,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1267.830584,
                    "min": 1238.862462,
                    "p50": 1251.982068,
                    "p95": 1267.830584,
                    "p99": 1267.830584,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1885.9438,
                    "min": 1826.1885659999998,
                    "p50": 1848.684031,
                    "p95": 1885.9438,
                    "p99": 1885.9438,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7949.057092999999,
                    "min": 7795.717728,
                    "p50": 7878.180187999999,
                    "p95": 7949.057092999999,
                    "p99": 7949.057092999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1107.562316,
                    "min": 1063.717901,
                    "p50": 1070.826683,
                    "p95": 1107.562316,
                    "p99": 1107.562316,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2697.50151,
                    "min": 2660.9426559999997,
                    "p50": 2671.3246959999997,
                    "p95": 2697.50151,
                    "p99": 2697.50151,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1446.1903539999998,
                    "min": 1431.0317,
                    "p50": 1438.672372,
                    "p95": 1446.1903539999998,
                    "p99": 1446.1903539999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 896.6230479999999,
                    "min": 847.162955,
                    "p50": 872.559402,
                    "p95": 896.6230479999999,
                    "p99": 896.6230479999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3090.19501,
                    "min": 3027.896898,
                    "p50": 3061.872319,
                    "p95": 3090.19501,
                    "p99": 3090.19501,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2904.234774,
                    "min": 2827.510492,
                    "p50": 2875.2807519999997,
                    "p95": 2904.234774,
                    "p99": 2904.234774,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3559.831609,
                    "min": 3462.698171,
                    "p50": 3514.7688869999997,
                    "p95": 3559.831609,
                    "p99": 3559.831609,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1651.045887,
                    "min": 1601.337168,
                    "p50": 1622.597141,
                    "p95": 1651.045887,
                    "p99": 1651.045887,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2494.664809,
                    "min": 2416.323018,
                    "p50": 2458.416182,
                    "p95": 2494.664809,
                    "p99": 2494.664809,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 749.6443479999999,
                    "min": 703.856218,
                    "p50": 716.298464,
                    "p95": 749.6443479999999,
                    "p99": 749.6443479999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 574.520228,
                    "min": 523.970827,
                    "p50": 531.047368,
                    "p95": 574.520228,
                    "p99": 574.520228,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1034.478726,
                    "min": 970.956959,
                    "p50": 995.246458,
                    "p95": 1034.478726,
                    "p99": 1034.478726,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1516.018988,
                    "min": 1460.408815,
                    "p50": 1495.9586379999998,
                    "p95": 1516.018988,
                    "p99": 1516.018988,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4961.684274,
                    "min": 4827.14782,
                    "p50": 4856.525743,
                    "p95": 4961.684274,
                    "p99": 4961.684274,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1997.027586,
                    "min": 1951.660789,
                    "p50": 1974.2061979999999,
                    "p95": 1997.027586,
                    "p99": 1997.027586,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 612.369949,
                    "min": 562.864321,
                    "p50": 572.168655,
                    "p95": 612.369949,
                    "p99": 612.369949,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 195.251373,
                    "min": 187.595797,
                    "p50": 193.246521,
                    "p95": 195.251373,
                    "p99": 195.251373,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2462.678594,
                    "min": 2399.619525,
                    "p50": 2438.561871,
                    "p95": 2462.678594,
                    "p99": 2462.678594,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 511.679463,
                    "min": 377.71687199999997,
                    "p50": 381.757992,
                    "p95": 511.679463,
                    "p99": 511.679463,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 488.495904,
                    "min": 419.243361,
                    "p50": 454.60623999999996,
                    "p95": 488.495904,
                    "p99": 488.495904,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 492.955197,
                    "min": 465.27918,
                    "p50": 472.67371399999996,
                    "p95": 492.955197,
                    "p99": 492.955197,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 925.48695,
                    "min": 871.410815,
                    "p50": 914.72349,
                    "p95": 925.48695,
                    "p99": 925.48695,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 295.653099,
                    "min": 272.054742,
                    "p50": 287.078623,
                    "p95": 295.653099,
                    "p99": 295.653099,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 340.151522,
                    "min": 318.943968,
                    "p50": 335.58344,
                    "p95": 340.151522,
                    "p99": 340.151522,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 836.968892,
                    "min": 761.324893,
                    "p50": 806.7764559999999,
                    "p95": 836.968892,
                    "p99": 836.968892,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 662.047097,
                    "min": 613.164995,
                    "p50": 634.33276,
                    "p95": 662.047097,
                    "p99": 662.047097,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 244.128673,
                    "min": 233.02559399999998,
                    "p50": 239.97955399999998,
                    "p95": 244.128673,
                    "p99": 244.128673,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 721.875773,
                    "min": 643.697427,
                    "p50": 660.2934379999999,
                    "p95": 721.875773,
                    "p99": 721.875773,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2113.2759579999997,
                    "min": 2049.5354859999998,
                    "p50": 2087.687177,
                    "p95": 2113.2759579999997,
                    "p99": 2113.2759579999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 875.600858,
                    "min": 830.1181349999999,
                    "p50": 854.798808,
                    "p95": 875.600858,
                    "p99": 875.600858,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 675.369181,
                    "min": 614.030222,
                    "p50": 647.141705,
                    "p95": 675.369181,
                    "p99": 675.369181,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1472.9609149999999,
                    "min": 1411.0841839999998,
                    "p50": 1439.463765,
                    "p95": 1472.9609149999999,
                    "p99": 1472.9609149999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1051.000799,
                    "min": 952.047475,
                    "p50": 1005.6077379999999,
                    "p95": 1051.000799,
                    "p99": 1051.000799,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4766.800932,
                    "min": 4572.00864,
                    "p50": 4653.9047949999995,
                    "p95": 4766.800932,
                    "p99": 4766.800932,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1355.0119029999998,
                    "min": 1291.910972,
                    "p50": 1305.312259,
                    "p95": 1355.0119029999998,
                    "p99": 1355.0119029999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 744.941241,
                    "min": 720.951612,
                    "p50": 739.774906,
                    "p95": 744.941241,
                    "p99": 744.941241,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1557.543995,
                    "min": 1521.0473709999999,
                    "p50": 1529.423112,
                    "p95": 1557.543995,
                    "p99": 1557.543995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3520.454256,
                    "min": 3442.8443469999997,
                    "p50": 3489.0077699999997,
                    "p95": 3520.454256,
                    "p99": 3520.454256,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1817.3073439999998,
                    "min": 1723.3170539999999,
                    "p50": 1762.583382,
                    "p95": 1817.3073439999998,
                    "p99": 1817.3073439999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2374.315088,
                    "min": 2323.823167,
                    "p50": 2342.1917909999997,
                    "p95": 2374.315088,
                    "p99": 2374.315088,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 402.72637199999997,
                    "min": 385.746987,
                    "p50": 393.594854,
                    "p95": 402.72637199999997,
                    "p99": 402.72637199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1667.093163,
                    "min": 1637.0322899999999,
                    "p50": 1652.2597059999998,
                    "p95": 1667.093163,
                    "p99": 1667.093163,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 519.140588,
                    "min": 478.26911199999995,
                    "p50": 502.410441,
                    "p95": 519.140588,
                    "p99": 519.140588,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1243.619984,
                    "min": 1179.158226,
                    "p50": 1215.78623,
                    "p95": 1243.619984,
                    "p99": 1243.619984,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1121.4378299999998,
                    "min": 1077.402529,
                    "p50": 1087.165483,
                    "p95": 1121.4378299999998,
                    "p99": 1121.4378299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1795.103523,
                    "min": 1757.821346,
                    "p50": 1768.764373,
                    "p95": 1795.103523,
                    "p99": 1795.103523,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 540.940425,
                    "min": 505.609925,
                    "p50": 511.09079099999997,
                    "p95": 540.940425,
                    "p99": 540.940425,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1140.416104,
                    "min": 1060.738564,
                    "p50": 1112.7355969999999,
                    "p95": 1140.416104,
                    "p99": 1140.416104,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1607.066139,
                    "min": 1515.918199,
                    "p50": 1551.343114,
                    "p95": 1607.066139,
                    "p99": 1607.066139,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1212.435129,
                    "min": 1185.302406,
                    "p50": 1196.864444,
                    "p95": 1212.435129,
                    "p99": 1212.435129,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1332.303476,
                    "min": 1311.368477,
                    "p50": 1320.0468979999998,
                    "p95": 1332.303476,
                    "p99": 1332.303476,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2399.410912,
                    "min": 2323.787558,
                    "p50": 2372.3512929999997,
                    "p95": 2399.410912,
                    "p99": 2399.410912,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3562.3696849999997,
                    "min": 3451.547405,
                    "p50": 3513.5514869999997,
                    "p95": 3562.3696849999997,
                    "p99": 3562.3696849999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1477.0829239999998,
                    "min": 1413.290289,
                    "p50": 1468.046639,
                    "p95": 1477.0829239999998,
                    "p99": 1477.0829239999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 668.0402439999999,
                    "min": 592.198191,
                    "p50": 632.143411,
                    "p95": 668.0402439999999,
                    "p99": 668.0402439999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 444.976744,
                    "min": 391.925262,
                    "p50": 431.57379399999996,
                    "p95": 444.976744,
                    "p99": 444.976744,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 787.9206889999999,
                    "min": 728.8758409999999,
                    "p50": 737.261354,
                    "p95": 787.9206889999999,
                    "p99": 787.9206889999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2087.126906,
                    "min": 2034.5504159999998,
                    "p50": 2069.848752,
                    "p95": 2087.126906,
                    "p99": 2087.126906,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 877.148839,
                    "min": 843.640805,
                    "p50": 861.597932,
                    "p95": 877.148839,
                    "p99": 877.148839,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1703.949253,
                    "min": 1640.61882,
                    "p50": 1656.0178509999998,
                    "p95": 1703.949253,
                    "p99": 1703.949253,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 977.365542,
                    "min": 947.2370699999999,
                    "p50": 973.1223219999999,
                    "p95": 977.365542,
                    "p99": 977.365542,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10812.191321,
                    "min": 10674.114226,
                    "p50": 10739.169645,
                    "p95": 10812.191321,
                    "p99": 10812.191321,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1576.695051,
                    "min": 1530.177368,
                    "p50": 1545.549698,
                    "p95": 1576.695051,
                    "p99": 1576.695051,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5449.755396,
                    "min": 5372.321137999999,
                    "p50": 5409.60446,
                    "p95": 5449.755396,
                    "p99": 5449.755396,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 855.1919019999999,
                    "min": 796.970965,
                    "p50": 809.6067929999999,
                    "p95": 855.1919019999999,
                    "p99": 855.1919019999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 496.57915199999997,
                    "min": 446.889071,
                    "p50": 473.22430099999997,
                    "p95": 496.57915199999997,
                    "p99": 496.57915199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1378.3644299999999,
                    "min": 1304.912764,
                    "p50": 1340.522369,
                    "p95": 1378.3644299999999,
                    "p99": 1378.3644299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4402.455185,
                    "min": 4296.0453099999995,
                    "p50": 4337.5641,
                    "p95": 4402.455185,
                    "p99": 4402.455185,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1690.986469,
                    "min": 1614.5550289999999,
                    "p50": 1656.514778,
                    "p95": 1690.986469,
                    "p99": 1690.986469,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1440.988284,
                    "min": 1420.4077359999999,
                    "p50": 1435.22248,
                    "p95": 1440.988284,
                    "p99": 1440.988284,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1973.2185929999998,
                    "min": 1901.013804,
                    "p50": 1916.0062819999998,
                    "p95": 1973.2185929999998,
                    "p99": 1973.2185929999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 639.126593,
                    "min": 574.059004,
                    "p50": 587.072581,
                    "p95": 639.126593,
                    "p99": 639.126593,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1276.416863,
                    "min": 1211.5885759999999,
                    "p50": 1217.46802,
                    "p95": 1276.416863,
                    "p99": 1276.416863,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 387.168293,
                    "min": 333.83523099999996,
                    "p50": 369.95248599999996,
                    "p95": 387.168293,
                    "p99": 387.168293,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 941.470247,
                    "min": 892.744287,
                    "p50": 904.6824909999999,
                    "p95": 941.470247,
                    "p99": 941.470247,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 736.712896,
                    "min": 678.703907,
                    "p50": 690.9362179999999,
                    "p95": 736.712896,
                    "p99": 736.712896,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1053.562765,
                    "min": 1000.8346909999999,
                    "p50": 1011.545678,
                    "p95": 1053.562765,
                    "p99": 1053.562765,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1174.441329,
                    "min": 1099.719152,
                    "p50": 1130.2629379999998,
                    "p95": 1174.441329,
                    "p99": 1174.441329,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3295.219518,
                    "min": 3232.7059179999997,
                    "p50": 3252.0199,
                    "p95": 3295.219518,
                    "p99": 3295.219518,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2225.97998,
                    "min": 2167.120137,
                    "p50": 2216.640081,
                    "p95": 2225.97998,
                    "p99": 2225.97998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 381.287923,
                    "min": 322.49648199999996,
                    "p50": 362.389032,
                    "p95": 381.287923,
                    "p99": 381.287923,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1993.1557579999999,
                    "min": 1875.7941739999999,
                    "p50": 1934.6412389999998,
                    "p95": 1993.1557579999999,
                    "p99": 1993.1557579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1510.878091,
                    "min": 1411.0386999999998,
                    "p50": 1433.398001,
                    "p95": 1510.878091,
                    "p99": 1510.878091,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1054.906234,
                    "min": 960.950167,
                    "p50": 1010.8762999999999,
                    "p95": 1054.906234,
                    "p99": 1054.906234,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 562.4376599999999,
                    "min": 506.649834,
                    "p50": 512.463971,
                    "p95": 562.4376599999999,
                    "p99": 562.4376599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4718.774452,
                    "min": 4647.8344879999995,
                    "p50": 4693.935112,
                    "p95": 4718.774452,
                    "p99": 4718.774452,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2446.704976,
                    "min": 2371.307763,
                    "p50": 2405.6396609999997,
                    "p95": 2446.704976,
                    "p99": 2446.704976,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 651.179134,
                    "min": 595.342355,
                    "p50": 608.745022,
                    "p95": 651.179134,
                    "p99": 651.179134,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 727.315836,
                    "min": 681.408718,
                    "p50": 701.593229,
                    "p95": 727.315836,
                    "p99": 727.315836,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 475.697314,
                    "min": 405.78588299999996,
                    "p50": 422.005925,
                    "p95": 475.697314,
                    "p99": 475.697314,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 558.229366,
                    "min": 456.69971499999997,
                    "p50": 477.447026,
                    "p95": 558.229366,
                    "p99": 558.229366,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 264.275888,
                    "min": 227.11017099999998,
                    "p50": 240.184858,
                    "p95": 264.275888,
                    "p99": 264.275888,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 903.182524,
                    "min": 845.037747,
                    "p50": 852.7730009999999,
                    "p95": 903.182524,
                    "p99": 903.182524,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 585.562281,
                    "min": 545.5542829999999,
                    "p50": 563.404956,
                    "p95": 585.562281,
                    "p99": 585.562281,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 780.08744,
                    "min": 734.5845079999999,
                    "p50": 756.2944309999999,
                    "p95": 780.08744,
                    "p99": 780.08744,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 421.30001699999997,
                    "min": 365.94820999999996,
                    "p50": 378.586748,
                    "p95": 421.30001699999997,
                    "p99": 421.30001699999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 733.772849,
                    "min": 646.3756149999999,
                    "p50": 654.8230649999999,
                    "p95": 733.772849,
                    "p99": 733.772849,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 284.37035,
                    "min": 241.766598,
                    "p50": 280.63019299999996,
                    "p95": 284.37035,
                    "p99": 284.37035,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.940701,
                    "min": 172.20300799999998,
                    "p50": 190.671708,
                    "p95": 193.940701,
                    "p99": 193.940701,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2005.541372,
                    "min": 1911.496692,
                    "p50": 1960.869328,
                    "p95": 2005.541372,
                    "p99": 2005.541372,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 949.7612019999999,
                    "min": 898.607093,
                    "p50": 912.00423,
                    "p95": 949.7612019999999,
                    "p99": 949.7612019999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2249.452404,
                    "min": 2172.514687,
                    "p50": 2214.93392,
                    "p95": 2249.452404,
                    "p99": 2249.452404,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 841.7924019999999,
                    "min": 790.541916,
                    "p50": 814.49865,
                    "p95": 841.7924019999999,
                    "p99": 841.7924019999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 748.274697,
                    "min": 686.29382,
                    "p50": 693.992313,
                    "p95": 748.274697,
                    "p99": 748.274697,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 497.38708699999995,
                    "min": 444.502569,
                    "p50": 480.208016,
                    "p95": 497.38708699999995,
                    "p99": 497.38708699999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1593.4340539999998,
                    "min": 1538.9861429999999,
                    "p50": 1575.7164,
                    "p95": 1593.4340539999998,
                    "p99": 1593.4340539999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1278.2062469999998,
                    "min": 1218.777401,
                    "p50": 1250.999378,
                    "p95": 1278.2062469999998,
                    "p99": 1278.2062469999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3363.478134,
                    "min": 3216.91669,
                    "p50": 3278.532772,
                    "p95": 3363.478134,
                    "p99": 3363.478134,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1048.243444,
                    "min": 977.3410349999999,
                    "p50": 1019.275218,
                    "p95": 1048.243444,
                    "p99": 1048.243444,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10860.209418,
                    "min": 10663.372822,
                    "p50": 10727.625669,
                    "p95": 10860.209418,
                    "p99": 10860.209418,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 637.10579,
                    "min": 578.596586,
                    "p50": 586.852253,
                    "p95": 637.10579,
                    "p99": 637.10579,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1495.719146,
                    "min": 1421.3718589999999,
                    "p50": 1447.595797,
                    "p95": 1495.719146,
                    "p99": 1495.719146,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1406.356143,
                    "min": 1321.209249,
                    "p50": 1354.804455,
                    "p95": 1406.356143,
                    "p99": 1406.356143,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4375.313637,
                    "min": 4310.113235,
                    "p50": 4341.528141,
                    "p95": 4375.313637,
                    "p99": 4375.313637,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 419.63125099999996,
                    "min": 364.492354,
                    "p50": 371.351111,
                    "p95": 419.63125099999996,
                    "p99": 419.63125099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1680.450737,
                    "min": 1638.866797,
                    "p50": 1654.380764,
                    "p95": 1680.450737,
                    "p99": 1680.450737,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1173.090211,
                    "min": 1115.706221,
                    "p50": 1157.3287289999998,
                    "p95": 1173.090211,
                    "p99": 1173.090211,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5473.177549,
                    "min": 5375.4767249999995,
                    "p50": 5418.06248,
                    "p95": 5473.177549,
                    "p99": 5473.177549,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 676.2395389999999,
                    "min": 661.179589,
                    "p50": 670.602573,
                    "p95": 676.2395389999999,
                    "p99": 676.2395389999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 630.9141999999999,
                    "min": 577.5444309999999,
                    "p50": 586.143469,
                    "p95": 630.9141999999999,
                    "p99": 630.9141999999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 874.502678,
                    "min": 845.049395,
                    "p50": 857.84631,
                    "p95": 874.502678,
                    "p99": 874.502678,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 323.92283399999997,
                    "min": 304.18780899999996,
                    "p50": 314.762613,
                    "p95": 323.92283399999997,
                    "p99": 323.92283399999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 415.928257,
                    "min": 388.922915,
                    "p50": 401.070946,
                    "p95": 415.928257,
                    "p99": 415.928257,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 767.4578829999999,
                    "min": 758.47528,
                    "p50": 764.273632,
                    "p95": 767.4578829999999,
                    "p99": 767.4578829999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 494.855663,
                    "min": 446.88062299999996,
                    "p50": 492.81083099999995,
                    "p95": 494.855663,
                    "p99": 494.855663,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 936.146256,
                    "min": 877.4429369999999,
                    "p50": 902.678321,
                    "p95": 936.146256,
                    "p99": 936.146256,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 322.21079,
                    "min": 297.68891099999996,
                    "p50": 303.04999699999996,
                    "p95": 322.21079,
                    "p99": 322.21079,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 773.2193659999999,
                    "min": 705.2364289999999,
                    "p50": 716.7221949999999,
                    "p95": 773.2193659999999,
                    "p99": 773.2193659999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 568.237201,
                    "min": 554.339516,
                    "p50": 558.952086,
                    "p95": 568.237201,
                    "p99": 568.237201,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 647.939161,
                    "min": 629.980006,
                    "p50": 644.491977,
                    "p95": 647.939161,
                    "p99": 647.939161,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 846.4585599999999,
                    "min": 794.275326,
                    "p50": 812.6038659999999,
                    "p95": 846.4585599999999,
                    "p99": 846.4585599999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 388.73895,
                    "min": 377.962164,
                    "p50": 382.68244,
                    "p95": 388.73895,
                    "p99": 388.73895,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 480.207519,
                    "min": 464.662667,
                    "p50": 471.600466,
                    "p95": 480.207519,
                    "p99": 480.207519,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 221.204037,
                    "min": 182.767818,
                    "p50": 191.40205899999998,
                    "p95": 221.204037,
                    "p99": 221.204037,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 351.600282,
                    "min": 281.55767,
                    "p50": 336.22191399999997,
                    "p95": 351.600282,
                    "p99": 351.600282,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 392.441647,
                    "min": 375.529817,
                    "p50": 384.07993999999997,
                    "p95": 392.441647,
                    "p99": 392.441647,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.804598,
                    "min": 239.909147,
                    "p50": 264.512834,
                    "p95": 318.804598,
                    "p99": 318.804598,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 524.344345,
                    "min": 468.81909199999996,
                    "p50": 491.364944,
                    "p95": 524.344345,
                    "p99": 524.344345,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.331485,
                    "min": 145.839224,
                    "p50": 151.962705,
                    "p95": 193.331485,
                    "p99": 193.331485,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 453.23425299999997,
                    "min": 374.68411,
                    "p50": 419.896253,
                    "p95": 453.23425299999997,
                    "p99": 453.23425299999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 343.49048899999997,
                    "min": 261.147318,
                    "p50": 337.065633,
                    "p95": 343.49048899999997,
                    "p99": 343.49048899999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 262.59486799999996,
                    "min": 207.44713099999998,
                    "p50": 230.933221,
                    "p95": 262.59486799999996,
                    "p99": 262.59486799999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 467.948218,
                    "min": 425.658143,
                    "p50": 460.374684,
                    "p95": 467.948218,
                    "p99": 467.948218,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 599.200515,
                    "min": 579.8903789999999,
                    "p50": 593.438485,
                    "p95": 599.200515,
                    "p99": 599.200515,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 779.7832139999999,
                    "min": 756.067226,
                    "p50": 773.147288,
                    "p95": 779.7832139999999,
                    "p99": 779.7832139999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 234.85086099999998,
                    "min": 230.558878,
                    "p50": 232.451069,
                    "p95": 234.85086099999998,
                    "p99": 234.85086099999998,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 431.54108299999996,
                    "min": 405.757819,
                    "p50": 412.45216899999997,
                    "p95": 431.54108299999996,
                    "p99": 431.54108299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 793.6710109999999,
                    "min": 676.492438,
                    "p50": 684.46187,
                    "p95": 793.6710109999999,
                    "p99": 793.6710109999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 331.712024,
                    "min": 316.272763,
                    "p50": 322.82958199999996,
                    "p95": 331.712024,
                    "p99": 331.712024,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 509.77487499999995,
                    "min": 500.69947199999996,
                    "p50": 503.39363099999997,
                    "p95": 509.77487499999995,
                    "p99": 509.77487499999995,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 445.97961,
                    "min": 326.207249,
                    "p50": 370.15975399999996,
                    "p95": 445.97961,
                    "p99": 445.97961,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 245.31074999999998,
                    "min": 187.113609,
                    "p50": 191.841501,
                    "p95": 245.31074999999998,
                    "p99": 245.31074999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 176.622291,
                    "min": 128.34451099999998,
                    "p50": 130.496504,
                    "p95": 176.622291,
                    "p99": 176.622291,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 392.47470999999996,
                    "min": 300.245386,
                    "p50": 342.5928,
                    "p95": 392.47470999999996,
                    "p99": 392.47470999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 283.61829,
                    "min": 232.896513,
                    "p50": 255.92480999999998,
                    "p95": 283.61829,
                    "p99": 283.61829,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 239.136361,
                    "min": 202.798499,
                    "p50": 226.864939,
                    "p95": 239.136361,
                    "p99": 239.136361,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 332.658642,
                    "min": 279.61235,
                    "p50": 324.367685,
                    "p95": 332.658642,
                    "p99": 332.658642,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 188.708046,
                    "min": 147.514008,
                    "p50": 150.16211199999998,
                    "p95": 188.708046,
                    "p99": 188.708046,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.94739099999998,
                    "min": 96.49865299999999,
                    "p50": 114.04202799999999,
                    "p95": 145.94739099999998,
                    "p99": 145.94739099999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 447.710003,
                    "min": 395.00762,
                    "p50": 439.224945,
                    "p95": 447.710003,
                    "p99": 447.710003,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 369.963959,
                    "min": 331.75332499999996,
                    "p50": 353.762483,
                    "p95": 369.963959,
                    "p99": 369.963959,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 492.759663,
                    "min": 446.525873,
                    "p50": 481.31119099999995,
                    "p95": 492.759663,
                    "p99": 492.759663,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 298.867385,
                    "min": 219.70069099999998,
                    "p50": 227.15071899999998,
                    "p95": 298.867385,
                    "p99": 298.867385,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 320.083327,
                    "min": 265.727891,
                    "p50": 314.01205,
                    "p95": 320.083327,
                    "p99": 320.083327,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 208.84104399999998,
                    "min": 166.401876,
                    "p50": 175.87791199999998,
                    "p95": 208.84104399999998,
                    "p99": 208.84104399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 345.200939,
                    "min": 294.895634,
                    "p50": 340.813043,
                    "p95": 345.200939,
                    "p99": 345.200939,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 153.17663199999998,
                    "min": 138.547892,
                    "p50": 143.714777,
                    "p95": 153.17663199999998,
                    "p99": 153.17663199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 418.25485,
                    "min": 338.9403,
                    "p50": 381.055635,
                    "p95": 418.25485,
                    "p99": 418.25485,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 296.827519,
                    "min": 236.62552499999998,
                    "p50": 242.288919,
                    "p95": 296.827519,
                    "p99": 296.827519,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 169.201085,
                    "min": 124.836671,
                    "p50": 149.887182,
                    "p95": 169.201085,
                    "p99": 169.201085,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.51509299999998,
                    "min": 162.529945,
                    "p50": 172.297148,
                    "p95": 194.51509299999998,
                    "p99": 194.51509299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.847558,
                    "min": 276.546795,
                    "p50": 317.072724,
                    "p95": 345.847558,
                    "p99": 345.847558,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 365.502142,
                    "min": 322.04673099999997,
                    "p50": 347.423527,
                    "p95": 365.502142,
                    "p99": 365.502142,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 472.86463299999997,
                    "min": 414.586711,
                    "p50": 429.79234099999996,
                    "p95": 472.86463299999997,
                    "p99": 472.86463299999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 207.02809399999998,
                    "min": 180.793485,
                    "p50": 185.541877,
                    "p95": 207.02809399999998,
                    "p99": 207.02809399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 439.49751399999997,
                    "min": 358.90651399999996,
                    "p50": 382.66697999999997,
                    "p95": 439.49751399999997,
                    "p99": 439.49751399999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 222.992866,
                    "min": 199.952978,
                    "p50": 204.90094299999998,
                    "p95": 222.992866,
                    "p99": 222.992866,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 312.045083,
                    "min": 256.55296899999996,
                    "p50": 296.195155,
                    "p95": 312.045083,
                    "p99": 312.045083,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 276.653522,
                    "min": 207.504923,
                    "p50": 219.060612,
                    "p95": 276.653522,
                    "p99": 276.653522,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.939533,
                    "min": 91.1681,
                    "p50": 100.261212,
                    "p95": 106.939533,
                    "p99": 106.939533,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 213.296554,
                    "min": 101.1822,
                    "p50": 149.42976,
                    "p95": 213.296554,
                    "p99": 213.296554,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 259.73242999999997,
                    "min": 178.801019,
                    "p50": 207.23301899999998,
                    "p95": 259.73242999999997,
                    "p99": 259.73242999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 212.518399,
                    "min": 177.431309,
                    "p50": 190.29696199999998,
                    "p95": 212.518399,
                    "p99": 212.518399,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 476.79364499999997,
                    "min": 388.156185,
                    "p50": 434.671276,
                    "p95": 476.79364499999997,
                    "p99": 476.79364499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 394.631301,
                    "min": 339.12678999999997,
                    "p50": 373.995479,
                    "p95": 394.631301,
                    "p99": 394.631301,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 139.82368499999998,
                    "min": 96.4782,
                    "p50": 121.99305899999999,
                    "p95": 139.82368499999998,
                    "p99": 139.82368499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 297.185118,
                    "min": 257.41211699999997,
                    "p50": 267.953685,
                    "p95": 297.185118,
                    "p99": 297.185118,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 290.714776,
                    "min": 234.020853,
                    "p50": 250.53406199999998,
                    "p95": 290.714776,
                    "p99": 290.714776,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 172.62532,
                    "min": 124.91216299999999,
                    "p50": 130.264442,
                    "p95": 172.62532,
                    "p99": 172.62532,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 320.73276999999996,
                    "min": 266.15265999999997,
                    "p50": 293.703255,
                    "p95": 320.73276999999996,
                    "p99": 320.73276999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 330.699054,
                    "min": 186.646483,
                    "p50": 272.376008,
                    "p95": 330.699054,
                    "p99": 330.699054,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 511.862538,
                    "min": 474.46376799999996,
                    "p50": 481.537631,
                    "p95": 511.862538,
                    "p99": 511.862538,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 380.700804,
                    "min": 316.462397,
                    "p50": 335.363068,
                    "p95": 380.700804,
                    "p99": 380.700804,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 231.01642999999999,
                    "min": 164.50345099999998,
                    "p50": 176.938241,
                    "p95": 231.01642999999999,
                    "p99": 231.01642999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 376.671155,
                    "min": 301.737443,
                    "p50": 342.707716,
                    "p95": 376.671155,
                    "p99": 376.671155,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 504.42605799999995,
                    "min": 479.16105899999997,
                    "p50": 488.537109,
                    "p95": 504.42605799999995,
                    "p99": 504.42605799999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.357009,
                    "min": 127.673367,
                    "p50": 133.749268,
                    "p95": 162.357009,
                    "p99": 162.357009,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 277.500242,
                    "min": 216.48291,
                    "p50": 226.19170599999998,
                    "p95": 277.500242,
                    "p99": 277.500242,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 300.820197,
                    "min": 207.646489,
                    "p50": 255.24963699999998,
                    "p95": 300.820197,
                    "p99": 300.820197,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 310.559437,
                    "min": 252.174993,
                    "p50": 297.451729,
                    "p95": 310.559437,
                    "p99": 310.559437,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 453.65722999999997,
                    "min": 420.082995,
                    "p50": 447.30098699999996,
                    "p95": 453.65722999999997,
                    "p99": 453.65722999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 334.67202199999997,
                    "min": 285.80445399999996,
                    "p50": 320.40979899999996,
                    "p95": 334.67202199999997,
                    "p99": 334.67202199999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 355.242213,
                    "min": 298.58495899999997,
                    "p50": 342.089859,
                    "p95": 355.242213,
                    "p99": 355.242213,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 140.113903,
                    "min": 101.34350599999999,
                    "p50": 128.670383,
                    "p95": 140.113903,
                    "p99": 140.113903,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 215.056307,
                    "min": 164.051569,
                    "p50": 172.365385,
                    "p95": 215.056307,
                    "p99": 215.056307,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 190.32866299999998,
                    "min": 147.432911,
                    "p50": 172.300455,
                    "p95": 190.32866299999998,
                    "p99": 190.32866299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 407.76649899999995,
                    "min": 342.301988,
                    "p50": 387.857457,
                    "p95": 407.76649899999995,
                    "p99": 407.76649899999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 250.157049,
                    "min": 205.92118,
                    "p50": 208.600033,
                    "p95": 250.157049,
                    "p99": 250.157049,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 372.99006599999996,
                    "min": 318.79290299999997,
                    "p50": 339.746308,
                    "p95": 372.99006599999996,
                    "p99": 372.99006599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 240.974852,
                    "min": 181.249,
                    "p50": 214.587215,
                    "p95": 240.974852,
                    "p99": 240.974852,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 249.60052499999998,
                    "min": 209.817827,
                    "p50": 213.28784399999998,
                    "p95": 249.60052499999998,
                    "p99": 249.60052499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.002837,
                    "min": 74.566062,
                    "p50": 75.76906199999999,
                    "p95": 84.002837,
                    "p99": 84.002837,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1061.7456,
                    "min": 1000.0013459999999,
                    "p50": 1032.815606,
                    "p95": 1061.7456,
                    "p99": 1061.7456,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 280.91887299999996,
                    "min": 235.480673,
                    "p50": 244.49089099999998,
                    "p95": 280.91887299999996,
                    "p99": 280.91887299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 431.14243799999997,
                    "min": 285.070277,
                    "p50": 328.555574,
                    "p95": 431.14243799999997,
                    "p99": 431.14243799999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 157.431814,
                    "min": 136.392307,
                    "p50": 149.201032,
                    "p95": 157.431814,
                    "p99": 157.431814,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 516.2909619999999,
                    "min": 409.328959,
                    "p50": 424.153526,
                    "p95": 516.2909619999999,
                    "p99": 516.2909619999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.63642899999999,
                    "min": 58.973223,
                    "p50": 98.70687,
                    "p95": 109.63642899999999,
                    "p99": 109.63642899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 146.7201,
                    "min": 124.20909999999999,
                    "p50": 127.283113,
                    "p95": 146.7201,
                    "p99": 146.7201,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 66.31540799999999,
                    "min": 37.772984,
                    "p50": 57.951249999999995,
                    "p95": 66.31540799999999,
                    "p99": 66.31540799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 143.85501499999998,
                    "min": 121.370127,
                    "p50": 132.583049,
                    "p95": 143.85501499999998,
                    "p99": 143.85501499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.571562,
                    "min": 98.40879299999999,
                    "p50": 115.48505899999999,
                    "p95": 136.571562,
                    "p99": 136.571562,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 172.53329599999998,
                    "min": 145.036398,
                    "p50": 152.009304,
                    "p95": 172.53329599999998,
                    "p99": 172.53329599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 174.75744,
                    "min": 155.195974,
                    "p50": 170.49015699999998,
                    "p95": 174.75744,
                    "p99": 174.75744,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 199.226845,
                    "min": 159.689321,
                    "p50": 161.627884,
                    "p95": 199.226845,
                    "p99": 199.226845,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 586.7688009999999,
                    "min": 507.824664,
                    "p50": 548.981873,
                    "p95": 586.7688009999999,
                    "p99": 586.7688009999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.67828999999999,
                    "min": 49.826493,
                    "p50": 90.051341,
                    "p95": 94.67828999999999,
                    "p99": 94.67828999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.49950199999998,
                    "min": 170.042451,
                    "p50": 178.309134,
                    "p95": 227.49950199999998,
                    "p99": 227.49950199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 289.377484,
                    "min": 168.04016299999998,
                    "p50": 187.79988,
                    "p95": 289.377484,
                    "p99": 289.377484,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 453.655674,
                    "min": 405.417086,
                    "p50": 419.411021,
                    "p95": 453.655674,
                    "p99": 453.655674,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.777287,
                    "min": 76.310214,
                    "p50": 124.064842,
                    "p95": 128.777287,
                    "p99": 128.777287,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 537.8258999999999,
                    "min": 519.7702409999999,
                    "p50": 536.9102819999999,
                    "p95": 537.8258999999999,
                    "p99": 537.8258999999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 293.140518,
                    "min": 286.696356,
                    "p50": 291.001291,
                    "p95": 293.140518,
                    "p99": 293.140518,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.037614,
                    "min": 217.594854,
                    "p50": 220.061447,
                    "p95": 227.037614,
                    "p99": 227.037614,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 275.379061,
                    "min": 224.80140699999998,
                    "p50": 232.30014799999998,
                    "p95": 275.379061,
                    "p99": 275.379061,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 215.63633,
                    "min": 205.06903799999998,
                    "p50": 207.71579499999999,
                    "p95": 215.63633,
                    "p99": 215.63633,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 305.177818,
                    "min": 259.99359799999996,
                    "p50": 264.674101,
                    "p95": 305.177818,
                    "p99": 305.177818,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 78.811696,
                    "min": 59.795227,
                    "p50": 75.73610099999999,
                    "p95": 78.811696,
                    "p99": 78.811696,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1300.448205,
                    "min": 1242.7074249999998,
                    "p50": 1263.604047,
                    "p95": 1300.448205,
                    "p99": 1300.448205,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.127684,
                    "min": 87.895416,
                    "p50": 92.85395,
                    "p95": 96.127684,
                    "p99": 96.127684,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 116.917693,
                    "min": 94.257143,
                    "p50": 112.37535899999999,
                    "p95": 116.917693,
                    "p99": 116.917693,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.140996,
                    "min": 130.829239,
                    "p50": 147.097676,
                    "p95": 154.140996,
                    "p99": 154.140996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.36604,
                    "min": 194.564356,
                    "p50": 196.956153,
                    "p95": 201.36604,
                    "p99": 201.36604,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.826333,
                    "min": 151.311845,
                    "p50": 161.209179,
                    "p95": 166.826333,
                    "p99": 166.826333,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 189.500676,
                    "min": 174.54827699999998,
                    "p50": 188.117333,
                    "p95": 189.500676,
                    "p99": 189.500676,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.464957,
                    "min": 128.218406,
                    "p50": 135.27595399999998,
                    "p95": 137.464957,
                    "p99": 137.464957,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.40908199999998,
                    "min": 169.595612,
                    "p50": 177.393575,
                    "p95": 179.40908199999998,
                    "p99": 179.40908199999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 706.78016,
                    "min": 643.667366,
                    "p50": 656.9045189999999,
                    "p95": 706.78016,
                    "p99": 706.78016,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 180.190261,
                    "min": 172.94933899999998,
                    "p50": 177.804827,
                    "p95": 180.190261,
                    "p99": 180.190261,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1131.59994,
                    "min": 1039.887451,
                    "p50": 1077.3030629999998,
                    "p95": 1131.59994,
                    "p99": 1131.59994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 244.238553,
                    "min": 184.61808,
                    "p50": 186.140009,
                    "p95": 244.238553,
                    "p99": 244.238553,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 140.768054,
                    "min": 131.63308999999998,
                    "p50": 138.985645,
                    "p95": 140.768054,
                    "p99": 140.768054,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 222.48049899999998,
                    "min": 216.285274,
                    "p50": 218.83264799999998,
                    "p95": 222.48049899999998,
                    "p99": 222.48049899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 290.910323,
                    "min": 242.882679,
                    "p50": 247.242043,
                    "p95": 290.910323,
                    "p99": 290.910323,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.32566399999999,
                    "min": 91.33844099999999,
                    "p50": 92.52363,
                    "p95": 98.32566399999999,
                    "p99": 98.32566399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 174.246634,
                    "min": 141.822674,
                    "p50": 148.258238,
                    "p95": 174.246634,
                    "p99": 174.246634,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 147.343462,
                    "min": 116.27903699999999,
                    "p50": 121.40058599999999,
                    "p95": 147.343462,
                    "p99": 147.343462,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.545312,
                    "min": 194.25741299999999,
                    "p50": 208.691444,
                    "p95": 246.545312,
                    "p99": 246.545312,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.11427899999998,
                    "min": 160.192912,
                    "p50": 171.001073,
                    "p95": 198.11427899999998,
                    "p99": 198.11427899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 512.888904,
                    "min": 434.86884399999997,
                    "p50": 439.86158,
                    "p95": 512.888904,
                    "p99": 512.888904,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 382.460966,
                    "min": 331.441946,
                    "p50": 362.143379,
                    "p95": 382.460966,
                    "p99": 382.460966,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 159.77959099999998,
                    "min": 152.20171,
                    "p50": 157.428813,
                    "p95": 159.77959099999998,
                    "p99": 159.77959099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 71.04677,
                    "min": 60.868691,
                    "p50": 61.405736999999995,
                    "p95": 71.04677,
                    "p99": 71.04677,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 134.089718,
                    "min": 127.291569,
                    "p50": 128.905279,
                    "p95": 134.089718,
                    "p99": 134.089718,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.25965099999999,
                    "min": 74.109225,
                    "p50": 79.71781,
                    "p95": 93.25965099999999,
                    "p99": 93.25965099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.40005099999999,
                    "min": 98.34514899999999,
                    "p50": 102.61025199999999,
                    "p95": 119.40005099999999,
                    "p99": 119.40005099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 585.3294109999999,
                    "min": 529.4025819999999,
                    "p50": 581.85633,
                    "p95": 585.3294109999999,
                    "p99": 585.3294109999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 184.828164,
                    "min": 167.57763599999998,
                    "p50": 181.82315599999998,
                    "p95": 184.828164,
                    "p99": 184.828164,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.596363,
                    "min": 86.34424,
                    "p50": 134.863383,
                    "p95": 139.596363,
                    "p99": 139.596363,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.42480599999999,
                    "min": 86.170383,
                    "p50": 91.007251,
                    "p95": 93.42480599999999,
                    "p99": 93.42480599999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 164.543295,
                    "min": 145.081573,
                    "p50": 148.608175,
                    "p95": 164.543295,
                    "p99": 164.543295,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 311.464747,
                    "min": 283.020444,
                    "p50": 296.838523,
                    "p95": 311.464747,
                    "p99": 311.464747,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.98190699999999,
                    "min": 40.016270999999996,
                    "p50": 73.548222,
                    "p95": 84.98190699999999,
                    "p99": 84.98190699999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1241.662941,
                    "min": 1185.51092,
                    "p50": 1224.955829,
                    "p95": 1241.662941,
                    "p99": 1241.662941,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 299.664519,
                    "min": 255.893692,
                    "p50": 263.554398,
                    "p95": 299.664519,
                    "p99": 299.664519,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 117.374766,
                    "min": 65.3115,
                    "p50": 102.452567,
                    "p95": 117.374766,
                    "p99": 117.374766,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.17488799999998,
                    "min": 161.93555899999998,
                    "p50": 169.798591,
                    "p95": 179.17488799999998,
                    "p99": 179.17488799999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 217.10851,
                    "min": 209.396558,
                    "p50": 216.103814,
                    "p95": 217.10851,
                    "p99": 217.10851,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.050435,
                    "min": 111.42563,
                    "p50": 121.934501,
                    "p95": 125.050435,
                    "p99": 125.050435,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 204.121994,
                    "min": 183.64554099999998,
                    "p50": 193.13322399999998,
                    "p95": 204.121994,
                    "p99": 204.121994,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 648.192174,
                    "min": 636.3943429999999,
                    "p50": 642.864051,
                    "p95": 648.192174,
                    "p99": 648.192174,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 426.85074399999996,
                    "min": 394.219738,
                    "p50": 407.55769799999996,
                    "p95": 426.85074399999996,
                    "p99": 426.85074399999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 233.16324699999998,
                    "min": 164.636582,
                    "p50": 204.688896,
                    "p95": 233.16324699999998,
                    "p99": 233.16324699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 199.07984499999998,
                    "min": 146.512235,
                    "p50": 158.033462,
                    "p95": 199.07984499999998,
                    "p99": 199.07984499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 245.579658,
                    "min": 221.291654,
                    "p50": 227.490792,
                    "p95": 245.579658,
                    "p99": 245.579658,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 525.134675,
                    "min": 515.061822,
                    "p50": 521.7857309999999,
                    "p95": 525.134675,
                    "p99": 525.134675,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 165.512144,
                    "min": 114.340318,
                    "p50": 130.011799,
                    "p95": 165.512144,
                    "p99": 165.512144,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 261.24242799999996,
                    "min": 184.938652,
                    "p50": 194.828619,
                    "p95": 261.24242799999996,
                    "p99": 261.24242799999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 198.85942899999998,
                    "min": 133.385526,
                    "p50": 172.543388,
                    "p95": 198.85942899999998,
                    "p99": 198.85942899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.000232,
                    "min": 109.09262299999999,
                    "p50": 118.273028,
                    "p95": 127.000232,
                    "p99": 127.000232,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.330382,
                    "min": 261.064239,
                    "p50": 272.071349,
                    "p95": 288.330382,
                    "p99": 288.330382,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 92.132939,
                    "min": 84.817945,
                    "p50": 88.49034999999999,
                    "p95": 92.132939,
                    "p99": 92.132939,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 171.85455,
                    "min": 121.80312599999999,
                    "p50": 140.01547,
                    "p95": 171.85455,
                    "p99": 171.85455,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 202.389763,
                    "min": 159.77763,
                    "p50": 162.113271,
                    "p95": 202.389763,
                    "p99": 202.389763,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 266.573672,
                    "min": 211.236089,
                    "p50": 229.24669899999998,
                    "p95": 266.573672,
                    "p99": 266.573672,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 423.98540699999995,
                    "min": 372.816709,
                    "p50": 379.682057,
                    "p95": 423.98540699999995,
                    "p99": 423.98540699999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 246.042443,
                    "min": 149.006338,
                    "p50": 192.427987,
                    "p95": 246.042443,
                    "p99": 246.042443,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 194.224688,
                    "min": 116.976877,
                    "p50": 151.08086799999998,
                    "p95": 194.224688,
                    "p99": 194.224688,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 128.420166,
                    "min": 87.88942999999999,
                    "p50": 100.080973,
                    "p95": 128.420166,
                    "p99": 128.420166,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 216.89823099999998,
                    "min": 194.10924899999998,
                    "p50": 205.205996,
                    "p95": 216.89823099999998,
                    "p99": 216.89823099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 299.350401,
                    "min": 242.333575,
                    "p50": 243.83316399999998,
                    "p95": 299.350401,
                    "p99": 299.350401,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 545.996657,
                    "min": 481.516096,
                    "p50": 492.203198,
                    "p95": 545.996657,
                    "p99": 545.996657,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 670.090368,
                    "min": 595.108624,
                    "p50": 646.392492,
                    "p95": 670.090368,
                    "p99": 670.090368,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1193.1137509999999,
                    "min": 1149.724006,
                    "p50": 1188.523716,
                    "p95": 1193.1137509999999,
                    "p99": 1193.1137509999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 80.624999,
                    "min": 37.447331,
                    "p50": 69.156261,
                    "p95": 80.624999,
                    "p99": 80.624999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 629.794213,
                    "min": 526.278267,
                    "p50": 565.620716,
                    "p95": 629.794213,
                    "p99": 629.794213,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 210.591965,
                    "min": 172.507421,
                    "p50": 178.98908899999998,
                    "p95": 210.591965,
                    "p99": 210.591965,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 183.426401,
                    "min": 136.47038799999999,
                    "p50": 155.053212,
                    "p95": 183.426401,
                    "p99": 183.426401,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 253.06304999999998,
                    "min": 197.28595199999998,
                    "p50": 238.344607,
                    "p95": 253.06304999999998,
                    "p99": 253.06304999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 144.246374,
                    "min": 113.468953,
                    "p50": 121.044068,
                    "p95": 144.246374,
                    "p99": 144.246374,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.21086199999999,
                    "min": 93.19229,
                    "p50": 96.711039,
                    "p95": 112.21086199999999,
                    "p99": 112.21086199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.769487,
                    "min": 60.022636,
                    "p50": 67.991753,
                    "p95": 70.769487,
                    "p99": 70.769487,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 165.052311,
                    "min": 149.379967,
                    "p50": 159.87118099999998,
                    "p95": 165.052311,
                    "p99": 165.052311,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 257.92603299999996,
                    "min": 190.240479,
                    "p50": 223.340046,
                    "p95": 257.92603299999996,
                    "p99": 257.92603299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 124.158389,
                    "min": 91.58688599999999,
                    "p50": 102.607163,
                    "p95": 124.158389,
                    "p99": 124.158389,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 161.891414,
                    "min": 118.68548,
                    "p50": 130.66104199999998,
                    "p95": 161.891414,
                    "p99": 161.891414,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 221.878157,
                    "min": 180.56891399999998,
                    "p50": 190.01767999999998,
                    "p95": 221.878157,
                    "p99": 221.878157,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 504.844342,
                    "min": 440.826981,
                    "p50": 483.378475,
                    "p95": 504.844342,
                    "p99": 504.844342,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.239333,
                    "min": 133.26688099999998,
                    "p50": 139.368853,
                    "p95": 163.239333,
                    "p99": 163.239333,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 302.589364,
                    "min": 240.755181,
                    "p50": 248.353499,
                    "p95": 302.589364,
                    "p99": 302.589364,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 196.38572499999998,
                    "min": 160.54811899999999,
                    "p50": 171.351678,
                    "p95": 196.38572499999998,
                    "p99": 196.38572499999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.379572,
                    "min": 43.873501,
                    "p50": 81.35049599999999,
                    "p95": 84.379572,
                    "p99": 84.379572,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 399.551648,
                    "min": 335.064529,
                    "p50": 358.927817,
                    "p95": 399.551648,
                    "p99": 399.551648,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 170.438123,
                    "min": 132.516047,
                    "p50": 141.715034,
                    "p95": 170.438123,
                    "p99": 170.438123,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 135.922419,
                    "min": 109.58345999999999,
                    "p50": 119.048901,
                    "p95": 135.922419,
                    "p99": 135.922419,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 207.26456299999998,
                    "min": 160.262376,
                    "p50": 165.128234,
                    "p95": 207.26456299999998,
                    "p99": 207.26456299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 596.06134,
                    "min": 480.39971799999995,
                    "p50": 552.061615,
                    "p95": 596.06134,
                    "p99": 596.06134,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 389.32269299999996,
                    "min": 344.875747,
                    "p50": 382.541255,
                    "p95": 389.32269299999996,
                    "p99": 389.32269299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 474.258716,
                    "min": 382.787056,
                    "p50": 419.10040399999997,
                    "p95": 474.258716,
                    "p99": 474.258716,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 502.15820599999995,
                    "min": 447.32462599999997,
                    "p50": 498.33306899999997,
                    "p95": 502.15820599999995,
                    "p99": 502.15820599999995,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 306.95460099999997,
                    "min": 250.59411699999998,
                    "p50": 257.296426,
                    "p95": 306.95460099999997,
                    "p99": 306.95460099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 194.481824,
                    "min": 185.18892599999998,
                    "p50": 187.55617999999998,
                    "p95": 194.481824,
                    "p99": 194.481824,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 246.85756099999998,
                    "min": 228.98045199999999,
                    "p50": 235.471613,
                    "p95": 246.85756099999998,
                    "p99": 246.85756099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 276.692447,
                    "min": 217.710801,
                    "p50": 241.92681499999998,
                    "p95": 276.692447,
                    "p99": 276.692447,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 323.766289,
                    "min": 274.077519,
                    "p50": 284.333463,
                    "p95": 323.766289,
                    "p99": 323.766289,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 364.456309,
                    "min": 296.432755,
                    "p50": 320.382831,
                    "p95": 364.456309,
                    "p99": 364.456309,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 407.06552899999997,
                    "min": 356.85713999999996,
                    "p50": 361.577181,
                    "p95": 407.06552899999997,
                    "p99": 407.06552899999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 357.220043,
                    "min": 312.15178199999997,
                    "p50": 339.15640199999996,
                    "p95": 357.220043,
                    "p99": 357.220043,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 354.26543399999997,
                    "min": 288.057365,
                    "p50": 315.68927299999996,
                    "p95": 354.26543399999997,
                    "p99": 354.26543399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 404.46754699999997,
                    "min": 347.410997,
                    "p50": 389.515251,
                    "p95": 404.46754699999997,
                    "p99": 404.46754699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 432.793948,
                    "min": 366.37976199999997,
                    "p50": 418.694152,
                    "p95": 432.793948,
                    "p99": 432.793948,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 208.667901,
                    "min": 139.762317,
                    "p50": 144.45001,
                    "p95": 208.667901,
                    "p99": 208.667901,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 192.65019999999998,
                    "min": 138.922485,
                    "p50": 163.70191499999999,
                    "p95": 192.65019999999998,
                    "p99": 192.65019999999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 281.683377,
                    "min": 172.708473,
                    "p50": 208.448093,
                    "p95": 281.683377,
                    "p99": 281.683377,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 262.051815,
                    "min": 179.04590299999998,
                    "p50": 231.021301,
                    "p95": 262.051815,
                    "p99": 262.051815,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 337.29423399999996,
                    "min": 274.05087399999996,
                    "p50": 318.760185,
                    "p95": 337.29423399999996,
                    "p99": 337.29423399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.31068299999998,
                    "min": 81.40917499999999,
                    "p50": 122.232214,
                    "p95": 131.31068299999998,
                    "p99": 131.31068299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 294.494673,
                    "min": 224.22115399999998,
                    "p50": 234.38502699999998,
                    "p95": 294.494673,
                    "p99": 294.494673,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 526.336456,
                    "min": 449.555205,
                    "p50": 499.679957,
                    "p95": 526.336456,
                    "p99": 526.336456,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 588.006235,
                    "min": 517.906338,
                    "p50": 554.4897579999999,
                    "p95": 588.006235,
                    "p99": 588.006235,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 442.041005,
                    "min": 387.98916299999996,
                    "p50": 406.660853,
                    "p95": 442.041005,
                    "p99": 442.041005,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 321.435613,
                    "min": 252.76281,
                    "p50": 262.15646599999997,
                    "p95": 321.435613,
                    "p99": 321.435613,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 363.792391,
                    "min": 308.14651399999997,
                    "p50": 320.061125,
                    "p95": 363.792391,
                    "p99": 363.792391,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 474.896827,
                    "min": 399.282401,
                    "p50": 426.642955,
                    "p95": 474.896827,
                    "p99": 474.896827,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 417.14498799999996,
                    "min": 339.22475299999996,
                    "p50": 383.31944,
                    "p95": 417.14498799999996,
                    "p99": 417.14498799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 429.256572,
                    "min": 420.427141,
                    "p50": 425.00129599999997,
                    "p95": 429.256572,
                    "p99": 429.256572,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 493.806563,
                    "min": 469.51424699999995,
                    "p50": 483.129532,
                    "p95": 493.806563,
                    "p99": 493.806563,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 369.12967299999997,
                    "min": 338.904545,
                    "p50": 356.315088,
                    "p95": 369.12967299999997,
                    "p99": 369.12967299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 392.469271,
                    "min": 291.38289399999996,
                    "p50": 335.19670199999996,
                    "p95": 392.469271,
                    "p99": 392.469271,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.552396,
                    "min": 100.799043,
                    "p50": 120.457337,
                    "p95": 143.552396,
                    "p99": 143.552396,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 630.047958,
                    "min": 501.474653,
                    "p50": 554.343226,
                    "p95": 630.047958,
                    "p99": 630.047958,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 323.523626,
                    "min": 262.322777,
                    "p50": 280.478048,
                    "p95": 323.523626,
                    "p99": 323.523626,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 322.00428,
                    "min": 258.39018699999997,
                    "p50": 294.22185099999996,
                    "p95": 322.00428,
                    "p99": 322.00428,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 233.15829499999998,
                    "min": 185.133477,
                    "p50": 207.373787,
                    "p95": 233.15829499999998,
                    "p99": 233.15829499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 311.269507,
                    "min": 225.783874,
                    "p50": 238.377556,
                    "p95": 311.269507,
                    "p99": 311.269507,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 275.49571399999996,
                    "min": 204.987144,
                    "p50": 248.29483599999998,
                    "p95": 275.49571399999996,
                    "p99": 275.49571399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 169.21332099999998,
                    "min": 130.189298,
                    "p50": 140.117335,
                    "p95": 169.21332099999998,
                    "p99": 169.21332099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 194.191917,
                    "min": 160.918193,
                    "p50": 182.510616,
                    "p95": 194.191917,
                    "p99": 194.191917,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 406.713196,
                    "min": 353.313835,
                    "p50": 373.783285,
                    "p95": 406.713196,
                    "p99": 406.713196,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 447.895759,
                    "min": 377.53191599999997,
                    "p50": 402.064625,
                    "p95": 447.895759,
                    "p99": 447.895759,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 358.49031299999996,
                    "min": 312.241605,
                    "p50": 348.891505,
                    "p95": 358.49031299999996,
                    "p99": 358.49031299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 483.54316,
                    "min": 435.094928,
                    "p50": 475.57336,
                    "p95": 483.54316,
                    "p99": 483.54316,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 152.53457799999998,
                    "min": 89.698197,
                    "p50": 138.918045,
                    "p95": 152.53457799999998,
                    "p99": 152.53457799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 360.84310999999997,
                    "min": 278.41099099999997,
                    "p50": 327.666399,
                    "p95": 360.84310999999997,
                    "p99": 360.84310999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 564.501587,
                    "min": 487.587319,
                    "p50": 533.298329,
                    "p95": 564.501587,
                    "p99": 564.501587,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.6737,
                    "min": 172.546346,
                    "p50": 179.84210099999999,
                    "p95": 185.6737,
                    "p99": 185.6737,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 233.99568599999998,
                    "min": 199.81739299999998,
                    "p50": 224.86116199999998,
                    "p95": 233.99568599999998,
                    "p99": 233.99568599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 227.35315799999998,
                    "min": 193.490995,
                    "p50": 202.813242,
                    "p95": 227.35315799999998,
                    "p99": 227.35315799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 161.297888,
                    "min": 149.874859,
                    "p50": 158.289482,
                    "p95": 161.297888,
                    "p99": 161.297888,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 305.10461699999996,
                    "min": 241.87653899999998,
                    "p50": 276.341121,
                    "p95": 305.10461699999996,
                    "p99": 305.10461699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 281.269115,
                    "min": 255.90975999999998,
                    "p50": 270.319709,
                    "p95": 281.269115,
                    "p99": 281.269115,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 135.387861,
                    "min": 113.94466299999999,
                    "p50": 118.89313,
                    "p95": 135.387861,
                    "p99": 135.387861,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 380.59817499999997,
                    "min": 334.706761,
                    "p50": 356.79135199999996,
                    "p95": 380.59817499999997,
                    "p99": 380.59817499999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2304.054051,
                    "min": 2218.969917,
                    "p50": 2260.900192,
                    "p95": 2304.054051,
                    "p99": 2304.054051,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1395.119438,
                    "min": 1340.363891,
                    "p50": 1366.135615,
                    "p95": 1395.119438,
                    "p99": 1395.119438,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1693.896892,
                    "min": 1646.1726449999999,
                    "p50": 1668.7069529999999,
                    "p95": 1693.896892,
                    "p99": 1693.896892,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1173.622132,
                    "min": 1066.565541,
                    "p50": 1096.481951,
                    "p95": 1173.622132,
                    "p99": 1173.622132,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 962.304219,
                    "min": 928.263596,
                    "p50": 935.871304,
                    "p95": 962.304219,
                    "p99": 962.304219,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1562.6131269999998,
                    "min": 1492.26191,
                    "p50": 1520.232235,
                    "p95": 1562.6131269999998,
                    "p99": 1562.6131269999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 556.504734,
                    "min": 450.900559,
                    "p50": 490.07132299999995,
                    "p95": 556.504734,
                    "p99": 556.504734,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 646.004696,
                    "min": 626.4895759999999,
                    "p50": 636.148976,
                    "p95": 646.004696,
                    "p99": 646.004696,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1270.898459,
                    "min": 1181.559121,
                    "p50": 1211.408013,
                    "p95": 1270.898459,
                    "p99": 1270.898459,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 791.299002,
                    "min": 778.692492,
                    "p50": 788.3860599999999,
                    "p95": 791.299002,
                    "p99": 791.299002,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3083.479489,
                    "min": 2950.5394269999997,
                    "p50": 2995.151258,
                    "p95": 3083.479489,
                    "p99": 3083.479489,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1829.644748,
                    "min": 1779.761049,
                    "p50": 1809.028455,
                    "p95": 1829.644748,
                    "p99": 1829.644748,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2697.117973,
                    "min": 2563.105988,
                    "p50": 2625.571247,
                    "p95": 2697.117973,
                    "p99": 2697.117973,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2121.7622029999998,
                    "min": 2041.1534029999998,
                    "p50": 2105.941426,
                    "p95": 2121.7622029999998,
                    "p99": 2121.7622029999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1972.5767959999998,
                    "min": 1928.470545,
                    "p50": 1950.553265,
                    "p95": 1972.5767959999998,
                    "p99": 1972.5767959999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4540.439993999999,
                    "min": 4413.919296,
                    "p50": 4442.860461,
                    "p95": 4540.439993999999,
                    "p99": 4540.439993999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1014.366945,
                    "min": 972.310065,
                    "p50": 996.2479,
                    "p95": 1014.366945,
                    "p99": 1014.366945,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 751.891972,
                    "min": 732.254587,
                    "p50": 743.903556,
                    "p95": 751.891972,
                    "p99": 751.891972,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 872.5869789999999,
                    "min": 859.800159,
                    "p50": 868.690351,
                    "p95": 872.5869789999999,
                    "p99": 872.5869789999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1403.264076,
                    "min": 1284.940879,
                    "p50": 1297.404653,
                    "p95": 1403.264076,
                    "p99": 1403.264076,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1203.698875,
                    "min": 1132.323087,
                    "p50": 1145.6398179999999,
                    "p95": 1203.698875,
                    "p99": 1203.698875,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 859.4090789999999,
                    "min": 798.239241,
                    "p50": 832.5191249999999,
                    "p95": 859.4090789999999,
                    "p99": 859.4090789999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 264.164958,
                    "min": 232.93114699999998,
                    "p50": 240.989063,
                    "p95": 264.164958,
                    "p99": 264.164958,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 340.30265099999997,
                    "min": 294.02723599999996,
                    "p50": 303.710731,
                    "p95": 340.30265099999997,
                    "p99": 340.30265099999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 702.669579,
                    "min": 643.0904039999999,
                    "p50": 683.554139,
                    "p95": 702.669579,
                    "p99": 702.669579,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 472.36837499999996,
                    "min": 418.968235,
                    "p50": 427.455472,
                    "p95": 472.36837499999996,
                    "p99": 472.36837499999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 633.723785,
                    "min": 606.637301,
                    "p50": 616.584079,
                    "p95": 633.723785,
                    "p99": 633.723785,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 378.027581,
                    "min": 348.89158,
                    "p50": 363.034625,
                    "p95": 378.027581,
                    "p99": 378.027581,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 937.0172329999999,
                    "min": 908.949536,
                    "p50": 925.2973029999999,
                    "p95": 937.0172329999999,
                    "p99": 937.0172329999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 588.4369909999999,
                    "min": 541.833085,
                    "p50": 558.385005,
                    "p95": 588.4369909999999,
                    "p99": 588.4369909999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 563.203233,
                    "min": 478.039771,
                    "p50": 493.630167,
                    "p95": 563.203233,
                    "p99": 563.203233,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 804.5703699999999,
                    "min": 690.573842,
                    "p50": 704.079529,
                    "p95": 804.5703699999999,
                    "p99": 804.5703699999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 313.839952,
                    "min": 301.07703399999997,
                    "p50": 310.579727,
                    "p95": 313.839952,
                    "p99": 313.839952,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 582.979412,
                    "min": 566.303763,
                    "p50": 576.645054,
                    "p95": 582.979412,
                    "p99": 582.979412,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 514.889555,
                    "min": 506.42035599999997,
                    "p50": 510.236337,
                    "p95": 514.889555,
                    "p99": 514.889555,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 449.94111699999996,
                    "min": 432.63123099999996,
                    "p50": 443.666117,
                    "p95": 449.94111699999996,
                    "p99": 449.94111699999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1047.9884,
                    "min": 1022.9716679999999,
                    "p50": 1029.266114,
                    "p95": 1047.9884,
                    "p99": 1047.9884,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 915.4914339999999,
                    "min": 878.4415849999999,
                    "p50": 892.411807,
                    "p95": 915.4914339999999,
                    "p99": 915.4914339999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1382.05551,
                    "min": 1338.510006,
                    "p50": 1360.985987,
                    "p95": 1382.05551,
                    "p99": 1382.05551,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2078.895891,
                    "min": 1974.969214,
                    "p50": 2014.557474,
                    "p95": 2078.895891,
                    "p99": 2078.895891,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 899.689343,
                    "min": 816.246799,
                    "p50": 873.4637329999999,
                    "p95": 899.689343,
                    "p99": 899.689343,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 394.883948,
                    "min": 342.135535,
                    "p50": 375.40763799999996,
                    "p95": 394.883948,
                    "p99": 394.883948,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 782.141705,
                    "min": 754.2370219999999,
                    "p50": 772.102721,
                    "p95": 782.141705,
                    "p99": 782.141705,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 272.403612,
                    "min": 237.18975999999998,
                    "p50": 246.830503,
                    "p95": 272.403612,
                    "p99": 272.403612,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 963.619477,
                    "min": 936.539851,
                    "p50": 958.200241,
                    "p95": 963.619477,
                    "p99": 963.619477,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1225.642816,
                    "min": 1176.1451459999998,
                    "p50": 1191.609863,
                    "p95": 1225.642816,
                    "p99": 1225.642816,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 656.0238069999999,
                    "min": 629.628461,
                    "p50": 640.69468,
                    "p95": 656.0238069999999,
                    "p99": 656.0238069999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2487.398132,
                    "min": 2434.835174,
                    "p50": 2458.9718439999997,
                    "p95": 2487.398132,
                    "p99": 2487.398132,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 637.508382,
                    "min": 594.691389,
                    "p50": 598.772653,
                    "p95": 637.508382,
                    "p99": 637.508382,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 457.10596799999996,
                    "min": 401.770293,
                    "p50": 410.094039,
                    "p95": 457.10596799999996,
                    "p99": 457.10596799999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 779.051792,
                    "min": 766.927193,
                    "p50": 776.503665,
                    "p95": 779.051792,
                    "p99": 779.051792,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 311.64095299999997,
                    "min": 286.143555,
                    "p50": 292.768428,
                    "p95": 311.64095299999997,
                    "p99": 311.64095299999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1281.789935,
                    "min": 1247.0876449999998,
                    "p50": 1272.4050479999999,
                    "p95": 1281.789935,
                    "p99": 1281.789935,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 998.044589,
                    "min": 941.9547289999999,
                    "p50": 957.5543819999999,
                    "p95": 998.044589,
                    "p99": 998.044589,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 949.0991769999999,
                    "min": 880.32953,
                    "p50": 892.62673,
                    "p95": 949.0991769999999,
                    "p99": 949.0991769999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 259.573923,
                    "min": 229.95988599999998,
                    "p50": 233.18873499999998,
                    "p95": 259.573923,
                    "p99": 259.573923,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 392.526119,
                    "min": 346.653274,
                    "p50": 353.647424,
                    "p95": 392.526119,
                    "p99": 392.526119,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1130.506795,
                    "min": 1092.703017,
                    "p50": 1106.049806,
                    "p95": 1130.506795,
                    "p99": 1130.506795,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 580.170382,
                    "min": 529.679518,
                    "p50": 541.8563819999999,
                    "p95": 580.170382,
                    "p99": 580.170382,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 745.744335,
                    "min": 707.187951,
                    "p50": 722.857541,
                    "p95": 745.744335,
                    "p99": 745.744335,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 501.370228,
                    "min": 467.424062,
                    "p50": 477.130226,
                    "p95": 501.370228,
                    "p99": 501.370228,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 884.418627,
                    "min": 803.879071,
                    "p50": 842.904041,
                    "p95": 884.418627,
                    "p99": 884.418627,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1883.6981409999999,
                    "min": 1832.4197319999998,
                    "p50": 1858.3184999999999,
                    "p95": 1883.6981409999999,
                    "p99": 1883.6981409999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3091.7599579999996,
                    "min": 3026.1762289999997,
                    "p50": 3045.70297,
                    "p95": 3091.7599579999996,
                    "p99": 3091.7599579999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 677.7059509999999,
                    "min": 643.343526,
                    "p50": 656.481783,
                    "p95": 677.7059509999999,
                    "p99": 677.7059509999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 383.756984,
                    "min": 353.09427999999997,
                    "p50": 363.477369,
                    "p95": 383.756984,
                    "p99": 383.756984,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 965.949248,
                    "min": 902.787293,
                    "p50": 917.026941,
                    "p95": 965.949248,
                    "p99": 965.949248,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1388.367293,
                    "min": 1322.69768,
                    "p50": 1349.489722,
                    "p95": 1388.367293,
                    "p99": 1388.367293,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2242.0543239999997,
                    "min": 2187.921105,
                    "p50": 2206.2938719999997,
                    "p95": 2242.0543239999997,
                    "p99": 2242.0543239999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1856.060276,
                    "min": 1764.4762249999999,
                    "p50": 1779.1053889999998,
                    "p95": 1856.060276,
                    "p99": 1856.060276,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 403.456014,
                    "min": 378.352398,
                    "p50": 394.004729,
                    "p95": 403.456014,
                    "p99": 403.456014,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 860.5960689999999,
                    "min": 805.144901,
                    "p50": 819.16881,
                    "p95": 860.5960689999999,
                    "p99": 860.5960689999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 331.133349,
                    "min": 301.28288,
                    "p50": 311.113796,
                    "p95": 331.133349,
                    "p99": 331.133349,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 709.714426,
                    "min": 625.129544,
                    "p50": 659.73727,
                    "p95": 709.714426,
                    "p99": 709.714426,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 709.79158,
                    "min": 694.606554,
                    "p50": 701.027754,
                    "p95": 709.79158,
                    "p99": 709.79158,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.44133,
                    "min": 220.99404099999998,
                    "p50": 225.05025999999998,
                    "p95": 247.44133,
                    "p99": 247.44133,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 554.2129239999999,
                    "min": 524.1123729999999,
                    "p50": 532.700146,
                    "p95": 554.2129239999999,
                    "p99": 554.2129239999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 617.036763,
                    "min": 570.773118,
                    "p50": 579.9740959999999,
                    "p95": 617.036763,
                    "p99": 617.036763,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 276.8102,
                    "min": 259.42642,
                    "p50": 270.117694,
                    "p95": 276.8102,
                    "p99": 276.8102,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.77523499999998,
                    "min": 171.706427,
                    "p50": 181.97292099999999,
                    "p95": 187.77523499999998,
                    "p99": 187.77523499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 636.912426,
                    "min": 614.2077059999999,
                    "p50": 615.739929,
                    "p95": 636.912426,
                    "p99": 636.912426,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 488.91288699999996,
                    "min": 474.48038299999996,
                    "p50": 485.35717,
                    "p95": 488.91288699999996,
                    "p99": 488.91288699999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 446.62400599999995,
                    "min": 430.41576299999997,
                    "p50": 441.191604,
                    "p95": 446.62400599999995,
                    "p99": 446.62400599999995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 692.5461379999999,
                    "min": 664.2549349999999,
                    "p50": 669.388259,
                    "p95": 692.5461379999999,
                    "p99": 692.5461379999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1026.1990839999999,
                    "min": 997.0282149999999,
                    "p50": 1018.286113,
                    "p95": 1026.1990839999999,
                    "p99": 1026.1990839999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 929.7063909999999,
                    "min": 865.667385,
                    "p50": 887.365247,
                    "p95": 929.7063909999999,
                    "p99": 929.7063909999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 258.35526,
                    "min": 235.007712,
                    "p50": 255.56785399999998,
                    "p95": 258.35526,
                    "p99": 258.35526,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1446.225587,
                    "min": 1398.135251,
                    "p50": 1425.574224,
                    "p95": 1446.225587,
                    "p99": 1446.225587,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 601.57832,
                    "min": 566.830551,
                    "p50": 599.052092,
                    "p95": 601.57832,
                    "p99": 601.57832,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 393.603932,
                    "min": 381.19451899999996,
                    "p50": 389.954168,
                    "p95": 393.603932,
                    "p99": 393.603932,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 827.3457559999999,
                    "min": 789.9813419999999,
                    "p50": 810.598204,
                    "p95": 827.3457559999999,
                    "p99": 827.3457559999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 529.602525,
                    "min": 431.735257,
                    "p50": 479.17632799999996,
                    "p95": 529.602525,
                    "p99": 529.602525,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1269.927636,
                    "min": 1233.559334,
                    "p50": 1258.289667,
                    "p95": 1269.927636,
                    "p99": 1269.927636,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 343.528098,
                    "min": 316.891998,
                    "p50": 326.50606899999997,
                    "p95": 343.528098,
                    "p99": 343.528098,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1107.473725,
                    "min": 1065.667751,
                    "p50": 1081.6958339999999,
                    "p95": 1107.473725,
                    "p99": 1107.473725,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 567.4527069999999,
                    "min": 525.919357,
                    "p50": 533.337671,
                    "p95": 567.4527069999999,
                    "p99": 567.4527069999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 946.397885,
                    "min": 924.3928249999999,
                    "p50": 937.687612,
                    "p95": 946.397885,
                    "p99": 946.397885,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 785.315925,
                    "min": 726.10356,
                    "p50": 737.5634719999999,
                    "p95": 785.315925,
                    "p99": 785.315925,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 341.37102799999997,
                    "min": 292.270922,
                    "p50": 302.73734099999996,
                    "p95": 341.37102799999997,
                    "p99": 341.37102799999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 817.7522299999999,
                    "min": 793.449626,
                    "p50": 797.4883619999999,
                    "p95": 817.7522299999999,
                    "p99": 817.7522299999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 543.806306,
                    "min": 491.548524,
                    "p50": 508.07232799999997,
                    "p95": 543.806306,
                    "p99": 543.806306,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 773.8990729999999,
                    "min": 689.259291,
                    "p50": 695.442456,
                    "p95": 773.8990729999999,
                    "p99": 773.8990729999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1044.055846,
                    "min": 1021.523252,
                    "p50": 1033.672255,
                    "p95": 1044.055846,
                    "p99": 1044.055846,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 606.210655,
                    "min": 584.560833,
                    "p50": 599.592347,
                    "p95": 606.210655,
                    "p99": 606.210655,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 767.619374,
                    "min": 725.8752529999999,
                    "p50": 742.938184,
                    "p95": 767.619374,
                    "p99": 767.619374,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1591.673501,
                    "min": 1510.351986,
                    "p50": 1531.171521,
                    "p95": 1591.673501,
                    "p99": 1591.673501,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 426.472806,
                    "min": 390.636014,
                    "p50": 401.70389,
                    "p95": 426.472806,
                    "p99": 426.472806,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 235.692048,
                    "min": 186.42737,
                    "p50": 205.03385,
                    "p95": 235.692048,
                    "p99": 235.692048,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 596.612536,
                    "min": 506.771907,
                    "p50": 547.951061,
                    "p95": 596.612536,
                    "p99": 596.612536,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 365.385319,
                    "min": 345.418979,
                    "p50": 349.074015,
                    "p95": 365.385319,
                    "p99": 365.385319,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 256.63809499999996,
                    "min": 239.98614999999998,
                    "p50": 250.928484,
                    "p95": 256.63809499999996,
                    "p99": 256.63809499999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 465.961444,
                    "min": 437.799937,
                    "p50": 447.001427,
                    "p95": 465.961444,
                    "p99": 465.961444,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 959.0012419999999,
                    "min": 909.314613,
                    "p50": 920.75882,
                    "p95": 959.0012419999999,
                    "p99": 959.0012419999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 651.484376,
                    "min": 633.7742579999999,
                    "p50": 646.488648,
                    "p95": 651.484376,
                    "p99": 651.484376,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 836.0069589999999,
                    "min": 782.171828,
                    "p50": 793.2069399999999,
                    "p95": 836.0069589999999,
                    "p99": 836.0069589999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 993.5641529999999,
                    "min": 895.5663949999999,
                    "p50": 928.0353399999999,
                    "p95": 993.5641529999999,
                    "p99": 993.5641529999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1028.675309,
                    "min": 958.7967229999999,
                    "p50": 987.307432,
                    "p95": 1028.675309,
                    "p99": 1028.675309,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 647.286127,
                    "min": 603.1967999999999,
                    "p50": 612.099161,
                    "p95": 647.286127,
                    "p99": 647.286127,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 452.380897,
                    "min": 417.630764,
                    "p50": 422.41425,
                    "p95": 452.380897,
                    "p99": 452.380897,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 553.986331,
                    "min": 531.00625,
                    "p50": 545.555486,
                    "p95": 553.986331,
                    "p99": 553.986331,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 329.35299799999996,
                    "min": 293.557047,
                    "p50": 298.918663,
                    "p95": 329.35299799999996,
                    "p99": 329.35299799999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 394.951932,
                    "min": 357.436192,
                    "p50": 362.64070699999996,
                    "p95": 394.951932,
                    "p99": 394.951932,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 829.7407589999999,
                    "min": 652.1864439999999,
                    "p50": 666.108399,
                    "p95": 829.7407589999999,
                    "p99": 829.7407589999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 492.276925,
                    "min": 474.574168,
                    "p50": 484.49276299999997,
                    "p95": 492.276925,
                    "p99": 492.276925,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1445.6449639999998,
                    "min": 1238.070811,
                    "p50": 1289.8360169999999,
                    "p95": 1445.6449639999998,
                    "p99": 1445.6449639999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 773.552773,
                    "min": 716.5360549999999,
                    "p50": 730.6876239999999,
                    "p95": 773.552773,
                    "p99": 773.552773,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1233.082787,
                    "min": 1123.162133,
                    "p50": 1140.1923359999998,
                    "p95": 1233.082787,
                    "p99": 1233.082787,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.985461,
                    "min": 227.465114,
                    "p50": 234.636528,
                    "p95": 261.985461,
                    "p99": 261.985461,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 889.627439,
                    "min": 847.484198,
                    "p50": 859.938002,
                    "p95": 889.627439,
                    "p99": 889.627439,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 659.6644689999999,
                    "min": 562.99735,
                    "p50": 579.949314,
                    "p95": 659.6644689999999,
                    "p99": 659.6644689999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 344.80253999999996,
                    "min": 305.110824,
                    "p50": 325.96102199999996,
                    "p95": 344.80253999999996,
                    "p99": 344.80253999999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 259.869011,
                    "min": 213.82753699999998,
                    "p50": 225.535026,
                    "p95": 259.869011,
                    "p99": 259.869011,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 200.364597,
                    "min": 181.810587,
                    "p50": 185.31426299999998,
                    "p95": 200.364597,
                    "p99": 200.364597,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 669.253112,
                    "min": 614.643751,
                    "p50": 620.782937,
                    "p95": 669.253112,
                    "p99": 669.253112,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 750.7179659999999,
                    "min": 696.408496,
                    "p50": 711.271663,
                    "p95": 750.7179659999999,
                    "p99": 750.7179659999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 453.332088,
                    "min": 439.31724599999995,
                    "p50": 448.70397499999996,
                    "p95": 453.332088,
                    "p99": 453.332088,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 970.433238,
                    "min": 912.596988,
                    "p50": 930.547774,
                    "p95": 970.433238,
                    "p99": 970.433238,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 585.5548679999999,
                    "min": 481.449589,
                    "p50": 503.739599,
                    "p95": 585.5548679999999,
                    "p99": 585.5548679999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.08732499999996,
                    "min": 350.04330899999997,
                    "p50": 354.897607,
                    "p95": 362.08732499999996,
                    "p99": 362.08732499999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 839.50123,
                    "min": 805.8216709999999,
                    "p50": 815.0869329999999,
                    "p95": 839.50123,
                    "p99": 839.50123,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.217808,
                    "min": 656.643021,
                    "p50": 662.739411,
                    "p95": 705.217808,
                    "p99": 705.217808,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 276.51768799999996,
                    "min": 266.519162,
                    "p50": 271.069796,
                    "p95": 276.51768799999996,
                    "p99": 276.51768799999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 410.757654,
                    "min": 362.480355,
                    "p50": 398.76811699999996,
                    "p95": 410.757654,
                    "p99": 410.757654,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1418.298793,
                    "min": 1359.624772,
                    "p50": 1377.006827,
                    "p95": 1418.298793,
                    "p99": 1418.298793,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 544.299577,
                    "min": 484.11015699999996,
                    "p50": 535.3951959999999,
                    "p95": 544.299577,
                    "p99": 544.299577,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1856.447721,
                    "min": 1760.345989,
                    "p50": 1799.127701,
                    "p95": 1856.447721,
                    "p99": 1856.447721,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1001.3051979999999,
                    "min": 961.488573,
                    "p50": 975.249794,
                    "p95": 1001.3051979999999,
                    "p99": 1001.3051979999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 575.50139,
                    "min": 502.078983,
                    "p50": 513.87091,
                    "p95": 575.50139,
                    "p99": 575.50139,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1930.285841,
                    "min": 1843.9878729999998,
                    "p50": 1885.0856039999999,
                    "p95": 1930.285841,
                    "p99": 1930.285841,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1333.9072469999999,
                    "min": 1318.391599,
                    "p50": 1328.543136,
                    "p95": 1333.9072469999999,
                    "p99": 1333.9072469999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 616.175514,
                    "min": 596.842554,
                    "p50": 608.81752,
                    "p95": 616.175514,
                    "p99": 616.175514,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1477.149925,
                    "min": 1422.714822,
                    "p50": 1432.840524,
                    "p95": 1477.149925,
                    "p99": 1477.149925,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 801.275723,
                    "min": 667.447546,
                    "p50": 702.0706319999999,
                    "p95": 801.275723,
                    "p99": 801.275723,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1192.99355,
                    "min": 1111.2231629999999,
                    "p50": 1156.844499,
                    "p95": 1192.99355,
                    "p99": 1192.99355,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 999.6254839999999,
                    "min": 866.973838,
                    "p50": 885.1970779999999,
                    "p95": 999.6254839999999,
                    "p99": 999.6254839999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1286.08752,
                    "min": 1205.325735,
                    "p50": 1237.626471,
                    "p95": 1286.08752,
                    "p99": 1286.08752,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1665.676694,
                    "min": 1633.859638,
                    "p50": 1656.8430139999998,
                    "p95": 1665.676694,
                    "p99": 1665.676694,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 829.851816,
                    "min": 779.426081,
                    "p50": 797.914036,
                    "p95": 829.851816,
                    "p99": 829.851816,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1109.002337,
                    "min": 1050.741151,
                    "p50": 1064.264718,
                    "p95": 1109.002337,
                    "p99": 1109.002337,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 369.795868,
                    "min": 289.54846499999996,
                    "p50": 332.278117,
                    "p95": 369.795868,
                    "p99": 369.795868,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 456.974759,
                    "min": 401.77725399999997,
                    "p50": 421.46221399999996,
                    "p95": 456.974759,
                    "p99": 456.974759,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 564.718581,
                    "min": 549.814695,
                    "p50": 557.8239219999999,
                    "p95": 564.718581,
                    "p99": 564.718581,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.621172,
                    "min": 249.318895,
                    "p50": 255.357191,
                    "p95": 291.621172,
                    "p99": 291.621172,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 705.8689109999999,
                    "min": 644.941026,
                    "p50": 662.792783,
                    "p95": 705.8689109999999,
                    "p99": 705.8689109999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 791.3722819999999,
                    "min": 758.318442,
                    "p50": 768.37968,
                    "p95": 791.3722819999999,
                    "p99": 791.3722819999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 333.458155,
                    "min": 299.89450899999997,
                    "p50": 304.779075,
                    "p95": 333.458155,
                    "p99": 333.458155,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 562.621441,
                    "min": 498.705766,
                    "p50": 507.476674,
                    "p95": 562.621441,
                    "p99": 562.621441,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 479.154685,
                    "min": 449.76271299999996,
                    "p50": 467.586758,
                    "p95": 479.154685,
                    "p99": 479.154685,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 367.81019799999996,
                    "min": 350.93913699999996,
                    "p50": 358.859327,
                    "p95": 367.81019799999996,
                    "p99": 367.81019799999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 211.995107,
                    "min": 195.31063,
                    "p50": 205.35448499999998,
                    "p95": 211.995107,
                    "p99": 211.995107,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 991.423909,
                    "min": 928.10973,
                    "p50": 935.825528,
                    "p95": 991.423909,
                    "p99": 991.423909,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 628.917653,
                    "min": 604.6895509999999,
                    "p50": 615.323401,
                    "p95": 628.917653,
                    "p99": 628.917653,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 742.163136,
                    "min": 693.993017,
                    "p50": 722.9263679999999,
                    "p95": 742.163136,
                    "p99": 742.163136,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1155.019343,
                    "min": 1058.213057,
                    "p50": 1109.7493729999999,
                    "p95": 1155.019343,
                    "p99": 1155.019343,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 912.3950199999999,
                    "min": 813.7630389999999,
                    "p50": 821.456208,
                    "p95": 912.3950199999999,
                    "p99": 912.3950199999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 422.46774899999997,
                    "min": 398.63946699999997,
                    "p50": 404.005254,
                    "p95": 422.46774899999997,
                    "p99": 422.46774899999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1166.864714,
                    "min": 1108.42958,
                    "p50": 1132.013227,
                    "p95": 1166.864714,
                    "p99": 1166.864714,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 703.383549,
                    "min": 649.987898,
                    "p50": 666.7484489999999,
                    "p95": 703.383549,
                    "p99": 703.383549,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 949.312278,
                    "min": 901.7424589999999,
                    "p50": 916.218097,
                    "p95": 949.312278,
                    "p99": 949.312278,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1020.5203889999999,
                    "min": 939.656747,
                    "p50": 977.2560279999999,
                    "p95": 1020.5203889999999,
                    "p99": 1020.5203889999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1375.394624,
                    "min": 1272.6125,
                    "p50": 1282.184611,
                    "p95": 1375.394624,
                    "p99": 1375.394624,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 774.952499,
                    "min": 715.697957,
                    "p50": 727.157876,
                    "p95": 774.952499,
                    "p99": 774.952499,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 489.288104,
                    "min": 414.17549099999997,
                    "p50": 420.79792199999997,
                    "p95": 489.288104,
                    "p99": 489.288104,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 554.969507,
                    "min": 525.808435,
                    "p50": 548.954359,
                    "p95": 554.969507,
                    "p99": 554.969507,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 946.9095149999999,
                    "min": 837.033243,
                    "p50": 866.04004,
                    "p95": 946.9095149999999,
                    "p99": 946.9095149999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 819.885801,
                    "min": 773.821453,
                    "p50": 803.327246,
                    "p95": 819.885801,
                    "p99": 819.885801,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1946.933717,
                    "min": 1871.354811,
                    "p50": 1920.379086,
                    "p95": 1946.933717,
                    "p99": 1946.933717,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 533.4736879999999,
                    "min": 469.01751299999995,
                    "p50": 478.16697,
                    "p95": 533.4736879999999,
                    "p99": 533.4736879999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 265.011733,
                    "min": 227.752757,
                    "p50": 237.255754,
                    "p95": 265.011733,
                    "p99": 265.011733,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 388.82154099999997,
                    "min": 357.23132999999996,
                    "p50": 368.205674,
                    "p95": 388.82154099999997,
                    "p99": 388.82154099999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 647.061256,
                    "min": 604.093337,
                    "p50": 605.975898,
                    "p95": 647.061256,
                    "p99": 647.061256,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.54074099999997,
                    "min": 284.090011,
                    "p50": 299.7924,
                    "p95": 307.54074099999997,
                    "p99": 307.54074099999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1139.9506039999999,
                    "min": 1040.1634669999999,
                    "p50": 1081.836237,
                    "p95": 1139.9506039999999,
                    "p99": 1139.9506039999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 583.88794,
                    "min": 505.68826099999995,
                    "p50": 526.950154,
                    "p95": 583.88794,
                    "p99": 583.88794,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 255.190384,
                    "min": 243.43515399999998,
                    "p50": 252.60575599999999,
                    "p95": 255.190384,
                    "p99": 255.190384,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.00762499999996,
                    "min": 307.728854,
                    "p50": 320.00361699999996,
                    "p95": 365.00762499999996,
                    "p99": 365.00762499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 732.394099,
                    "min": 712.717196,
                    "p50": 722.1474,
                    "p95": 732.394099,
                    "p99": 732.394099,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 457.792605,
                    "min": 445.75438699999995,
                    "p50": 453.18008299999997,
                    "p95": 457.792605,
                    "p99": 457.792605,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1420.6237919999999,
                    "min": 1378.1489139999999,
                    "p50": 1401.9519209999999,
                    "p95": 1420.6237919999999,
                    "p99": 1420.6237919999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 389.810636,
                    "min": 374.10940899999997,
                    "p50": 381.639881,
                    "p95": 389.810636,
                    "p99": 389.810636,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 841.4033499999999,
                    "min": 771.4732779999999,
                    "p50": 789.654952,
                    "p95": 841.4033499999999,
                    "p99": 841.4033499999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 636.156961,
                    "min": 589.74094,
                    "p50": 599.7760059999999,
                    "p95": 636.156961,
                    "p99": 636.156961,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 878.608338,
                    "min": 845.03026,
                    "p50": 851.3539169999999,
                    "p95": 878.608338,
                    "p99": 878.608338,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 932.646678,
                    "min": 911.041655,
                    "p50": 921.583663,
                    "p95": 932.646678,
                    "p99": 932.646678,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1239.698183,
                    "min": 1201.157428,
                    "p50": 1211.101447,
                    "p95": 1239.698183,
                    "p99": 1239.698183,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 991.330249,
                    "min": 977.2400849999999,
                    "p50": 982.573326,
                    "p95": 991.330249,
                    "p99": 991.330249,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 714.30292,
                    "min": 643.604617,
                    "p50": 653.783366,
                    "p95": 714.30292,
                    "p99": 714.30292,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.93262899999996,
                    "min": 249.83738,
                    "p50": 257.59770299999997,
                    "p95": 281.93262899999996,
                    "p99": 281.93262899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 887.434947,
                    "min": 802.663915,
                    "p50": 856.9859429999999,
                    "p95": 887.434947,
                    "p99": 887.434947,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 660.879379,
                    "min": 604.2121129999999,
                    "p50": 626.7772649999999,
                    "p95": 660.879379,
                    "p99": 660.879379,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 572.8999249999999,
                    "min": 504.806678,
                    "p50": 514.3423799999999,
                    "p95": 572.8999249999999,
                    "p99": 572.8999249999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 412.425857,
                    "min": 322.242031,
                    "p50": 359.94905,
                    "p95": 412.425857,
                    "p99": 412.425857,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 241.605665,
                    "min": 197.961875,
                    "p50": 212.311625,
                    "p95": 241.605665,
                    "p99": 241.605665,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 312.426546,
                    "min": 265.817192,
                    "p50": 305.533353,
                    "p95": 312.426546,
                    "p99": 312.426546,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 807.386349,
                    "min": 757.316729,
                    "p50": 766.578531,
                    "p95": 807.386349,
                    "p99": 807.386349,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 986.625674,
                    "min": 933.006083,
                    "p50": 945.388335,
                    "p95": 986.625674,
                    "p99": 986.625674,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 449.038362,
                    "min": 399.432634,
                    "p50": 409.732714,
                    "p95": 449.038362,
                    "p99": 449.038362,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 609.732633,
                    "min": 554.105867,
                    "p50": 565.085796,
                    "p95": 609.732633,
                    "p99": 609.732633,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1109.4023909999999,
                    "min": 1058.08504,
                    "p50": 1068.480994,
                    "p95": 1109.4023909999999,
                    "p99": 1109.4023909999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 695.593068,
                    "min": 655.632401,
                    "p50": 660.614283,
                    "p95": 695.593068,
                    "p99": 695.593068,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 554.6701419999999,
                    "min": 448.70887799999997,
                    "p50": 462.13442299999997,
                    "p95": 554.6701419999999,
                    "p99": 554.6701419999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 728.869601,
                    "min": 700.503118,
                    "p50": 718.368133,
                    "p95": 728.869601,
                    "p99": 728.869601,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2213.145672,
                    "min": 2151.041292,
                    "p50": 2171.842975,
                    "p95": 2213.145672,
                    "p99": 2213.145672,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1205.520336,
                    "min": 1174.219971,
                    "p50": 1195.935739,
                    "p95": 1205.520336,
                    "p99": 1205.520336,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1506.378915,
                    "min": 1455.734141,
                    "p50": 1465.203313,
                    "p95": 1506.378915,
                    "p99": 1506.378915,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1654.967911,
                    "min": 1584.989239,
                    "p50": 1620.0495329999999,
                    "p95": 1654.967911,
                    "p99": 1654.967911,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2051.504367,
                    "min": 1986.737864,
                    "p50": 2029.2732609999998,
                    "p95": 2051.504367,
                    "p99": 2051.504367,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1923.4452219999998,
                    "min": 1858.031618,
                    "p50": 1888.071235,
                    "p95": 1923.4452219999998,
                    "p99": 1923.4452219999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 640.778501,
                    "min": 610.0223189999999,
                    "p50": 620.260103,
                    "p95": 640.778501,
                    "p99": 640.778501,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1346.035878,
                    "min": 1308.5856899999999,
                    "p50": 1333.4591289999998,
                    "p95": 1346.035878,
                    "p99": 1346.035878,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1788.56999,
                    "min": 1726.1388949999998,
                    "p50": 1746.2523489999999,
                    "p95": 1788.56999,
                    "p99": 1788.56999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2568.186021,
                    "min": 2476.530451,
                    "p50": 2535.052329,
                    "p95": 2568.186021,
                    "p99": 2568.186021,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 810.9252339999999,
                    "min": 753.359823,
                    "p50": 758.9381579999999,
                    "p95": 810.9252339999999,
                    "p99": 810.9252339999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1084.599333,
                    "min": 1033.995592,
                    "p50": 1044.369079,
                    "p95": 1084.599333,
                    "p99": 1084.599333,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 518.434267,
                    "min": 468.932413,
                    "p50": 475.091982,
                    "p95": 518.434267,
                    "p99": 518.434267,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 910.510488,
                    "min": 890.488583,
                    "p50": 904.653065,
                    "p95": 910.510488,
                    "p99": 910.510488,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2932.518217,
                    "min": 2842.3751669999997,
                    "p50": 2868.601607,
                    "p95": 2932.518217,
                    "p99": 2932.518217,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2847.2629589999997,
                    "min": 2778.1686879999997,
                    "p50": 2818.314037,
                    "p95": 2847.2629589999997,
                    "p99": 2847.2629589999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2026.0598659999998,
                    "min": 1990.357186,
                    "p50": 2012.58134,
                    "p95": 2026.0598659999998,
                    "p99": 2026.0598659999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1763.0685979999998,
                    "min": 1707.469715,
                    "p50": 1739.145775,
                    "p95": 1763.0685979999998,
                    "p99": 1763.0685979999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1312.795971,
                    "min": 1290.598198,
                    "p50": 1302.897765,
                    "p95": 1312.795971,
                    "p99": 1312.795971,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1241.185284,
                    "min": 1155.1291609999998,
                    "p50": 1173.799096,
                    "p95": 1241.185284,
                    "p99": 1241.185284,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 906.955735,
                    "min": 876.823898,
                    "p50": 888.250719,
                    "p95": 906.955735,
                    "p99": 906.955735,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1869.154042,
                    "min": 1827.6266059999998,
                    "p50": 1861.1493739999999,
                    "p95": 1869.154042,
                    "p99": 1869.154042,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.8709779999999,
                    "min": 602.947683,
                    "p50": 611.219701,
                    "p95": 616.8709779999999,
                    "p99": 616.8709779999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1591.8254889999998,
                    "min": 1564.9437679999999,
                    "p50": 1579.2536739999998,
                    "p95": 1591.8254889999998,
                    "p99": 1591.8254889999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 796.004632,
                    "min": 738.728851,
                    "p50": 746.6626339999999,
                    "p95": 796.004632,
                    "p99": 796.004632,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2528.830316,
                    "min": 2456.072816,
                    "p50": 2492.754349,
                    "p95": 2528.830316,
                    "p99": 2528.830316,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 528.388951,
                    "min": 425.369392,
                    "p50": 464.959925,
                    "p95": 528.388951,
                    "p99": 528.388951,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1068.2523119999998,
                    "min": 1005.1546669999999,
                    "p50": 1018.2378,
                    "p95": 1068.2523119999998,
                    "p99": 1068.2523119999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2205.321673,
                    "min": 2103.926827,
                    "p50": 2126.3494689999998,
                    "p95": 2205.321673,
                    "p99": 2205.321673,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1454.349667,
                    "min": 1418.771512,
                    "p50": 1431.5410419999998,
                    "p95": 1454.349667,
                    "p99": 1454.349667,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1545.705665,
                    "min": 1472.899433,
                    "p50": 1494.079141,
                    "p95": 1545.705665,
                    "p99": 1545.705665,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 890.8603029999999,
                    "min": 831.057555,
                    "p50": 842.648691,
                    "p95": 890.8603029999999,
                    "p99": 890.8603029999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 721.682145,
                    "min": 702.883338,
                    "p50": 709.19962,
                    "p95": 721.682145,
                    "p99": 721.682145,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1445.861414,
                    "min": 1343.028756,
                    "p50": 1378.434917,
                    "p95": 1445.861414,
                    "p99": 1445.861414,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2744.942048,
                    "min": 2637.111664,
                    "p50": 2657.9862749999998,
                    "p95": 2744.942048,
                    "p99": 2744.942048,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 582.384782,
                    "min": 563.601733,
                    "p50": 578.3965039999999,
                    "p95": 582.384782,
                    "p99": 582.384782,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 997.1198469999999,
                    "min": 962.857506,
                    "p50": 968.64497,
                    "p95": 997.1198469999999,
                    "p99": 997.1198469999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 495.84345399999995,
                    "min": 438.535582,
                    "p50": 452.091416,
                    "p95": 495.84345399999995,
                    "p99": 495.84345399999995,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2021.146041,
                    "min": 1989.350133,
                    "p50": 2007.3245339999999,
                    "p95": 2021.146041,
                    "p99": 2021.146041,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1907.441036,
                    "min": 1860.597524,
                    "p50": 1887.858782,
                    "p95": 1907.441036,
                    "p99": 1907.441036,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1641.7753759999998,
                    "min": 1576.4022539999999,
                    "p50": 1625.236833,
                    "p95": 1641.7753759999998,
                    "p99": 1641.7753759999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1811.7438909999998,
                    "min": 1732.935475,
                    "p50": 1742.3583239999998,
                    "p95": 1811.7438909999998,
                    "p99": 1811.7438909999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1254.529626,
                    "min": 1213.875648,
                    "p50": 1234.8229159999999,
                    "p95": 1254.529626,
                    "p99": 1254.529626,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2383.004156,
                    "min": 2307.635265,
                    "p50": 2325.182749,
                    "p95": 2383.004156,
                    "p99": 2383.004156,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1126.077622,
                    "min": 1092.502498,
                    "p50": 1108.492596,
                    "p95": 1126.077622,
                    "p99": 1126.077622,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 829.502655,
                    "min": 777.639813,
                    "p50": 813.280165,
                    "p95": 829.502655,
                    "p99": 829.502655,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 472.84579599999995,
                    "min": 450.21719099999996,
                    "p50": 456.928111,
                    "p95": 472.84579599999995,
                    "p99": 472.84579599999995,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 943.047415,
                    "min": 912.1292189999999,
                    "p50": 926.930924,
                    "p95": 943.047415,
                    "p99": 943.047415,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1258.994446,
                    "min": 1058.9969899999999,
                    "p50": 1070.19351,
                    "p95": 1258.994446,
                    "p99": 1258.994446,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.632505,
                    "min": 221.29813399999998,
                    "p50": 227.979776,
                    "p95": 257.632505,
                    "p99": 257.632505,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 759.29045,
                    "min": 737.490465,
                    "p50": 753.6173259999999,
                    "p95": 759.29045,
                    "p99": 759.29045,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 412.24879,
                    "min": 389.83122,
                    "p50": 398.444895,
                    "p95": 412.24879,
                    "p99": 412.24879,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 372.290627,
                    "min": 281.006909,
                    "p50": 296.406673,
                    "p95": 372.290627,
                    "p99": 372.290627,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1852.6697439999998,
                    "min": 1776.931175,
                    "p50": 1792.8907179999999,
                    "p95": 1852.6697439999998,
                    "p99": 1852.6697439999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 625.0856689999999,
                    "min": 574.5412699999999,
                    "p50": 585.757128,
                    "p95": 625.0856689999999,
                    "p99": 625.0856689999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 773.525317,
                    "min": 686.4344679999999,
                    "p50": 697.018688,
                    "p95": 773.525317,
                    "p99": 773.525317,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 884.432194,
                    "min": 867.608852,
                    "p50": 870.453221,
                    "p95": 884.432194,
                    "p99": 884.432194,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 424.983596,
                    "min": 335.192723,
                    "p50": 347.940096,
                    "p95": 424.983596,
                    "p99": 424.983596,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3517.2950739999997,
                    "min": 2935.587567,
                    "p50": 2972.306554,
                    "p95": 3517.2950739999997,
                    "p99": 3517.2950739999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1424.941097,
                    "min": 1214.663981,
                    "p50": 1231.8438429999999,
                    "p95": 1424.941097,
                    "p99": 1424.941097,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 650.872124,
                    "min": 602.163552,
                    "p50": 635.9967399999999,
                    "p95": 650.872124,
                    "p99": 650.872124,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 530.390298,
                    "min": 510.66096,
                    "p50": 522.424125,
                    "p95": 530.390298,
                    "p99": 530.390298,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2807.080857,
                    "min": 2371.126792,
                    "p50": 2401.773903,
                    "p95": 2807.080857,
                    "p99": 2807.080857,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1085.148888,
                    "min": 1055.949746,
                    "p50": 1064.783459,
                    "p95": 1085.148888,
                    "p99": 1085.148888,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 373.816195,
                    "min": 344.297727,
                    "p50": 351.39347399999997,
                    "p95": 373.816195,
                    "p99": 373.816195,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 739.210059,
                    "min": 709.414057,
                    "p50": 720.141446,
                    "p95": 739.210059,
                    "p99": 739.210059,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 566.761291,
                    "min": 500.97018799999995,
                    "p50": 518.24828,
                    "p95": 566.761291,
                    "p99": 566.761291,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 642.94267,
                    "min": 547.917476,
                    "p50": 560.930427,
                    "p95": 642.94267,
                    "p99": 642.94267,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.50958,
                    "min": 196.47690699999998,
                    "p50": 199.988307,
                    "p95": 243.50958,
                    "p99": 243.50958,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 661.822622,
                    "min": 603.182206,
                    "p50": 619.554861,
                    "p95": 661.822622,
                    "p99": 661.822622,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 311.350864,
                    "min": 297.156299,
                    "p50": 304.97310899999997,
                    "p95": 311.350864,
                    "p99": 311.350864,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 836.192205,
                    "min": 755.662327,
                    "p50": 764.2054489999999,
                    "p95": 836.192205,
                    "p99": 836.192205,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 464.417957,
                    "min": 448.72849299999996,
                    "p50": 460.50561999999996,
                    "p95": 464.417957,
                    "p99": 464.417957,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1027.933411,
                    "min": 938.2189129999999,
                    "p50": 981.554258,
                    "p95": 1027.933411,
                    "p99": 1027.933411,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 705.529091,
                    "min": 660.0020569999999,
                    "p50": 669.3530069999999,
                    "p95": 705.529091,
                    "p99": 705.529091,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 428.58845099999996,
                    "min": 366.769395,
                    "p50": 406.653792,
                    "p95": 428.58845099999996,
                    "p99": 428.58845099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 331.39750399999997,
                    "min": 248.22946399999998,
                    "p50": 254.317464,
                    "p95": 331.39750399999997,
                    "p99": 331.39750399999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 865.213848,
                    "min": 800.8852489999999,
                    "p50": 818.704797,
                    "p95": 865.213848,
                    "p99": 865.213848,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1608.838341,
                    "min": 1558.191355,
                    "p50": 1566.946491,
                    "p95": 1608.838341,
                    "p99": 1608.838341,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 543.92605,
                    "min": 493.489292,
                    "p50": 518.376956,
                    "p95": 543.92605,
                    "p99": 543.92605,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 564.057184,
                    "min": 547.794395,
                    "p50": 556.9110079999999,
                    "p95": 564.057184,
                    "p99": 564.057184,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 361.12577799999997,
                    "min": 290.489323,
                    "p50": 329.636908,
                    "p95": 361.12577799999997,
                    "p99": 361.12577799999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 492.28736299999997,
                    "min": 443.57280699999995,
                    "p50": 450.55147999999997,
                    "p95": 492.28736299999997,
                    "p99": 492.28736299999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 793.3378409999999,
                    "min": 734.009961,
                    "p50": 755.980459,
                    "p95": 793.3378409999999,
                    "p99": 793.3378409999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 203.73520499999998,
                    "min": 191.130213,
                    "p50": 201.44486899999998,
                    "p95": 203.73520499999998,
                    "p99": 203.73520499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1580.199015,
                    "min": 1513.8834399999998,
                    "p50": 1532.840592,
                    "p95": 1580.199015,
                    "p99": 1580.199015,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 607.633708,
                    "min": 585.385735,
                    "p50": 599.036878,
                    "p95": 607.633708,
                    "p99": 607.633708,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 714.834985,
                    "min": 682.6790679999999,
                    "p50": 699.051929,
                    "p95": 714.834985,
                    "p99": 714.834985,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 392.49123199999997,
                    "min": 335.081452,
                    "p50": 361.603657,
                    "p95": 392.49123199999997,
                    "p99": 392.49123199999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 972.52688,
                    "min": 908.977166,
                    "p50": 937.776838,
                    "p95": 972.52688,
                    "p99": 972.52688,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 699.339873,
                    "min": 641.520415,
                    "p50": 657.472132,
                    "p95": 699.339873,
                    "p99": 699.339873,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 441.767143,
                    "min": 393.430637,
                    "p50": 400.754139,
                    "p95": 441.767143,
                    "p99": 441.767143,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2036.871676,
                    "min": 2011.554866,
                    "p50": 2027.293849,
                    "p95": 2036.871676,
                    "p99": 2036.871676,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 259.017838,
                    "min": 243.126995,
                    "p50": 250.903271,
                    "p95": 259.017838,
                    "p99": 259.017838,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 858.707197,
                    "min": 793.149908,
                    "p50": 806.030905,
                    "p95": 858.707197,
                    "p99": 858.707197,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1057.560046,
                    "min": 1032.838939,
                    "p50": 1044.923248,
                    "p95": 1057.560046,
                    "p99": 1057.560046,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 179.174575,
                    "min": 152.536349,
                    "p50": 177.07001599999998,
                    "p95": 179.174575,
                    "p99": 179.174575,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.87689799999998,
                    "min": 157.62777699999998,
                    "p50": 162.91422599999999,
                    "p95": 163.87689799999998,
                    "p99": 163.87689799999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 259.36683,
                    "min": 244.60062599999998,
                    "p50": 246.425224,
                    "p95": 259.36683,
                    "p99": 259.36683,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.129553,
                    "min": 209.495417,
                    "p50": 217.982827,
                    "p95": 219.129553,
                    "p99": 219.129553,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.064148,
                    "min": 172.201311,
                    "p50": 177.197508,
                    "p95": 182.064148,
                    "p99": 182.064148,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.517724,
                    "min": 190.59454599999998,
                    "p50": 204.097826,
                    "p95": 205.517724,
                    "p99": 205.517724,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 232.765121,
                    "min": 230.94654599999998,
                    "p50": 232.151842,
                    "p95": 232.765121,
                    "p99": 232.765121,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.81389899999999,
                    "min": 63.712590999999996,
                    "p50": 80.681902,
                    "p95": 83.81389899999999,
                    "p99": 83.81389899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 98.883333,
                    "min": 55.990590999999995,
                    "p50": 94.393997,
                    "p95": 98.883333,
                    "p99": 98.883333,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.727458,
                    "min": 103.69613199999999,
                    "p50": 108.10847799999999,
                    "p95": 109.727458,
                    "p99": 109.727458,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 315.691672,
                    "min": 302.744688,
                    "p50": 314.354498,
                    "p95": 315.691672,
                    "p99": 315.691672,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.882194,
                    "min": 109.84563399999999,
                    "p50": 121.219426,
                    "p95": 123.882194,
                    "p99": 123.882194,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 281.454638,
                    "min": 246.026167,
                    "p50": 279.069438,
                    "p95": 281.454638,
                    "p99": 281.454638,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 155.289885,
                    "min": 112.991264,
                    "p50": 149.836601,
                    "p95": 155.289885,
                    "p99": 155.289885,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.917215,
                    "min": 98.067385,
                    "p50": 134.49084,
                    "p95": 135.917215,
                    "p99": 135.917215,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 95.60719399999999,
                    "min": 74.705559,
                    "p50": 88.360822,
                    "p95": 95.60719399999999,
                    "p99": 95.60719399999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 161.333449,
                    "min": 121.106552,
                    "p50": 150.586725,
                    "p95": 161.333449,
                    "p99": 161.333449,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 191.006282,
                    "min": 157.546851,
                    "p50": 180.978931,
                    "p95": 191.006282,
                    "p99": 191.006282,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 53.765302,
                    "min": 47.183557,
                    "p50": 50.781394999999996,
                    "p95": 53.765302,
                    "p99": 53.765302,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 101.638786,
                    "min": 92.105639,
                    "p50": 100.20016799999999,
                    "p95": 101.638786,
                    "p99": 101.638786,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 177.854661,
                    "min": 138.206118,
                    "p50": 175.233686,
                    "p95": 177.854661,
                    "p99": 177.854661,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 44.456568,
                    "min": 39.482321,
                    "p50": 40.602475,
                    "p95": 44.456568,
                    "p99": 44.456568,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 69.705596,
                    "min": 48.801814,
                    "p50": 66.99887,
                    "p95": 69.705596,
                    "p99": 69.705596,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 84.92137699999999,
                    "min": 76.440671,
                    "p50": 79.522364,
                    "p95": 84.92137699999999,
                    "p99": 84.92137699999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 243.112281,
                    "min": 217.859268,
                    "p50": 222.950411,
                    "p95": 243.112281,
                    "p99": 243.112281,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 316.416536,
                    "min": 284.842445,
                    "p50": 292.586496,
                    "p95": 316.416536,
                    "p99": 316.416536,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 111.820048,
                    "min": 82.020657,
                    "p50": 108.244828,
                    "p95": 111.820048,
                    "p99": 111.820048,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 645.109957,
                    "min": 634.052151,
                    "p50": 641.845708,
                    "p95": 645.109957,
                    "p99": 645.109957,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.974511,
                    "min": 29.022299999999998,
                    "p50": 30.691197,
                    "p95": 31.974511,
                    "p99": 31.974511,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 62.990871,
                    "min": 54.242039999999996,
                    "p50": 60.251014999999995,
                    "p95": 62.990871,
                    "p99": 62.990871,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 364.71356,
                    "min": 343.681813,
                    "p50": 352.209864,
                    "p95": 364.71356,
                    "p99": 364.71356,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 144.41449,
                    "min": 127.706254,
                    "p50": 132.223773,
                    "p95": 144.41449,
                    "p99": 144.41449,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 144.281656,
                    "min": 107.043791,
                    "p50": 142.92555199999998,
                    "p95": 144.281656,
                    "p99": 144.281656,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 155.455141,
                    "min": 136.891221,
                    "p50": 154.09787699999998,
                    "p95": 155.455141,
                    "p99": 155.455141,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.648507,
                    "min": 86.31322899999999,
                    "p50": 96.890757,
                    "p95": 97.648507,
                    "p99": 97.648507,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 390.22241099999997,
                    "min": 369.530368,
                    "p50": 384.098192,
                    "p95": 390.22241099999997,
                    "p99": 390.22241099999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 243.54430299999999,
                    "min": 203.369136,
                    "p50": 240.65140799999998,
                    "p95": 243.54430299999999,
                    "p99": 243.54430299999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 192.925669,
                    "min": 187.501386,
                    "p50": 188.64068999999998,
                    "p95": 192.925669,
                    "p99": 192.925669,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 179.03754899999998,
                    "min": 140.02777799999998,
                    "p50": 176.59967899999998,
                    "p95": 179.03754899999998,
                    "p99": 179.03754899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 123.863857,
                    "min": 113.817431,
                    "p50": 119.76862899999999,
                    "p95": 123.863857,
                    "p99": 123.863857,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 271.297413,
                    "min": 230.306232,
                    "p50": 270.078307,
                    "p95": 271.297413,
                    "p99": 271.297413,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 73.21499899999999,
                    "min": 56.7594,
                    "p50": 68.42152999999999,
                    "p95": 73.21499899999999,
                    "p99": 73.21499899999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 213.41697299999998,
                    "min": 200.619421,
                    "p50": 211.770443,
                    "p95": 213.41697299999998,
                    "p99": 213.41697299999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 131.957023,
                    "min": 117.27945,
                    "p50": 130.136147,
                    "p95": 131.957023,
                    "p99": 131.957023,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.158992,
                    "min": 95.65651199999999,
                    "p50": 107.881445,
                    "p95": 109.158992,
                    "p99": 109.158992,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.91089099999999,
                    "min": 49.552779,
                    "p50": 84.997676,
                    "p95": 85.91089099999999,
                    "p99": 85.91089099999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 203.526466,
                    "min": 180.253505,
                    "p50": 200.501379,
                    "p95": 203.526466,
                    "p99": 203.526466,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 289.051249,
                    "min": 275.661276,
                    "p50": 282.472444,
                    "p95": 289.051249,
                    "p99": 289.051249,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 81.060284,
                    "min": 79.806507,
                    "p50": 80.44018799999999,
                    "p95": 81.060284,
                    "p99": 81.060284,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.564644,
                    "min": 166.78027,
                    "p50": 205.592245,
                    "p95": 206.564644,
                    "p99": 206.564644,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.70982099999998,
                    "min": 201.61616099999998,
                    "p50": 217.96544799999998,
                    "p95": 219.70982099999998,
                    "p99": 219.70982099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 98.252832,
                    "min": 71.740509,
                    "p50": 91.205856,
                    "p95": 98.252832,
                    "p99": 98.252832,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.077212,
                    "min": 153.643912,
                    "p50": 186.992692,
                    "p95": 193.077212,
                    "p99": 193.077212,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 249.368902,
                    "min": 243.994326,
                    "p50": 246.233175,
                    "p95": 249.368902,
                    "p99": 249.368902,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.248655,
                    "min": 114.837335,
                    "p50": 121.922326,
                    "p95": 123.248655,
                    "p99": 123.248655,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.029121,
                    "min": 163.52877999999998,
                    "p50": 165.495591,
                    "p95": 167.029121,
                    "p99": 167.029121,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.953421,
                    "min": 112.410314,
                    "p50": 146.489936,
                    "p95": 152.953421,
                    "p99": 152.953421,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.844704,
                    "min": 284.622354,
                    "p50": 316.907538,
                    "p95": 319.844704,
                    "p99": 319.844704,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.062494,
                    "min": 155.342864,
                    "p50": 177.898212,
                    "p95": 179.062494,
                    "p99": 179.062494,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.420074,
                    "min": 134.665959,
                    "p50": 135.664078,
                    "p95": 137.420074,
                    "p99": 137.420074,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.829895,
                    "min": 107.685921,
                    "p50": 108.91494999999999,
                    "p95": 111.829895,
                    "p99": 111.829895,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.18285999999998,
                    "min": 224.681848,
                    "p50": 233.57080299999998,
                    "p95": 234.18285999999998,
                    "p99": 234.18285999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 30.222338999999998,
                    "min": 24.439379,
                    "p50": 28.421889999999998,
                    "p95": 30.222338999999998,
                    "p99": 30.222338999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.626966,
                    "min": 24.129288,
                    "p50": 24.385389999999997,
                    "p95": 26.626966,
                    "p99": 26.626966,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 74.362937,
                    "min": 70.011217,
                    "p50": 73.587587,
                    "p95": 74.362937,
                    "p99": 74.362937,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 141.044508,
                    "min": 124.785444,
                    "p50": 139.173947,
                    "p95": 141.044508,
                    "p99": 141.044508,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.765939,
                    "min": 24.382998,
                    "p50": 24.613284,
                    "p95": 24.765939,
                    "p99": 24.765939,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.505868,
                    "min": 22.619429,
                    "p50": 24.785909999999998,
                    "p95": 26.505868,
                    "p99": 26.505868,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 62.307368,
                    "min": 54.263618,
                    "p50": 58.144932999999995,
                    "p95": 62.307368,
                    "p99": 62.307368,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.933654999999998,
                    "min": 23.937632,
                    "p50": 24.491135,
                    "p95": 24.933654999999998,
                    "p99": 24.933654999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 52.126248,
                    "min": 50.635349,
                    "p50": 50.999888,
                    "p95": 52.126248,
                    "p99": 52.126248,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.880162,
                    "min": 24.414579,
                    "p50": 25.805683,
                    "p95": 26.880162,
                    "p99": 26.880162,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 47.271743,
                    "min": 40.547114,
                    "p50": 42.915921,
                    "p95": 47.271743,
                    "p99": 47.271743,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.431762,
                    "min": 24.359420999999998,
                    "p50": 24.738031,
                    "p95": 25.431762,
                    "p99": 25.431762,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 25.442612999999998,
                    "min": 23.929123,
                    "p50": 24.288401,
                    "p95": 25.442612999999998,
                    "p99": 25.442612999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 26.645477999999997,
                    "min": 22.378504,
                    "p50": 24.549084999999998,
                    "p95": 26.645477999999997,
                    "p99": 26.645477999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.709837,
                    "min": 23.881975,
                    "p50": 24.553584999999998,
                    "p95": 26.709837,
                    "p99": 26.709837,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.688062,
                    "min": 24.181236,
                    "p50": 24.512787,
                    "p95": 24.688062,
                    "p99": 24.688062,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.605895,
                    "min": 18.083963999999998,
                    "p50": 24.465206,
                    "p95": 24.605895,
                    "p99": 24.605895,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.666076999999998,
                    "min": 23.584445,
                    "p50": 24.406029,
                    "p95": 26.666076999999998,
                    "p99": 26.666076999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.742138999999998,
                    "min": 23.724946,
                    "p50": 24.363989,
                    "p95": 24.742138999999998,
                    "p99": 24.742138999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 146.093357,
                    "min": 143.40125899999998,
                    "p50": 144.986315,
                    "p95": 146.093357,
                    "p99": 146.093357,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 103.409638,
                    "min": 89.576379,
                    "p50": 100.792451,
                    "p95": 103.409638,
                    "p99": 103.409638,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 213.57806599999998,
                    "min": 211.10877,
                    "p50": 213.09680899999998,
                    "p95": 213.57806599999998,
                    "p99": 213.57806599999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 114.490962,
                    "min": 74.56179999999999,
                    "p50": 113.075575,
                    "p95": 114.490962,
                    "p99": 114.490962,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 179.494927,
                    "min": 136.4337,
                    "p50": 175.344424,
                    "p95": 179.494927,
                    "p99": 179.494927,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 660.464734,
                    "min": 645.013678,
                    "p50": 655.269457,
                    "p95": 660.464734,
                    "p99": 660.464734,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 163.367299,
                    "min": 123.762142,
                    "p50": 163.005785,
                    "p95": 163.367299,
                    "p99": 163.367299,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 201.620973,
                    "min": 160.87623299999998,
                    "p50": 198.93659399999999,
                    "p95": 201.620973,
                    "p99": 201.620973,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 256.70363199999997,
                    "min": 249.119917,
                    "p50": 255.01051099999998,
                    "p95": 256.70363199999997,
                    "p99": 256.70363199999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 139.467455,
                    "min": 99.604902,
                    "p50": 136.56627,
                    "p95": 139.467455,
                    "p99": 139.467455,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 536.879769,
                    "min": 523.690956,
                    "p50": 529.953814,
                    "p95": 536.879769,
                    "p99": 536.879769,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 126.65749699999999,
                    "min": 98.43715399999999,
                    "p50": 125.19009,
                    "p95": 126.65749699999999,
                    "p99": 126.65749699999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 187.05281499999998,
                    "min": 149.44861699999998,
                    "p50": 186.01052099999998,
                    "p95": 187.05281499999998,
                    "p99": 187.05281499999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 411.940099,
                    "min": 371.315335,
                    "p50": 406.066168,
                    "p95": 411.940099,
                    "p99": 411.940099,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 90.092094,
                    "min": 50.588105,
                    "p50": 88.709282,
                    "p95": 90.092094,
                    "p99": 90.092094,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1278.303594,
                    "min": 1249.5009519999999,
                    "p50": 1268.503365,
                    "p95": 1278.303594,
                    "p99": 1278.303594,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.148442,
                    "min": 73.37666399999999,
                    "p50": 73.808032,
                    "p95": 75.148442,
                    "p99": 75.148442,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 230.359919,
                    "min": 224.263333,
                    "p50": 226.525297,
                    "p95": 230.359919,
                    "p99": 230.359919,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 289.614603,
                    "min": 251.95642199999998,
                    "p50": 286.781808,
                    "p95": 289.614603,
                    "p99": 289.614603,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.694861,
                    "min": 23.982481,
                    "p50": 24.321282,
                    "p95": 24.694861,
                    "p99": 24.694861,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.868437,
                    "min": 23.225521999999998,
                    "p50": 24.508837,
                    "p95": 24.868437,
                    "p99": 24.868437,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.167409,
                    "min": 24.330282,
                    "p50": 24.597535,
                    "p95": 25.167409,
                    "p99": 25.167409,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.997964,
                    "min": 24.343542,
                    "p50": 24.491557,
                    "p95": 24.997964,
                    "p99": 24.997964,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.872135999999998,
                    "min": 22.835912,
                    "p50": 24.448598,
                    "p95": 24.872135999999998,
                    "p99": 24.872135999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 26.60773,
                    "min": 23.607791,
                    "p50": 25.884137,
                    "p95": 26.60773,
                    "p99": 26.60773,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 26.636827999999998,
                    "min": 24.244381,
                    "p50": 24.44773,
                    "p95": 26.636827999999998,
                    "p99": 26.636827999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.882852,
                    "min": 24.284174999999998,
                    "p50": 24.512676,
                    "p95": 26.882852,
                    "p99": 26.882852,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 43.763479,
                    "min": 42.032936,
                    "p50": 43.16224,
                    "p95": 43.763479,
                    "p99": 43.763479,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 25.357682999999998,
                    "min": 22.715387,
                    "p50": 24.374979999999997,
                    "p95": 25.357682999999998,
                    "p99": 25.357682999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.517104,
                    "min": 24.229333999999998,
                    "p50": 24.430508999999997,
                    "p95": 24.517104,
                    "p99": 24.517104,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.686822,
                    "min": 24.246104,
                    "p50": 24.430346,
                    "p95": 24.686822,
                    "p99": 24.686822,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.840653999999997,
                    "min": 23.151313,
                    "p50": 24.676372,
                    "p95": 26.840653999999997,
                    "p99": 26.840653999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.734337,
                    "min": 24.335431999999997,
                    "p50": 24.535906,
                    "p95": 26.734337,
                    "p99": 26.734337,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 87.412688,
                    "min": 77.773173,
                    "p50": 84.85387,
                    "p95": 87.412688,
                    "p99": 87.412688,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.761115999999998,
                    "min": 22.119781,
                    "p50": 24.437039,
                    "p95": 26.761115999999998,
                    "p99": 26.761115999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 36.995841999999996,
                    "min": 31.554222999999997,
                    "p50": 33.927408,
                    "p95": 36.995841999999996,
                    "p99": 36.995841999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.903004,
                    "min": 24.097165,
                    "p50": 24.540575999999998,
                    "p95": 24.903004,
                    "p99": 24.903004,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.422411999999998,
                    "min": 24.203754999999997,
                    "p50": 24.539946,
                    "p95": 26.422411999999998,
                    "p99": 26.422411999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 24.770588999999998,
                    "min": 24.334101999999998,
                    "p50": 24.513783999999998,
                    "p95": 24.770588999999998,
                    "p99": 24.770588999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.005138,
                    "min": 22.035543999999998,
                    "p50": 24.422808999999997,
                    "p95": 27.005138,
                    "p99": 27.005138,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.769299999999998,
                    "min": 23.871211,
                    "p50": 24.380259,
                    "p95": 24.769299999999998,
                    "p99": 24.769299999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 25.305885,
                    "min": 23.460964999999998,
                    "p50": 24.528176,
                    "p95": 25.305885,
                    "p99": 25.305885,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.988823,
                    "min": 23.987479999999998,
                    "p50": 24.419679,
                    "p95": 24.988823,
                    "p99": 24.988823,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.729201,
                    "min": 23.974432,
                    "p50": 24.438898,
                    "p95": 24.729201,
                    "p99": 24.729201,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.888363,
                    "min": 20.937144999999997,
                    "p50": 24.370533,
                    "p95": 27.888363,
                    "p99": 27.888363,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.20403,
                    "min": 24.012459999999997,
                    "p50": 24.469469999999998,
                    "p95": 26.20403,
                    "p99": 26.20403,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.849247,
                    "min": 22.040294,
                    "p50": 24.178686,
                    "p95": 24.849247,
                    "p99": 24.849247,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 24.86566,
                    "min": 21.977605999999998,
                    "p50": 24.631033,
                    "p95": 24.86566,
                    "p99": 24.86566,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 24.532746,
                    "min": 24.229646,
                    "p50": 24.412567,
                    "p95": 24.532746,
                    "p99": 24.532746,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 26.706577,
                    "min": 23.484672,
                    "p50": 24.734251,
                    "p95": 26.706577,
                    "p99": 26.706577,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.890399,
                    "min": 24.102176999999998,
                    "p50": 24.400197,
                    "p95": 24.890399,
                    "p99": 24.890399,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.496572999999998,
                    "min": 24.036229,
                    "p50": 24.460098,
                    "p95": 26.496572999999998,
                    "p99": 26.496572999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.644417999999998,
                    "min": 23.861964999999998,
                    "p50": 24.746999,
                    "p95": 26.644417999999998,
                    "p99": 26.644417999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 51.307265,
                    "min": 24.375763,
                    "p50": 45.097480999999995,
                    "p95": 51.307265,
                    "p99": 51.307265,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.059393999999998,
                    "min": 21.671595,
                    "p50": 24.707670999999998,
                    "p95": 27.059393999999998,
                    "p99": 27.059393999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.678770999999998,
                    "min": 24.192004999999998,
                    "p50": 24.451776,
                    "p95": 24.678770999999998,
                    "p99": 24.678770999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.603762,
                    "min": 24.193254,
                    "p50": 24.40797,
                    "p95": 24.603762,
                    "p99": 24.603762,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.599305,
                    "min": 124.249309,
                    "p50": 153.072092,
                    "p95": 154.599305,
                    "p99": 154.599305,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.638492,
                    "min": 52.981395,
                    "p50": 74.60892,
                    "p95": 75.638492,
                    "p99": 75.638492,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1273.095824,
                    "min": 1213.80675,
                    "p50": 1263.308115,
                    "p95": 1273.095824,
                    "p99": 1273.095824,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 288.874448,
                    "min": 244.70387599999998,
                    "p50": 287.202875,
                    "p95": 288.874448,
                    "p99": 288.874448,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.301292,
                    "min": 87.618804,
                    "p50": 126.074406,
                    "p95": 128.301292,
                    "p99": 128.301292,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 88.747672,
                    "min": 49.790071999999995,
                    "p50": 85.60141999999999,
                    "p95": 88.747672,
                    "p99": 88.747672,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 116.683425,
                    "min": 75.423947,
                    "p50": 114.927315,
                    "p95": 116.683425,
                    "p99": 116.683425,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 410.945769,
                    "min": 390.953374,
                    "p50": 405.60614499999997,
                    "p95": 410.945769,
                    "p99": 410.945769,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 201.90563999999998,
                    "min": 160.37129099999999,
                    "p50": 200.278201,
                    "p95": 201.90563999999998,
                    "p99": 201.90563999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 176.294515,
                    "min": 172.84096399999999,
                    "p50": 174.95858099999998,
                    "p95": 176.294515,
                    "p99": 176.294515,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 536.020882,
                    "min": 525.144314,
                    "p50": 533.6740209999999,
                    "p95": 536.020882,
                    "p99": 536.020882,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 658.818821,
                    "min": 635.263639,
                    "p50": 656.386205,
                    "p95": 658.818821,
                    "p99": 658.818821,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 216.151813,
                    "min": 173.865976,
                    "p50": 211.634513,
                    "p95": 216.151813,
                    "p99": 216.151813,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 103.682649,
                    "min": 90.856455,
                    "p50": 101.87798199999999,
                    "p95": 103.682649,
                    "p99": 103.682649,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 260.126713,
                    "min": 248.213875,
                    "p50": 256.672262,
                    "p95": 260.126713,
                    "p99": 260.126713,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 155.670526,
                    "min": 140.594527,
                    "p50": 152.084723,
                    "p95": 155.670526,
                    "p99": 155.670526,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 193.117028,
                    "min": 184.90624699999998,
                    "p50": 187.03625,
                    "p95": 193.117028,
                    "p99": 193.117028,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 228.281699,
                    "min": 214.80538199999998,
                    "p50": 225.029734,
                    "p95": 228.281699,
                    "p99": 228.281699,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 143.156227,
                    "min": 137.308407,
                    "p50": 138.499234,
                    "p95": 143.156227,
                    "p99": 143.156227,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 772.815985,
                    "min": 762.67125,
                    "p50": 767.6032799999999,
                    "p95": 772.815985,
                    "p99": 772.815985,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 132.66823399999998,
                    "min": 96.356962,
                    "p50": 131.143157,
                    "p95": 132.66823399999998,
                    "p99": 132.66823399999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 256.55206799999996,
                    "min": 243.545009,
                    "p50": 251.75485999999998,
                    "p95": 256.55206799999996,
                    "p99": 256.55206799999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 393.198269,
                    "min": 364.105663,
                    "p50": 384.08743799999996,
                    "p95": 393.198269,
                    "p99": 393.198269,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 155.375182,
                    "min": 115.914498,
                    "p50": 153.440617,
                    "p95": 155.375182,
                    "p99": 155.375182,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 408.976343,
                    "min": 398.718524,
                    "p50": 404.24321899999995,
                    "p95": 408.976343,
                    "p99": 408.976343,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 234.834769,
                    "min": 191.616933,
                    "p50": 231.554196,
                    "p95": 234.834769,
                    "p99": 234.834769,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 457.345842,
                    "min": 449.57386299999996,
                    "p50": 452.766985,
                    "p95": 457.345842,
                    "p99": 457.345842,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 191.141441,
                    "min": 178.202565,
                    "p50": 188.247176,
                    "p95": 191.141441,
                    "p99": 191.141441,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.63661099999996,
                    "min": 268.30677,
                    "p50": 270.509698,
                    "p95": 278.63661099999996,
                    "p99": 278.63661099999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 976.36438,
                    "min": 956.07539,
                    "p50": 961.422474,
                    "p95": 976.36438,
                    "p99": 976.36438,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 294.799327,
                    "min": 281.342037,
                    "p50": 291.43573299999997,
                    "p95": 294.799327,
                    "p99": 294.799327,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 212.43788999999998,
                    "min": 203.69383299999998,
                    "p50": 211.690808,
                    "p95": 212.43788999999998,
                    "p99": 212.43788999999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.900873,
                    "min": 339.223396,
                    "p50": 344.1562,
                    "p95": 345.900873,
                    "p99": 345.900873,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 113.528899,
                    "min": 96.59883699999999,
                    "p50": 113.148912,
                    "p95": 113.528899,
                    "p99": 113.528899,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 364.609619,
                    "min": 356.829958,
                    "p50": 360.730116,
                    "p95": 364.609619,
                    "p99": 364.609619,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 507.526954,
                    "min": 462.110887,
                    "p50": 500.120999,
                    "p95": 507.526954,
                    "p99": 507.526954,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1306.419748,
                    "min": 1255.089221,
                    "p50": 1292.062541,
                    "p95": 1306.419748,
                    "p99": 1306.419748,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.584125,
                    "min": 127.28605999999999,
                    "p50": 165.841724,
                    "p95": 168.584125,
                    "p99": 168.584125,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 292.129761,
                    "min": 254.08846,
                    "p50": 289.773469,
                    "p95": 292.129761,
                    "p99": 292.129761,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.309024,
                    "min": 211.90033599999998,
                    "p50": 248.73245599999998,
                    "p95": 252.309024,
                    "p99": 252.309024,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 461.106244,
                    "min": 452.45694899999995,
                    "p50": 457.09491599999996,
                    "p95": 461.106244,
                    "p99": 461.106244,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 420.386012,
                    "min": 378.787802,
                    "p50": 416.519591,
                    "p95": 420.386012,
                    "p99": 420.386012,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 556.178364,
                    "min": 533.442148,
                    "p50": 540.718754,
                    "p95": 556.178364,
                    "p99": 556.178364,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 687.713256,
                    "min": 630.3012,
                    "p50": 663.430666,
                    "p95": 687.713256,
                    "p99": 687.713256,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 601.300271,
                    "min": 543.323431,
                    "p50": 579.8600809999999,
                    "p95": 601.300271,
                    "p99": 601.300271,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 499.338536,
                    "min": 487.965518,
                    "p50": 496.136829,
                    "p95": 499.338536,
                    "p99": 499.338536,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 874.04701,
                    "min": 860.8347,
                    "p50": 869.7686759999999,
                    "p95": 874.04701,
                    "p99": 874.04701,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 337.57073499999996,
                    "min": 330.377158,
                    "p50": 333.28242,
                    "p95": 337.57073499999996,
                    "p99": 337.57073499999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.236108,
                    "min": 170.396808,
                    "p50": 207.792879,
                    "p95": 214.236108,
                    "p99": 214.236108,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 778.406784,
                    "min": 756.49987,
                    "p50": 776.220865,
                    "p95": 778.406784,
                    "p99": 778.406784,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 376.112508,
                    "min": 344.853802,
                    "p50": 375.381585,
                    "p95": 376.112508,
                    "p99": 376.112508,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 642.883035,
                    "min": 605.702042,
                    "p50": 625.1275509999999,
                    "p95": 642.883035,
                    "p99": 642.883035,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 931.38171,
                    "min": 884.7019879999999,
                    "p50": 919.872346,
                    "p95": 931.38171,
                    "p99": 931.38171,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2006.988962,
                    "min": 1969.101616,
                    "p50": 1979.887919,
                    "p95": 2006.988962,
                    "p99": 2006.988962,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2843.647219,
                    "min": 2800.765251,
                    "p50": 2810.870242,
                    "p95": 2843.647219,
                    "p99": 2843.647219,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5653.491752,
                    "min": 5540.286634,
                    "p50": 5576.375749,
                    "p95": 5653.491752,
                    "p99": 5653.491752,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1584.11436,
                    "min": 1536.341801,
                    "p50": 1563.859539,
                    "p95": 1584.11436,
                    "p99": 1584.11436,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 745.6201269999999,
                    "min": 723.185491,
                    "p50": 731.138296,
                    "p95": 745.6201269999999,
                    "p99": 745.6201269999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 600.186017,
                    "min": 568.4007819999999,
                    "p50": 595.238385,
                    "p95": 600.186017,
                    "p99": 600.186017,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1734.796371,
                    "min": 1698.107835,
                    "p50": 1705.026568,
                    "p95": 1734.796371,
                    "p99": 1734.796371,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4256.934704,
                    "min": 4161.927608999999,
                    "p50": 4194.151713,
                    "p95": 4256.934704,
                    "p99": 4256.934704,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2484.327265,
                    "min": 2441.303387,
                    "p50": 2460.293374,
                    "p95": 2484.327265,
                    "p99": 2484.327265,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2149.5280669999997,
                    "min": 2071.097925,
                    "p50": 2119.154716,
                    "p95": 2149.5280669999997,
                    "p99": 2149.5280669999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1163.916577,
                    "min": 1116.2204789999998,
                    "p50": 1151.180672,
                    "p95": 1163.916577,
                    "p99": 1163.916577,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1443.323081,
                    "min": 1388.47939,
                    "p50": 1432.963075,
                    "p95": 1443.323081,
                    "p99": 1443.323081,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1024.970139,
                    "min": 968.401308,
                    "p50": 1010.694592,
                    "p95": 1024.970139,
                    "p99": 1024.970139,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 460.102596,
                    "min": 440.65606199999996,
                    "p50": 457.37172699999996,
                    "p95": 460.102596,
                    "p99": 460.102596,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1854.8853279999998,
                    "min": 1799.398097,
                    "p50": 1843.382472,
                    "p95": 1854.8853279999998,
                    "p99": 1854.8853279999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1297.377894,
                    "min": 1263.804658,
                    "p50": 1284.5262989999999,
                    "p95": 1297.377894,
                    "p99": 1297.377894,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 427.438833,
                    "min": 388.157332,
                    "p50": 423.06319199999996,
                    "p95": 427.438833,
                    "p99": 427.438833,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1304.897859,
                    "min": 1277.739356,
                    "p50": 1291.779229,
                    "p95": 1304.897859,
                    "p99": 1304.897859,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2626.495609,
                    "min": 2563.2637879999997,
                    "p50": 2598.1789409999997,
                    "p95": 2626.495609,
                    "p99": 2626.495609,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1446.562052,
                    "min": 1419.216954,
                    "p50": 1437.0430279999998,
                    "p95": 1446.562052,
                    "p99": 1446.562052,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3778.8482179999996,
                    "min": 3726.547701,
                    "p50": 3762.261756,
                    "p95": 3778.8482179999996,
                    "p99": 3778.8482179999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 812.064302,
                    "min": 797.61326,
                    "p50": 801.883823,
                    "p95": 812.064302,
                    "p99": 812.064302,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1206.963765,
                    "min": 1149.418199,
                    "p50": 1193.848698,
                    "p95": 1206.963765,
                    "p99": 1206.963765,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5021.4531879999995,
                    "min": 4939.709005,
                    "p50": 4979.567459,
                    "p95": 5021.4531879999995,
                    "p99": 5021.4531879999995,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 694.007805,
                    "min": 660.4377079999999,
                    "p50": 686.810354,
                    "p95": 694.007805,
                    "p99": 694.007805,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1732.373558,
                    "min": 1701.409163,
                    "p50": 1719.134564,
                    "p95": 1732.373558,
                    "p99": 1732.373558,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 926.491149,
                    "min": 903.6265139999999,
                    "p50": 917.0823959999999,
                    "p95": 926.491149,
                    "p99": 926.491149,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 549.868105,
                    "min": 506.86389199999996,
                    "p50": 546.7719079999999,
                    "p95": 549.868105,
                    "p99": 549.868105,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1952.469936,
                    "min": 1912.8347489999999,
                    "p50": 1946.6478639999998,
                    "p95": 1952.469936,
                    "p99": 1952.469936,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1830.6778259999999,
                    "min": 1788.760448,
                    "p50": 1822.2338419999999,
                    "p95": 1830.6778259999999,
                    "p99": 1830.6778259999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2248.6930319999997,
                    "min": 2168.589615,
                    "p50": 2231.6784589999997,
                    "p95": 2248.6930319999997,
                    "p99": 2248.6930319999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1047.932583,
                    "min": 1024.61455,
                    "p50": 1041.336093,
                    "p95": 1047.932583,
                    "p99": 1047.932583,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1573.558124,
                    "min": 1536.4907859999998,
                    "p50": 1555.419424,
                    "p95": 1573.558124,
                    "p99": 1573.558124,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 879.499249,
                    "min": 861.2093289999999,
                    "p50": 870.4230789999999,
                    "p95": 879.499249,
                    "p99": 879.499249,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 639.8866849999999,
                    "min": 612.7525969999999,
                    "p50": 631.2947459999999,
                    "p95": 639.8866849999999,
                    "p99": 639.8866849999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1240.210008,
                    "min": 1192.5492259999999,
                    "p50": 1223.861044,
                    "p95": 1240.210008,
                    "p99": 1240.210008,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1842.218764,
                    "min": 1814.3357629999998,
                    "p50": 1820.5531449999999,
                    "p95": 1842.218764,
                    "p99": 1842.218764,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 5995.806614,
                    "min": 5931.832237,
                    "p50": 5966.939485,
                    "p95": 5995.806614,
                    "p99": 5995.806614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2417.841769,
                    "min": 2369.862579,
                    "p50": 2403.942548,
                    "p95": 2417.841769,
                    "p99": 2417.841769,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 699.677341,
                    "min": 649.710892,
                    "p50": 693.276223,
                    "p95": 699.677341,
                    "p99": 699.677341,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 220.410662,
                    "min": 179.90428799999998,
                    "p50": 218.37375899999998,
                    "p95": 220.410662,
                    "p99": 220.410662,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3013.752858,
                    "min": 2977.756931,
                    "p50": 2999.815603,
                    "p95": 3013.752858,
                    "p99": 3013.752858,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 459.08322899999996,
                    "min": 449.14759699999996,
                    "p50": 454.639186,
                    "p95": 459.08322899999996,
                    "p99": 459.08322899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 519.383023,
                    "min": 475.743156,
                    "p50": 509.88384399999995,
                    "p95": 519.383023,
                    "p99": 519.383023,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 585.813798,
                    "min": 534.841014,
                    "p50": 576.440204,
                    "p95": 585.813798,
                    "p99": 585.813798,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1093.91065,
                    "min": 1067.638488,
                    "p50": 1085.5688189999998,
                    "p95": 1093.91065,
                    "p99": 1093.91065,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 339.77964599999996,
                    "min": 326.29799099999997,
                    "p50": 338.44710499999997,
                    "p95": 339.77964599999996,
                    "p99": 339.77964599999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 400.74038099999996,
                    "min": 380.716681,
                    "p50": 398.08921799999996,
                    "p95": 400.74038099999996,
                    "p99": 400.74038099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 939.599645,
                    "min": 917.7743459999999,
                    "p50": 932.653778,
                    "p95": 939.599645,
                    "p99": 939.599645,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 761.94948,
                    "min": 738.853899,
                    "p50": 751.36144,
                    "p95": 761.94948,
                    "p99": 761.94948,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 280.476312,
                    "min": 239.13340499999998,
                    "p50": 278.24632299999996,
                    "p95": 280.476312,
                    "p99": 280.476312,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 818.874885,
                    "min": 794.67237,
                    "p50": 812.833613,
                    "p95": 818.874885,
                    "p99": 818.874885,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3392.6018059999997,
                    "min": 3340.820103,
                    "p50": 3369.05133,
                    "p95": 3392.6018059999997,
                    "p99": 3392.6018059999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1380.5551329999998,
                    "min": 1345.316298,
                    "p50": 1372.0246439999999,
                    "p95": 1380.5551329999998,
                    "p99": 1380.5551329999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1001.703056,
                    "min": 981.8490549999999,
                    "p50": 992.2341289999999,
                    "p95": 1001.703056,
                    "p99": 1001.703056,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2330.420454,
                    "min": 2295.2313879999997,
                    "p50": 2323.28503,
                    "p95": 2330.420454,
                    "p99": 2330.420454,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1581.195047,
                    "min": 1525.8817239999998,
                    "p50": 1562.1465859999998,
                    "p95": 1581.195047,
                    "p99": 1581.195047,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7680.845617,
                    "min": 7617.595875,
                    "p50": 7646.338022,
                    "p95": 7680.845617,
                    "p99": 7680.845617,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2144.177541,
                    "min": 2116.001293,
                    "p50": 2135.535301,
                    "p95": 2144.177541,
                    "p99": 2144.177541,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1194.783129,
                    "min": 1170.208911,
                    "p50": 1181.271925,
                    "p95": 1194.783129,
                    "p99": 1194.783129,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2555.625835,
                    "min": 2506.655563,
                    "p50": 2522.6436479999998,
                    "p95": 2555.625835,
                    "p99": 2555.625835,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5834.999177,
                    "min": 5733.7712329999995,
                    "p50": 5769.971149,
                    "p95": 5834.999177,
                    "p99": 5834.999177,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2926.509436,
                    "min": 2884.245,
                    "p50": 2900.4859069999998,
                    "p95": 2926.509436,
                    "p99": 2926.509436,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3900.402241,
                    "min": 3818.3389119999997,
                    "p50": 3856.8565719999997,
                    "p95": 3900.402241,
                    "p99": 3900.402241,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 618.436065,
                    "min": 607.6275059999999,
                    "p50": 615.4576979999999,
                    "p95": 618.436065,
                    "p99": 618.436065,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2748.619781,
                    "min": 2678.606742,
                    "p50": 2714.846974,
                    "p95": 2748.619781,
                    "p99": 2748.619781,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 816.9817409999999,
                    "min": 801.546671,
                    "p50": 807.905818,
                    "p95": 816.9817409999999,
                    "p99": 816.9817409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1969.920306,
                    "min": 1929.8305779999998,
                    "p50": 1946.472841,
                    "p95": 1969.920306,
                    "p99": 1969.920306,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1785.917921,
                    "min": 1726.4483659999999,
                    "p50": 1758.964403,
                    "p95": 1785.917921,
                    "p99": 1785.917921,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2916.6667039999998,
                    "min": 2877.898522,
                    "p50": 2892.2681979999998,
                    "p95": 2916.6667039999998,
                    "p99": 2916.6667039999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 809.726112,
                    "min": 797.597985,
                    "p50": 801.333528,
                    "p95": 809.726112,
                    "p99": 809.726112,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1759.6041989999999,
                    "min": 1750.8870989999998,
                    "p50": 1755.5941369999998,
                    "p95": 1759.6041989999999,
                    "p99": 1759.6041989999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2544.25635,
                    "min": 2497.892352,
                    "p50": 2529.628854,
                    "p95": 2544.25635,
                    "p99": 2544.25635,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1959.4619719999998,
                    "min": 1915.961685,
                    "p50": 1944.3676719999999,
                    "p95": 1959.4619719999998,
                    "p99": 1959.4619719999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2171.222903,
                    "min": 2125.126872,
                    "p50": 2140.600579,
                    "p95": 2171.222903,
                    "p99": 2171.222903,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3871.2420909999996,
                    "min": 3813.7877209999997,
                    "p50": 3832.8659119999998,
                    "p95": 3871.2420909999996,
                    "p99": 3871.2420909999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5754.652171,
                    "min": 5719.012748,
                    "p50": 5744.919809,
                    "p95": 5754.652171,
                    "p99": 5754.652171,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2337.8266679999997,
                    "min": 2314.755377,
                    "p50": 2325.264934,
                    "p95": 2337.8266679999997,
                    "p99": 2337.8266679999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1005.209924,
                    "min": 988.024062,
                    "p50": 999.47386,
                    "p95": 1005.209924,
                    "p99": 1005.209924,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 615.2932139999999,
                    "min": 604.166577,
                    "p50": 611.231056,
                    "p95": 615.2932139999999,
                    "p99": 615.2932139999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1198.899883,
                    "min": 1150.86369,
                    "p50": 1181.655219,
                    "p95": 1198.899883,
                    "p99": 1198.899883,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3390.0236959999997,
                    "min": 3343.198441,
                    "p50": 3377.99819,
                    "p95": 3390.0236959999997,
                    "p99": 3390.0236959999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1394.243211,
                    "min": 1347.144309,
                    "p50": 1377.2231829999998,
                    "p95": 1394.243211,
                    "p99": 1394.243211,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2714.1710129999997,
                    "min": 2686.5094599999998,
                    "p50": 2705.3158869999997,
                    "p95": 2714.1710129999997,
                    "p99": 2714.1710129999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1584.393051,
                    "min": 1524.443088,
                    "p50": 1562.663243,
                    "p95": 1584.393051,
                    "p99": 1584.393051,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 872.1527619999999,
                    "min": 842.934456,
                    "p50": 863.697698,
                    "p95": 872.1527619999999,
                    "p99": 872.1527619999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 159.494216,
                    "min": 140.88094999999998,
                    "p50": 157.10572399999998,
                    "p95": 159.494216,
                    "p99": 159.494216,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 463.178406,
                    "min": 416.74895499999997,
                    "p50": 453.999064,
                    "p95": 463.178406,
                    "p99": 463.178406,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 100.531568,
                    "min": 96.61162,
                    "p50": 99.60628299999999,
                    "p95": 100.531568,
                    "p99": 100.531568,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 67.141521,
                    "min": 35.998408,
                    "p50": 66.90620299999999,
                    "p95": 67.141521,
                    "p99": 67.141521,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 141.61455899999999,
                    "min": 100.74144199999999,
                    "p50": 140.73836,
                    "p95": 141.61455899999999,
                    "p99": 141.61455899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 374.688003,
                    "min": 334.616108,
                    "p50": 372.031749,
                    "p95": 374.688003,
                    "p99": 374.688003,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 170.64842099999998,
                    "min": 126.31658999999999,
                    "p50": 164.893126,
                    "p95": 170.64842099999998,
                    "p99": 170.64842099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 155.19232599999998,
                    "min": 108.39553199999999,
                    "p50": 147.19226899999998,
                    "p95": 155.19232599999998,
                    "p99": 155.19232599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 188.49593099999998,
                    "min": 180.58309799999998,
                    "p50": 186.41475799999998,
                    "p95": 188.49593099999998,
                    "p99": 188.49593099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 81.486978,
                    "min": 44.579615,
                    "p50": 80.734825,
                    "p95": 81.486978,
                    "p99": 81.486978,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 137.59769,
                    "min": 93.724477,
                    "p50": 130.744978,
                    "p95": 137.59769,
                    "p99": 137.59769,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 53.923928,
                    "min": 26.671816999999997,
                    "p50": 51.811487,
                    "p95": 53.923928,
                    "p99": 53.923928,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 110.139805,
                    "min": 79.489989,
                    "p50": 106.484236,
                    "p95": 110.139805,
                    "p99": 110.139805,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 93.005765,
                    "min": 86.125115,
                    "p50": 90.516204,
                    "p95": 93.005765,
                    "p99": 93.005765,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 117.215109,
                    "min": 75.555965,
                    "p50": 115.069289,
                    "p95": 117.215109,
                    "p99": 117.215109,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 126.50891299999999,
                    "min": 109.05251299999999,
                    "p50": 123.692022,
                    "p95": 126.50891299999999,
                    "p99": 126.50891299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 294.195786,
                    "min": 289.15083699999997,
                    "p50": 292.47229,
                    "p95": 294.195786,
                    "p99": 294.195786,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 209.80227299999999,
                    "min": 167.10714199999998,
                    "p50": 206.974462,
                    "p95": 209.80227299999999,
                    "p99": 209.80227299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 25.075391,
                    "min": 23.879464,
                    "p50": 24.520816,
                    "p95": 25.075391,
                    "p99": 25.075391,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 109.730857,
                    "min": 69.067802,
                    "p50": 109.19133099999999,
                    "p95": 109.730857,
                    "p99": 109.730857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 92.824939,
                    "min": 51.743476,
                    "p50": 91.007429,
                    "p95": 92.824939,
                    "p99": 92.824939,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 72.83955,
                    "min": 61.971247,
                    "p50": 67.779504,
                    "p95": 72.83955,
                    "p99": 72.83955,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 36.690112,
                    "min": 32.734322,
                    "p50": 34.93273,
                    "p95": 36.690112,
                    "p99": 36.690112,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 211.976574,
                    "min": 170.586883,
                    "p50": 209.799886,
                    "p95": 211.976574,
                    "p99": 211.976574,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 124.748094,
                    "min": 120.25583599999999,
                    "p50": 123.925395,
                    "p95": 124.748094,
                    "p99": 124.748094,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 43.867585,
                    "min": 41.019104,
                    "p50": 41.188598999999996,
                    "p95": 43.867585,
                    "p99": 43.867585,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 52.084416999999995,
                    "min": 25.920544999999997,
                    "p50": 48.075139,
                    "p95": 52.084416999999995,
                    "p99": 52.084416999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 32.931182,
                    "min": 25.491858999999998,
                    "p50": 28.750522999999998,
                    "p95": 32.931182,
                    "p99": 32.931182,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 33.231218,
                    "min": 25.030583,
                    "p50": 32.392887,
                    "p95": 33.231218,
                    "p99": 33.231218,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.794549,
                    "min": 21.968086,
                    "p50": 24.38597,
                    "p95": 24.794549,
                    "p99": 24.794549,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 59.395624999999995,
                    "min": 34.400855,
                    "p50": 59.086382,
                    "p95": 59.395624999999995,
                    "p99": 59.395624999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 41.110501,
                    "min": 37.801592,
                    "p50": 39.400168,
                    "p95": 41.110501,
                    "p99": 41.110501,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 54.000766999999996,
                    "min": 26.465192,
                    "p50": 51.062006999999994,
                    "p95": 54.000766999999996,
                    "p99": 54.000766999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 28.535805999999997,
                    "min": 24.638758,
                    "p50": 26.652086999999998,
                    "p95": 28.535805999999997,
                    "p99": 28.535805999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 46.747146,
                    "min": 24.162501,
                    "p50": 44.462908999999996,
                    "p95": 46.747146,
                    "p99": 46.747146,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.861439999999998,
                    "min": 24.225253,
                    "p50": 24.602363999999998,
                    "p95": 26.861439999999998,
                    "p99": 26.861439999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.202410999999998,
                    "min": 23.996291,
                    "p50": 24.826586,
                    "p95": 26.202410999999998,
                    "p99": 26.202410999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 213.28014,
                    "min": 169.442114,
                    "p50": 209.37850899999998,
                    "p95": 213.28014,
                    "p99": 213.28014,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 123.198605,
                    "min": 102.78105599999999,
                    "p50": 116.72809199999999,
                    "p95": 123.198605,
                    "p99": 123.198605,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 236.08696899999998,
                    "min": 229.84355599999998,
                    "p50": 232.105044,
                    "p95": 236.08696899999998,
                    "p99": 236.08696899999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 108.47565999999999,
                    "min": 87.41221,
                    "p50": 107.009249,
                    "p95": 108.47565999999999,
                    "p99": 108.47565999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 98.33514799999999,
                    "min": 59.231277999999996,
                    "p50": 93.28473699999999,
                    "p95": 98.33514799999999,
                    "p99": 98.33514799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.336997,
                    "min": 39.526415,
                    "p50": 76.95221699999999,
                    "p95": 78.336997,
                    "p99": 78.336997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 179.387956,
                    "min": 158.016889,
                    "p50": 174.382552,
                    "p95": 179.387956,
                    "p99": 179.387956,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 150.826775,
                    "min": 134.79489999999998,
                    "p50": 146.024454,
                    "p95": 150.826775,
                    "p99": 150.826775,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 329.496903,
                    "min": 289.75546399999996,
                    "p50": 324.94753199999997,
                    "p95": 329.496903,
                    "p99": 329.496903,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 130.325263,
                    "min": 125.05373399999999,
                    "p50": 128.641606,
                    "p95": 130.325263,
                    "p99": 130.325263,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1005.3502669999999,
                    "min": 986.669365,
                    "p50": 996.3430609999999,
                    "p95": 1005.3502669999999,
                    "p99": 1005.3502669999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 90.123485,
                    "min": 49.400681999999996,
                    "p50": 88.630485,
                    "p95": 90.123485,
                    "p99": 90.123485,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 165.967517,
                    "min": 126.261803,
                    "p50": 165.039188,
                    "p95": 165.967517,
                    "p99": 165.967517,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 159.084361,
                    "min": 117.43016399999999,
                    "p50": 156.56995899999998,
                    "p95": 159.084361,
                    "p99": 159.084361,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 426.89018899999996,
                    "min": 408.366398,
                    "p50": 415.418723,
                    "p95": 426.89018899999996,
                    "p99": 426.89018899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.661795999999995,
                    "min": 46.163621,
                    "p50": 58.838493,
                    "p95": 62.661795999999995,
                    "p99": 62.661795999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 189.244622,
                    "min": 170.53242799999998,
                    "p50": 185.36974899999998,
                    "p95": 189.244622,
                    "p99": 189.244622,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 140.448802,
                    "min": 127.700344,
                    "p50": 135.435611,
                    "p95": 140.448802,
                    "p99": 140.448802,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 523.973936,
                    "min": 476.267856,
                    "p50": 518.258338,
                    "p95": 523.973936,
                    "p99": 523.973936,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1134.9993849999998,
                    "min": 1113.924634,
                    "p50": 1119.667999,
                    "p95": 1134.9993849999998,
                    "p99": 1134.9993849999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 975.008425,
                    "min": 950.447043,
                    "p50": 967.32943,
                    "p95": 975.008425,
                    "p99": 975.008425,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1452.036261,
                    "min": 1417.145771,
                    "p50": 1437.721255,
                    "p95": 1452.036261,
                    "p99": 1452.036261,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 499.590642,
                    "min": 461.92681,
                    "p50": 495.19780299999996,
                    "p95": 499.590642,
                    "p99": 499.590642,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 657.784095,
                    "min": 649.307089,
                    "p50": 652.2853809999999,
                    "p95": 657.784095,
                    "p99": 657.784095,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1290.1185369999998,
                    "min": 1248.019977,
                    "p50": 1276.588223,
                    "p95": 1290.1185369999998,
                    "p99": 1290.1185369999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 818.949976,
                    "min": 797.5658099999999,
                    "p50": 808.0721659999999,
                    "p95": 818.949976,
                    "p99": 818.949976,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1488.930052,
                    "min": 1427.520983,
                    "p50": 1473.938342,
                    "p95": 1488.930052,
                    "p99": 1488.930052,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 479.01599799999997,
                    "min": 461.864607,
                    "p50": 474.61517899999996,
                    "p95": 479.01599799999997,
                    "p99": 479.01599799999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1199.227922,
                    "min": 1174.3056709999998,
                    "p50": 1190.091878,
                    "p95": 1199.227922,
                    "p99": 1199.227922,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 915.733606,
                    "min": 888.505403,
                    "p50": 900.0788,
                    "p95": 915.733606,
                    "p99": 915.733606,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1061.187478,
                    "min": 1036.667712,
                    "p50": 1044.815649,
                    "p95": 1061.187478,
                    "p99": 1061.187478,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1354.683953,
                    "min": 1309.187224,
                    "p50": 1329.408348,
                    "p95": 1354.683953,
                    "p99": 1354.683953,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 622.557317,
                    "min": 607.1289429999999,
                    "p50": 617.183462,
                    "p95": 622.557317,
                    "p99": 622.557317,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 766.368715,
                    "min": 737.265267,
                    "p50": 757.101987,
                    "p95": 766.368715,
                    "p99": 766.368715,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 169.342007,
                    "min": 160.383267,
                    "p50": 167.015108,
                    "p95": 169.342007,
                    "p99": 169.342007,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 267.249186,
                    "min": 224.50034599999998,
                    "p50": 262.969623,
                    "p95": 267.249186,
                    "p99": 267.249186,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 333.51518,
                    "min": 309.584654,
                    "p50": 328.274296,
                    "p95": 333.51518,
                    "p99": 333.51518,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 234.19627699999998,
                    "min": 228.15038099999998,
                    "p50": 232.21126999999998,
                    "p95": 234.19627699999998,
                    "p99": 234.19627699999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 430.14409,
                    "min": 418.66745399999996,
                    "p50": 424.009329,
                    "p95": 430.14409,
                    "p99": 430.14409,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 137.66112999999999,
                    "min": 124.59552799999999,
                    "p50": 135.017889,
                    "p95": 137.66112999999999,
                    "p99": 137.66112999999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 364.532059,
                    "min": 351.555013,
                    "p50": 360.68821299999996,
                    "p95": 364.532059,
                    "p99": 364.532059,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 302.675004,
                    "min": 293.82837,
                    "p50": 298.200877,
                    "p95": 302.675004,
                    "p99": 302.675004,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 203.88297,
                    "min": 188.91162599999998,
                    "p50": 200.27847699999998,
                    "p95": 203.88297,
                    "p99": 203.88297,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 394.29287,
                    "min": 357.523964,
                    "p50": 388.10011699999995,
                    "p95": 394.29287,
                    "p99": 394.29287,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 995.207321,
                    "min": 975.0598369999999,
                    "p50": 986.826688,
                    "p95": 995.207321,
                    "p99": 995.207321,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1310.862817,
                    "min": 1279.5347299999999,
                    "p50": 1296.871756,
                    "p95": 1310.862817,
                    "p99": 1310.862817,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 361.036007,
                    "min": 343.505994,
                    "p50": 356.114763,
                    "p95": 361.036007,
                    "p99": 361.036007,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 675.309003,
                    "min": 654.7266149999999,
                    "p50": 668.818412,
                    "p95": 675.309003,
                    "p99": 675.309003,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1142.661145,
                    "min": 1098.633901,
                    "p50": 1135.7771719999998,
                    "p95": 1142.661145,
                    "p99": 1142.661145,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 519.643914,
                    "min": 494.324758,
                    "p50": 510.372756,
                    "p95": 519.643914,
                    "p99": 519.643914,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 848.789461,
                    "min": 820.238795,
                    "p50": 829.267672,
                    "p95": 848.789461,
                    "p99": 848.789461,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 343.86248,
                    "min": 304.71567799999997,
                    "p50": 338.020579,
                    "p95": 343.86248,
                    "p99": 343.86248,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 192.561692,
                    "min": 154.83271499999998,
                    "p50": 186.13889,
                    "p95": 192.561692,
                    "p99": 192.561692,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 129.299478,
                    "min": 117.071615,
                    "p50": 125.31600399999999,
                    "p95": 129.299478,
                    "p99": 129.299478,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 326.49368,
                    "min": 299.701387,
                    "p50": 321.551275,
                    "p95": 326.49368,
                    "p99": 326.49368,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 261.01063999999997,
                    "min": 214.51542999999998,
                    "p50": 253.83969599999998,
                    "p95": 261.01063999999997,
                    "p99": 261.01063999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 218.342342,
                    "min": 190.7669,
                    "p50": 212.91245999999998,
                    "p95": 218.342342,
                    "p99": 218.342342,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 302.812431,
                    "min": 293.431088,
                    "p50": 301.238805,
                    "p95": 302.812431,
                    "p99": 302.812431,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.557031,
                    "min": 129.982989,
                    "p50": 146.160446,
                    "p95": 149.557031,
                    "p99": 149.557031,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 109.04388999999999,
                    "min": 92.34843599999999,
                    "p50": 104.312134,
                    "p95": 109.04388999999999,
                    "p99": 109.04388999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 422.491059,
                    "min": 414.30790099999996,
                    "p50": 419.796227,
                    "p95": 422.491059,
                    "p99": 422.491059,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 373.68992399999996,
                    "min": 324.604488,
                    "p50": 365.12904599999996,
                    "p95": 373.68992399999996,
                    "p99": 373.68992399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 476.095622,
                    "min": 434.684624,
                    "p50": 469.497814,
                    "p95": 476.095622,
                    "p99": 476.095622,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 236.905051,
                    "min": 227.792216,
                    "p50": 232.502132,
                    "p95": 236.905051,
                    "p99": 236.905051,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 283.91587799999996,
                    "min": 265.832458,
                    "p50": 280.338686,
                    "p95": 283.91587799999996,
                    "p99": 283.91587799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 172.372898,
                    "min": 164.79204,
                    "p50": 169.038895,
                    "p95": 172.372898,
                    "p99": 172.372898,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 309.031951,
                    "min": 288.40450599999997,
                    "p50": 308.691325,
                    "p95": 309.031951,
                    "p99": 309.031951,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 143.448841,
                    "min": 103.031329,
                    "p50": 141.484143,
                    "p95": 143.448841,
                    "p99": 143.448841,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 354.215143,
                    "min": 326.038181,
                    "p50": 350.622412,
                    "p95": 354.215143,
                    "p99": 354.215143,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 251.82902099999998,
                    "min": 232.11933199999999,
                    "p50": 245.284721,
                    "p95": 251.82902099999998,
                    "p99": 251.82902099999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 125.08456299999999,
                    "min": 119.266684,
                    "p50": 121.696247,
                    "p95": 125.08456299999999,
                    "p99": 125.08456299999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 167.287501,
                    "min": 125.93907,
                    "p50": 164.005654,
                    "p95": 167.287501,
                    "p99": 167.287501,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 292.531524,
                    "min": 254.87695699999998,
                    "p50": 288.43352,
                    "p95": 292.531524,
                    "p99": 292.531524,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 337.160241,
                    "min": 328.379166,
                    "p50": 331.899903,
                    "p95": 337.160241,
                    "p99": 337.160241,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 464.11409699999996,
                    "min": 421.595526,
                    "p50": 457.23747499999996,
                    "p95": 464.11409699999996,
                    "p99": 464.11409699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 185.11416499999999,
                    "min": 163.365215,
                    "p50": 182.58198299999998,
                    "p95": 185.11416499999999,
                    "p99": 185.11416499999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 417.380946,
                    "min": 367.18215399999997,
                    "p50": 406.47857799999997,
                    "p95": 417.380946,
                    "p99": 417.380946,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 206.65818199999998,
                    "min": 166.582464,
                    "p50": 204.66764999999998,
                    "p95": 206.65818199999998,
                    "p99": 206.65818199999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 267.494391,
                    "min": 246.872911,
                    "p50": 265.90599399999996,
                    "p95": 267.494391,
                    "p99": 267.494391,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 227.12070899999998,
                    "min": 217.392609,
                    "p50": 225.559803,
                    "p95": 227.12070899999998,
                    "p99": 227.12070899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.528893,
                    "min": 90.008707,
                    "p50": 101.019624,
                    "p95": 106.528893,
                    "p99": 106.528893,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 149.432855,
                    "min": 108.686144,
                    "p50": 146.266933,
                    "p95": 149.432855,
                    "p99": 149.432855,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 210.211954,
                    "min": 204.120262,
                    "p50": 209.302449,
                    "p95": 210.211954,
                    "p99": 210.211954,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 193.498019,
                    "min": 180.700287,
                    "p50": 191.385495,
                    "p95": 193.498019,
                    "p99": 193.498019,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 423.300552,
                    "min": 394.828621,
                    "p50": 416.59504499999997,
                    "p95": 423.300552,
                    "p99": 423.300552,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 371.011197,
                    "min": 330.4677,
                    "p50": 364.662812,
                    "p95": 371.011197,
                    "p99": 371.011197,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 105.735766,
                    "min": 91.431947,
                    "p50": 103.902346,
                    "p95": 105.735766,
                    "p99": 105.735766,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.201081,
                    "min": 243.11235,
                    "p50": 278.749573,
                    "p95": 282.201081,
                    "p99": 282.201081,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 256.871912,
                    "min": 230.734099,
                    "p50": 252.786726,
                    "p95": 256.871912,
                    "p99": 256.871912,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 127.992053,
                    "min": 108.13257999999999,
                    "p50": 124.457391,
                    "p95": 127.992053,
                    "p99": 127.992053,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 305.430497,
                    "min": 298.794039,
                    "p50": 303.963402,
                    "p95": 305.430497,
                    "p99": 305.430497,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 234.90335,
                    "min": 193.94040999999999,
                    "p50": 231.48341299999998,
                    "p95": 234.90335,
                    "p99": 234.90335,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 473.68528,
                    "min": 442.445292,
                    "p50": 471.19071199999996,
                    "p95": 473.68528,
                    "p99": 473.68528,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 345.69919799999997,
                    "min": 327.199318,
                    "p50": 343.13029,
                    "p95": 345.69919799999997,
                    "p99": 345.69919799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 174.442496,
                    "min": 153.94764999999998,
                    "p50": 169.074369,
                    "p95": 174.442496,
                    "p99": 174.442496,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 324.019749,
                    "min": 299.17485999999997,
                    "p50": 322.04366,
                    "p95": 324.019749,
                    "p99": 324.019749,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 475.731678,
                    "min": 441.233996,
                    "p50": 467.81332699999996,
                    "p95": 475.731678,
                    "p99": 475.731678,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 128.183743,
                    "min": 110.657151,
                    "p50": 125.72266599999999,
                    "p95": 128.183743,
                    "p99": 128.183743,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 235.12627999999998,
                    "min": 195.998537,
                    "p50": 232.504046,
                    "p95": 235.12627999999998,
                    "p99": 235.12627999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 258.59736599999997,
                    "min": 237.299679,
                    "p50": 256.829643,
                    "p95": 258.59736599999997,
                    "p99": 258.59736599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 283.10715,
                    "min": 240.479773,
                    "p50": 281.14469299999996,
                    "p95": 283.10715,
                    "p99": 283.10715,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 422.793576,
                    "min": 411.795868,
                    "p50": 420.78704799999997,
                    "p95": 422.793576,
                    "p99": 422.793576,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 302.871218,
                    "min": 265.577158,
                    "p50": 300.31199599999997,
                    "p95": 302.871218,
                    "p99": 302.871218,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 328.196074,
                    "min": 287.85137,
                    "p50": 320.778934,
                    "p95": 328.196074,
                    "p99": 328.196074,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 104.060492,
                    "min": 66.306068,
                    "p50": 103.149868,
                    "p95": 104.060492,
                    "p99": 104.060492,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 171.099513,
                    "min": 130.871233,
                    "p50": 169.03626699999998,
                    "p95": 171.099513,
                    "p99": 171.099513,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.969082,
                    "min": 107.73207099999999,
                    "p50": 147.07184999999998,
                    "p95": 150.969082,
                    "p99": 150.969082,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 369.30965199999997,
                    "min": 330.875969,
                    "p50": 368.09802299999996,
                    "p95": 369.30965199999997,
                    "p99": 369.30965199999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 216.065225,
                    "min": 196.087052,
                    "p50": 212.82437399999998,
                    "p95": 216.065225,
                    "p99": 216.065225,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 348.729115,
                    "min": 306.08198899999996,
                    "p50": 345.00089199999996,
                    "p95": 348.729115,
                    "p99": 348.729115,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 194.998933,
                    "min": 171.355165,
                    "p50": 191.829185,
                    "p95": 194.998933,
                    "p99": 194.998933,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 154.851238,
                    "min": 115.527597,
                    "p50": 152.65413999999998,
                    "p95": 154.851238,
                    "p99": 154.851238,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 61.429970999999995,
                    "min": 27.397788,
                    "p50": 55.094107,
                    "p95": 61.429970999999995,
                    "p99": 61.429970999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 708.5919729999999,
                    "min": 692.4987189999999,
                    "p50": 702.6036379999999,
                    "p95": 708.5919729999999,
                    "p99": 708.5919729999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 171.870441,
                    "min": 134.142334,
                    "p50": 169.71526699999998,
                    "p95": 171.870441,
                    "p99": 171.870441,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 237.094757,
                    "min": 195.452775,
                    "p50": 234.918455,
                    "p95": 237.094757,
                    "p99": 237.094757,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 110.70720899999999,
                    "min": 66.388806,
                    "p50": 105.18399,
                    "p95": 110.70720899999999,
                    "p99": 110.70720899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 303.64185699999996,
                    "min": 258.773611,
                    "p50": 300.506311,
                    "p95": 303.64185699999996,
                    "p99": 303.64185699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 83.800856,
                    "min": 39.483606,
                    "p50": 76.548087,
                    "p95": 83.800856,
                    "p99": 83.800856,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 93.692236,
                    "min": 52.78237,
                    "p50": 92.05141499999999,
                    "p95": 93.692236,
                    "p99": 93.692236,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 42.083334,
                    "min": 23.847354,
                    "p50": 39.34936,
                    "p95": 42.083334,
                    "p99": 42.083334,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 102.02158999999999,
                    "min": 84.960976,
                    "p50": 97.56983199999999,
                    "p95": 102.02158999999999,
                    "p99": 102.02158999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.650515,
                    "min": 46.022315,
                    "p50": 85.304456,
                    "p95": 87.650515,
                    "p99": 87.650515,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 112.311166,
                    "min": 90.674589,
                    "p50": 111.213386,
                    "p95": 112.311166,
                    "p99": 112.311166,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 125.185071,
                    "min": 117.36429199999999,
                    "p50": 123.896863,
                    "p95": 125.185071,
                    "p99": 125.185071,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 121.498683,
                    "min": 78.78956,
                    "p50": 118.30393,
                    "p95": 121.498683,
                    "p99": 121.498683,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 372.678932,
                    "min": 325.29240899999996,
                    "p50": 370.52052,
                    "p95": 372.678932,
                    "p99": 372.678932,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.508597,
                    "min": 61.532008,
                    "p50": 65.326224,
                    "p95": 72.508597,
                    "p99": 72.508597,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 135.738381,
                    "min": 125.811005,
                    "p50": 130.813526,
                    "p95": 135.738381,
                    "p99": 135.738381,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 142.008015,
                    "min": 98.05841,
                    "p50": 137.002609,
                    "p95": 142.008015,
                    "p99": 142.008015,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 264.263282,
                    "min": 243.957867,
                    "p50": 263.18049099999996,
                    "p95": 264.263282,
                    "p99": 264.263282,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.585692,
                    "min": 79.375141,
                    "p50": 84.43306,
                    "p95": 85.585692,
                    "p99": 85.585692,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 339.707038,
                    "min": 298.44158899999996,
                    "p50": 337.716461,
                    "p95": 339.707038,
                    "p99": 339.707038,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 190.23504699999998,
                    "min": 148.643167,
                    "p50": 186.174278,
                    "p95": 190.23504699999998,
                    "p99": 190.23504699999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 147.227264,
                    "min": 142.770177,
                    "p50": 144.389103,
                    "p95": 147.227264,
                    "p99": 147.227264,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 155.89007999999998,
                    "min": 112.809072,
                    "p50": 151.702323,
                    "p95": 155.89007999999998,
                    "p99": 155.89007999999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 139.349886,
                    "min": 125.86689199999999,
                    "p50": 135.002041,
                    "p95": 139.349886,
                    "p99": 139.349886,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 172.15828299999998,
                    "min": 130.18560399999998,
                    "p50": 168.68365,
                    "p95": 172.15828299999998,
                    "p99": 172.15828299999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.458048,
                    "min": 40.534796,
                    "p50": 45.604825,
                    "p95": 48.458048,
                    "p99": 48.458048,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 783.4271769999999,
                    "min": 759.1040969999999,
                    "p50": 781.430429,
                    "p95": 783.4271769999999,
                    "p99": 783.4271769999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 65.227457,
                    "min": 43.201102,
                    "p50": 60.838508999999995,
                    "p95": 65.227457,
                    "p99": 65.227457,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.393586,
                    "min": 37.777783,
                    "p50": 74.36390399999999,
                    "p95": 77.393586,
                    "p99": 77.393586,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 99.207675,
                    "min": 60.231175,
                    "p50": 98.511651,
                    "p95": 99.207675,
                    "p99": 99.207675,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 133.603521,
                    "min": 127.44882899999999,
                    "p50": 129.052664,
                    "p95": 133.603521,
                    "p99": 133.603521,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 111.77414499999999,
                    "min": 105.394144,
                    "p50": 108.673546,
                    "p95": 111.77414499999999,
                    "p99": 111.77414499999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 127.085876,
                    "min": 82.126312,
                    "p50": 121.67889799999999,
                    "p95": 127.085876,
                    "p99": 127.085876,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 95.517642,
                    "min": 64.193315,
                    "p50": 91.72756299999999,
                    "p95": 95.517642,
                    "p99": 95.517642,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 116.98973199999999,
                    "min": 75.297461,
                    "p50": 113.03431099999999,
                    "p95": 116.98973199999999,
                    "p99": 116.98973199999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 415.849201,
                    "min": 383.35085999999995,
                    "p50": 410.00152499999996,
                    "p95": 415.849201,
                    "p99": 415.849201,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 128.46902699999998,
                    "min": 85.31188999999999,
                    "p50": 125.371214,
                    "p95": 128.46902699999998,
                    "p99": 128.46902699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 717.3106859999999,
                    "min": 695.955838,
                    "p50": 712.119018,
                    "p95": 717.3106859999999,
                    "p99": 717.3106859999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 137.501401,
                    "min": 130.07593599999998,
                    "p50": 131.801346,
                    "p95": 137.501401,
                    "p99": 137.501401,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 100.609225,
                    "min": 60.059441,
                    "p50": 98.79353599999999,
                    "p95": 100.609225,
                    "p99": 100.609225,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 155.911028,
                    "min": 149.447439,
                    "p50": 153.772828,
                    "p95": 155.911028,
                    "p99": 155.911028,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 174.50294599999998,
                    "min": 131.75172,
                    "p50": 167.017508,
                    "p95": 174.50294599999998,
                    "p99": 174.50294599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 67.13855699999999,
                    "min": 33.818041,
                    "p50": 65.555319,
                    "p95": 67.13855699999999,
                    "p99": 67.13855699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 107.785681,
                    "min": 66.589451,
                    "p50": 105.47894199999999,
                    "p95": 107.785681,
                    "p99": 107.785681,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 92.203981,
                    "min": 47.093405999999995,
                    "p50": 85.756924,
                    "p95": 92.203981,
                    "p99": 92.203981,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 143.514487,
                    "min": 99.436318,
                    "p50": 140.788613,
                    "p95": 143.514487,
                    "p99": 143.514487,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 117.90558,
                    "min": 79.772258,
                    "p50": 112.460706,
                    "p95": 117.90558,
                    "p99": 117.90558,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 309.546513,
                    "min": 264.719136,
                    "p50": 306.627882,
                    "p95": 309.546513,
                    "p99": 309.546513,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 240.03706599999998,
                    "min": 210.168249,
                    "p50": 237.32435099999998,
                    "p95": 240.03706599999998,
                    "p99": 240.03706599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 115.01143599999999,
                    "min": 111.46318699999999,
                    "p50": 113.163021,
                    "p95": 115.01143599999999,
                    "p99": 115.01143599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 42.785962999999995,
                    "min": 24.730141,
                    "p50": 40.816348,
                    "p95": 42.785962999999995,
                    "p99": 42.785962999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 95.79824099999999,
                    "min": 53.281147,
                    "p50": 92.500636,
                    "p95": 95.79824099999999,
                    "p99": 95.79824099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 55.702439999999996,
                    "min": 26.958394,
                    "p50": 53.003133999999996,
                    "p95": 55.702439999999996,
                    "p99": 55.702439999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.38262,
                    "min": 77.277745,
                    "p50": 78.972811,
                    "p95": 86.38262,
                    "p99": 86.38262,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 374.730907,
                    "min": 361.473569,
                    "p50": 372.196513,
                    "p95": 374.730907,
                    "p99": 374.730907,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 125.456728,
                    "min": 104.468952,
                    "p50": 121.11222199999999,
                    "p95": 125.456728,
                    "p99": 125.456728,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 98.823567,
                    "min": 76.269634,
                    "p50": 92.246989,
                    "p95": 98.823567,
                    "p99": 98.823567,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 70.60878,
                    "min": 31.21579,
                    "p50": 60.135489,
                    "p95": 70.60878,
                    "p99": 70.60878,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 100.508968,
                    "min": 70.704627,
                    "p50": 99.494439,
                    "p95": 100.508968,
                    "p99": 100.508968,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 190.087158,
                    "min": 170.583453,
                    "p50": 189.238846,
                    "p95": 190.087158,
                    "p99": 190.087158,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 53.257887999999994,
                    "min": 45.409393,
                    "p50": 46.21723,
                    "p95": 53.257887999999994,
                    "p99": 53.257887999999994,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 787.384283,
                    "min": 746.0640559999999,
                    "p50": 785.338207,
                    "p95": 787.384283,
                    "p99": 787.384283,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 175.96156499999998,
                    "min": 130.662063,
                    "p50": 170.028462,
                    "p95": 175.96156499999998,
                    "p99": 175.96156499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 80.17194099999999,
                    "min": 67.65104099999999,
                    "p50": 74.663418,
                    "p95": 80.17194099999999,
                    "p99": 80.17194099999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 115.630365,
                    "min": 75.60597299999999,
                    "p50": 114.476365,
                    "p95": 115.630365,
                    "p99": 115.630365,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 145.005136,
                    "min": 105.15699199999999,
                    "p50": 144.65146099999998,
                    "p95": 145.005136,
                    "p99": 145.005136,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 88.17908899999999,
                    "min": 45.841083999999995,
                    "p50": 84.72343699999999,
                    "p95": 88.17908899999999,
                    "p99": 88.17908899999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 130.19394499999999,
                    "min": 89.873662,
                    "p50": 129.21461,
                    "p95": 130.19394499999999,
                    "p99": 130.19394499999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 414.85867099999996,
                    "min": 373.36307899999997,
                    "p50": 409.69312099999996,
                    "p95": 414.85867099999996,
                    "p99": 414.85867099999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 269.26210299999997,
                    "min": 224.393224,
                    "p50": 262.805562,
                    "p95": 269.26210299999997,
                    "p99": 269.26210299999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 141.855662,
                    "min": 133.180261,
                    "p50": 137.39162299999998,
                    "p95": 141.855662,
                    "p99": 141.855662,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 109.806843,
                    "min": 92.52960399999999,
                    "p50": 107.062935,
                    "p95": 109.806843,
                    "p99": 109.806843,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 157.030606,
                    "min": 139.385626,
                    "p50": 153.068493,
                    "p95": 157.030606,
                    "p99": 157.030606,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 340.971787,
                    "min": 324.400963,
                    "p50": 337.141727,
                    "p95": 340.971787,
                    "p99": 340.971787,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 96.357934,
                    "min": 75.817432,
                    "p50": 92.77774099999999,
                    "p95": 96.357934,
                    "p99": 96.357934,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 139.700387,
                    "min": 123.55402,
                    "p50": 137.64651899999998,
                    "p95": 139.700387,
                    "p99": 139.700387,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 127.00140999999999,
                    "min": 83.6146,
                    "p50": 123.158396,
                    "p95": 127.00140999999999,
                    "p99": 127.00140999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 88.32718299999999,
                    "min": 68.425961,
                    "p50": 85.184885,
                    "p95": 88.32718299999999,
                    "p99": 88.32718299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 192.863702,
                    "min": 171.832209,
                    "p50": 190.07872799999998,
                    "p95": 192.863702,
                    "p99": 192.863702,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 61.888208999999996,
                    "min": 31.077714999999998,
                    "p50": 61.071498,
                    "p95": 61.888208999999996,
                    "p99": 61.888208999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 105.79075399999999,
                    "min": 61.371638999999995,
                    "p50": 100.441497,
                    "p95": 105.79075399999999,
                    "p99": 105.79075399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 117.442543,
                    "min": 76.77777999999999,
                    "p50": 115.69209199999999,
                    "p95": 117.442543,
                    "p99": 117.442543,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 155.814992,
                    "min": 126.47551499999999,
                    "p50": 153.99518899999998,
                    "p95": 155.814992,
                    "p99": 155.814992,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 269.764247,
                    "min": 233.07350799999998,
                    "p50": 268.34034099999997,
                    "p95": 269.764247,
                    "p99": 269.764247,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 132.09484,
                    "min": 115.305493,
                    "p50": 130.601382,
                    "p95": 132.09484,
                    "p99": 132.09484,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 109.612589,
                    "min": 69.057272,
                    "p50": 108.041793,
                    "p95": 109.612589,
                    "p99": 109.612589,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 81.132967,
                    "min": 38.639917,
                    "p50": 75.093094,
                    "p95": 81.132967,
                    "p99": 81.132967,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 148.710684,
                    "min": 105.63445,
                    "p50": 145.494453,
                    "p95": 148.710684,
                    "p99": 148.710684,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 173.354714,
                    "min": 132.529999,
                    "p50": 171.575798,
                    "p95": 173.354714,
                    "p99": 173.354714,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 349.04751899999997,
                    "min": 321.346436,
                    "p50": 342.339794,
                    "p95": 349.04751899999997,
                    "p99": 349.04751899999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 423.227379,
                    "min": 406.007658,
                    "p50": 420.419396,
                    "p95": 423.227379,
                    "p99": 423.227379,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 805.0248879999999,
                    "min": 780.2782139999999,
                    "p50": 796.035592,
                    "p95": 805.0248879999999,
                    "p99": 805.0248879999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 49.100719,
                    "min": 45.93916,
                    "p50": 48.841338,
                    "p95": 49.100719,
                    "p99": 49.100719,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 377.319434,
                    "min": 349.39106799999996,
                    "p50": 373.87686099999996,
                    "p95": 377.319434,
                    "p99": 377.319434,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 128.06756199999998,
                    "min": 87.311618,
                    "p50": 126.56043299999999,
                    "p95": 128.06756199999998,
                    "p99": 128.06756199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 106.66617,
                    "min": 81.49511799999999,
                    "p50": 106.075458,
                    "p95": 106.66617,
                    "p99": 106.66617,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 139.366581,
                    "min": 117.18659199999999,
                    "p50": 138.58843099999999,
                    "p95": 139.366581,
                    "p99": 139.366581,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.00667299999999,
                    "min": 80.353732,
                    "p50": 86.575808,
                    "p95": 87.00667299999999,
                    "p99": 87.00667299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 77.11688099999999,
                    "min": 55.037298,
                    "p50": 66.26655,
                    "p95": 77.11688099999999,
                    "p99": 77.11688099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.158170999999996,
                    "min": 24.219784,
                    "p50": 42.699847,
                    "p95": 47.158170999999996,
                    "p99": 47.158170999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 114.833427,
                    "min": 72.727093,
                    "p50": 112.378974,
                    "p95": 114.833427,
                    "p99": 114.833427,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 157.15944199999998,
                    "min": 116.021782,
                    "p50": 154.86186899999998,
                    "p95": 157.15944199999998,
                    "p99": 157.15944199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 82.009857,
                    "min": 39.703479,
                    "p50": 78.693242,
                    "p95": 82.009857,
                    "p99": 82.009857,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 93.14951699999999,
                    "min": 58.930721999999996,
                    "p50": 91.76984999999999,
                    "p95": 93.14951699999999,
                    "p99": 93.14951699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 133.666938,
                    "min": 105.75775399999999,
                    "p50": 132.52732799999998,
                    "p95": 133.666938,
                    "p99": 133.666938,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 311.04301399999997,
                    "min": 266.317842,
                    "p50": 301.833189,
                    "p95": 311.04301399999997,
                    "p99": 311.04301399999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 103.90443599999999,
                    "min": 60.333293,
                    "p50": 100.19245699999999,
                    "p95": 103.90443599999999,
                    "p99": 103.90443599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 174.061622,
                    "min": 131.238733,
                    "p50": 173.045872,
                    "p95": 174.061622,
                    "p99": 174.061622,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 123.09889,
                    "min": 79.01521699999999,
                    "p50": 119.10668799999999,
                    "p95": 123.09889,
                    "p99": 123.09889,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 59.37804,
                    "min": 27.815023999999998,
                    "p50": 52.954825,
                    "p95": 59.37804,
                    "p99": 59.37804,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 242.66390199999998,
                    "min": 231.937502,
                    "p50": 238.251284,
                    "p95": 242.66390199999998,
                    "p99": 242.66390199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 144.83125099999998,
                    "min": 104.19834999999999,
                    "p50": 138.916931,
                    "p95": 144.83125099999998,
                    "p99": 144.83125099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 117.01940599999999,
                    "min": 76.07413,
                    "p50": 115.03500199999999,
                    "p95": 117.01940599999999,
                    "p99": 117.01940599999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 166.440297,
                    "min": 147.78467799999999,
                    "p50": 164.410756,
                    "p95": 166.440297,
                    "p99": 166.440297,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 553.650528,
                    "min": 541.255872,
                    "p50": 549.412644,
                    "p95": 553.650528,
                    "p99": 553.650528,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 367.078158,
                    "min": 346.405743,
                    "p50": 363.746245,
                    "p95": 367.078158,
                    "p99": 367.078158,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 425.235258,
                    "min": 416.092718,
                    "p50": 422.685549,
                    "p95": 425.235258,
                    "p99": 425.235258,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 491.26219299999997,
                    "min": 482.490592,
                    "p50": 487.10396,
                    "p95": 491.26219299999997,
                    "p99": 491.26219299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 269.932478,
                    "min": 260.225251,
                    "p50": 265.578805,
                    "p95": 269.932478,
                    "p99": 269.932478,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 192.762709,
                    "min": 173.489463,
                    "p50": 188.741591,
                    "p95": 192.762709,
                    "p99": 192.762709,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.65848699999998,
                    "min": 228.193573,
                    "p50": 238.74906399999998,
                    "p95": 242.65848699999998,
                    "p99": 242.65848699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 221.642585,
                    "min": 175.615377,
                    "p50": 215.05191499999998,
                    "p95": 221.642585,
                    "p99": 221.642585,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 292.202411,
                    "min": 282.946456,
                    "p50": 291.273821,
                    "p95": 292.202411,
                    "p99": 292.202411,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 317.63082199999997,
                    "min": 283.083087,
                    "p50": 315.88287099999997,
                    "p95": 317.63082199999997,
                    "p99": 317.63082199999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 395.24581,
                    "min": 373.696512,
                    "p50": 391.588042,
                    "p95": 395.24581,
                    "p99": 395.24581,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 343.57473,
                    "min": 309.58923599999997,
                    "p50": 338.69528299999996,
                    "p95": 343.57473,
                    "p99": 343.57473,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 323.07435399999997,
                    "min": 279.21313,
                    "p50": 308.92088,
                    "p95": 323.07435399999997,
                    "p99": 323.07435399999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 369.350326,
                    "min": 323.57409,
                    "p50": 366.77235199999996,
                    "p95": 369.350326,
                    "p99": 369.350326,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 395.765424,
                    "min": 351.0186,
                    "p50": 388.766668,
                    "p95": 395.765424,
                    "p99": 395.765424,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 143.075495,
                    "min": 100.10974,
                    "p50": 139.741727,
                    "p95": 143.075495,
                    "p99": 143.075495,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.404823,
                    "min": 151.715287,
                    "p50": 163.19539899999998,
                    "p95": 168.404823,
                    "p99": 168.404823,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.701831,
                    "min": 175.03492799999998,
                    "p50": 214.601978,
                    "p95": 218.701831,
                    "p99": 218.701831,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 190.47831599999998,
                    "min": 177.24892,
                    "p50": 188.69465499999998,
                    "p95": 190.47831599999998,
                    "p99": 190.47831599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 289.549535,
                    "min": 253.54856199999998,
                    "p50": 285.87141099999997,
                    "p95": 289.549535,
                    "p99": 289.549535,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 115.894126,
                    "min": 74.987774,
                    "p50": 113.791786,
                    "p95": 115.894126,
                    "p99": 115.894126,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.81003099999998,
                    "min": 222.668352,
                    "p50": 238.770952,
                    "p95": 242.81003099999998,
                    "p99": 242.81003099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 489.77484,
                    "min": 453.58552599999996,
                    "p50": 485.879461,
                    "p95": 489.77484,
                    "p99": 489.77484,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 550.216368,
                    "min": 529.64051,
                    "p50": 544.240912,
                    "p95": 550.216368,
                    "p99": 550.216368,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 425.932465,
                    "min": 379.889113,
                    "p50": 422.86521,
                    "p95": 425.932465,
                    "p99": 425.932465,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 270.46873,
                    "min": 224.169546,
                    "p50": 265.67904,
                    "p95": 270.46873,
                    "p99": 270.46873,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.382561,
                    "min": 330.614313,
                    "p50": 339.586656,
                    "p95": 345.382561,
                    "p99": 345.382561,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 367.10342299999996,
                    "min": 352.959582,
                    "p50": 366.106042,
                    "p95": 367.10342299999996,
                    "p99": 367.10342299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 349.429235,
                    "min": 335.645448,
                    "p50": 344.602541,
                    "p95": 349.429235,
                    "p99": 349.429235,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 391.618133,
                    "min": 351.95586199999997,
                    "p50": 388.566843,
                    "p95": 391.618133,
                    "p99": 391.618133,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 464.08356899999995,
                    "min": 451.162992,
                    "p50": 456.172932,
                    "p95": 464.08356899999995,
                    "p99": 464.08356899999995,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 325.513786,
                    "min": 282.382573,
                    "p50": 322.782601,
                    "p95": 325.513786,
                    "p99": 325.513786,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 303.950059,
                    "min": 284.319643,
                    "p50": 296.009218,
                    "p95": 303.950059,
                    "p99": 303.950059,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 111.922665,
                    "min": 97.26715,
                    "p50": 109.474662,
                    "p95": 111.922665,
                    "p99": 111.922665,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 533.553219,
                    "min": 514.128464,
                    "p50": 519.555759,
                    "p95": 533.553219,
                    "p99": 533.553219,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 277.524414,
                    "min": 258.456573,
                    "p50": 273.997394,
                    "p95": 277.524414,
                    "p99": 277.524414,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 255.019097,
                    "min": 212.537894,
                    "p50": 250.432022,
                    "p95": 255.019097,
                    "p99": 255.019097,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.212597,
                    "min": 150.67575,
                    "p50": 181.005608,
                    "p95": 185.212597,
                    "p99": 185.212597,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 233.297303,
                    "min": 224.823197,
                    "p50": 229.42645,
                    "p95": 233.297303,
                    "p99": 233.297303,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 205.61215199999998,
                    "min": 181.954906,
                    "p50": 202.603533,
                    "p95": 205.61215199999998,
                    "p99": 205.61215199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 134.573563,
                    "min": 127.495207,
                    "p50": 132.73426899999998,
                    "p95": 134.573563,
                    "p99": 134.573563,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 161.300629,
                    "min": 153.95393099999998,
                    "p50": 157.40445499999998,
                    "p95": 161.300629,
                    "p99": 161.300629,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 391.313899,
                    "min": 378.512141,
                    "p50": 389.136481,
                    "p95": 391.313899,
                    "p99": 391.313899,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 430.57973599999997,
                    "min": 381.14617899999996,
                    "p50": 426.609178,
                    "p95": 430.57973599999997,
                    "p99": 430.57973599999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 341.782699,
                    "min": 300.90556399999997,
                    "p50": 339.09018299999997,
                    "p95": 341.782699,
                    "p99": 341.782699,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 490.151234,
                    "min": 471.289245,
                    "p50": 483.327098,
                    "p95": 490.151234,
                    "p99": 490.151234,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 138.65164,
                    "min": 100.376633,
                    "p50": 134.041277,
                    "p95": 138.65164,
                    "p99": 138.65164,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 319.711146,
                    "min": 275.587791,
                    "p50": 312.900284,
                    "p95": 319.711146,
                    "p99": 319.711146,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 560.379673,
                    "min": 531.743486,
                    "p50": 548.628967,
                    "p95": 560.379673,
                    "p99": 560.379673,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 193.137024,
                    "min": 151.611964,
                    "p50": 190.367929,
                    "p95": 193.137024,
                    "p99": 193.137024,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 245.80605899999998,
                    "min": 200.617741,
                    "p50": 237.719211,
                    "p95": 245.80605899999998,
                    "p99": 245.80605899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 218.34885599999998,
                    "min": 196.454792,
                    "p50": 215.26303099999998,
                    "p95": 218.34885599999998,
                    "p99": 218.34885599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 169.561849,
                    "min": 161.449094,
                    "p50": 164.237661,
                    "p95": 169.561849,
                    "p99": 169.561849,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 268.385209,
                    "min": 255.60612999999998,
                    "p50": 264.6346,
                    "p95": 268.385209,
                    "p99": 268.385209,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 290.868399,
                    "min": 256.632054,
                    "p50": 289.016329,
                    "p95": 290.868399,
                    "p99": 290.868399,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 115.182108,
                    "min": 98.217299,
                    "p50": 114.678326,
                    "p95": 115.182108,
                    "p99": 115.182108,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 371.90302199999996,
                    "min": 329.00152199999997,
                    "p50": 364.970984,
                    "p95": 371.90302199999996,
                    "p99": 371.90302199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 594.0067389999999,
                    "min": 555.6878469999999,
                    "p50": 588.0153829999999,
                    "p95": 594.0067389999999,
                    "p99": 594.0067389999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 373.084539,
                    "min": 335.875951,
                    "p50": 370.627797,
                    "p95": 373.084539,
                    "p99": 373.084539,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 453.458089,
                    "min": 427.344726,
                    "p50": 443.762697,
                    "p95": 453.458089,
                    "p99": 453.458089,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 299.410468,
                    "min": 259.11186299999997,
                    "p50": 296.645309,
                    "p95": 299.410468,
                    "p99": 299.410468,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 265.543657,
                    "min": 240.766356,
                    "p50": 260.571044,
                    "p95": 265.543657,
                    "p99": 265.543657,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 409.63710699999996,
                    "min": 398.357443,
                    "p50": 406.81286,
                    "p95": 409.63710699999996,
                    "p99": 409.63710699999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.457092,
                    "min": 144.265132,
                    "p50": 150.314492,
                    "p95": 152.457092,
                    "p99": 152.457092,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 188.32347199999998,
                    "min": 179.900262,
                    "p50": 186.52292,
                    "p95": 188.32347199999998,
                    "p99": 188.32347199999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 340.441473,
                    "min": 329.99051499999996,
                    "p50": 334.427842,
                    "p95": 340.441473,
                    "p99": 340.441473,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 229.047341,
                    "min": 222.97970899999999,
                    "p50": 224.40576299999998,
                    "p95": 229.047341,
                    "p99": 229.047341,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 784.111241,
                    "min": 755.012673,
                    "p50": 771.239913,
                    "p95": 784.111241,
                    "p99": 784.111241,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 485.610058,
                    "min": 442.50194999999997,
                    "p50": 479.920793,
                    "p95": 485.610058,
                    "p99": 485.610058,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 688.99693,
                    "min": 644.1776229999999,
                    "p50": 682.350329,
                    "p95": 688.99693,
                    "p99": 688.99693,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 556.722665,
                    "min": 547.635948,
                    "p50": 552.171505,
                    "p95": 556.722665,
                    "p99": 556.722665,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 519.471079,
                    "min": 477.626063,
                    "p50": 517.3041939999999,
                    "p95": 519.471079,
                    "p99": 519.471079,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1152.295464,
                    "min": 1130.196908,
                    "p50": 1144.741935,
                    "p95": 1152.295464,
                    "p99": 1152.295464,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 297.460337,
                    "min": 230.89433699999998,
                    "p50": 247.720138,
                    "p95": 297.460337,
                    "p99": 297.460337,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 230.566395,
                    "min": 186.36959099999999,
                    "p50": 192.030788,
                    "p95": 230.566395,
                    "p99": 230.566395,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 264.655718,
                    "min": 210.73872,
                    "p50": 217.040021,
                    "p95": 264.655718,
                    "p99": 264.655718,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 405.772941,
                    "min": 301.386624,
                    "p50": 312.755827,
                    "p95": 405.772941,
                    "p99": 405.772941,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 279.48130199999997,
                    "min": 242.009731,
                    "p50": 278.981604,
                    "p95": 279.48130199999997,
                    "p99": 279.48130199999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.77696799999998,
                    "min": 161.115973,
                    "p50": 203.595835,
                    "p95": 206.77696799999998,
                    "p99": 206.77696799999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 95.401978,
                    "min": 41.683113999999996,
                    "p50": 75.63381,
                    "p95": 95.401978,
                    "p99": 95.401978,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 114.652277,
                    "min": 56.482354,
                    "p50": 94.620813,
                    "p95": 114.652277,
                    "p99": 114.652277,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 222.790333,
                    "min": 168.99972699999998,
                    "p50": 177.43955699999998,
                    "p95": 222.790333,
                    "p99": 222.790333,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.051755,
                    "min": 86.01979999999999,
                    "p50": 118.348609,
                    "p95": 125.051755,
                    "p99": 125.051755,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 162.48396499999998,
                    "min": 121.772437,
                    "p50": 159.4247,
                    "p95": 162.48396499999998,
                    "p99": 162.48396499999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.296094,
                    "min": 70.787971,
                    "p50": 109.447486,
                    "p95": 112.296094,
                    "p99": 112.296094,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 237.415267,
                    "min": 190.22333899999998,
                    "p50": 227.791878,
                    "p95": 237.415267,
                    "p99": 237.415267,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 155.27863299999999,
                    "min": 145.17247799999998,
                    "p50": 151.15471599999998,
                    "p95": 155.27863299999999,
                    "p99": 155.27863299999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.962399,
                    "min": 96.22000399999999,
                    "p50": 135.47271999999998,
                    "p95": 137.962399,
                    "p99": 137.962399,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 169.257174,
                    "min": 165.10057,
                    "p50": 167.186557,
                    "p95": 169.257174,
                    "p99": 169.257174,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 92.79770099999999,
                    "min": 89.543638,
                    "p50": 91.167161,
                    "p95": 92.79770099999999,
                    "p99": 92.79770099999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 146.421448,
                    "min": 101.96186399999999,
                    "p50": 140.341284,
                    "p95": 146.421448,
                    "p99": 146.421448,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 130.69001,
                    "min": 113.744231,
                    "p50": 127.34992199999999,
                    "p95": 130.69001,
                    "p99": 130.69001,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 117.77458399999999,
                    "min": 78.661439,
                    "p50": 115.150556,
                    "p95": 117.77458399999999,
                    "p99": 117.77458399999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 232.32827699999999,
                    "min": 191.31851699999999,
                    "p50": 226.305757,
                    "p95": 232.32827699999999,
                    "p99": 232.32827699999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 243.619631,
                    "min": 163.968235,
                    "p50": 204.073659,
                    "p95": 243.619631,
                    "p99": 243.619631,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 294.80615,
                    "min": 261.92654699999997,
                    "p50": 290.886321,
                    "p95": 294.80615,
                    "p99": 294.80615,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 423.195423,
                    "min": 412.23191299999996,
                    "p50": 418.937189,
                    "p95": 423.195423,
                    "p99": 423.195423,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 228.94623399999998,
                    "min": 189.10620899999998,
                    "p50": 192.309237,
                    "p95": 228.94623399999998,
                    "p99": 228.94623399999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.10576499999999,
                    "min": 90.799596,
                    "p50": 101.764624,
                    "p95": 106.10576499999999,
                    "p99": 106.10576499999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 180.262218,
                    "min": 174.690034,
                    "p50": 177.74468099999999,
                    "p95": 180.262218,
                    "p99": 180.262218,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.297007,
                    "min": 39.024175,
                    "p50": 75.323909,
                    "p95": 86.297007,
                    "p99": 86.297007,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 216.585335,
                    "min": 177.97317099999998,
                    "p50": 212.33869199999998,
                    "p95": 216.585335,
                    "p99": 216.585335,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 267.855503,
                    "min": 243.761102,
                    "p50": 261.272203,
                    "p95": 267.855503,
                    "p99": 267.855503,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 157.90428799999998,
                    "min": 137.476949,
                    "p50": 151.338119,
                    "p95": 157.90428799999998,
                    "p99": 157.90428799999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 801.588087,
                    "min": 785.5508159999999,
                    "p50": 795.748209,
                    "p95": 801.588087,
                    "p99": 801.588087,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 212.75770799999998,
                    "min": 205.52826299999998,
                    "p50": 210.53356,
                    "p95": 212.75770799999998,
                    "p99": 212.75770799999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 154.516497,
                    "min": 114.763227,
                    "p50": 150.91205399999998,
                    "p95": 154.516497,
                    "p99": 154.516497,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 270.171322,
                    "min": 230.813583,
                    "p50": 267.450222,
                    "p95": 270.171322,
                    "p99": 270.171322,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 117.37058599999999,
                    "min": 76.897898,
                    "p50": 116.858741,
                    "p95": 117.37058599999999,
                    "p99": 117.37058599999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 423.55110399999995,
                    "min": 382.24949899999996,
                    "p50": 419.586431,
                    "p95": 423.55110399999995,
                    "p99": 423.55110399999995,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 328.73436899999996,
                    "min": 285.83966599999997,
                    "p50": 324.09446299999996,
                    "p95": 328.73436899999996,
                    "p99": 328.73436899999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 312.12577899999997,
                    "min": 302.66171299999996,
                    "p50": 305.077921,
                    "p95": 312.12577899999997,
                    "p99": 312.12577899999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 99.10513,
                    "min": 58.036566,
                    "p50": 89.08608,
                    "p95": 99.10513,
                    "p99": 99.10513,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 134.738741,
                    "min": 95.915582,
                    "p50": 128.12307099999998,
                    "p95": 134.738741,
                    "p99": 134.738741,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 375.568785,
                    "min": 333.45055099999996,
                    "p50": 369.597314,
                    "p95": 375.568785,
                    "p99": 375.568785,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 193.443206,
                    "min": 152.447634,
                    "p50": 189.89779199999998,
                    "p95": 193.443206,
                    "p99": 193.443206,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 251.162159,
                    "min": 241.219767,
                    "p50": 247.410406,
                    "p95": 251.162159,
                    "p99": 251.162159,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 174.988308,
                    "min": 165.667079,
                    "p50": 171.721681,
                    "p95": 174.988308,
                    "p99": 174.988308,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 291.28475,
                    "min": 268.98727199999996,
                    "p50": 285.31492,
                    "p95": 291.28475,
                    "p99": 291.28475,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 614.718142,
                    "min": 604.2876759999999,
                    "p50": 613.286348,
                    "p95": 614.718142,
                    "p99": 614.718142,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 998.291312,
                    "min": 959.269331,
                    "p50": 990.5425809999999,
                    "p95": 998.291312,
                    "p99": 998.291312,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 232.446564,
                    "min": 224.55152099999998,
                    "p50": 231.090835,
                    "p95": 232.446564,
                    "p99": 232.446564,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 116.86915099999999,
                    "min": 103.14644,
                    "p50": 116.439251,
                    "p95": 116.86915099999999,
                    "p99": 116.86915099999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 261.462339,
                    "min": 252.691248,
                    "p50": 257.886168,
                    "p95": 261.462339,
                    "p99": 261.462339,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 369.171876,
                    "min": 352.416968,
                    "p50": 366.690565,
                    "p95": 369.171876,
                    "p99": 369.171876,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 593.012798,
                    "min": 547.534947,
                    "p50": 584.3458039999999,
                    "p95": 593.012798,
                    "p99": 593.012798,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 477.292146,
                    "min": 438.32503699999995,
                    "p50": 474.49306199999995,
                    "p95": 477.292146,
                    "p99": 477.292146,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 128.186608,
                    "min": 118.246848,
                    "p50": 127.519368,
                    "p95": 128.186608,
                    "p99": 128.186608,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 232.463223,
                    "min": 220.47448699999998,
                    "p50": 230.974738,
                    "p95": 232.463223,
                    "p99": 232.463223,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 107.464717,
                    "min": 81.559567,
                    "p50": 103.631883,
                    "p95": 107.464717,
                    "p99": 107.464717,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 192.623148,
                    "min": 156.67984199999998,
                    "p50": 191.98469599999999,
                    "p95": 192.623148,
                    "p99": 192.623148,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 205.607782,
                    "min": 182.962999,
                    "p50": 202.75181999999998,
                    "p95": 205.607782,
                    "p99": 205.607782,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.699601,
                    "min": 45.210561,
                    "p50": 82.94651999999999,
                    "p95": 84.699601,
                    "p99": 84.699601,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 159.746391,
                    "min": 148.93011099999998,
                    "p50": 158.406058,
                    "p95": 159.746391,
                    "p99": 159.746391,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 173.522311,
                    "min": 132.144406,
                    "p50": 170.248562,
                    "p95": 173.522311,
                    "p99": 173.522311,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.770628,
                    "min": 87.466939,
                    "p50": 93.53566599999999,
                    "p95": 96.770628,
                    "p99": 96.770628,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.134428,
                    "min": 33.960938,
                    "p50": 65.757531,
                    "p95": 76.134428,
                    "p99": 76.134428,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 183.216886,
                    "min": 173.94650099999998,
                    "p50": 182.41900199999998,
                    "p95": 183.216886,
                    "p99": 183.216886,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 150.863281,
                    "min": 110.483155,
                    "p50": 148.506426,
                    "p95": 150.863281,
                    "p99": 150.863281,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 140.06391299999999,
                    "min": 124.187238,
                    "p50": 137.405848,
                    "p95": 140.06391299999999,
                    "p99": 140.06391299999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 218.49010099999998,
                    "min": 180.289366,
                    "p50": 215.44772,
                    "p95": 218.49010099999998,
                    "p99": 218.49010099999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 319.437139,
                    "min": 277.512408,
                    "p50": 315.97988899999996,
                    "p95": 319.437139,
                    "p99": 319.437139,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 280.460935,
                    "min": 238.60943,
                    "p50": 276.076266,
                    "p95": 280.460935,
                    "p99": 280.460935,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 99.09084,
                    "min": 60.877347,
                    "p50": 97.589756,
                    "p95": 99.09084,
                    "p99": 99.09084,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 437.649606,
                    "min": 412.455898,
                    "p50": 434.413185,
                    "p95": 437.649606,
                    "p99": 437.649606,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 201.876633,
                    "min": 194.412219,
                    "p50": 198.486842,
                    "p95": 201.876633,
                    "p99": 201.876633,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 139.217741,
                    "min": 100.850675,
                    "p50": 137.905554,
                    "p95": 139.217741,
                    "p99": 139.217741,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 262.303053,
                    "min": 221.190621,
                    "p50": 257.273525,
                    "p95": 262.303053,
                    "p99": 262.303053,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 160.42426899999998,
                    "min": 120.95140699999999,
                    "p50": 156.97876599999998,
                    "p95": 160.42426899999998,
                    "p99": 160.42426899999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 385.826285,
                    "min": 345.888937,
                    "p50": 383.18393599999996,
                    "p95": 385.826285,
                    "p99": 385.826285,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 120.58258699999999,
                    "min": 80.08843999999999,
                    "p50": 117.95100099999999,
                    "p95": 120.58258699999999,
                    "p99": 120.58258699999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 337.35033899999996,
                    "min": 327.982559,
                    "p50": 336.751629,
                    "p95": 337.35033899999996,
                    "p99": 337.35033899999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 184.44482299999999,
                    "min": 175.85015099999998,
                    "p50": 179.51244799999998,
                    "p95": 184.44482299999999,
                    "p99": 184.44482299999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 308.583118,
                    "min": 286.174738,
                    "p50": 295.382978,
                    "p95": 308.583118,
                    "p99": 308.583118,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 243.19405899999998,
                    "min": 235.410313,
                    "p50": 238.063773,
                    "p95": 243.19405899999998,
                    "p99": 243.19405899999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 127.76122099999999,
                    "min": 122.44742799999999,
                    "p50": 126.995403,
                    "p95": 127.76122099999999,
                    "p99": 127.76122099999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 362.385953,
                    "min": 275.366448,
                    "p50": 295.90360499999997,
                    "p95": 362.385953,
                    "p99": 362.385953,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 233.64242399999998,
                    "min": 182.469491,
                    "p50": 192.335961,
                    "p95": 233.64242399999998,
                    "p99": 233.64242399999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 288.715727,
                    "min": 222.73333599999998,
                    "p50": 261.512967,
                    "p95": 288.715727,
                    "p99": 288.715727,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 380.80411899999996,
                    "min": 363.94594,
                    "p50": 378.70844,
                    "p95": 380.80411899999996,
                    "p99": 380.80411899999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 229.14337899999998,
                    "min": 225.90761799999999,
                    "p50": 227.315043,
                    "p95": 229.14337899999998,
                    "p99": 229.14337899999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 346.989967,
                    "min": 263.070345,
                    "p50": 279.28099,
                    "p95": 346.989967,
                    "p99": 346.989967,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 682.719462,
                    "min": 509.56953799999997,
                    "p50": 552.3440069999999,
                    "p95": 682.719462,
                    "p99": 682.719462,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 159.47835,
                    "min": 148.13443999999998,
                    "p50": 157.30491899999998,
                    "p95": 159.47835,
                    "p99": 159.47835,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 105.045994,
                    "min": 82.16404299999999,
                    "p50": 90.305943,
                    "p95": 105.045994,
                    "p99": 105.045994,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 244.32289799999998,
                    "min": 174.76233399999998,
                    "p50": 210.267168,
                    "p95": 244.32289799999998,
                    "p99": 244.32289799999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 149.752715,
                    "min": 119.69564299999999,
                    "p50": 141.085304,
                    "p95": 149.752715,
                    "p99": 149.752715,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 112.953104,
                    "min": 106.12432799999999,
                    "p50": 107.675688,
                    "p95": 112.953104,
                    "p99": 112.953104,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 215.99756,
                    "min": 155.760198,
                    "p50": 176.496892,
                    "p95": 215.99756,
                    "p99": 215.99756,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 339.69782599999996,
                    "min": 299.332902,
                    "p50": 335.659585,
                    "p95": 339.69782599999996,
                    "p99": 339.69782599999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 306.525741,
                    "min": 228.82624299999998,
                    "p50": 244.35082,
                    "p95": 306.525741,
                    "p99": 306.525741,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 209.512767,
                    "min": 167.58961499999998,
                    "p50": 204.59893399999999,
                    "p95": 209.512767,
                    "p99": 209.512767,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.938619,
                    "min": 192.38326999999998,
                    "p50": 231.678689,
                    "p95": 234.938619,
                    "p99": 234.938619,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 250.273944,
                    "min": 226.280748,
                    "p50": 244.97144899999998,
                    "p95": 250.273944,
                    "p99": 250.273944,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.116389,
                    "min": 158.12802499999998,
                    "p50": 162.900441,
                    "p95": 166.116389,
                    "p99": 166.116389,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.89253599999999,
                    "min": 120.325701,
                    "p50": 121.57043999999999,
                    "p95": 123.89253599999999,
                    "p99": 123.89253599999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.708786,
                    "min": 147.16502699999998,
                    "p50": 148.26951599999998,
                    "p95": 150.708786,
                    "p99": 150.708786,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.248825,
                    "min": 55.703447999999995,
                    "p50": 93.68415,
                    "p95": 97.248825,
                    "p99": 97.248825,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.115634,
                    "min": 106.892563,
                    "p50": 108.194289,
                    "p95": 112.115634,
                    "p99": 112.115634,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.603208,
                    "min": 169.855019,
                    "p50": 176.681716,
                    "p95": 178.603208,
                    "p99": 178.603208,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.030012,
                    "min": 97.480249,
                    "p50": 135.213266,
                    "p95": 136.030012,
                    "p99": 136.030012,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 320.18730899999997,
                    "min": 303.501325,
                    "p50": 314.366046,
                    "p95": 320.18730899999997,
                    "p99": 320.18730899999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.40588,
                    "min": 162.69762599999999,
                    "p50": 191.179688,
                    "p95": 193.40588,
                    "p99": 193.40588,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 282.506487,
                    "min": 272.838218,
                    "p50": 279.567329,
                    "p95": 282.506487,
                    "p99": 282.506487,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.388938,
                    "min": 53.370813999999996,
                    "p50": 79.882406,
                    "p95": 83.388938,
                    "p99": 83.388938,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 220.588945,
                    "min": 179.021367,
                    "p50": 215.357303,
                    "p95": 220.588945,
                    "p99": 220.588945,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 170.89512399999998,
                    "min": 161.359885,
                    "p50": 168.15666,
                    "p95": 170.89512399999998,
                    "p99": 170.89512399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 109.516053,
                    "min": 89.045778,
                    "p50": 103.65290999999999,
                    "p95": 109.516053,
                    "p99": 109.516053,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 84.310773,
                    "min": 44.384018,
                    "p50": 82.37390599999999,
                    "p95": 84.310773,
                    "p99": 84.310773,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.632104,
                    "min": 32.951744,
                    "p50": 63.771482999999996,
                    "p95": 64.632104,
                    "p99": 64.632104,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 254.902681,
                    "min": 173.483281,
                    "p50": 178.74470399999998,
                    "p95": 254.902681,
                    "p99": 254.902681,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 202.53541099999998,
                    "min": 175.784021,
                    "p50": 200.827273,
                    "p95": 202.53541099999998,
                    "p99": 202.53541099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 138.611179,
                    "min": 98.440253,
                    "p50": 135.36420099999998,
                    "p95": 138.611179,
                    "p99": 138.611179,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 256.091294,
                    "min": 251.82522699999998,
                    "p50": 254.50858799999997,
                    "p95": 256.091294,
                    "p99": 256.091294,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 148.966187,
                    "min": 143.171527,
                    "p50": 146.777897,
                    "p95": 148.966187,
                    "p99": 148.966187,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 114.637845,
                    "min": 75.98169399999999,
                    "p50": 114.032727,
                    "p95": 114.637845,
                    "p99": 114.637845,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 229.872389,
                    "min": 208.454604,
                    "p50": 227.321285,
                    "p95": 229.872389,
                    "p99": 229.872389,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 191.41071599999998,
                    "min": 150.89254599999998,
                    "p50": 187.79701,
                    "p95": 191.41071599999998,
                    "p99": 191.41071599999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 95.505353,
                    "min": 54.559059999999995,
                    "p50": 91.973654,
                    "p95": 95.505353,
                    "p99": 95.505353,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.414684,
                    "min": 86.57270299999999,
                    "p50": 123.964057,
                    "p95": 126.414684,
                    "p99": 126.414684,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 362.817369,
                    "min": 327.47117399999996,
                    "p50": 361.159738,
                    "p95": 362.817369,
                    "p99": 362.817369,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 163.234814,
                    "min": 137.228311,
                    "p50": 158.08878199999998,
                    "p95": 163.234814,
                    "p99": 163.234814,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 473.958469,
                    "min": 430.636529,
                    "p50": 467.83264699999995,
                    "p95": 473.958469,
                    "p99": 473.958469,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 411.833036,
                    "min": 391.826929,
                    "p50": 408.819883,
                    "p95": 411.833036,
                    "p99": 411.833036,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 225.259851,
                    "min": 185.5176,
                    "p50": 213.386848,
                    "p95": 225.259851,
                    "p99": 225.259851,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 785.8905189999999,
                    "min": 754.5624869999999,
                    "p50": 775.9607189999999,
                    "p95": 785.8905189999999,
                    "p99": 785.8905189999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 562.173585,
                    "min": 548.873705,
                    "p50": 555.501131,
                    "p95": 562.173585,
                    "p99": 562.173585,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 263.86936399999996,
                    "min": 235.52446799999998,
                    "p50": 260.87143599999996,
                    "p95": 263.86936399999996,
                    "p99": 263.86936399999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 596.153423,
                    "min": 554.5254679999999,
                    "p50": 591.2319249999999,
                    "p95": 596.153423,
                    "p99": 596.153423,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 301.431972,
                    "min": 275.096155,
                    "p50": 298.311984,
                    "p95": 301.431972,
                    "p99": 301.431972,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 487.900329,
                    "min": 444.846607,
                    "p50": 482.863213,
                    "p95": 487.900329,
                    "p99": 487.900329,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 377.261147,
                    "min": 334.21939299999997,
                    "p50": 372.16472699999997,
                    "p95": 377.261147,
                    "p99": 377.261147,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 530.483614,
                    "min": 498.015377,
                    "p50": 518.803406,
                    "p95": 530.483614,
                    "p99": 530.483614,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 692.533048,
                    "min": 675.539909,
                    "p50": 684.360972,
                    "p95": 692.533048,
                    "p99": 692.533048,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 339.878852,
                    "min": 299.022184,
                    "p50": 336.34880999999996,
                    "p95": 339.878852,
                    "p99": 339.878852,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 450.694058,
                    "min": 408.787041,
                    "p50": 443.420118,
                    "p95": 450.694058,
                    "p99": 450.694058,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.994084,
                    "min": 112.503478,
                    "p50": 149.517565,
                    "p95": 155.994084,
                    "p99": 155.994084,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 189.37635699999998,
                    "min": 185.534457,
                    "p50": 188.054789,
                    "p95": 189.37635699999998,
                    "p99": 189.37635699999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 192.144868,
                    "min": 184.47525199999998,
                    "p50": 187.219639,
                    "p95": 192.144868,
                    "p99": 192.144868,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 101.539138,
                    "min": 96.84722599999999,
                    "p50": 98.07348499999999,
                    "p95": 101.539138,
                    "p99": 101.539138,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 219.78470299999998,
                    "min": 211.73327799999998,
                    "p50": 215.726553,
                    "p95": 219.78470299999998,
                    "p99": 219.78470299999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 250.265954,
                    "min": 205.06243999999998,
                    "p50": 247.21201299999998,
                    "p95": 250.265954,
                    "p99": 250.265954,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 115.271643,
                    "min": 100.72838399999999,
                    "p50": 112.66265299999999,
                    "p95": 115.271643,
                    "p99": 115.271643,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 173.250959,
                    "min": 134.479067,
                    "p50": 170.809448,
                    "p95": 173.250959,
                    "p99": 173.250959,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 159.639824,
                    "min": 118.34301099999999,
                    "p50": 156.41114299999998,
                    "p95": 159.639824,
                    "p99": 159.639824,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.76071,
                    "min": 89.492333,
                    "p50": 127.162966,
                    "p95": 132.76071,
                    "p99": 132.76071,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.828988,
                    "min": 45.769341999999995,
                    "p50": 83.667631,
                    "p95": 86.828988,
                    "p99": 86.828988,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 297.93985299999997,
                    "min": 286.657619,
                    "p50": 295.52782099999996,
                    "p95": 297.93985299999997,
                    "p99": 297.93985299999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 202.042035,
                    "min": 161.99887999999999,
                    "p50": 200.21463899999998,
                    "p95": 202.042035,
                    "p99": 202.042035,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 232.198671,
                    "min": 192.6722,
                    "p50": 231.401267,
                    "p95": 232.198671,
                    "p99": 232.198671,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 336.99006099999997,
                    "min": 314.081896,
                    "p50": 333.18773899999997,
                    "p95": 336.99006099999997,
                    "p99": 336.99006099999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 260.69507799999997,
                    "min": 241.04300099999998,
                    "p50": 258.791831,
                    "p95": 260.69507799999997,
                    "p99": 260.69507799999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.615951,
                    "min": 137.069785,
                    "p50": 142.14657499999998,
                    "p95": 143.615951,
                    "p99": 143.615951,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 287.23278999999997,
                    "min": 243.39182799999998,
                    "p50": 283.209028,
                    "p95": 287.23278999999997,
                    "p99": 287.23278999999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.46808,
                    "min": 164.96223799999999,
                    "p50": 178.685317,
                    "p95": 180.46808,
                    "p99": 180.46808,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.784969,
                    "min": 198.53144899999998,
                    "p50": 233.87511899999998,
                    "p95": 236.784969,
                    "p99": 236.784969,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 249.49342,
                    "min": 240.28332799999998,
                    "p50": 247.28134,
                    "p95": 249.49342,
                    "p99": 249.49342,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.383735,
                    "min": 279.617859,
                    "p50": 317.987619,
                    "p95": 319.383735,
                    "p99": 319.383735,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 194.315811,
                    "min": 190.44465499999998,
                    "p50": 191.498722,
                    "p95": 194.315811,
                    "p99": 194.315811,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 131.13375399999998,
                    "min": 112.011017,
                    "p50": 120.91266999999999,
                    "p95": 131.13375399999998,
                    "p99": 131.13375399999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.077745,
                    "min": 115.119096,
                    "p50": 150.32239099999998,
                    "p95": 153.077745,
                    "p99": 153.077745,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.686942,
                    "min": 193.713752,
                    "p50": 218.477351,
                    "p95": 222.686942,
                    "p99": 222.686942,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.801393,
                    "min": 169.284189,
                    "p50": 204.92451599999998,
                    "p95": 208.801393,
                    "p99": 208.801393,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 459.848057,
                    "min": 434.43105399999996,
                    "p50": 453.907927,
                    "p95": 459.848057,
                    "p99": 459.848057,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.702582,
                    "min": 99.296061,
                    "p50": 135.954822,
                    "p95": 138.702582,
                    "p99": 138.702582,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.60295099999999,
                    "min": 41.954296,
                    "p50": 80.32602399999999,
                    "p95": 83.60295099999999,
                    "p99": 83.60295099999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 109.342486,
                    "min": 70.394464,
                    "p50": 109.07902299999999,
                    "p95": 109.342486,
                    "p99": 109.342486,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 168.132777,
                    "min": 147.862067,
                    "p50": 162.292782,
                    "p95": 168.132777,
                    "p99": 168.132777,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.762885,
                    "min": 56.101481,
                    "p50": 94.103855,
                    "p95": 94.762885,
                    "p99": 94.762885,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 673.1070229999999,
                    "min": 620.1426309999999,
                    "p50": 665.954944,
                    "p95": 673.1070229999999,
                    "p99": 673.1070229999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 336.634032,
                    "min": 322.646103,
                    "p50": 334.291063,
                    "p95": 336.634032,
                    "p99": 336.634032,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 168.97484799999998,
                    "min": 127.119018,
                    "p50": 166.944174,
                    "p95": 168.97484799999998,
                    "p99": 168.97484799999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 218.51049999999998,
                    "min": 195.24742999999998,
                    "p50": 208.488578,
                    "p95": 218.51049999999998,
                    "p99": 218.51049999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 464.0895,
                    "min": 419.027703,
                    "p50": 460.21279699999997,
                    "p95": 464.0895,
                    "p99": 464.0895,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 295.78247799999997,
                    "min": 283.96239099999997,
                    "p50": 290.397242,
                    "p95": 295.78247799999997,
                    "p99": 295.78247799999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 894.1343469999999,
                    "min": 865.213567,
                    "p50": 874.338344,
                    "p95": 894.1343469999999,
                    "p99": 894.1343469999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.609639,
                    "min": 244.804373,
                    "p50": 249.58924299999998,
                    "p95": 252.609639,
                    "p99": 252.609639,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 509.79254399999996,
                    "min": 491.553945,
                    "p50": 499.38338999999996,
                    "p95": 509.79254399999996,
                    "p99": 509.79254399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 381.606312,
                    "min": 353.32613499999997,
                    "p50": 369.41252099999997,
                    "p95": 381.606312,
                    "p99": 381.606312,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 547.339871,
                    "min": 498.72092499999997,
                    "p50": 543.640403,
                    "p95": 547.339871,
                    "p99": 547.339871,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 588.770052,
                    "min": 542.426522,
                    "p50": 581.851553,
                    "p95": 588.770052,
                    "p99": 588.770052,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 774.85862,
                    "min": 742.4608539999999,
                    "p50": 761.011572,
                    "p95": 774.85862,
                    "p99": 774.85862,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 643.5580299999999,
                    "min": 587.960259,
                    "p50": 616.6411959999999,
                    "p95": 643.5580299999999,
                    "p99": 643.5580299999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 419.899834,
                    "min": 397.216507,
                    "p50": 416.853834,
                    "p95": 419.899834,
                    "p99": 419.899834,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.01256099999999,
                    "min": 87.38571999999999,
                    "p50": 93.981847,
                    "p95": 96.01256099999999,
                    "p99": 96.01256099999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 247.31733899999998,
                    "min": 233.67175,
                    "p50": 245.079477,
                    "p95": 247.31733899999998,
                    "p99": 247.31733899999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 193.521652,
                    "min": 173.424161,
                    "p50": 190.405589,
                    "p95": 193.521652,
                    "p99": 193.521652,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.23930099999998,
                    "min": 161.45241099999998,
                    "p50": 163.50630099999998,
                    "p95": 166.23930099999998,
                    "p99": 166.23930099999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.11662899999999,
                    "min": 114.11591399999999,
                    "p50": 121.013368,
                    "p95": 122.11662899999999,
                    "p99": 122.11662899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.40316899999999,
                    "min": 79.447935,
                    "p50": 79.799937,
                    "p95": 84.40316899999999,
                    "p99": 84.40316899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 108.519099,
                    "min": 106.55408299999999,
                    "p50": 107.892704,
                    "p95": 108.519099,
                    "p99": 108.519099,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 233.826337,
                    "min": 208.984385,
                    "p50": 231.32900999999998,
                    "p95": 233.826337,
                    "p99": 233.826337,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 281.540075,
                    "min": 251.116256,
                    "p50": 280.230275,
                    "p95": 281.540075,
                    "p99": 281.540075,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.256774,
                    "min": 122.88245099999999,
                    "p50": 134.837659,
                    "p95": 135.256774,
                    "p99": 135.256774,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.494325,
                    "min": 174.20114099999998,
                    "p50": 176.382035,
                    "p95": 178.494325,
                    "p99": 178.494325,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 317.73209099999997,
                    "min": 310.69559499999997,
                    "p50": 313.111928,
                    "p95": 317.73209099999997,
                    "p99": 317.73209099999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.72166199999998,
                    "min": 167.610592,
                    "p50": 202.75844999999998,
                    "p95": 205.72166199999998,
                    "p99": 205.72166199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.968946,
                    "min": 111.44742799999999,
                    "p50": 149.46721399999998,
                    "p95": 151.968946,
                    "p99": 151.968946,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.94829199999998,
                    "min": 211.26732199999998,
                    "p50": 219.150228,
                    "p95": 219.94829199999998,
                    "p99": 219.94829199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1073.136626,
                    "min": 1037.579015,
                    "p50": 1051.488681,
                    "p95": 1073.136626,
                    "p99": 1073.136626,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 584.545587,
                    "min": 558.518229,
                    "p50": 579.858397,
                    "p95": 584.545587,
                    "p99": 584.545587,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 723.028014,
                    "min": 692.3182959999999,
                    "p50": 708.255326,
                    "p95": 723.028014,
                    "p99": 723.028014,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 827.014364,
                    "min": 764.060447,
                    "p50": 789.632651,
                    "p95": 827.014364,
                    "p99": 827.014364,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1001.086958,
                    "min": 970.998984,
                    "p50": 983.5345269999999,
                    "p95": 1001.086958,
                    "p99": 1001.086958,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 934.829799,
                    "min": 901.43144,
                    "p50": 921.227893,
                    "p95": 934.829799,
                    "p99": 934.829799,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 317.91738599999996,
                    "min": 305.51001199999996,
                    "p50": 311.679866,
                    "p95": 317.91738599999996,
                    "p99": 317.91738599999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 660.8604419999999,
                    "min": 615.596736,
                    "p50": 649.623393,
                    "p95": 660.8604419999999,
                    "p99": 660.8604419999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 863.825912,
                    "min": 829.012658,
                    "p50": 850.66212,
                    "p95": 863.825912,
                    "p99": 863.825912,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1234.610432,
                    "min": 1197.07861,
                    "p50": 1222.647739,
                    "p95": 1234.610432,
                    "p99": 1234.610432,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 382.626514,
                    "min": 361.41110699999996,
                    "p50": 377.67229699999996,
                    "p95": 382.626514,
                    "p99": 382.626514,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 526.180874,
                    "min": 474.919512,
                    "p50": 515.3363889999999,
                    "p95": 526.180874,
                    "p99": 526.180874,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 249.63778699999997,
                    "min": 226.228375,
                    "p50": 240.919422,
                    "p95": 249.63778699999997,
                    "p99": 249.63778699999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 452.699953,
                    "min": 409.838253,
                    "p50": 447.07884199999995,
                    "p95": 452.699953,
                    "p99": 452.699953,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1417.003802,
                    "min": 1375.497584,
                    "p50": 1396.41949,
                    "p95": 1417.003802,
                    "p99": 1417.003802,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1382.058507,
                    "min": 1349.924135,
                    "p50": 1363.839992,
                    "p95": 1382.058507,
                    "p99": 1382.058507,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 975.6950109999999,
                    "min": 942.9565849999999,
                    "p50": 970.5033229999999,
                    "p95": 975.6950109999999,
                    "p99": 975.6950109999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 841.6155709999999,
                    "min": 800.1038729999999,
                    "p50": 828.604616,
                    "p95": 841.6155709999999,
                    "p99": 841.6155709999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 637.259853,
                    "min": 598.940305,
                    "p50": 631.741705,
                    "p95": 637.259853,
                    "p99": 637.259853,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 575.1546569999999,
                    "min": 526.43072,
                    "p50": 564.729016,
                    "p95": 575.1546569999999,
                    "p99": 575.1546569999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 440.993965,
                    "min": 399.940752,
                    "p50": 436.11154,
                    "p95": 440.993965,
                    "p99": 440.993965,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 905.900492,
                    "min": 863.060891,
                    "p50": 892.273548,
                    "p95": 905.900492,
                    "p99": 905.900492,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 308.273124,
                    "min": 294.10133099999996,
                    "p50": 303.817428,
                    "p95": 308.273124,
                    "p99": 308.273124,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 777.4876949999999,
                    "min": 755.666669,
                    "p50": 762.25221,
                    "p95": 777.4876949999999,
                    "p99": 777.4876949999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 376.322214,
                    "min": 334.75424799999996,
                    "p50": 368.337651,
                    "p95": 376.322214,
                    "p99": 376.322214,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1211.7446459999999,
                    "min": 1142.645679,
                    "p50": 1180.551268,
                    "p95": 1211.7446459999999,
                    "p99": 1211.7446459999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 240.26479899999998,
                    "min": 200.417434,
                    "p50": 228.506364,
                    "p95": 240.26479899999998,
                    "p99": 240.26479899999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 512.7186449999999,
                    "min": 498.331737,
                    "p50": 506.38865599999997,
                    "p95": 512.7186449999999,
                    "p99": 512.7186449999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1042.153059,
                    "min": 1004.113469,
                    "p50": 1026.946728,
                    "p95": 1042.153059,
                    "p99": 1042.153059,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 707.913809,
                    "min": 665.782055,
                    "p50": 701.608445,
                    "p95": 707.913809,
                    "p99": 707.913809,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 768.984123,
                    "min": 750.5216829999999,
                    "p50": 765.660849,
                    "p95": 768.984123,
                    "p99": 768.984123,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 439.60995399999996,
                    "min": 394.61226899999997,
                    "p50": 438.02198599999997,
                    "p95": 439.60995399999996,
                    "p99": 439.60995399999996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 372.72563099999996,
                    "min": 356.015138,
                    "p50": 368.55637099999996,
                    "p95": 372.72563099999996,
                    "p99": 372.72563099999996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 718.37846,
                    "min": 694.835479,
                    "p50": 702.289416,
                    "p95": 718.37846,
                    "p99": 718.37846,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1381.8650089999999,
                    "min": 1350.312259,
                    "p50": 1355.751434,
                    "p95": 1381.8650089999999,
                    "p99": 1381.8650089999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 312.120386,
                    "min": 296.937951,
                    "p50": 304.901768,
                    "p95": 312.120386,
                    "p99": 312.120386,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 506.82269599999995,
                    "min": 491.589292,
                    "p50": 499.102755,
                    "p95": 506.82269599999995,
                    "p99": 506.82269599999995,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 242.237374,
                    "min": 215.21521299999998,
                    "p50": 238.298958,
                    "p95": 242.237374,
                    "p99": 242.237374,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1048.821576,
                    "min": 991.271938,
                    "p50": 1032.172994,
                    "p95": 1048.821576,
                    "p99": 1048.821576,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 979.52766,
                    "min": 933.7950629999999,
                    "p50": 967.3446839999999,
                    "p95": 979.52766,
                    "p99": 979.52766,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 851.3108149999999,
                    "min": 788.967752,
                    "p50": 831.8324299999999,
                    "p95": 851.3108149999999,
                    "p99": 851.3108149999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 906.816777,
                    "min": 882.743292,
                    "p50": 902.12736,
                    "p95": 906.816777,
                    "p99": 906.816777,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 645.874154,
                    "min": 594.790449,
                    "p50": 629.208125,
                    "p95": 645.874154,
                    "p99": 645.874154,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1194.036687,
                    "min": 1168.4939219999999,
                    "p50": 1187.881386,
                    "p95": 1194.036687,
                    "p99": 1194.036687,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 573.722118,
                    "min": 560.004425,
                    "p50": 570.502567,
                    "p95": 573.722118,
                    "p99": 573.722118,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 326.78869199999997,
                    "min": 302.12925,
                    "p50": 325.591339,
                    "p95": 326.78869199999997,
                    "p99": 326.78869199999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 194.066648,
                    "min": 179.232586,
                    "p50": 191.604506,
                    "p95": 194.066648,
                    "p99": 194.066648,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 370.956171,
                    "min": 351.798495,
                    "p50": 365.220622,
                    "p95": 370.956171,
                    "p99": 370.956171,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 424.78054299999997,
                    "min": 412.946287,
                    "p50": 422.861131,
                    "p95": 424.78054299999997,
                    "p99": 424.78054299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 108.150577,
                    "min": 95.814726,
                    "p50": 105.43578099999999,
                    "p95": 108.150577,
                    "p99": 108.150577,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 305.00671,
                    "min": 263.598069,
                    "p50": 300.018738,
                    "p95": 305.00671,
                    "p99": 305.00671,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 172.868491,
                    "min": 136.631394,
                    "p50": 170.691083,
                    "p95": 172.868491,
                    "p99": 172.868491,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 129.531589,
                    "min": 107.426459,
                    "p50": 126.40776699999999,
                    "p95": 129.531589,
                    "p99": 129.531589,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 704.321572,
                    "min": 654.318193,
                    "p50": 697.04395,
                    "p95": 704.321572,
                    "p99": 704.321572,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 238.39261299999998,
                    "min": 223.83306,
                    "p50": 236.522642,
                    "p95": 238.39261299999998,
                    "p99": 238.39261299999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 282.285774,
                    "min": 242.132058,
                    "p50": 278.015136,
                    "p95": 282.285774,
                    "p99": 282.285774,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 345.71949,
                    "min": 322.405112,
                    "p50": 344.82222099999996,
                    "p95": 345.71949,
                    "p99": 345.71949,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.29057899999998,
                    "min": 110.15220199999999,
                    "p50": 147.365504,
                    "p95": 150.29057899999998,
                    "p99": 150.29057899999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1141.982305,
                    "min": 1125.189728,
                    "p50": 1129.877866,
                    "p95": 1141.982305,
                    "p99": 1141.982305,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 476.96313899999996,
                    "min": 437.822812,
                    "p50": 475.790347,
                    "p95": 476.96313899999996,
                    "p99": 476.96313899999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 264.259665,
                    "min": 245.66857399999998,
                    "p50": 256.32793799999996,
                    "p95": 264.259665,
                    "p99": 264.259665,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 221.43162999999998,
                    "min": 178.62919599999998,
                    "p50": 214.302333,
                    "p95": 221.43162999999998,
                    "p99": 221.43162999999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 924.514864,
                    "min": 875.469254,
                    "p50": 906.304262,
                    "p95": 924.514864,
                    "p99": 924.514864,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 318.283094,
                    "min": 297.846212,
                    "p50": 317.053474,
                    "p95": 318.283094,
                    "p99": 318.283094,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 130.081134,
                    "min": 85.05322199999999,
                    "p50": 122.09114799999999,
                    "p95": 130.081134,
                    "p99": 130.081134,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.693628,
                    "min": 183.42469,
                    "p50": 220.298724,
                    "p95": 222.693628,
                    "p99": 222.693628,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.42927699999998,
                    "min": 128.164739,
                    "p50": 163.546494,
                    "p95": 167.42927699999998,
                    "p99": 167.42927699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 183.17340099999998,
                    "min": 159.024272,
                    "p50": 177.984558,
                    "p95": 183.17340099999998,
                    "p99": 183.17340099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.77114999999999,
                    "min": 42.901637,
                    "p50": 80.623747,
                    "p95": 84.77114999999999,
                    "p99": 84.77114999999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 196.958102,
                    "min": 157.321038,
                    "p50": 193.62457799999999,
                    "p95": 196.958102,
                    "p99": 196.958102,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.57850099999999,
                    "min": 103.98791299999999,
                    "p50": 109.29967699999999,
                    "p95": 110.57850099999999,
                    "p99": 110.57850099999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 238.08737499999998,
                    "min": 200.860432,
                    "p50": 234.99200499999998,
                    "p95": 238.08737499999998,
                    "p99": 238.08737499999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.167071,
                    "min": 112.104388,
                    "p50": 149.067084,
                    "p95": 153.167071,
                    "p99": 153.167071,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 285.655942,
                    "min": 254.507918,
                    "p50": 283.59036,
                    "p95": 285.655942,
                    "p99": 285.655942,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 207.125856,
                    "min": 168.545671,
                    "p50": 204.27445899999998,
                    "p95": 207.125856,
                    "p99": 207.125856,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 139.39844399999998,
                    "min": 108.102081,
                    "p50": 136.940009,
                    "p95": 139.39844399999998,
                    "p99": 139.39844399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.914644,
                    "min": 56.537136999999994,
                    "p50": 95.519595,
                    "p95": 97.914644,
                    "p99": 97.914644,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.09419699999998,
                    "min": 211.08106099999998,
                    "p50": 248.869483,
                    "p95": 251.09419699999998,
                    "p99": 251.09419699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 463.568516,
                    "min": 417.267767,
                    "p50": 461.421113,
                    "p95": 463.568516,
                    "p99": 463.568516,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 166.646874,
                    "min": 127.26129399999999,
                    "p50": 165.21791,
                    "p95": 166.646874,
                    "p99": 166.646874,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 181.344225,
                    "min": 141.918851,
                    "p50": 179.117268,
                    "p95": 181.344225,
                    "p99": 181.344225,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.399833,
                    "min": 101.041927,
                    "p50": 109.371985,
                    "p95": 113.399833,
                    "p99": 113.399833,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.76148799999999,
                    "min": 124.85068799999999,
                    "p50": 150.880214,
                    "p95": 151.76148799999999,
                    "p99": 151.76148799999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 238.792046,
                    "min": 216.185137,
                    "p50": 234.88781799999998,
                    "p95": 238.792046,
                    "p99": 238.792046,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.059586,
                    "min": 71.42953299999999,
                    "p50": 81.203209,
                    "p95": 86.059586,
                    "p99": 86.059586,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 463.832789,
                    "min": 447.23506,
                    "p50": 460.092559,
                    "p95": 463.832789,
                    "p99": 463.832789,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 195.03134899999998,
                    "min": 183.86856699999998,
                    "p50": 193.52414299999998,
                    "p95": 195.03134899999998,
                    "p99": 195.03134899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 227.052809,
                    "min": 209.718372,
                    "p50": 220.240975,
                    "p95": 227.052809,
                    "p99": 227.052809,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.211517,
                    "min": 104.10445399999999,
                    "p50": 122.873904,
                    "p95": 128.211517,
                    "p99": 128.211517,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 287.40295599999996,
                    "min": 248.89113799999998,
                    "p50": 281.14345299999997,
                    "p95": 287.40295599999996,
                    "p99": 287.40295599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 209.764673,
                    "min": 184.53163999999998,
                    "p50": 207.312691,
                    "p95": 209.764673,
                    "p99": 209.764673,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 141.277698,
                    "min": 98.159762,
                    "p50": 137.062223,
                    "p95": 141.277698,
                    "p99": 141.277698,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 608.678487,
                    "min": 592.885642,
                    "p50": 596.160493,
                    "p95": 608.678487,
                    "p99": 608.678487,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.967269,
                    "min": 85.720699,
                    "p50": 95.42201899999999,
                    "p95": 97.967269,
                    "p99": 97.967269,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 254.13579199999998,
                    "min": 243.55575499999998,
                    "p50": 249.724619,
                    "p95": 254.13579199999998,
                    "p99": 254.13579199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 323.742305,
                    "min": 318.506373,
                    "p50": 320.43485599999997,
                    "p95": 323.742305,
                    "p99": 323.742305,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "erigon": {
            "name": "erigon",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 606.0418579999999,
                    "min": 577.072095,
                    "p50": 589.31979,
                    "p95": 606.0418579999999,
                    "p99": 606.0418579999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 974.671386,
                    "min": 945.33515,
                    "p50": 967.9475639999999,
                    "p95": 974.671386,
                    "p99": 974.671386,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 857.957063,
                    "min": 835.327814,
                    "p50": 841.4113699999999,
                    "p95": 857.957063,
                    "p99": 857.957063,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 669.543684,
                    "min": 641.6585309999999,
                    "p50": 653.6211589999999,
                    "p95": 669.543684,
                    "p99": 669.543684,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 796.0425409999999,
                    "min": 762.6556899999999,
                    "p50": 780.5635169999999,
                    "p95": 796.0425409999999,
                    "p99": 796.0425409999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 935.993672,
                    "min": 887.9735989999999,
                    "p50": 899.651392,
                    "p95": 935.993672,
                    "p99": 935.993672,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 219.015079,
                    "min": 204.17032799999998,
                    "p50": 209.161686,
                    "p95": 219.015079,
                    "p99": 219.015079,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 283.130504,
                    "min": 268.09672,
                    "p50": 278.125537,
                    "p95": 283.130504,
                    "p99": 283.130504,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.701931,
                    "min": 328.418136,
                    "p50": 333.906768,
                    "p95": 350.701931,
                    "p99": 350.701931,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1308.745314,
                    "min": 1263.437381,
                    "p50": 1278.170099,
                    "p95": 1308.745314,
                    "p99": 1308.745314,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 410.823986,
                    "min": 390.933135,
                    "p50": 396.255562,
                    "p95": 410.823986,
                    "p99": 410.823986,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1141.093562,
                    "min": 1108.195545,
                    "p50": 1118.506396,
                    "p95": 1141.093562,
                    "p99": 1141.093562,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 542.845327,
                    "min": 511.77110799999997,
                    "p50": 518.168094,
                    "p95": 542.845327,
                    "p99": 542.845327,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 499.153307,
                    "min": 452.610077,
                    "p50": 465.276614,
                    "p95": 499.153307,
                    "p99": 499.153307,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 517.0390669999999,
                    "min": 431.614605,
                    "p50": 503.675637,
                    "p95": 517.0390669999999,
                    "p99": 517.0390669999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 786.3199099999999,
                    "min": 768.0376719999999,
                    "p50": 776.9999329999999,
                    "p95": 786.3199099999999,
                    "p99": 786.3199099999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1048.38398,
                    "min": 980.5663069999999,
                    "p50": 999.2009089999999,
                    "p95": 1048.38398,
                    "p99": 1048.38398,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 329.421453,
                    "min": 280.582319,
                    "p50": 318.115973,
                    "p95": 329.421453,
                    "p99": 329.421453,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 624.855274,
                    "min": 511.30776099999997,
                    "p50": 552.00371,
                    "p95": 624.855274,
                    "p99": 624.855274,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 932.616318,
                    "min": 856.8962459999999,
                    "p50": 895.849153,
                    "p95": 932.616318,
                    "p99": 932.616318,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.975304,
                    "min": 237.595912,
                    "p50": 267.111501,
                    "p95": 281.975304,
                    "p99": 281.975304,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 453.11263099999996,
                    "min": 390.71659999999997,
                    "p50": 417.122061,
                    "p95": 453.11263099999996,
                    "p99": 453.11263099999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 507.58354599999996,
                    "min": 444.570001,
                    "p50": 463.660779,
                    "p95": 507.58354599999996,
                    "p99": 507.58354599999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 287.160214,
                    "min": 0,
                    "p50": 267.782989,
                    "p95": 287.160214,
                    "p99": 287.160214,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1511.332571,
                    "min": 1487.0050649999998,
                    "p50": 1500.380829,
                    "p95": 1511.332571,
                    "p99": 1511.332571,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 903.124248,
                    "min": 874.143051,
                    "p50": 891.143862,
                    "p95": 903.124248,
                    "p99": 903.124248,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 696.57141,
                    "min": 649.967421,
                    "p50": 660.965689,
                    "p95": 696.57141,
                    "p99": 696.57141,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 630.878158,
                    "min": 600.477396,
                    "p50": 619.516891,
                    "p95": 630.878158,
                    "p99": 630.878158,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 396.598094,
                    "min": 357.13710699999996,
                    "p50": 365.08448,
                    "p95": 396.598094,
                    "p99": 396.598094,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1008.1219319999999,
                    "min": 993.7520659999999,
                    "p50": 1004.835789,
                    "p95": 1008.1219319999999,
                    "p99": 1008.1219319999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 216.924997,
                    "min": 163.60906,
                    "p50": 177.979566,
                    "p95": 216.924997,
                    "p99": 216.924997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 792.91131,
                    "min": 747.7195909999999,
                    "p50": 762.44876,
                    "p95": 792.91131,
                    "p99": 792.91131,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 445.00224399999996,
                    "min": 404.919195,
                    "p50": 421.177303,
                    "p95": 445.00224399999996,
                    "p99": 445.00224399999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 346.28333,
                    "min": 310.188152,
                    "p50": 328.621814,
                    "p95": 346.28333,
                    "p99": 346.28333,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 251.87974499999999,
                    "min": 214.99249999999998,
                    "p50": 224.89529299999998,
                    "p95": 251.87974499999999,
                    "p99": 251.87974499999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 737.911312,
                    "min": 699.7312989999999,
                    "p50": 705.114483,
                    "p95": 737.911312,
                    "p99": 737.911312,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1156.615548,
                    "min": 1097.047202,
                    "p50": 1131.830806,
                    "p95": 1156.615548,
                    "p99": 1156.615548,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.43494199999998,
                    "min": 203.64282799999998,
                    "p50": 212.890822,
                    "p95": 228.43494199999998,
                    "p99": 228.43494199999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 801.314581,
                    "min": 767.132432,
                    "p50": 779.115266,
                    "p95": 801.314581,
                    "p99": 801.314581,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 865.790484,
                    "min": 821.4958909999999,
                    "p50": 837.948718,
                    "p95": 865.790484,
                    "p99": 865.790484,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 287.54396299999996,
                    "min": 266.595112,
                    "p50": 271.022973,
                    "p95": 287.54396299999996,
                    "p99": 287.54396299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 740.589566,
                    "min": 703.321276,
                    "p50": 710.847523,
                    "p95": 740.589566,
                    "p99": 740.589566,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 973.00748,
                    "min": 957.6302919999999,
                    "p50": 960.701608,
                    "p95": 973.00748,
                    "p99": 973.00748,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 426.740395,
                    "min": 390.14464699999996,
                    "p50": 401.76521099999997,
                    "p95": 426.740395,
                    "p99": 426.740395,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 597.160977,
                    "min": 574.372726,
                    "p50": 589.636987,
                    "p95": 597.160977,
                    "p99": 597.160977,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 566.2474569999999,
                    "min": 521.06833,
                    "p50": 526.023366,
                    "p95": 566.2474569999999,
                    "p99": 566.2474569999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1296.141191,
                    "min": 1250.019131,
                    "p50": 1276.362514,
                    "p95": 1296.141191,
                    "p99": 1296.141191,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 674.345012,
                    "min": 647.619429,
                    "p50": 662.2810989999999,
                    "p95": 674.345012,
                    "p99": 674.345012,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 479.96473399999996,
                    "min": 452.930485,
                    "p50": 462.90291399999995,
                    "p95": 479.96473399999996,
                    "p99": 479.96473399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 366.811824,
                    "min": 330.961329,
                    "p50": 337.77139,
                    "p95": 366.811824,
                    "p99": 366.811824,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 934.0684309999999,
                    "min": 890.381683,
                    "p50": 904.3124339999999,
                    "p95": 934.0684309999999,
                    "p99": 934.0684309999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 144.699768,
                    "min": 117.12223499999999,
                    "p50": 129.109109,
                    "p95": 144.699768,
                    "p99": 144.699768,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 69.359781,
                    "min": 43.823312,
                    "p50": 45.869867,
                    "p95": 69.359781,
                    "p99": 69.359781,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 307.815207,
                    "min": 247.77059899999998,
                    "p50": 259.725469,
                    "p95": 307.815207,
                    "p99": 307.815207,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 505.63991899999996,
                    "min": 422.70732599999997,
                    "p50": 477.43690799999996,
                    "p95": 505.63991899999996,
                    "p99": 505.63991899999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 92.594869,
                    "min": 87.121366,
                    "p50": 89.45558199999999,
                    "p95": 92.594869,
                    "p99": 92.594869,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 84.444104,
                    "min": 67.044432,
                    "p50": 68.084606,
                    "p95": 84.444104,
                    "p99": 84.444104,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 232.17637,
                    "min": 189.544445,
                    "p50": 206.224298,
                    "p95": 232.17637,
                    "p99": 232.17637,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 82.631968,
                    "min": 49.077194,
                    "p50": 51.081056999999994,
                    "p95": 82.631968,
                    "p99": 82.631968,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 81.52247799999999,
                    "min": 75.270277,
                    "p50": 79.44169099999999,
                    "p95": 81.52247799999999,
                    "p99": 81.52247799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 127.84281899999999,
                    "min": 79.621742,
                    "p50": 110.419299,
                    "p95": 127.84281899999999,
                    "p99": 127.84281899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 198.534293,
                    "min": 165.61957099999998,
                    "p50": 178.131543,
                    "p95": 198.534293,
                    "p99": 198.534293,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 44.709488,
                    "min": 36.12263,
                    "p50": 38.674305,
                    "p95": 44.709488,
                    "p99": 44.709488,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 92.858496,
                    "min": 80.228601,
                    "p50": 83.209738,
                    "p95": 92.858496,
                    "p99": 92.858496,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 111.393411,
                    "min": 79.15772,
                    "p50": 99.9726,
                    "p95": 111.393411,
                    "p99": 111.393411,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 84.691548,
                    "min": 57.268786,
                    "p50": 61.105017,
                    "p95": 84.691548,
                    "p99": 84.691548,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 75.2368,
                    "min": 63.306506,
                    "p50": 65.652963,
                    "p95": 75.2368,
                    "p99": 75.2368,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 97.79683899999999,
                    "min": 86.621651,
                    "p50": 90.656173,
                    "p95": 97.79683899999999,
                    "p99": 97.79683899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 74.55518599999999,
                    "min": 66.827782,
                    "p50": 68.658299,
                    "p95": 74.55518599999999,
                    "p99": 74.55518599999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 87.762473,
                    "min": 71.760504,
                    "p50": 75.328773,
                    "p95": 87.762473,
                    "p99": 87.762473,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 316.58595199999996,
                    "min": 284.629521,
                    "p50": 289.806226,
                    "p95": 316.58595199999996,
                    "p99": 316.58595199999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 197.063032,
                    "min": 163.28347399999998,
                    "p50": 176.082412,
                    "p95": 197.063032,
                    "p99": 197.063032,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 450.94314699999995,
                    "min": 418.331145,
                    "p50": 428.66331099999996,
                    "p95": 450.94314699999995,
                    "p99": 450.94314699999995,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 244.248672,
                    "min": 194.13438,
                    "p50": 204.056898,
                    "p95": 244.248672,
                    "p99": 244.248672,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 378.936112,
                    "min": 339.722011,
                    "p50": 363.83052499999997,
                    "p95": 378.936112,
                    "p99": 378.936112,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1505.360747,
                    "min": 1476.3699179999999,
                    "p50": 1486.5933619999998,
                    "p95": 1505.360747,
                    "p99": 1505.360747,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 330.896443,
                    "min": 308.967178,
                    "p50": 329.202145,
                    "p95": 330.896443,
                    "p99": 330.896443,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 433.135704,
                    "min": 391.049561,
                    "p50": 402.60508699999997,
                    "p95": 433.135704,
                    "p99": 433.135704,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 576.9422969999999,
                    "min": 526.3331999999999,
                    "p50": 536.352795,
                    "p95": 576.9422969999999,
                    "p99": 576.9422969999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 288.788328,
                    "min": 250.72220299999998,
                    "p50": 262.501031,
                    "p95": 288.788328,
                    "p99": 288.788328,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1223.211071,
                    "min": 1176.4614689999999,
                    "p50": 1206.328246,
                    "p95": 1223.211071,
                    "p99": 1223.211071,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 250.870398,
                    "min": 223.93562599999998,
                    "p50": 241.729245,
                    "p95": 250.870398,
                    "p99": 250.870398,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 397.119575,
                    "min": 367.376829,
                    "p50": 378.305951,
                    "p95": 397.119575,
                    "p99": 397.119575,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 922.803638,
                    "min": 889.2682169999999,
                    "p50": 907.133753,
                    "p95": 922.803638,
                    "p99": 922.803638,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 152.521641,
                    "min": 134.717718,
                    "p50": 146.15555899999998,
                    "p95": 152.521641,
                    "p99": 152.521641,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2973.7302729999997,
                    "min": 2934.560651,
                    "p50": 2948.162915,
                    "p95": 2973.7302729999997,
                    "p99": 2973.7302729999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.40007,
                    "min": 104.325868,
                    "p50": 111.80913799999999,
                    "p95": 153.40007,
                    "p99": 153.40007,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 490.823563,
                    "min": 453.69899899999996,
                    "p50": 467.301286,
                    "p95": 490.823563,
                    "p99": 490.823563,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 633.5751759999999,
                    "min": 581.981575,
                    "p50": 612.106737,
                    "p95": 633.5751759999999,
                    "p99": 633.5751759999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 50.104709,
                    "min": 35.21565,
                    "p50": 43.857529,
                    "p95": 50.104709,
                    "p99": 50.104709,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 58.310454,
                    "min": 44.443708,
                    "p50": 53.59502,
                    "p95": 58.310454,
                    "p99": 58.310454,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 38.519217999999995,
                    "min": 33.809224,
                    "p50": 36.170750999999996,
                    "p95": 38.519217999999995,
                    "p99": 38.519217999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 60.54269,
                    "min": 43.751101999999996,
                    "p50": 51.114193,
                    "p95": 60.54269,
                    "p99": 60.54269,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 71.783563,
                    "min": 51.299229999999994,
                    "p50": 56.469924,
                    "p95": 71.783563,
                    "p99": 71.783563,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 131.83446,
                    "min": 76.168954,
                    "p50": 115.54316999999999,
                    "p95": 131.83446,
                    "p99": 131.83446,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 71.296048,
                    "min": 56.147796,
                    "p50": 61.945394,
                    "p95": 71.296048,
                    "p99": 71.296048,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 50.47542,
                    "min": 42.663883999999996,
                    "p50": 44.592932,
                    "p95": 50.47542,
                    "p99": 50.47542,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 193.990267,
                    "min": 155.63185199999998,
                    "p50": 173.23435,
                    "p95": 193.990267,
                    "p99": 193.990267,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 57.802873,
                    "min": 45.809498999999995,
                    "p50": 50.286395999999996,
                    "p95": 57.802873,
                    "p99": 57.802873,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 48.716319,
                    "min": 43.720635,
                    "p50": 44.04114,
                    "p95": 48.716319,
                    "p99": 48.716319,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 75.14523,
                    "min": 58.455256999999996,
                    "p50": 62.806363999999995,
                    "p95": 75.14523,
                    "p99": 75.14523,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.06583499999999,
                    "min": 50.391684,
                    "p50": 55.272988999999995,
                    "p95": 72.06583499999999,
                    "p99": 72.06583499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 79.799314,
                    "min": 55.617069,
                    "p50": 69.637811,
                    "p95": 79.799314,
                    "p99": 79.799314,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 351.88755499999996,
                    "min": 252.160482,
                    "p50": 333.78274,
                    "p95": 351.88755499999996,
                    "p99": 351.88755499999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 80.685879,
                    "min": 69.174145,
                    "p50": 70.45694999999999,
                    "p95": 80.685879,
                    "p99": 80.685879,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 152.598771,
                    "min": 132.775288,
                    "p50": 141.457236,
                    "p95": 152.598771,
                    "p99": 152.598771,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 86.363486,
                    "min": 66.128016,
                    "p50": 81.857895,
                    "p95": 86.363486,
                    "p99": 86.363486,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 60.935541,
                    "min": 50.281755999999994,
                    "p50": 58.304123999999995,
                    "p95": 60.935541,
                    "p99": 60.935541,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 69.43857899999999,
                    "min": 52.421315,
                    "p50": 54.996157999999994,
                    "p95": 69.43857899999999,
                    "p99": 69.43857899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 31.143666999999997,
                    "min": 25.887587,
                    "p50": 27.055177999999998,
                    "p95": 31.143666999999997,
                    "p99": 31.143666999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 30.849814,
                    "min": 25.616861999999998,
                    "p50": 26.996181,
                    "p95": 30.849814,
                    "p99": 30.849814,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 37.117438,
                    "min": 26.204269,
                    "p50": 27.369267999999998,
                    "p95": 37.117438,
                    "p99": 37.117438,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.291885999999998,
                    "min": 24.650921,
                    "p50": 26.845311,
                    "p95": 27.291885999999998,
                    "p99": 27.291885999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 47.764002999999995,
                    "min": 23.883269,
                    "p50": 26.886653,
                    "p95": 47.764002999999995,
                    "p99": 47.764002999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 30.071689,
                    "min": 22.987993,
                    "p50": 27.222962,
                    "p95": 30.071689,
                    "p99": 30.071689,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.007825,
                    "min": 23.983285,
                    "p50": 27.029196,
                    "p95": 28.007825,
                    "p99": 28.007825,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 29.217245,
                    "min": 26.327634999999997,
                    "p50": 26.956318999999997,
                    "p95": 29.217245,
                    "p99": 29.217245,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 50.94043,
                    "min": 44.806317,
                    "p50": 47.928132,
                    "p95": 50.94043,
                    "p99": 50.94043,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 41.065985999999995,
                    "min": 26.979438,
                    "p50": 27.969289999999997,
                    "p95": 41.065985999999995,
                    "p99": 41.065985999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 41.903335,
                    "min": 36.332899,
                    "p50": 38.661415999999996,
                    "p95": 41.903335,
                    "p99": 41.903335,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 43.788982999999995,
                    "min": 30.155994,
                    "p50": 31.964969999999997,
                    "p95": 43.788982999999995,
                    "p99": 43.788982999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 50.597626999999996,
                    "min": 28.397606,
                    "p50": 32.334196999999996,
                    "p95": 50.597626999999996,
                    "p99": 50.597626999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.738554999999998,
                    "min": 24.180394999999997,
                    "p50": 26.997857999999997,
                    "p95": 31.738554999999998,
                    "p99": 31.738554999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 127.80914899999999,
                    "min": 86.75453399999999,
                    "p50": 109.586344,
                    "p95": 127.80914899999999,
                    "p99": 127.80914899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 74.662713,
                    "min": 58.297838,
                    "p50": 63.200219,
                    "p95": 74.662713,
                    "p99": 74.662713,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 35.833722,
                    "min": 27.944208,
                    "p50": 30.366833999999997,
                    "p95": 35.833722,
                    "p99": 35.833722,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 30.657335,
                    "min": 25.515157,
                    "p50": 26.861877,
                    "p95": 30.657335,
                    "p99": 30.657335,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 330.935675,
                    "min": 312.213124,
                    "p50": 321.806259,
                    "p95": 330.935675,
                    "p99": 330.935675,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 125.400217,
                    "min": 107.10005799999999,
                    "p50": 110.54609599999999,
                    "p95": 125.400217,
                    "p99": 125.400217,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 2984.9549939999997,
                    "min": 2949.4157419999997,
                    "p50": 2981.0830969999997,
                    "p95": 2984.9549939999997,
                    "p99": 2984.9549939999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 633.708541,
                    "min": 611.930571,
                    "p50": 621.759966,
                    "p95": 633.708541,
                    "p99": 633.708541,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 263.96083999999996,
                    "min": 222.46612499999998,
                    "p50": 240.875393,
                    "p95": 263.96083999999996,
                    "p99": 263.96083999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 182.19957399999998,
                    "min": 136.850236,
                    "p50": 147.156106,
                    "p95": 182.19957399999998,
                    "p99": 182.19957399999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 225.457993,
                    "min": 194.204059,
                    "p50": 199.106605,
                    "p95": 225.457993,
                    "p99": 225.457993,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 938.353133,
                    "min": 910.217723,
                    "p50": 918.174957,
                    "p95": 938.353133,
                    "p99": 938.353133,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 438.41387799999995,
                    "min": 406.942879,
                    "p50": 416.968904,
                    "p95": 438.41387799999995,
                    "p99": 438.41387799999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 381.100377,
                    "min": 350.468499,
                    "p50": 357.421543,
                    "p95": 381.100377,
                    "p99": 381.100377,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1236.059688,
                    "min": 1200.009306,
                    "p50": 1218.871303,
                    "p95": 1236.059688,
                    "p99": 1236.059688,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1534.677702,
                    "min": 1502.972932,
                    "p50": 1513.786576,
                    "p95": 1534.677702,
                    "p99": 1534.677702,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 466.415689,
                    "min": 426.256712,
                    "p50": 450.56080699999995,
                    "p95": 466.415689,
                    "p99": 466.415689,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 186.26113099999998,
                    "min": 166.605202,
                    "p50": 175.363928,
                    "p95": 186.26113099999998,
                    "p99": 186.26113099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 586.053334,
                    "min": 534.768296,
                    "p50": 549.884139,
                    "p95": 586.053334,
                    "p99": 586.053334,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 320.226705,
                    "min": 279.648557,
                    "p50": 297.948781,
                    "p95": 320.226705,
                    "p99": 320.226705,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 396.093083,
                    "min": 367.99432099999996,
                    "p50": 379.783187,
                    "p95": 396.093083,
                    "p99": 396.093083,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 499.541541,
                    "min": 455.137005,
                    "p50": 464.69517099999996,
                    "p95": 499.541541,
                    "p99": 499.541541,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 296.085911,
                    "min": 252.298814,
                    "p50": 259.075703,
                    "p95": 296.085911,
                    "p99": 296.085911,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1917.033371,
                    "min": 1851.496101,
                    "p50": 1876.3172399999999,
                    "p95": 1917.033371,
                    "p99": 1917.033371,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 295.35952299999997,
                    "min": 268.42921,
                    "p50": 272.355548,
                    "p95": 295.35952299999997,
                    "p99": 295.35952299999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 623.275093,
                    "min": 578.123483,
                    "p50": 594.253278,
                    "p95": 623.275093,
                    "p99": 623.275093,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 906.16613,
                    "min": 870.62878,
                    "p50": 896.383982,
                    "p95": 906.16613,
                    "p99": 906.16613,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 339.75703,
                    "min": 320.81120599999997,
                    "p50": 327.973464,
                    "p95": 339.75703,
                    "p99": 339.75703,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 998.9878269999999,
                    "min": 934.334488,
                    "p50": 952.2240029999999,
                    "p95": 998.9878269999999,
                    "p99": 998.9878269999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 548.330506,
                    "min": 512.533989,
                    "p50": 524.670811,
                    "p95": 548.330506,
                    "p99": 548.330506,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1117.441085,
                    "min": 1101.820589,
                    "p50": 1111.047644,
                    "p95": 1117.441085,
                    "p99": 1117.441085,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 389.140542,
                    "min": 373.87348,
                    "p50": 381.216794,
                    "p95": 389.140542,
                    "p99": 389.140542,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 698.543923,
                    "min": 629.736502,
                    "p50": 644.044127,
                    "p95": 698.543923,
                    "p99": 698.543923,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2577.8346619999998,
                    "min": 2479.101644,
                    "p50": 2532.155901,
                    "p95": 2577.8346619999998,
                    "p99": 2577.8346619999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 728.416694,
                    "min": 673.98477,
                    "p50": 693.04953,
                    "p95": 728.416694,
                    "p99": 728.416694,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 472.38359399999996,
                    "min": 448.065636,
                    "p50": 459.939894,
                    "p95": 472.38359399999996,
                    "p99": 472.38359399999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 829.158915,
                    "min": 761.557832,
                    "p50": 783.0534349999999,
                    "p95": 829.158915,
                    "p99": 829.158915,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 233.97517399999998,
                    "min": 197.75964399999998,
                    "p50": 208.634332,
                    "p95": 233.97517399999998,
                    "p99": 233.97517399999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 856.840602,
                    "min": 814.0942229999999,
                    "p50": 829.2326969999999,
                    "p95": 856.840602,
                    "p99": 856.840602,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1291.623318,
                    "min": 1238.08784,
                    "p50": 1271.118501,
                    "p95": 1291.623318,
                    "p99": 1291.623318,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3160.798633,
                    "min": 3051.77034,
                    "p50": 3100.143995,
                    "p95": 3160.798633,
                    "p99": 3160.798633,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 304.702121,
                    "min": 266.063747,
                    "p50": 276.58628999999996,
                    "p95": 304.702121,
                    "p99": 304.702121,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 572.196967,
                    "min": 522.610427,
                    "p50": 529.64728,
                    "p95": 572.196967,
                    "p99": 572.196967,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 445.65437399999996,
                    "min": 432.389999,
                    "p50": 440.593687,
                    "p95": 445.65437399999996,
                    "p99": 445.65437399999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 883.769678,
                    "min": 849.788725,
                    "p50": 855.7710559999999,
                    "p95": 883.769678,
                    "p99": 883.769678,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 822.676752,
                    "min": 762.755868,
                    "p50": 781.411298,
                    "p95": 822.676752,
                    "p99": 822.676752,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1054.2987349999999,
                    "min": 1010.09983,
                    "p50": 1029.388642,
                    "p95": 1054.2987349999999,
                    "p99": 1054.2987349999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1307.7859879999999,
                    "min": 1267.4309799999999,
                    "p50": 1279.420406,
                    "p95": 1307.7859879999999,
                    "p99": 1307.7859879999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1138.241301,
                    "min": 1101.3445709999999,
                    "p50": 1110.945762,
                    "p95": 1138.241301,
                    "p99": 1138.241301,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 972.3478839999999,
                    "min": 934.4125029999999,
                    "p50": 944.735607,
                    "p95": 972.3478839999999,
                    "p99": 972.3478839999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1716.897344,
                    "min": 1684.548574,
                    "p50": 1702.102592,
                    "p95": 1716.897344,
                    "p99": 1716.897344,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 628.8752479999999,
                    "min": 606.228801,
                    "p50": 618.112482,
                    "p95": 628.8752479999999,
                    "p99": 628.8752479999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 369.39324999999997,
                    "min": 351.8761,
                    "p50": 362.313654,
                    "p95": 369.39324999999997,
                    "p99": 369.39324999999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1505.7067789999999,
                    "min": 1478.726455,
                    "p50": 1494.330323,
                    "p95": 1505.7067789999999,
                    "p99": 1505.7067789999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 714.2289109999999,
                    "min": 686.164585,
                    "p50": 692.225234,
                    "p95": 714.2289109999999,
                    "p99": 714.2289109999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1207.620942,
                    "min": 1177.3557019999998,
                    "p50": 1189.050774,
                    "p95": 1207.620942,
                    "p99": 1207.620942,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 321.09781899999996,
                    "min": 288.00447099999997,
                    "p50": 311.74490499999996,
                    "p95": 321.09781899999996,
                    "p99": 321.09781899999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 626.555175,
                    "min": 603.448935,
                    "p50": 605.497269,
                    "p95": 626.555175,
                    "p99": 626.555175,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 881.776532,
                    "min": 848.845518,
                    "p50": 865.682546,
                    "p95": 881.776532,
                    "p99": 881.776532,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1728.747833,
                    "min": 1674.595417,
                    "p50": 1702.7910419999998,
                    "p95": 1728.747833,
                    "p99": 1728.747833,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 520.0928809999999,
                    "min": 476.46392399999996,
                    "p50": 486.161362,
                    "p95": 520.0928809999999,
                    "p99": 520.0928809999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 244.728829,
                    "min": 225.35933699999998,
                    "p50": 232.60195299999998,
                    "p95": 244.728829,
                    "p99": 244.728829,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.97686,
                    "min": 184.31623199999999,
                    "p50": 195.292206,
                    "p95": 202.97686,
                    "p99": 202.97686,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 545.395611,
                    "min": 519.263376,
                    "p50": 530.672144,
                    "p95": 545.395611,
                    "p99": 545.395611,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1300.613333,
                    "min": 1258.730175,
                    "p50": 1279.523256,
                    "p95": 1300.613333,
                    "p99": 1300.613333,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 800.982122,
                    "min": 750.3975429999999,
                    "p50": 763.5560039999999,
                    "p95": 800.982122,
                    "p99": 800.982122,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 673.0604079999999,
                    "min": 643.200263,
                    "p50": 649.6058479999999,
                    "p95": 673.0604079999999,
                    "p99": 673.0604079999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 372.677485,
                    "min": 354.285354,
                    "p50": 360.51681199999996,
                    "p95": 372.677485,
                    "p99": 372.677485,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 447.125045,
                    "min": 434.511088,
                    "p50": 438.314143,
                    "p95": 447.125045,
                    "p99": 447.125045,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 329.738227,
                    "min": 308.086499,
                    "p50": 319.170733,
                    "p95": 329.738227,
                    "p99": 329.738227,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.254764,
                    "min": 142.759051,
                    "p50": 158.95332399999998,
                    "p95": 184.254764,
                    "p99": 184.254764,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 616.14936,
                    "min": 558.324165,
                    "p50": 574.116548,
                    "p95": 616.14936,
                    "p99": 616.14936,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 411.022563,
                    "min": 392.676855,
                    "p50": 401.27730299999996,
                    "p95": 411.022563,
                    "p99": 411.022563,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 658.49685,
                    "min": 616.8313079999999,
                    "p50": 628.731754,
                    "p95": 658.49685,
                    "p99": 658.49685,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2032.3737879999999,
                    "min": 1975.8434699999998,
                    "p50": 1984.2961389999998,
                    "p95": 2032.3737879999999,
                    "p99": 2032.3737879999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4045.440632,
                    "min": 3966.152546,
                    "p50": 4023.186365,
                    "p95": 4045.440632,
                    "p99": 4045.440632,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2239.381771,
                    "min": 2198.107887,
                    "p50": 2216.778029,
                    "p95": 2239.381771,
                    "p99": 2239.381771,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5891.014537,
                    "min": 5843.570379,
                    "p50": 5875.861908,
                    "p95": 5891.014537,
                    "p99": 5891.014537,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1227.230673,
                    "min": 1199.645599,
                    "p50": 1221.8575329999999,
                    "p95": 1227.230673,
                    "p99": 1227.230673,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1838.326408,
                    "min": 1805.34835,
                    "p50": 1814.542005,
                    "p95": 1838.326408,
                    "p99": 1838.326408,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7806.194160999999,
                    "min": 7742.000142999999,
                    "p50": 7770.746437999999,
                    "p95": 7806.194160999999,
                    "p99": 7806.194160999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1032.840032,
                    "min": 1021.0514479999999,
                    "p50": 1028.265831,
                    "p95": 1032.840032,
                    "p99": 1032.840032,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2678.25131,
                    "min": 2638.922466,
                    "p50": 2653.219227,
                    "p95": 2678.25131,
                    "p99": 2678.25131,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1404.53182,
                    "min": 1389.0886189999999,
                    "p50": 1401.045897,
                    "p95": 1404.53182,
                    "p99": 1404.53182,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 837.284624,
                    "min": 806.588939,
                    "p50": 826.9418029999999,
                    "p95": 837.284624,
                    "p99": 837.284624,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3043.701337,
                    "min": 2992.018475,
                    "p50": 3019.141564,
                    "p95": 3043.701337,
                    "p99": 3043.701337,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2861.839676,
                    "min": 2813.9864,
                    "p50": 2826.293408,
                    "p95": 2861.839676,
                    "p99": 2861.839676,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3492.342646,
                    "min": 3447.3932059999997,
                    "p50": 3485.160942,
                    "p95": 3492.342646,
                    "p99": 3492.342646,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1609.6017869999998,
                    "min": 1580.0829239999998,
                    "p50": 1602.136922,
                    "p95": 1609.6017869999998,
                    "p99": 1609.6017869999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2423.997852,
                    "min": 2378.7838039999997,
                    "p50": 2407.9170249999997,
                    "p95": 2423.997852,
                    "p99": 2423.997852,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 753.26245,
                    "min": 694.0095759999999,
                    "p50": 714.9186119999999,
                    "p95": 753.26245,
                    "p99": 753.26245,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 549.280294,
                    "min": 498.27095599999996,
                    "p50": 513.361579,
                    "p95": 549.280294,
                    "p99": 549.280294,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1025.989361,
                    "min": 993.7455709999999,
                    "p50": 1008.4168249999999,
                    "p95": 1025.989361,
                    "p99": 1025.989361,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1513.829405,
                    "min": 1472.003824,
                    "p50": 1491.3087679999999,
                    "p95": 1513.829405,
                    "p99": 1513.829405,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4943.418872,
                    "min": 4853.869219,
                    "p50": 4892.7932169999995,
                    "p95": 4943.418872,
                    "p99": 4943.418872,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1992.340591,
                    "min": 1949.7397409999999,
                    "p50": 1976.95573,
                    "p95": 1992.340591,
                    "p99": 1992.340591,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 588.454015,
                    "min": 552.2083,
                    "p50": 565.98363,
                    "p95": 588.454015,
                    "p99": 588.454015,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 197.94254099999998,
                    "min": 170.852665,
                    "p50": 175.894075,
                    "p95": 197.94254099999998,
                    "p99": 197.94254099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2506.291413,
                    "min": 2436.844098,
                    "p50": 2465.362233,
                    "p95": 2506.291413,
                    "p99": 2506.291413,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 394.31638699999996,
                    "min": 359.828045,
                    "p50": 377.390747,
                    "p95": 394.31638699999996,
                    "p99": 394.31638699999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 463.622196,
                    "min": 407.535301,
                    "p50": 414.390082,
                    "p95": 463.622196,
                    "p99": 463.622196,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 483.502571,
                    "min": 457.338763,
                    "p50": 468.36689099999995,
                    "p95": 483.502571,
                    "p99": 483.502571,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 890.4057919999999,
                    "min": 870.1519119999999,
                    "p50": 878.937954,
                    "p95": 890.4057919999999,
                    "p99": 890.4057919999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 301.380629,
                    "min": 261.62201,
                    "p50": 268.754551,
                    "p95": 301.380629,
                    "p99": 301.380629,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 329.791062,
                    "min": 310.53521,
                    "p50": 319.519206,
                    "p95": 329.791062,
                    "p99": 329.791062,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 795.541018,
                    "min": 747.0459,
                    "p50": 758.803821,
                    "p95": 795.541018,
                    "p99": 795.541018,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 622.929166,
                    "min": 599.924528,
                    "p50": 605.41104,
                    "p95": 622.929166,
                    "p99": 622.929166,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 255.62042,
                    "min": 212.205764,
                    "p50": 225.680974,
                    "p95": 255.62042,
                    "p99": 255.62042,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 669.4883629999999,
                    "min": 645.662486,
                    "p50": 666.6853169999999,
                    "p95": 669.4883629999999,
                    "p99": 669.4883629999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2060.8448319999998,
                    "min": 2028.1234359999999,
                    "p50": 2049.6584749999997,
                    "p95": 2060.8448319999998,
                    "p99": 2060.8448319999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 865.8993439999999,
                    "min": 832.4869329999999,
                    "p50": 851.40116,
                    "p95": 865.8993439999999,
                    "p99": 865.8993439999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 616.5183059999999,
                    "min": 596.904625,
                    "p50": 610.072805,
                    "p95": 616.5183059999999,
                    "p99": 616.5183059999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1430.920614,
                    "min": 1401.278552,
                    "p50": 1420.1170399999999,
                    "p95": 1430.920614,
                    "p99": 1430.920614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 980.984597,
                    "min": 936.5184079999999,
                    "p50": 954.9730149999999,
                    "p95": 980.984597,
                    "p99": 980.984597,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4703.238727,
                    "min": 4608.1765589999995,
                    "p50": 4665.921319,
                    "p95": 4703.238727,
                    "p99": 4703.238727,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1317.284716,
                    "min": 1286.291753,
                    "p50": 1305.0277449999999,
                    "p95": 1317.284716,
                    "p99": 1317.284716,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 763.588178,
                    "min": 719.225161,
                    "p50": 738.85352,
                    "p95": 763.588178,
                    "p99": 763.588178,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1547.52205,
                    "min": 1529.285901,
                    "p50": 1538.123194,
                    "p95": 1547.52205,
                    "p99": 1547.52205,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3523.210628,
                    "min": 3481.238485,
                    "p50": 3508.911881,
                    "p95": 3523.210628,
                    "p99": 3523.210628,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1783.430157,
                    "min": 1737.490145,
                    "p50": 1760.4337409999998,
                    "p95": 1783.430157,
                    "p99": 1783.430157,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2387.641975,
                    "min": 2325.140478,
                    "p50": 2358.854375,
                    "p95": 2387.641975,
                    "p99": 2387.641975,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 387.03489299999995,
                    "min": 362.85754499999996,
                    "p50": 375.09187499999996,
                    "p95": 387.03489299999995,
                    "p99": 387.03489299999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1682.857794,
                    "min": 1640.2592809999999,
                    "p50": 1651.1527019999999,
                    "p95": 1682.857794,
                    "p99": 1682.857794,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 507.159537,
                    "min": 481.138579,
                    "p50": 489.418542,
                    "p95": 507.159537,
                    "p99": 507.159537,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1205.663439,
                    "min": 1178.2011089999999,
                    "p50": 1187.927092,
                    "p95": 1205.663439,
                    "p99": 1205.663439,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1095.8956759999999,
                    "min": 1057.389506,
                    "p50": 1072.532501,
                    "p95": 1095.8956759999999,
                    "p99": 1095.8956759999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1782.866466,
                    "min": 1748.146125,
                    "p50": 1769.417456,
                    "p95": 1782.866466,
                    "p99": 1782.866466,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 515.411977,
                    "min": 491.56850699999995,
                    "p50": 507.622951,
                    "p95": 515.411977,
                    "p99": 515.411977,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1085.664385,
                    "min": 1058.295793,
                    "p50": 1070.5316679999999,
                    "p95": 1085.664385,
                    "p99": 1085.664385,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1546.8466119999998,
                    "min": 1517.0975799999999,
                    "p50": 1531.735361,
                    "p95": 1546.8466119999998,
                    "p99": 1546.8466119999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1195.870538,
                    "min": 1176.572938,
                    "p50": 1192.486981,
                    "p95": 1195.870538,
                    "p99": 1195.870538,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1315.263771,
                    "min": 1293.4110759999999,
                    "p50": 1302.810215,
                    "p95": 1315.263771,
                    "p99": 1315.263771,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2391.148513,
                    "min": 2310.222726,
                    "p50": 2357.006652,
                    "p95": 2391.148513,
                    "p99": 2391.148513,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3543.197424,
                    "min": 3488.71361,
                    "p50": 3510.1071469999997,
                    "p95": 3543.197424,
                    "p99": 3543.197424,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1434.72868,
                    "min": 1400.89026,
                    "p50": 1424.514483,
                    "p95": 1434.72868,
                    "p99": 1434.72868,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 635.4512649999999,
                    "min": 602.3004169999999,
                    "p50": 609.2608329999999,
                    "p95": 635.4512649999999,
                    "p99": 635.4512649999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 386.84642099999996,
                    "min": 361.630479,
                    "p50": 371.427467,
                    "p95": 386.84642099999996,
                    "p99": 386.84642099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 739.21421,
                    "min": 713.8976319999999,
                    "p50": 720.782657,
                    "p95": 739.21421,
                    "p99": 739.21421,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2087.729485,
                    "min": 2047.35086,
                    "p50": 2062.995262,
                    "p95": 2087.729485,
                    "p99": 2087.729485,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 853.025055,
                    "min": 827.218617,
                    "p50": 837.517067,
                    "p95": 853.025055,
                    "p99": 853.025055,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1681.1428159999998,
                    "min": 1638.212701,
                    "p50": 1653.7737009999998,
                    "p95": 1681.1428159999998,
                    "p99": 1681.1428159999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 971.814005,
                    "min": 946.168646,
                    "p50": 956.471158,
                    "p95": 971.814005,
                    "p99": 971.814005,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10955.195097,
                    "min": 10730.685964,
                    "p50": 10838.576938999999,
                    "p95": 10955.195097,
                    "p99": 10955.195097,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1568.1818509999998,
                    "min": 1524.627804,
                    "p50": 1548.568308,
                    "p95": 1568.1818509999998,
                    "p99": 1568.1818509999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5449.3566869999995,
                    "min": 5383.604155999999,
                    "p50": 5425.740158,
                    "p95": 5449.3566869999995,
                    "p99": 5449.3566869999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 789.274647,
                    "min": 775.373828,
                    "p50": 779.10498,
                    "p95": 789.274647,
                    "p99": 789.274647,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 473.503745,
                    "min": 452.37136999999996,
                    "p50": 458.11776799999996,
                    "p95": 473.503745,
                    "p99": 473.503745,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1351.9436019999998,
                    "min": 1314.7056519999999,
                    "p50": 1326.1862899999999,
                    "p95": 1351.9436019999998,
                    "p99": 1351.9436019999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4398.625642,
                    "min": 4328.5770569999995,
                    "p50": 4359.403969,
                    "p95": 4398.625642,
                    "p99": 4398.625642,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1668.486619,
                    "min": 1636.752599,
                    "p50": 1648.337881,
                    "p95": 1668.486619,
                    "p99": 1668.486619,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1443.7161139999998,
                    "min": 1412.185322,
                    "p50": 1428.65643,
                    "p95": 1443.7161139999998,
                    "p99": 1443.7161139999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1935.7324159999998,
                    "min": 1894.064324,
                    "p50": 1927.815936,
                    "p95": 1935.7324159999998,
                    "p99": 1935.7324159999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 613.445353,
                    "min": 558.901876,
                    "p50": 570.819992,
                    "p95": 613.445353,
                    "p99": 613.445353,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1251.725195,
                    "min": 1201.128237,
                    "p50": 1223.0224249999999,
                    "p95": 1251.725195,
                    "p99": 1251.725195,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 363.339276,
                    "min": 340.363539,
                    "p50": 343.881326,
                    "p95": 363.339276,
                    "p99": 363.339276,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 902.063906,
                    "min": 881.475072,
                    "p50": 891.499682,
                    "p95": 902.063906,
                    "p99": 902.063906,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 713.005626,
                    "min": 665.86041,
                    "p50": 683.465968,
                    "p95": 713.005626,
                    "p99": 713.005626,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1025.5232509999998,
                    "min": 984.444709,
                    "p50": 1001.5419049999999,
                    "p95": 1025.5232509999998,
                    "p99": 1025.5232509999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1121.89129,
                    "min": 1103.185335,
                    "p50": 1113.5843889999999,
                    "p95": 1121.89129,
                    "p99": 1121.89129,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3318.304482,
                    "min": 3241.2933289999996,
                    "p50": 3282.6182009999998,
                    "p95": 3318.304482,
                    "p99": 3318.304482,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2201.9564729999997,
                    "min": 2179.3377499999997,
                    "p50": 2185.608877,
                    "p95": 2201.9564729999997,
                    "p99": 2201.9564729999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 341.11755899999997,
                    "min": 302.622839,
                    "p50": 310.30328299999996,
                    "p95": 341.11755899999997,
                    "p99": 341.11755899999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1951.511493,
                    "min": 1899.384243,
                    "p50": 1931.1047469999999,
                    "p95": 1951.511493,
                    "p99": 1951.511493,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1493.574167,
                    "min": 1436.2274989999999,
                    "p50": 1456.873,
                    "p95": 1493.574167,
                    "p99": 1493.574167,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 979.732051,
                    "min": 968.335981,
                    "p50": 975.205869,
                    "p95": 979.732051,
                    "p99": 979.732051,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 516.933939,
                    "min": 491.21313899999996,
                    "p50": 503.834093,
                    "p95": 516.933939,
                    "p99": 516.933939,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4812.207031,
                    "min": 4712.672508,
                    "p50": 4758.321067,
                    "p95": 4812.207031,
                    "p99": 4812.207031,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2408.5748249999997,
                    "min": 2374.0529539999998,
                    "p50": 2393.933719,
                    "p95": 2408.5748249999997,
                    "p99": 2408.5748249999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 626.045342,
                    "min": 588.731412,
                    "p50": 600.3782279999999,
                    "p95": 626.045342,
                    "p99": 626.045342,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 715.947737,
                    "min": 681.7312079999999,
                    "p50": 690.1188609999999,
                    "p95": 715.947737,
                    "p99": 715.947737,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 416.68706799999995,
                    "min": 394.419193,
                    "p50": 405.44289599999996,
                    "p95": 416.68706799999995,
                    "p99": 416.68706799999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 470.440042,
                    "min": 446.128384,
                    "p50": 458.11686299999997,
                    "p95": 470.440042,
                    "p99": 470.440042,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 236.14623799999998,
                    "min": 209.664763,
                    "p50": 216.393261,
                    "p95": 236.14623799999998,
                    "p99": 236.14623799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 872.1291779999999,
                    "min": 849.6492549999999,
                    "p50": 865.652118,
                    "p95": 872.1291779999999,
                    "p99": 872.1291779999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 559.179614,
                    "min": 537.649712,
                    "p50": 545.262114,
                    "p95": 559.179614,
                    "p99": 559.179614,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 779.0325909999999,
                    "min": 727.112806,
                    "p50": 747.7464769999999,
                    "p95": 779.0325909999999,
                    "p99": 779.0325909999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 394.853909,
                    "min": 352.645957,
                    "p50": 366.213603,
                    "p95": 394.853909,
                    "p99": 394.853909,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 671.0946769999999,
                    "min": 640.4768399999999,
                    "p50": 649.351763,
                    "p95": 671.0946769999999,
                    "p99": 671.0946769999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 276.547435,
                    "min": 253.80324299999998,
                    "p50": 263.891192,
                    "p95": 276.547435,
                    "p99": 276.547435,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 183.124236,
                    "min": 168.684597,
                    "p50": 171.58908399999999,
                    "p95": 183.124236,
                    "p99": 183.124236,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1971.3208989999998,
                    "min": 1902.8402979999998,
                    "p50": 1924.864322,
                    "p95": 1971.3208989999998,
                    "p99": 1971.3208989999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 923.6063929999999,
                    "min": 885.8825569999999,
                    "p50": 899.886709,
                    "p95": 923.6063929999999,
                    "p99": 923.6063929999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2222.3509879999997,
                    "min": 2165.057573,
                    "p50": 2205.28838,
                    "p95": 2222.3509879999997,
                    "p99": 2222.3509879999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 817.3060409999999,
                    "min": 780.347086,
                    "p50": 797.418193,
                    "p95": 817.3060409999999,
                    "p99": 817.3060409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 685.7536739999999,
                    "min": 663.341414,
                    "p50": 673.635132,
                    "p95": 685.7536739999999,
                    "p99": 685.7536739999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 463.99672,
                    "min": 448.763132,
                    "p50": 459.09415099999995,
                    "p95": 463.99672,
                    "p99": 463.99672,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1560.908138,
                    "min": 1525.4485109999998,
                    "p50": 1540.491102,
                    "p95": 1560.908138,
                    "p99": 1560.908138,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1230.01859,
                    "min": 1209.8273749999998,
                    "p50": 1225.947762,
                    "p95": 1230.01859,
                    "p99": 1230.01859,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3303.3405199999997,
                    "min": 3248.0029769999996,
                    "p50": 3283.2088519999998,
                    "p95": 3303.3405199999997,
                    "p99": 3303.3405199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1009.6117889999999,
                    "min": 995.502564,
                    "p50": 1003.724121,
                    "p95": 1009.6117889999999,
                    "p99": 1009.6117889999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10886.675598,
                    "min": 10788.146811999999,
                    "p50": 10849.053882,
                    "p95": 10886.675598,
                    "p99": 10886.675598,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 583.956184,
                    "min": 566.460381,
                    "p50": 579.979502,
                    "p95": 583.956184,
                    "p99": 583.956184,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1483.896315,
                    "min": 1416.739081,
                    "p50": 1439.4764289999998,
                    "p95": 1483.896315,
                    "p99": 1483.896315,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1354.5022259999998,
                    "min": 1304.8541679999998,
                    "p50": 1333.8695269999998,
                    "p95": 1354.5022259999998,
                    "p99": 1354.5022259999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4392.999253,
                    "min": 4327.944192,
                    "p50": 4354.881103,
                    "p95": 4392.999253,
                    "p99": 4392.999253,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 385.12913299999997,
                    "min": 343.286832,
                    "p50": 359.74398199999996,
                    "p95": 385.12913299999997,
                    "p99": 385.12913299999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1668.033663,
                    "min": 1635.1613419999999,
                    "p50": 1657.2943109999999,
                    "p95": 1668.033663,
                    "p99": 1668.033663,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1127.147755,
                    "min": 1087.451069,
                    "p50": 1112.243845,
                    "p95": 1127.147755,
                    "p99": 1127.147755,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5490.915113,
                    "min": 5415.789884,
                    "p50": 5442.135848999999,
                    "p95": 5490.915113,
                    "p99": 5490.915113,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 690.283404,
                    "min": 646.06377,
                    "p50": 662.7383649999999,
                    "p95": 690.283404,
                    "p99": 690.283404,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 583.258815,
                    "min": 553.056298,
                    "p50": 561.666938,
                    "p95": 583.258815,
                    "p99": 583.258815,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 858.8351349999999,
                    "min": 827.191919,
                    "p50": 843.8772299999999,
                    "p95": 858.8351349999999,
                    "p99": 858.8351349999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 329.808542,
                    "min": 285.66351299999997,
                    "p50": 302.514733,
                    "p95": 329.808542,
                    "p99": 329.808542,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 416.831771,
                    "min": 375.46542,
                    "p50": 393.27680999999995,
                    "p95": 416.831771,
                    "p99": 416.831771,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 760.53126,
                    "min": 737.266404,
                    "p50": 749.051623,
                    "p95": 760.53126,
                    "p99": 760.53126,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 493.58422299999995,
                    "min": 465.799407,
                    "p50": 476.678116,
                    "p95": 493.58422299999995,
                    "p99": 493.58422299999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 911.5571289999999,
                    "min": 892.7413339999999,
                    "p50": 907.992975,
                    "p95": 911.5571289999999,
                    "p99": 911.5571289999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 314.442437,
                    "min": 282.420678,
                    "p50": 292.284253,
                    "p95": 314.442437,
                    "p99": 314.442437,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 766.722772,
                    "min": 718.746455,
                    "p50": 732.2345839999999,
                    "p95": 766.722772,
                    "p99": 766.722772,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 582.052968,
                    "min": 551.7906459999999,
                    "p50": 564.835387,
                    "p95": 582.052968,
                    "p99": 582.052968,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 663.483128,
                    "min": 626.533824,
                    "p50": 642.558132,
                    "p95": 663.483128,
                    "p99": 663.483128,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 831.651184,
                    "min": 809.10555,
                    "p50": 816.95232,
                    "p95": 831.651184,
                    "p99": 831.651184,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 390.225447,
                    "min": 365.725784,
                    "p50": 381.130452,
                    "p95": 390.225447,
                    "p99": 390.225447,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 478.541479,
                    "min": 455.745417,
                    "p50": 473.701693,
                    "p95": 478.541479,
                    "p99": 478.541479,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 304.52412,
                    "min": 263.091944,
                    "p50": 270.713763,
                    "p95": 304.52412,
                    "p99": 304.52412,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 478.689711,
                    "min": 450.605309,
                    "p50": 465.741179,
                    "p95": 478.689711,
                    "p99": 478.689711,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 614.856485,
                    "min": 573.862119,
                    "p50": 592.420541,
                    "p95": 614.856485,
                    "p99": 614.856485,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 433.551625,
                    "min": 398.622261,
                    "p50": 427.322813,
                    "p95": 433.551625,
                    "p99": 433.551625,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 787.385273,
                    "min": 756.828537,
                    "p50": 772.1393419999999,
                    "p95": 787.385273,
                    "p99": 787.385273,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 236.96078799999998,
                    "min": 194.88517299999998,
                    "p50": 206.96846299999999,
                    "p95": 236.96078799999998,
                    "p99": 236.96078799999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 679.563713,
                    "min": 636.4125859999999,
                    "p50": 646.976185,
                    "p95": 679.563713,
                    "p99": 679.563713,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 533.763958,
                    "min": 501.70327799999995,
                    "p50": 517.494821,
                    "p95": 533.763958,
                    "p99": 533.763958,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 356.56706099999997,
                    "min": 325.23494999999997,
                    "p50": 335.43235599999997,
                    "p95": 356.56706099999997,
                    "p99": 356.56706099999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 734.1732059999999,
                    "min": 706.686077,
                    "p50": 713.426842,
                    "p95": 734.1732059999999,
                    "p99": 734.1732059999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 601.813048,
                    "min": 559.650623,
                    "p50": 573.7075649999999,
                    "p95": 601.813048,
                    "p99": 601.813048,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 756.797275,
                    "min": 738.5460479999999,
                    "p50": 749.690067,
                    "p95": 756.797275,
                    "p99": 756.797275,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 239.371364,
                    "min": 200.823242,
                    "p50": 209.33653199999998,
                    "p95": 239.371364,
                    "p99": 239.371364,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 422.39077599999996,
                    "min": 380.529542,
                    "p50": 388.677479,
                    "p95": 422.39077599999996,
                    "p99": 422.39077599999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 673.509904,
                    "min": 655.881394,
                    "p50": 660.461948,
                    "p95": 673.509904,
                    "p99": 673.509904,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 299.223804,
                    "min": 287.836441,
                    "p50": 295.379265,
                    "p95": 299.223804,
                    "p99": 299.223804,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 485.56938299999996,
                    "min": 470.68803299999996,
                    "p50": 473.277383,
                    "p95": 485.56938299999996,
                    "p99": 485.56938299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.629858,
                    "min": 585.780434,
                    "p50": 614.51587,
                    "p95": 656.629858,
                    "p99": 656.629858,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.27604399999996,
                    "min": 299.33937599999996,
                    "p50": 340.600757,
                    "p95": 362.27604399999996,
                    "p99": 362.27604399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.548793,
                    "min": 170.763119,
                    "p50": 204.17895099999998,
                    "p95": 211.548793,
                    "p99": 211.548793,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 625.718319,
                    "min": 552.104939,
                    "p50": 577.913652,
                    "p95": 625.718319,
                    "p99": 625.718319,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 516.543639,
                    "min": 423.54517,
                    "p50": 431.954293,
                    "p95": 516.543639,
                    "p99": 516.543639,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 364.481568,
                    "min": 328.58788999999996,
                    "p50": 351.12678999999997,
                    "p95": 364.481568,
                    "p99": 364.481568,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 565.750463,
                    "min": 494.319713,
                    "p50": 548.5204289999999,
                    "p95": 565.750463,
                    "p99": 565.750463,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 275.93672,
                    "min": 219.690387,
                    "p50": 241.651411,
                    "p95": 275.93672,
                    "p99": 275.93672,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.584216,
                    "min": 134.276723,
                    "p50": 144.782162,
                    "p95": 157.584216,
                    "p99": 157.584216,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 858.185447,
                    "min": 719.8601739999999,
                    "p50": 791.5814809999999,
                    "p95": 858.185447,
                    "p99": 858.185447,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 717.570461,
                    "min": 636.1220579999999,
                    "p50": 664.006191,
                    "p95": 717.570461,
                    "p99": 717.570461,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 911.244781,
                    "min": 861.331965,
                    "p50": 879.952811,
                    "p95": 911.244781,
                    "p99": 911.244781,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 458.447294,
                    "min": 390.80033699999996,
                    "p50": 405.273197,
                    "p95": 458.447294,
                    "p99": 458.447294,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 537.900892,
                    "min": 480.72122299999995,
                    "p50": 512.134055,
                    "p95": 537.900892,
                    "p99": 537.900892,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 328.715863,
                    "min": 258.63999,
                    "p50": 287.742025,
                    "p95": 328.715863,
                    "p99": 328.715863,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 590.9373449999999,
                    "min": 504.07683799999995,
                    "p50": 548.989633,
                    "p95": 590.9373449999999,
                    "p99": 590.9373449999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 234.94588299999998,
                    "min": 186.19988999999998,
                    "p50": 215.51375,
                    "p95": 234.94588299999998,
                    "p99": 234.94588299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 627.454217,
                    "min": 574.029722,
                    "p50": 592.255006,
                    "p95": 627.454217,
                    "p99": 627.454217,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 439.090607,
                    "min": 374.632441,
                    "p50": 400.75318999999996,
                    "p95": 439.090607,
                    "p99": 439.090607,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 187.077858,
                    "min": 154.636012,
                    "p50": 163.91860499999999,
                    "p95": 187.077858,
                    "p99": 187.077858,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 324.538519,
                    "min": 228.31467899999998,
                    "p50": 265.95700999999997,
                    "p95": 324.538519,
                    "p99": 324.538519,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 525.4270779999999,
                    "min": 445.740757,
                    "p50": 496.516469,
                    "p95": 525.4270779999999,
                    "p99": 525.4270779999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 589.143202,
                    "min": 529.1568629999999,
                    "p50": 551.3393669999999,
                    "p95": 589.143202,
                    "p99": 589.143202,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 809.2230109999999,
                    "min": 747.840007,
                    "p50": 785.027293,
                    "p95": 809.2230109999999,
                    "p99": 809.2230109999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 323.470066,
                    "min": 266.639509,
                    "p50": 305.170984,
                    "p95": 323.470066,
                    "p99": 323.470066,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 757.008154,
                    "min": 666.197811,
                    "p50": 697.5432139999999,
                    "p95": 757.008154,
                    "p99": 757.008154,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.287517,
                    "min": 297.409401,
                    "p50": 329.599513,
                    "p95": 394.287517,
                    "p99": 394.287517,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 483.44580499999995,
                    "min": 423.34687499999995,
                    "p50": 460.04535599999997,
                    "p95": 483.44580499999995,
                    "p99": 483.44580499999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 401.507455,
                    "min": 345.621476,
                    "p50": 364.31267399999996,
                    "p95": 401.507455,
                    "p99": 401.507455,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.816427,
                    "min": 127.989854,
                    "p50": 135.873764,
                    "p95": 148.816427,
                    "p99": 148.816427,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.64562,
                    "min": 210.003863,
                    "p50": 248.361328,
                    "p95": 259.64562,
                    "p99": 259.64562,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 368.36362199999996,
                    "min": 319.797839,
                    "p50": 340.83705299999997,
                    "p95": 368.36362199999996,
                    "p99": 368.36362199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 373.309243,
                    "min": 297.484247,
                    "p50": 332.03412599999996,
                    "p95": 373.309243,
                    "p99": 373.309243,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 785.379772,
                    "min": 725.1366939999999,
                    "p50": 760.182253,
                    "p95": 785.379772,
                    "p99": 785.379772,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 701.743012,
                    "min": 628.535744,
                    "p50": 659.3067609999999,
                    "p95": 701.743012,
                    "p99": 701.743012,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 162.807495,
                    "min": 136.10810899999998,
                    "p50": 151.013591,
                    "p95": 162.807495,
                    "p99": 162.807495,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 532.228171,
                    "min": 469.28102099999995,
                    "p50": 486.278017,
                    "p95": 532.228171,
                    "p99": 532.228171,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 482.922169,
                    "min": 417.79603699999996,
                    "p50": 436.428166,
                    "p95": 482.922169,
                    "p99": 482.922169,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 220.474266,
                    "min": 180.182705,
                    "p50": 195.57152299999998,
                    "p95": 220.474266,
                    "p99": 220.474266,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 562.7546689999999,
                    "min": 483.959184,
                    "p50": 520.916536,
                    "p95": 562.7546689999999,
                    "p99": 562.7546689999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 431.45033,
                    "min": 388.01717299999996,
                    "p50": 400.90122399999996,
                    "p95": 431.45033,
                    "p99": 431.45033,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 936.2231889999999,
                    "min": 821.629641,
                    "p50": 882.1339019999999,
                    "p95": 936.2231889999999,
                    "p99": 936.2231889999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 657.1928859999999,
                    "min": 578.0528509999999,
                    "p50": 628.2877179999999,
                    "p95": 657.1928859999999,
                    "p99": 657.1928859999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 314.056914,
                    "min": 245.59581,
                    "p50": 287.733775,
                    "p95": 314.056914,
                    "p99": 314.056914,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 610.178311,
                    "min": 529.1862169999999,
                    "p50": 578.5712209999999,
                    "p95": 610.178311,
                    "p99": 610.178311,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 910.6049489999999,
                    "min": 817.7653349999999,
                    "p50": 871.494164,
                    "p95": 910.6049489999999,
                    "p99": 910.6049489999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 216.51339099999998,
                    "min": 174.288779,
                    "p50": 182.941299,
                    "p95": 216.51339099999998,
                    "p99": 216.51339099999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 456.177839,
                    "min": 382.449457,
                    "p50": 404.742353,
                    "p95": 456.177839,
                    "p99": 456.177839,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 487.01849899999996,
                    "min": 406.671569,
                    "p50": 432.73317199999997,
                    "p95": 487.01849899999996,
                    "p99": 487.01849899999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 536.949116,
                    "min": 467.065656,
                    "p50": 501.39621999999997,
                    "p95": 536.949116,
                    "p99": 536.949116,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 824.668655,
                    "min": 721.0184069999999,
                    "p50": 760.4466249999999,
                    "p95": 824.668655,
                    "p99": 824.668655,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 558.511878,
                    "min": 506.430228,
                    "p50": 534.502856,
                    "p95": 558.511878,
                    "p99": 558.511878,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 626.790162,
                    "min": 541.180791,
                    "p50": 584.9632349999999,
                    "p95": 626.790162,
                    "p99": 626.790162,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.161183,
                    "min": 135.14248,
                    "p50": 145.386012,
                    "p95": 185.161183,
                    "p99": 185.161183,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 335.358582,
                    "min": 275.47954999999996,
                    "p50": 283.11753799999997,
                    "p95": 335.358582,
                    "p99": 335.358582,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 267.651163,
                    "min": 229.562735,
                    "p50": 238.761977,
                    "p95": 267.651163,
                    "p99": 267.651163,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 748.346597,
                    "min": 627.617628,
                    "p50": 658.623429,
                    "p95": 748.346597,
                    "p99": 748.346597,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 383.864556,
                    "min": 338.639832,
                    "p50": 366.85454999999996,
                    "p95": 383.864556,
                    "p99": 383.864556,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 638.817114,
                    "min": 594.468891,
                    "p50": 612.209658,
                    "p95": 638.817114,
                    "p99": 638.817114,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 355.763221,
                    "min": 298.339796,
                    "p50": 327.882496,
                    "p95": 355.763221,
                    "p99": 355.763221,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 262.53028,
                    "min": 222.06267,
                    "p50": 226.33173499999998,
                    "p95": 262.53028,
                    "p99": 262.53028,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 110.00246,
                    "min": 63.625755,
                    "p50": 71.556634,
                    "p95": 110.00246,
                    "p99": 110.00246,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1196.8726769999998,
                    "min": 1159.644477,
                    "p50": 1184.3597989999998,
                    "p95": 1196.8726769999998,
                    "p99": 1196.8726769999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 293.298523,
                    "min": 248.687737,
                    "p50": 260.19998799999996,
                    "p95": 293.298523,
                    "p99": 293.298523,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 394.064435,
                    "min": 363.22783599999997,
                    "p50": 376.009656,
                    "p95": 394.064435,
                    "p99": 394.064435,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.061321,
                    "min": 139.777831,
                    "p50": 150.671766,
                    "p95": 179.061321,
                    "p99": 179.061321,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 509.11323,
                    "min": 485.20340899999997,
                    "p50": 493.443651,
                    "p95": 509.11323,
                    "p99": 509.11323,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.35396899999999,
                    "min": 86.880703,
                    "p50": 91.333575,
                    "p95": 102.35396899999999,
                    "p99": 102.35396899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 138.704836,
                    "min": 109.332443,
                    "p50": 112.040077,
                    "p95": 138.704836,
                    "p99": 138.704836,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 90.49389699999999,
                    "min": 53.326839,
                    "p50": 55.786350999999996,
                    "p95": 90.49389699999999,
                    "p99": 90.49389699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.22770599999998,
                    "min": 121.101551,
                    "p50": 124.44745999999999,
                    "p95": 167.22770599999998,
                    "p99": 167.22770599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 133.402236,
                    "min": 98.190197,
                    "p50": 100.058619,
                    "p95": 133.402236,
                    "p99": 133.402236,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 176.763638,
                    "min": 143.170347,
                    "p50": 152.17614899999998,
                    "p95": 176.763638,
                    "p99": 176.763638,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 196.832722,
                    "min": 167.65372299999999,
                    "p50": 176.439204,
                    "p95": 196.832722,
                    "p99": 196.832722,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 178.104624,
                    "min": 155.223371,
                    "p50": 164.14626099999998,
                    "p95": 178.104624,
                    "p99": 178.104624,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 617.52877,
                    "min": 598.00398,
                    "p50": 608.368472,
                    "p95": 617.52877,
                    "p99": 617.52877,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.456454,
                    "min": 77.36149,
                    "p50": 98.904995,
                    "p95": 105.456454,
                    "p99": 105.456454,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 208.309427,
                    "min": 181.53671,
                    "p50": 199.96355599999998,
                    "p95": 208.309427,
                    "p99": 208.309427,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 212.428206,
                    "min": 190.324078,
                    "p50": 199.091726,
                    "p95": 212.428206,
                    "p99": 212.428206,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 406.44487999999996,
                    "min": 384.086578,
                    "p50": 392.62909199999996,
                    "p95": 406.44487999999996,
                    "p99": 406.44487999999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 115.853708,
                    "min": 89.768182,
                    "p50": 102.26067599999999,
                    "p95": 115.853708,
                    "p99": 115.853708,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 536.809276,
                    "min": 499.057815,
                    "p50": 514.508273,
                    "p95": 536.809276,
                    "p99": 536.809276,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 276.31536,
                    "min": 260.210762,
                    "p50": 269.09448399999997,
                    "p95": 276.31536,
                    "p99": 276.31536,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 208.25656999999998,
                    "min": 186.21847699999998,
                    "p50": 195.08914099999998,
                    "p95": 208.25656999999998,
                    "p99": 208.25656999999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 214.259819,
                    "min": 201.79072299999999,
                    "p50": 208.47329599999998,
                    "p95": 214.259819,
                    "p99": 214.259819,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 187.220494,
                    "min": 174.987551,
                    "p50": 180.72721199999998,
                    "p95": 187.220494,
                    "p99": 187.220494,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 260.639141,
                    "min": 229.514785,
                    "p50": 238.243436,
                    "p95": 260.639141,
                    "p99": 260.639141,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.117131,
                    "min": 54.091927,
                    "p50": 54.445338,
                    "p95": 77.117131,
                    "p99": 77.117131,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1257.9309429999998,
                    "min": 1218.588683,
                    "p50": 1228.032043,
                    "p95": 1257.9309429999998,
                    "p99": 1257.9309429999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 79.250444,
                    "min": 66.724041,
                    "p50": 69.154124,
                    "p95": 79.250444,
                    "p99": 79.250444,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 105.65606,
                    "min": 78.567872,
                    "p50": 83.873881,
                    "p95": 105.65606,
                    "p99": 105.65606,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 138.826559,
                    "min": 113.705019,
                    "p50": 119.050626,
                    "p95": 138.826559,
                    "p99": 138.826559,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 209.553596,
                    "min": 164.970905,
                    "p50": 166.907513,
                    "p95": 209.553596,
                    "p99": 209.553596,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 149.830538,
                    "min": 126.624994,
                    "p50": 135.955803,
                    "p95": 149.830538,
                    "p99": 149.830538,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.82316,
                    "min": 153.304918,
                    "p50": 162.23043199999998,
                    "p95": 171.82316,
                    "p99": 171.82316,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 141.185553,
                    "min": 103.724533,
                    "p50": 105.64268,
                    "p95": 141.185553,
                    "p99": 141.185553,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 152.970697,
                    "min": 139.558844,
                    "p50": 144.90426,
                    "p95": 152.970697,
                    "p99": 152.970697,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 681.403074,
                    "min": 617.497762,
                    "p50": 645.915437,
                    "p95": 681.403074,
                    "p99": 681.403074,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 205.962135,
                    "min": 173.91992199999999,
                    "p50": 190.118577,
                    "p95": 205.962135,
                    "p99": 205.962135,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1243.550661,
                    "min": 1216.54033,
                    "p50": 1225.6790879999999,
                    "p95": 1243.550661,
                    "p99": 1243.550661,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.951638,
                    "min": 188.957327,
                    "p50": 202.433549,
                    "p95": 234.951638,
                    "p99": 234.951638,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 164.474463,
                    "min": 133.71191299999998,
                    "p50": 137.859626,
                    "p95": 164.474463,
                    "p99": 164.474463,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 267.293248,
                    "min": 236.038379,
                    "p50": 243.82587099999998,
                    "p95": 267.293248,
                    "p99": 267.293248,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 289.736058,
                    "min": 264.641566,
                    "p50": 282.842634,
                    "p95": 289.736058,
                    "p99": 289.736058,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.10631599999999,
                    "min": 78.103355,
                    "p50": 81.268683,
                    "p95": 97.10631599999999,
                    "p99": 97.10631599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 158.66220199999998,
                    "min": 137.95091299999999,
                    "p50": 146.01193899999998,
                    "p95": 158.66220199999998,
                    "p99": 158.66220199999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.47852799999998,
                    "min": 102.093513,
                    "p50": 129.681565,
                    "p95": 138.47852799999998,
                    "p99": 138.47852799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 235.72859599999998,
                    "min": 202.276389,
                    "p50": 211.087963,
                    "p95": 235.72859599999998,
                    "p99": 235.72859599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.48920099999998,
                    "min": 162.283153,
                    "p50": 166.32786,
                    "p95": 183.48920099999998,
                    "p99": 183.48920099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 542.879819,
                    "min": 496.348666,
                    "p50": 506.646489,
                    "p95": 542.879819,
                    "p99": 542.879819,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 400.709552,
                    "min": 377.598489,
                    "p50": 386.614626,
                    "p95": 400.709552,
                    "p99": 400.709552,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 160.546505,
                    "min": 150.715518,
                    "p50": 155.714002,
                    "p95": 160.546505,
                    "p99": 160.546505,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.288394,
                    "min": 53.233380999999994,
                    "p50": 54.778388,
                    "p95": 57.288394,
                    "p99": 57.288394,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 150.322753,
                    "min": 114.512457,
                    "p50": 117.83231099999999,
                    "p95": 150.322753,
                    "p99": 150.322753,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 103.746347,
                    "min": 65.558491,
                    "p50": 67.904371,
                    "p95": 103.746347,
                    "p99": 103.746347,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 105.853574,
                    "min": 88.599875,
                    "p50": 92.51510499999999,
                    "p95": 105.853574,
                    "p99": 105.853574,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 659.755053,
                    "min": 617.663969,
                    "p50": 637.6038249999999,
                    "p95": 659.755053,
                    "p99": 659.755053,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 197.280292,
                    "min": 160.077532,
                    "p50": 174.35827,
                    "p95": 197.280292,
                    "p99": 197.280292,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 138.781265,
                    "min": 103.507711,
                    "p50": 106.329205,
                    "p95": 138.781265,
                    "p99": 138.781265,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.289993,
                    "min": 66.18599999999999,
                    "p50": 73.130254,
                    "p95": 78.289993,
                    "p99": 78.289993,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.57708599999998,
                    "min": 115.03218199999999,
                    "p50": 130.64421199999998,
                    "p95": 148.57708599999998,
                    "p99": 148.57708599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 300.27064,
                    "min": 264.779278,
                    "p50": 283.363931,
                    "p95": 300.27064,
                    "p99": 300.27064,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.945375,
                    "min": 54.506003,
                    "p50": 55.598606,
                    "p95": 57.945375,
                    "p99": 57.945375,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1279.660265,
                    "min": 1245.120075,
                    "p50": 1257.334542,
                    "p95": 1279.660265,
                    "p99": 1279.660265,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.282296,
                    "min": 235.50052399999998,
                    "p50": 243.83334699999997,
                    "p95": 266.282296,
                    "p99": 266.282296,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.625445,
                    "min": 78.373007,
                    "p50": 93.036658,
                    "p95": 110.625445,
                    "p99": 110.625445,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 180.880676,
                    "min": 139.37865399999998,
                    "p50": 148.25117699999998,
                    "p95": 180.880676,
                    "p99": 180.880676,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 208.42119599999998,
                    "min": 189.47354299999998,
                    "p50": 192.13980899999999,
                    "p95": 208.42119599999998,
                    "p99": 208.42119599999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.336175,
                    "min": 90.372123,
                    "p50": 96.030354,
                    "p95": 102.336175,
                    "p99": 102.336175,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 197.649646,
                    "min": 168.20561999999998,
                    "p50": 184.453329,
                    "p95": 197.649646,
                    "p99": 197.649646,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 688.5397929999999,
                    "min": 631.348761,
                    "p50": 646.0572119999999,
                    "p95": 688.5397929999999,
                    "p99": 688.5397929999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 407.369191,
                    "min": 384.23811,
                    "p50": 399.79945,
                    "p95": 407.369191,
                    "p99": 407.369191,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 201.490464,
                    "min": 177.260661,
                    "p50": 187.75593899999998,
                    "p95": 201.490464,
                    "p99": 201.490464,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 181.078383,
                    "min": 129.842882,
                    "p50": 144.184778,
                    "p95": 181.078383,
                    "p99": 181.078383,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 218.463011,
                    "min": 205.24192299999999,
                    "p50": 213.75431,
                    "p95": 218.463011,
                    "p99": 218.463011,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 542.63584,
                    "min": 514.351558,
                    "p50": 532.576785,
                    "p95": 542.63584,
                    "p99": 542.63584,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 137.023498,
                    "min": 105.304592,
                    "p50": 122.134726,
                    "p95": 137.023498,
                    "p99": 137.023498,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 206.85245999999998,
                    "min": 182.30313999999998,
                    "p50": 190.899857,
                    "p95": 206.85245999999998,
                    "p99": 206.85245999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 176.366536,
                    "min": 157.59718999999998,
                    "p50": 163.25878899999998,
                    "p95": 176.366536,
                    "p99": 176.366536,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 134.213199,
                    "min": 93.788742,
                    "p50": 96.38114499999999,
                    "p95": 134.213199,
                    "p99": 134.213199,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 317.818108,
                    "min": 272.655126,
                    "p50": 283.257495,
                    "p95": 317.818108,
                    "p99": 317.818108,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 76.552922,
                    "min": 69.83870399999999,
                    "p50": 71.902514,
                    "p95": 76.552922,
                    "p99": 76.552922,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.792669,
                    "min": 121.791502,
                    "p50": 129.169525,
                    "p95": 151.792669,
                    "p99": 151.792669,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.592551,
                    "min": 145.623804,
                    "p50": 168.883915,
                    "p95": 179.592551,
                    "p99": 179.592551,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 235.703878,
                    "min": 211.847582,
                    "p50": 220.21805799999998,
                    "p95": 235.703878,
                    "p99": 235.703878,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 431.944195,
                    "min": 398.97566,
                    "p50": 409.50654099999997,
                    "p95": 431.944195,
                    "p99": 431.944195,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 197.115321,
                    "min": 174.33212999999998,
                    "p50": 181.086377,
                    "p95": 197.115321,
                    "p99": 197.115321,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 155.522827,
                    "min": 133.42172499999998,
                    "p50": 140.761213,
                    "p95": 155.522827,
                    "p99": 155.522827,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.75779299999999,
                    "min": 81.054058,
                    "p50": 82.694552,
                    "p95": 94.75779299999999,
                    "p99": 94.75779299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 237.27973699999998,
                    "min": 195.63653599999998,
                    "p50": 207.06264299999998,
                    "p95": 237.27973699999998,
                    "p99": 237.27973699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 268.69588899999997,
                    "min": 240.07736799999998,
                    "p50": 262.154095,
                    "p95": 268.69588899999997,
                    "p99": 268.69588899999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 554.275978,
                    "min": 533.726402,
                    "p50": 539.477551,
                    "p95": 554.275978,
                    "p99": 554.275978,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 683.2924009999999,
                    "min": 659.4197819999999,
                    "p50": 668.4301459999999,
                    "p95": 683.2924009999999,
                    "p99": 683.2924009999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1325.8742009999999,
                    "min": 1284.71613,
                    "p50": 1306.7134999999998,
                    "p95": 1325.8742009999999,
                    "p99": 1325.8742009999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 90.419882,
                    "min": 56.579389,
                    "p50": 58.258485,
                    "p95": 90.419882,
                    "p99": 90.419882,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 658.5944119999999,
                    "min": 625.546062,
                    "p50": 647.7997889999999,
                    "p95": 658.5944119999999,
                    "p99": 658.5944119999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 197.01002699999998,
                    "min": 183.220877,
                    "p50": 187.346569,
                    "p95": 197.01002699999998,
                    "p99": 197.01002699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.35145799999998,
                    "min": 141.805524,
                    "p50": 151.965756,
                    "p95": 166.35145799999998,
                    "p99": 166.35145799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.188493,
                    "min": 203.57588199999998,
                    "p50": 208.39559699999998,
                    "p95": 237.188493,
                    "p99": 237.188493,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.301023,
                    "min": 104.925034,
                    "p50": 112.60551199999999,
                    "p95": 140.301023,
                    "p99": 140.301023,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 121.045183,
                    "min": 78.740422,
                    "p50": 80.763206,
                    "p95": 121.045183,
                    "p99": 121.045183,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 90.748103,
                    "min": 53.989031,
                    "p50": 55.146477999999995,
                    "p95": 90.748103,
                    "p99": 90.748103,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 178.49800199999999,
                    "min": 153.04027499999998,
                    "p50": 163.037813,
                    "p95": 178.49800199999999,
                    "p99": 178.49800199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 265.568991,
                    "min": 233.082111,
                    "p50": 243.754648,
                    "p95": 265.568991,
                    "p99": 265.568991,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.480003,
                    "min": 91.421002,
                    "p50": 97.622091,
                    "p95": 119.480003,
                    "p99": 119.480003,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.429737,
                    "min": 114.8763,
                    "p50": 135.326203,
                    "p95": 154.429737,
                    "p99": 154.429737,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 219.162812,
                    "min": 189.066962,
                    "p50": 200.04547,
                    "p95": 219.162812,
                    "p99": 219.162812,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 553.324387,
                    "min": 505.58611299999995,
                    "p50": 512.838116,
                    "p95": 553.324387,
                    "p99": 553.324387,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.02930899999998,
                    "min": 127.834913,
                    "p50": 136.38242599999998,
                    "p95": 170.02930899999998,
                    "p99": 170.02930899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 309.338884,
                    "min": 262.04031599999996,
                    "p50": 274.808298,
                    "p95": 309.338884,
                    "p99": 309.338884,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 182.170536,
                    "min": 163.227497,
                    "p50": 169.813247,
                    "p95": 182.170536,
                    "p99": 182.170536,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 90.020164,
                    "min": 67.394492,
                    "p50": 72.674656,
                    "p95": 90.020164,
                    "p99": 90.020164,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 423.006874,
                    "min": 380.375572,
                    "p50": 393.613184,
                    "p95": 423.006874,
                    "p99": 423.006874,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 216.038253,
                    "min": 202.443838,
                    "p50": 211.52746299999998,
                    "p95": 216.038253,
                    "p99": 216.038253,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 195.45493399999998,
                    "min": 166.092739,
                    "p50": 180.122562,
                    "p95": 195.45493399999998,
                    "p99": 195.45493399999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 296.189642,
                    "min": 251.23402299999998,
                    "p50": 257.932889,
                    "p95": 296.189642,
                    "p99": 296.189642,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1035.233682,
                    "min": 954.6194969999999,
                    "p50": 995.716227,
                    "p95": 1035.233682,
                    "p99": 1035.233682,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 686.454467,
                    "min": 618.913004,
                    "p50": 643.135778,
                    "p95": 686.454467,
                    "p99": 686.454467,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 777.27036,
                    "min": 716.803129,
                    "p50": 741.478422,
                    "p95": 777.27036,
                    "p99": 777.27036,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 873.109372,
                    "min": 818.0418639999999,
                    "p50": 846.596854,
                    "p95": 873.109372,
                    "p99": 873.109372,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 471.40732599999996,
                    "min": 422.416986,
                    "p50": 447.422084,
                    "p95": 471.40732599999996,
                    "p99": 471.40732599999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 333.649699,
                    "min": 298.58251,
                    "p50": 306.615561,
                    "p95": 333.649699,
                    "p99": 333.649699,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 435.103102,
                    "min": 381.366624,
                    "p50": 399.599219,
                    "p95": 435.103102,
                    "p99": 435.103102,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 373.82118399999996,
                    "min": 343.55780599999997,
                    "p50": 351.473745,
                    "p95": 373.82118399999996,
                    "p99": 373.82118399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 512.829153,
                    "min": 485.46668999999997,
                    "p50": 498.665076,
                    "p95": 512.829153,
                    "p99": 512.829153,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 561.7081489999999,
                    "min": 517.332549,
                    "p50": 544.741824,
                    "p95": 561.7081489999999,
                    "p99": 561.7081489999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 704.99865,
                    "min": 670.207934,
                    "p50": 684.342411,
                    "p95": 704.99865,
                    "p99": 704.99865,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 612.18828,
                    "min": 573.46384,
                    "p50": 591.65861,
                    "p95": 612.18828,
                    "p99": 612.18828,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 580.346017,
                    "min": 529.763441,
                    "p50": 552.63257,
                    "p95": 580.346017,
                    "p99": 580.346017,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 668.366716,
                    "min": 625.250556,
                    "p50": 641.433132,
                    "p95": 668.366716,
                    "p99": 668.366716,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 698.0709499999999,
                    "min": 661.284424,
                    "p50": 674.089025,
                    "p95": 698.0709499999999,
                    "p99": 698.0709499999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 246.316738,
                    "min": 196.10057999999998,
                    "p50": 210.046694,
                    "p95": 246.316738,
                    "p99": 246.316738,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 268.460403,
                    "min": 251.861418,
                    "p50": 255.59276899999998,
                    "p95": 268.460403,
                    "p99": 268.460403,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 373.587973,
                    "min": 337.460558,
                    "p50": 352.95047,
                    "p95": 373.587973,
                    "p99": 373.587973,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 338.406144,
                    "min": 288.298723,
                    "p50": 306.92893,
                    "p95": 338.406144,
                    "p99": 338.406144,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 535.840153,
                    "min": 485.386334,
                    "p50": 514.851844,
                    "p95": 535.840153,
                    "p99": 535.840153,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.768354,
                    "min": 155.069184,
                    "p50": 162.94177299999998,
                    "p95": 184.768354,
                    "p99": 184.768354,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.236155,
                    "min": 389.28103699999997,
                    "p50": 406.322091,
                    "p95": 415.236155,
                    "p99": 415.236155,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 896.758571,
                    "min": 833.7138749999999,
                    "p50": 858.931711,
                    "p95": 896.758571,
                    "p99": 896.758571,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1000.7252289999999,
                    "min": 966.481673,
                    "p50": 981.78194,
                    "p95": 1000.7252289999999,
                    "p99": 1000.7252289999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 750.3727799999999,
                    "min": 713.207307,
                    "p50": 745.289399,
                    "p95": 750.3727799999999,
                    "p99": 750.3727799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 471.13541,
                    "min": 424.232288,
                    "p50": 446.794493,
                    "p95": 471.13541,
                    "p99": 471.13541,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 626.932096,
                    "min": 573.183585,
                    "p50": 590.330865,
                    "p95": 626.932096,
                    "p99": 626.932096,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 691.329541,
                    "min": 664.47926,
                    "p50": 682.495414,
                    "p95": 691.329541,
                    "p99": 691.329541,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 634.646248,
                    "min": 587.928529,
                    "p50": 614.22105,
                    "p95": 634.646248,
                    "p99": 634.646248,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 727.139053,
                    "min": 691.777654,
                    "p50": 716.470748,
                    "p95": 727.139053,
                    "p99": 727.139053,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 836.8830859999999,
                    "min": 807.7534469999999,
                    "p50": 827.845411,
                    "p95": 836.8830859999999,
                    "p99": 836.8830859999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 591.3032949999999,
                    "min": 552.737633,
                    "p50": 586.1963549999999,
                    "p95": 591.3032949999999,
                    "p99": 591.3032949999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 572.008681,
                    "min": 524.4872419999999,
                    "p50": 547.772258,
                    "p95": 572.008681,
                    "p99": 572.008681,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 183.050221,
                    "min": 151.861662,
                    "p50": 163.78441899999999,
                    "p95": 183.050221,
                    "p99": 183.050221,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 989.241058,
                    "min": 925.034674,
                    "p50": 948.007263,
                    "p95": 989.241058,
                    "p99": 989.241058,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 503.04551699999996,
                    "min": 476.943311,
                    "p50": 479.455355,
                    "p95": 503.04551699999996,
                    "p99": 503.04551699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 467.962836,
                    "min": 414.30523,
                    "p50": 443.955605,
                    "p95": 467.962836,
                    "p99": 467.962836,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 304.671927,
                    "min": 290.82765,
                    "p50": 297.92263099999997,
                    "p95": 304.671927,
                    "p99": 304.671927,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.10324399999996,
                    "min": 375.674983,
                    "p50": 407.157288,
                    "p95": 415.10324399999996,
                    "p99": 415.10324399999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 378.186734,
                    "min": 342.586574,
                    "p50": 356.075759,
                    "p95": 378.186734,
                    "p99": 378.186734,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.805205,
                    "min": 198.468294,
                    "p50": 208.48172699999998,
                    "p95": 243.805205,
                    "p99": 243.805205,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 289.301059,
                    "min": 244.32149199999998,
                    "p50": 267.161242,
                    "p95": 289.301059,
                    "p99": 289.301059,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 692.886032,
                    "min": 647.641364,
                    "p50": 664.644545,
                    "p95": 692.886032,
                    "p99": 692.886032,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 744.7317029999999,
                    "min": 695.8347319999999,
                    "p50": 716.080827,
                    "p95": 744.7317029999999,
                    "p99": 744.7317029999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 579.427364,
                    "min": 545.719248,
                    "p50": 572.9727419999999,
                    "p95": 579.427364,
                    "p99": 579.427364,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 854.019896,
                    "min": 803.274316,
                    "p50": 821.3966919999999,
                    "p95": 854.019896,
                    "p99": 854.019896,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 248.664816,
                    "min": 197.633838,
                    "p50": 202.499634,
                    "p95": 248.664816,
                    "p99": 248.664816,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 562.2824459999999,
                    "min": 520.6676279999999,
                    "p50": 535.153179,
                    "p95": 562.2824459999999,
                    "p99": 562.2824459999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1000.9301549999999,
                    "min": 925.142163,
                    "p50": 968.144995,
                    "p95": 1000.9301549999999,
                    "p99": 1000.9301549999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 300.772632,
                    "min": 279.069288,
                    "p50": 289.216127,
                    "p95": 300.772632,
                    "p99": 300.772632,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 419.39849999999996,
                    "min": 387.47560899999996,
                    "p50": 401.408555,
                    "p95": 419.39849999999996,
                    "p99": 419.39849999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 361.881457,
                    "min": 329.991199,
                    "p50": 340.438335,
                    "p95": 361.881457,
                    "p99": 361.881457,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 286.96560999999997,
                    "min": 238.319112,
                    "p50": 265.818859,
                    "p95": 286.96560999999997,
                    "p99": 286.96560999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 438.813495,
                    "min": 413.57703999999995,
                    "p50": 432.65754699999997,
                    "p95": 438.813495,
                    "p99": 438.813495,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 508.47677,
                    "min": 466.20075599999996,
                    "p50": 499.916582,
                    "p95": 508.47677,
                    "p99": 508.47677,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 196.548003,
                    "min": 151.943875,
                    "p50": 162.13652199999999,
                    "p95": 196.548003,
                    "p99": 196.548003,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 661.6662779999999,
                    "min": 611.676508,
                    "p50": 634.2199479999999,
                    "p95": 661.6662779999999,
                    "p99": 661.6662779999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1726.413617,
                    "min": 1693.427583,
                    "p50": 1705.4462649999998,
                    "p95": 1726.413617,
                    "p99": 1726.413617,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1046.900085,
                    "min": 1021.745698,
                    "p50": 1036.2861229999999,
                    "p95": 1046.900085,
                    "p99": 1046.900085,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1284.311,
                    "min": 1240.9108939999999,
                    "p50": 1265.407464,
                    "p95": 1284.311,
                    "p99": 1284.311,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 850.4284779999999,
                    "min": 801.697953,
                    "p50": 814.931474,
                    "p95": 850.4284779999999,
                    "p99": 850.4284779999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 735.3346849999999,
                    "min": 686.66112,
                    "p50": 702.0253759999999,
                    "p95": 735.3346849999999,
                    "p99": 735.3346849999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1162.59301,
                    "min": 1127.708706,
                    "p50": 1144.957909,
                    "p95": 1162.59301,
                    "p99": 1162.59301,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 385.908747,
                    "min": 357.592566,
                    "p50": 366.896048,
                    "p95": 385.908747,
                    "p99": 385.908747,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 475.856243,
                    "min": 463.421817,
                    "p50": 468.66484299999996,
                    "p95": 475.856243,
                    "p99": 475.856243,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 935.3758019999999,
                    "min": 907.4047469999999,
                    "p50": 915.4638249999999,
                    "p95": 935.3758019999999,
                    "p99": 935.3758019999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 605.897713,
                    "min": 579.518676,
                    "p50": 588.4036709999999,
                    "p95": 605.897713,
                    "p99": 605.897713,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2305.2644459999997,
                    "min": 2248.309676,
                    "p50": 2263.972648,
                    "p95": 2305.2644459999997,
                    "p99": 2305.2644459999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1387.515428,
                    "min": 1346.447964,
                    "p50": 1367.476173,
                    "p95": 1387.515428,
                    "p99": 1387.515428,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2049.09688,
                    "min": 1971.2656419999998,
                    "p50": 1998.955037,
                    "p95": 2049.09688,
                    "p99": 2049.09688,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1622.272992,
                    "min": 1579.715389,
                    "p50": 1599.108843,
                    "p95": 1622.272992,
                    "p99": 1622.272992,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1508.5974569999998,
                    "min": 1456.06929,
                    "p50": 1484.657015,
                    "p95": 1508.5974569999998,
                    "p99": 1508.5974569999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3431.439147,
                    "min": 3336.585896,
                    "p50": 3387.209507,
                    "p95": 3431.439147,
                    "p99": 3431.439147,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1861.244544,
                    "min": 1812.230889,
                    "p50": 1828.794907,
                    "p95": 1861.244544,
                    "p99": 1861.244544,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1372.814721,
                    "min": 1335.4614319999998,
                    "p50": 1355.510638,
                    "p95": 1372.814721,
                    "p99": 1372.814721,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1624.141032,
                    "min": 1578.019998,
                    "p50": 1608.653327,
                    "p95": 1624.141032,
                    "p99": 1624.141032,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2481.441628,
                    "min": 2408.3096,
                    "p50": 2443.101767,
                    "p95": 2481.441628,
                    "p99": 2481.441628,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2163.306914,
                    "min": 2101.3661629999997,
                    "p50": 2134.397261,
                    "p95": 2163.306914,
                    "p99": 2163.306914,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1476.818313,
                    "min": 1459.845466,
                    "p50": 1472.404805,
                    "p95": 1476.818313,
                    "p99": 1476.818313,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 395.30519699999996,
                    "min": 382.23934399999996,
                    "p50": 393.479268,
                    "p95": 395.30519699999996,
                    "p99": 395.30519699999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 530.105461,
                    "min": 505.586639,
                    "p50": 510.45751099999995,
                    "p95": 530.105461,
                    "p99": 530.105461,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1255.084046,
                    "min": 1212.485199,
                    "p50": 1232.664252,
                    "p95": 1255.084046,
                    "p99": 1255.084046,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 762.7798829999999,
                    "min": 737.3950629999999,
                    "p50": 753.581475,
                    "p95": 762.7798829999999,
                    "p99": 762.7798829999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1118.504357,
                    "min": 1094.9378709999999,
                    "p50": 1109.3666799999999,
                    "p95": 1118.504357,
                    "p99": 1118.504357,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 653.474562,
                    "min": 617.7999639999999,
                    "p50": 635.209154,
                    "p95": 653.474562,
                    "p99": 653.474562,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1789.991388,
                    "min": 1710.562191,
                    "p50": 1718.6081239999999,
                    "p95": 1789.991388,
                    "p99": 1789.991388,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1069.611341,
                    "min": 987.1659669999999,
                    "p50": 999.434368,
                    "p95": 1069.611341,
                    "p99": 1069.611341,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 895.704588,
                    "min": 860.5265029999999,
                    "p50": 874.999337,
                    "p95": 895.704588,
                    "p99": 895.704588,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1356.904081,
                    "min": 1305.079898,
                    "p50": 1331.998441,
                    "p95": 1356.904081,
                    "p99": 1356.904081,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 563.9689529999999,
                    "min": 536.231082,
                    "p50": 555.24177,
                    "p95": 563.9689529999999,
                    "p99": 563.9689529999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1087.147164,
                    "min": 1059.072318,
                    "p50": 1075.5979109999998,
                    "p95": 1087.147164,
                    "p99": 1087.147164,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 965.33272,
                    "min": 932.515225,
                    "p50": 956.477281,
                    "p95": 965.33272,
                    "p99": 965.33272,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 829.7644789999999,
                    "min": 801.214883,
                    "p50": 812.624141,
                    "p95": 829.7644789999999,
                    "p99": 829.7644789999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2007.865333,
                    "min": 1964.146337,
                    "p50": 1997.285342,
                    "p95": 2007.865333,
                    "p99": 2007.865333,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1744.642183,
                    "min": 1699.726058,
                    "p50": 1727.890815,
                    "p95": 1744.642183,
                    "p99": 1744.642183,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2683.413612,
                    "min": 2607.488504,
                    "p50": 2635.428105,
                    "p95": 2683.413612,
                    "p99": 2683.413612,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3972.701083,
                    "min": 3893.419587,
                    "p50": 3921.218218,
                    "p95": 3972.701083,
                    "p99": 3972.701083,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1604.554101,
                    "min": 1566.973831,
                    "p50": 1592.3293239999998,
                    "p95": 1604.554101,
                    "p99": 1604.554101,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 688.8682689999999,
                    "min": 666.578641,
                    "p50": 675.6540719999999,
                    "p95": 688.8682689999999,
                    "p99": 688.8682689999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1487.560912,
                    "min": 1434.906781,
                    "p50": 1453.112954,
                    "p95": 1487.560912,
                    "p99": 1487.560912,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 449.64257699999996,
                    "min": 407.04146099999997,
                    "p50": 418.89917299999996,
                    "p95": 449.64257699999996,
                    "p99": 449.64257699999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1904.0038479999998,
                    "min": 1841.514336,
                    "p50": 1858.0108989999999,
                    "p95": 1904.0038479999998,
                    "p99": 1904.0038479999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2361.7781379999997,
                    "min": 2281.3303029999997,
                    "p50": 2303.332102,
                    "p95": 2361.7781379999997,
                    "p99": 2361.7781379999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1212.518851,
                    "min": 1186.792209,
                    "p50": 1205.748241,
                    "p95": 1212.518851,
                    "p99": 1212.518851,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3360.106514,
                    "min": 3328.928574,
                    "p50": 3347.3181769999997,
                    "p95": 3360.106514,
                    "p99": 3360.106514,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 805.071148,
                    "min": 764.585619,
                    "p50": 789.8078429999999,
                    "p95": 805.071148,
                    "p99": 805.071148,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 553.557251,
                    "min": 515.4860649999999,
                    "p50": 529.916976,
                    "p95": 553.557251,
                    "p99": 553.557251,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1055.330187,
                    "min": 1010.579444,
                    "p50": 1033.151195,
                    "p95": 1055.330187,
                    "p99": 1055.330187,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 375.330532,
                    "min": 351.596051,
                    "p50": 360.174876,
                    "p95": 375.330532,
                    "p99": 375.330532,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1830.323805,
                    "min": 1677.559168,
                    "p50": 1709.630966,
                    "p95": 1830.323805,
                    "p99": 1830.323805,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1288.709865,
                    "min": 1261.035606,
                    "p50": 1282.9652939999999,
                    "p95": 1288.709865,
                    "p99": 1288.709865,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1203.493939,
                    "min": 1177.334688,
                    "p50": 1190.955847,
                    "p95": 1203.493939,
                    "p99": 1203.493939,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 308.47412499999996,
                    "min": 266.622633,
                    "p50": 286.824656,
                    "p95": 308.47412499999996,
                    "p99": 308.47412499999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 458.65838099999996,
                    "min": 431.901475,
                    "p50": 446.922555,
                    "p95": 458.65838099999996,
                    "p99": 458.65838099999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1515.2334509999998,
                    "min": 1468.486144,
                    "p50": 1482.992094,
                    "p95": 1515.2334509999998,
                    "p99": 1515.2334509999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 697.480867,
                    "min": 682.348396,
                    "p50": 694.775841,
                    "p95": 697.480867,
                    "p99": 697.480867,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 951.580921,
                    "min": 926.36615,
                    "p50": 942.5381329999999,
                    "p95": 951.580921,
                    "p99": 951.580921,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 631.313482,
                    "min": 599.576027,
                    "p50": 618.709429,
                    "p95": 631.313482,
                    "p99": 631.313482,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1124.209823,
                    "min": 1105.493945,
                    "p50": 1110.918167,
                    "p95": 1124.209823,
                    "p99": 1124.209823,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2554.602505,
                    "min": 2502.041843,
                    "p50": 2533.08749,
                    "p95": 2554.602505,
                    "p99": 2554.602505,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 4217.513769,
                    "min": 4169.150403,
                    "p50": 4208.6205,
                    "p95": 4217.513769,
                    "p99": 4217.513769,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 876.263459,
                    "min": 854.821861,
                    "p50": 864.285127,
                    "p95": 876.263459,
                    "p99": 876.263459,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 444.58655899999997,
                    "min": 411.74575999999996,
                    "p50": 419.072879,
                    "p95": 444.58655899999997,
                    "p99": 444.58655899999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1174.093658,
                    "min": 1129.0552619999999,
                    "p50": 1154.198484,
                    "p95": 1174.093658,
                    "p99": 1174.093658,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1741.074917,
                    "min": 1680.575279,
                    "p50": 1712.5315839999998,
                    "p95": 1741.074917,
                    "p99": 1741.074917,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3422.2848089999998,
                    "min": 2787.376232,
                    "p50": 2827.4843229999997,
                    "p95": 3422.2848089999998,
                    "p99": 3422.2848089999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2312.644352,
                    "min": 2260.4332059999997,
                    "p50": 2275.000078,
                    "p95": 2312.644352,
                    "p99": 2312.644352,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 494.360978,
                    "min": 468.079053,
                    "p50": 474.05460899999997,
                    "p95": 494.360978,
                    "p99": 494.360978,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1041.170069,
                    "min": 993.838273,
                    "p50": 1009.0486139999999,
                    "p95": 1041.170069,
                    "p99": 1041.170069,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 375.680654,
                    "min": 353.004211,
                    "p50": 359.243413,
                    "p95": 375.680654,
                    "p99": 375.680654,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 846.3566519999999,
                    "min": 802.4860639999999,
                    "p50": 811.366416,
                    "p95": 846.3566519999999,
                    "p99": 846.3566519999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 912.257568,
                    "min": 848.648659,
                    "p50": 867.690155,
                    "p95": 912.257568,
                    "p99": 912.257568,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 277.444592,
                    "min": 240.237407,
                    "p50": 249.677125,
                    "p95": 277.444592,
                    "p99": 277.444592,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 684.64126,
                    "min": 638.661331,
                    "p50": 641.624098,
                    "p95": 684.64126,
                    "p99": 684.64126,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 723.336955,
                    "min": 685.659303,
                    "p50": 700.713653,
                    "p95": 723.336955,
                    "p99": 723.336955,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 310.919329,
                    "min": 297.223653,
                    "p50": 306.857798,
                    "p95": 310.919329,
                    "p99": 310.919329,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 207.603085,
                    "min": 185.836971,
                    "p50": 192.561064,
                    "p95": 207.603085,
                    "p99": 207.603085,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 780.9824259999999,
                    "min": 745.867454,
                    "p50": 759.116803,
                    "p95": 780.9824259999999,
                    "p99": 780.9824259999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 727.71377,
                    "min": 575.239617,
                    "p50": 592.669991,
                    "p95": 727.71377,
                    "p99": 727.71377,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 571.4128929999999,
                    "min": 520.765946,
                    "p50": 532.052231,
                    "p95": 571.4128929999999,
                    "p99": 571.4128929999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 803.2912749999999,
                    "min": 751.446143,
                    "p50": 765.970006,
                    "p95": 803.2912749999999,
                    "p99": 803.2912749999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1205.35418,
                    "min": 1164.894174,
                    "p50": 1195.212994,
                    "p95": 1205.35418,
                    "p99": 1205.35418,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1032.946925,
                    "min": 1005.768061,
                    "p50": 1018.7901439999999,
                    "p95": 1032.946925,
                    "p99": 1032.946925,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 302.144561,
                    "min": 263.53992,
                    "p50": 285.535491,
                    "p95": 302.144561,
                    "p99": 302.144561,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1696.8706,
                    "min": 1662.316493,
                    "p50": 1674.13084,
                    "p95": 1696.8706,
                    "p99": 1696.8706,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 701.495987,
                    "min": 672.272525,
                    "p50": 689.17332,
                    "p95": 701.495987,
                    "p99": 701.495987,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 499.676759,
                    "min": 427.348841,
                    "p50": 450.738225,
                    "p95": 499.676759,
                    "p99": 499.676759,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 956.1795979999999,
                    "min": 921.831513,
                    "p50": 932.330823,
                    "p95": 956.1795979999999,
                    "p99": 956.1795979999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 532.951902,
                    "min": 512.930085,
                    "p50": 525.436561,
                    "p95": 532.951902,
                    "p99": 532.951902,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1482.708132,
                    "min": 1444.8654689999998,
                    "p50": 1469.3604189999999,
                    "p95": 1482.708132,
                    "p99": 1482.708132,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 385.729669,
                    "min": 346.260606,
                    "p50": 354.35643699999997,
                    "p95": 385.729669,
                    "p99": 385.729669,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1288.817985,
                    "min": 1244.158347,
                    "p50": 1261.8754179999999,
                    "p95": 1288.817985,
                    "p99": 1288.817985,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 647.055469,
                    "min": 592.903916,
                    "p50": 605.730922,
                    "p95": 647.055469,
                    "p99": 647.055469,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1115.6134,
                    "min": 1082.639479,
                    "p50": 1095.4253489999999,
                    "p95": 1115.6134,
                    "p99": 1115.6134,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 889.9800309999999,
                    "min": 843.4102429999999,
                    "p50": 852.847496,
                    "p95": 889.9800309999999,
                    "p99": 889.9800309999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 393.409828,
                    "min": 295.95489599999996,
                    "p50": 326.42545,
                    "p95": 393.409828,
                    "p99": 393.409828,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 901.1966639999999,
                    "min": 863.1226499999999,
                    "p50": 878.79185,
                    "p95": 901.1966639999999,
                    "p99": 901.1966639999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 568.0055659999999,
                    "min": 532.4136,
                    "p50": 542.0175899999999,
                    "p95": 568.0055659999999,
                    "p99": 568.0055659999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 791.996393,
                    "min": 747.263834,
                    "p50": 775.379547,
                    "p95": 791.996393,
                    "p99": 791.996393,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1173.14347,
                    "min": 1134.064784,
                    "p50": 1160.090127,
                    "p95": 1173.14347,
                    "p99": 1173.14347,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 692.901479,
                    "min": 643.567107,
                    "p50": 667.71929,
                    "p95": 692.901479,
                    "p99": 692.901479,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 852.140586,
                    "min": 818.9152879999999,
                    "p50": 843.233085,
                    "p95": 852.140586,
                    "p99": 852.140586,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1765.682085,
                    "min": 1723.202753,
                    "p50": 1735.3910019999998,
                    "p95": 1765.682085,
                    "p99": 1765.682085,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 473.86206,
                    "min": 411.17776899999996,
                    "p50": 427.018311,
                    "p95": 473.86206,
                    "p99": 473.86206,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 205.42002599999998,
                    "min": 192.684036,
                    "p50": 199.35424999999998,
                    "p95": 205.42002599999998,
                    "p99": 205.42002599999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 617.932974,
                    "min": 589.894282,
                    "p50": 597.571909,
                    "p95": 617.932974,
                    "p99": 617.932974,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 397.36724999999996,
                    "min": 357.79179,
                    "p50": 367.25975999999997,
                    "p95": 397.36724999999996,
                    "p99": 397.36724999999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.543519,
                    "min": 241.37417299999998,
                    "p50": 251.747535,
                    "p95": 267.543519,
                    "p99": 267.543519,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 505.45647399999996,
                    "min": 462.522693,
                    "p50": 492.220172,
                    "p95": 505.45647399999996,
                    "p99": 505.45647399999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1143.5501239999999,
                    "min": 1000.658554,
                    "p50": 1036.69698,
                    "p95": 1143.5501239999999,
                    "p99": 1143.5501239999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 766.503597,
                    "min": 694.157663,
                    "p50": 739.5161509999999,
                    "p95": 766.503597,
                    "p99": 766.503597,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 800.91922,
                    "min": 767.624911,
                    "p50": 773.221051,
                    "p95": 800.91922,
                    "p99": 800.91922,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 924.677324,
                    "min": 879.952368,
                    "p50": 892.515592,
                    "p95": 924.677324,
                    "p99": 924.677324,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 981.9785959999999,
                    "min": 948.457378,
                    "p50": 974.7007709999999,
                    "p95": 981.9785959999999,
                    "p99": 981.9785959999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 589.557254,
                    "min": 580.9538329999999,
                    "p50": 586.688895,
                    "p95": 589.557254,
                    "p99": 589.557254,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 416.011108,
                    "min": 396.77577399999996,
                    "p50": 404.63262199999997,
                    "p95": 416.011108,
                    "p99": 416.011108,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 556.4634179999999,
                    "min": 515.536991,
                    "p50": 528.472025,
                    "p95": 556.4634179999999,
                    "p99": 556.4634179999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 309.42343,
                    "min": 266.811383,
                    "p50": 285.01507399999997,
                    "p95": 309.42343,
                    "p99": 309.42343,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.34864799999997,
                    "min": 335.238887,
                    "p50": 340.89275,
                    "p95": 349.34864799999997,
                    "p99": 349.34864799999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 674.662949,
                    "min": 640.414044,
                    "p50": 647.960243,
                    "p95": 674.662949,
                    "p99": 674.662949,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.476494,
                    "min": 452.554176,
                    "p50": 462.51490099999995,
                    "p95": 477.476494,
                    "p99": 477.476494,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1282.472904,
                    "min": 1259.6764719999999,
                    "p50": 1275.129825,
                    "p95": 1282.472904,
                    "p99": 1282.472904,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 722.868084,
                    "min": 699.673131,
                    "p50": 709.399041,
                    "p95": 722.868084,
                    "p99": 722.868084,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1176.7897229999999,
                    "min": 1099.288417,
                    "p50": 1115.332521,
                    "p95": 1176.7897229999999,
                    "p99": 1176.7897229999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 237.413075,
                    "min": 208.412297,
                    "p50": 217.174255,
                    "p95": 237.413075,
                    "p99": 237.413075,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 860.976314,
                    "min": 830.717897,
                    "p50": 835.215754,
                    "p95": 860.976314,
                    "p99": 860.976314,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 714.083521,
                    "min": 694.304809,
                    "p50": 706.262695,
                    "p95": 714.083521,
                    "p99": 714.083521,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 389.268468,
                    "min": 352.184321,
                    "p50": 369.04384699999997,
                    "p95": 389.268468,
                    "p99": 389.268468,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 252.041539,
                    "min": 241.906171,
                    "p50": 250.10554399999998,
                    "p95": 252.041539,
                    "p99": 252.041539,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 236.97644699999998,
                    "min": 186.493527,
                    "p50": 197.073365,
                    "p95": 236.97644699999998,
                    "p99": 236.97644699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 923.45349,
                    "min": 746.6064369999999,
                    "p50": 761.793424,
                    "p95": 923.45349,
                    "p99": 923.45349,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 892.3260419999999,
                    "min": 854.5307879999999,
                    "p50": 876.575335,
                    "p95": 892.3260419999999,
                    "p99": 892.3260419999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 545.933365,
                    "min": 522.945486,
                    "p50": 536.372975,
                    "p95": 545.933365,
                    "p99": 545.933365,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1184.708798,
                    "min": 1142.7954989999998,
                    "p50": 1149.079395,
                    "p95": 1184.708798,
                    "p99": 1184.708798,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 602.620313,
                    "min": 581.386074,
                    "p50": 593.568824,
                    "p95": 602.620313,
                    "p99": 602.620313,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 446.73875,
                    "min": 410.61892,
                    "p50": 417.59959499999997,
                    "p95": 446.73875,
                    "p99": 446.73875,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1028.46911,
                    "min": 997.6640259999999,
                    "p50": 1011.7159919999999,
                    "p95": 1028.46911,
                    "p99": 1028.46911,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 833.3562029999999,
                    "min": 803.885913,
                    "p50": 822.4775139999999,
                    "p95": 833.3562029999999,
                    "p99": 833.3562029999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 326.58361099999996,
                    "min": 298.783396,
                    "p50": 310.497099,
                    "p95": 326.58361099999996,
                    "p99": 326.58361099999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 492.582516,
                    "min": 464.532158,
                    "p50": 471.084033,
                    "p95": 492.582516,
                    "p99": 492.582516,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1728.14203,
                    "min": 1690.736733,
                    "p50": 1709.710815,
                    "p95": 1728.14203,
                    "p99": 1728.14203,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 653.104669,
                    "min": 634.241239,
                    "p50": 645.532574,
                    "p95": 653.104669,
                    "p99": 653.104669,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2293.977392,
                    "min": 2231.330766,
                    "p50": 2262.446707,
                    "p95": 2293.977392,
                    "p99": 2293.977392,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1153.2526249999999,
                    "min": 1123.275981,
                    "p50": 1148.193757,
                    "p95": 1153.2526249999999,
                    "p99": 1153.2526249999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 612.5121889999999,
                    "min": 579.015014,
                    "p50": 586.816845,
                    "p95": 612.5121889999999,
                    "p99": 612.5121889999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2283.551528,
                    "min": 2243.0332,
                    "p50": 2276.443209,
                    "p95": 2283.551528,
                    "p99": 2283.551528,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1613.815198,
                    "min": 1589.4151809999998,
                    "p50": 1604.364955,
                    "p95": 1613.815198,
                    "p99": 1613.815198,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 730.507421,
                    "min": 691.296071,
                    "p50": 707.040164,
                    "p95": 730.507421,
                    "p99": 730.507421,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1746.7104279999999,
                    "min": 1699.944878,
                    "p50": 1722.219232,
                    "p95": 1746.7104279999999,
                    "p99": 1746.7104279999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 845.0572579999999,
                    "min": 799.35437,
                    "p50": 813.6830269999999,
                    "p95": 845.0572579999999,
                    "p99": 845.0572579999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1388.772865,
                    "min": 1350.6436079999999,
                    "p50": 1376.070377,
                    "p95": 1388.772865,
                    "p99": 1388.772865,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1050.792119,
                    "min": 1023.0583479999999,
                    "p50": 1037.973076,
                    "p95": 1050.792119,
                    "p99": 1050.792119,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1505.595971,
                    "min": 1475.256304,
                    "p50": 1485.76354,
                    "p95": 1505.595971,
                    "p99": 1505.595971,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2021.3048609999998,
                    "min": 1966.903996,
                    "p50": 1990.739611,
                    "p95": 2021.3048609999998,
                    "p99": 2021.3048609999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 938.2409759999999,
                    "min": 910.733969,
                    "p50": 933.059028,
                    "p95": 938.2409759999999,
                    "p99": 938.2409759999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1267.319049,
                    "min": 1240.752111,
                    "p50": 1255.0812839999999,
                    "p95": 1267.319049,
                    "p99": 1267.319049,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 378.655111,
                    "min": 354.601702,
                    "p50": 363.822141,
                    "p95": 378.655111,
                    "p99": 378.655111,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 496.39255599999996,
                    "min": 463.981793,
                    "p50": 473.808941,
                    "p95": 496.39255599999996,
                    "p99": 496.39255599999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 663.903519,
                    "min": 639.479658,
                    "p50": 652.369566,
                    "p95": 663.903519,
                    "p99": 663.903519,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 301.098765,
                    "min": 268.00458399999997,
                    "p50": 278.54263199999997,
                    "p95": 301.098765,
                    "p99": 301.098765,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 788.52837,
                    "min": 767.617591,
                    "p50": 779.645404,
                    "p95": 788.52837,
                    "p99": 788.52837,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 913.5336239999999,
                    "min": 889.788877,
                    "p50": 903.26032,
                    "p95": 913.5336239999999,
                    "p99": 913.5336239999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 366.22018399999996,
                    "min": 342.672277,
                    "p50": 354.160466,
                    "p95": 366.22018399999996,
                    "p99": 366.22018399999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 600.004568,
                    "min": 577.863867,
                    "p50": 591.4732799999999,
                    "p95": 600.004568,
                    "p99": 600.004568,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 537.40396,
                    "min": 517.369837,
                    "p50": 531.173231,
                    "p95": 537.40396,
                    "p99": 537.40396,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 421.594139,
                    "min": 392.55100999999996,
                    "p50": 398.77991399999996,
                    "p95": 421.594139,
                    "p99": 421.594139,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 231.22981199999998,
                    "min": 206.32545399999998,
                    "p50": 213.816567,
                    "p95": 231.22981199999998,
                    "p99": 231.22981199999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1136.763038,
                    "min": 1114.091408,
                    "p50": 1126.573778,
                    "p95": 1136.763038,
                    "p99": 1136.763038,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 736.628971,
                    "min": 704.686282,
                    "p50": 717.313726,
                    "p95": 736.628971,
                    "p99": 736.628971,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 858.148568,
                    "min": 833.192592,
                    "p50": 842.4412229999999,
                    "p95": 858.148568,
                    "p99": 858.148568,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1318.904259,
                    "min": 1264.3333699999998,
                    "p50": 1291.405331,
                    "p95": 1318.904259,
                    "p99": 1318.904259,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 990.040026,
                    "min": 956.3702129999999,
                    "p50": 964.154549,
                    "p95": 990.040026,
                    "p99": 990.040026,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 489.425909,
                    "min": 459.667135,
                    "p50": 471.300079,
                    "p95": 489.425909,
                    "p99": 489.425909,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1456.059628,
                    "min": 1314.937647,
                    "p50": 1325.741515,
                    "p95": 1456.059628,
                    "p99": 1456.059628,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 777.534937,
                    "min": 761.5528049999999,
                    "p50": 774.539901,
                    "p95": 777.534937,
                    "p99": 777.534937,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1085.1968829999998,
                    "min": 1052.564117,
                    "p50": 1072.000065,
                    "p95": 1085.1968829999998,
                    "p99": 1085.1968829999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1141.967105,
                    "min": 1129.3830719999999,
                    "p50": 1134.208146,
                    "p95": 1141.967105,
                    "p99": 1141.967105,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1530.156481,
                    "min": 1498.725323,
                    "p50": 1506.510792,
                    "p95": 1530.156481,
                    "p99": 1530.156481,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 853.8406319999999,
                    "min": 831.5552739999999,
                    "p50": 847.460524,
                    "p95": 853.8406319999999,
                    "p99": 853.8406319999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 504.672582,
                    "min": 460.09085899999997,
                    "p50": 472.36192,
                    "p95": 504.672582,
                    "p99": 504.672582,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 628.3281,
                    "min": 610.5666259999999,
                    "p50": 622.6053049999999,
                    "p95": 628.3281,
                    "p99": 628.3281,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1002.1389499999999,
                    "min": 979.184409,
                    "p50": 991.872225,
                    "p95": 1002.1389499999999,
                    "p99": 1002.1389499999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 951.324041,
                    "min": 918.890865,
                    "p50": 925.410541,
                    "p95": 951.324041,
                    "p99": 951.324041,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2273.147591,
                    "min": 2236.382826,
                    "p50": 2247.211804,
                    "p95": 2273.147591,
                    "p99": 2273.147591,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 593.727723,
                    "min": 535.748616,
                    "p50": 550.061708,
                    "p95": 593.727723,
                    "p99": 593.727723,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 267.180337,
                    "min": 238.686129,
                    "p50": 257.120539,
                    "p95": 267.180337,
                    "p99": 267.180337,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 436.116444,
                    "min": 388.127212,
                    "p50": 399.15826,
                    "p95": 436.116444,
                    "p99": 436.116444,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 705.922339,
                    "min": 680.5674869999999,
                    "p50": 701.9986299999999,
                    "p95": 705.922339,
                    "p99": 705.922339,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 361.477155,
                    "min": 317.18143399999997,
                    "p50": 327.66105899999997,
                    "p95": 361.477155,
                    "p99": 361.477155,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1302.1762099999999,
                    "min": 1267.31141,
                    "p50": 1286.296178,
                    "p95": 1302.1762099999999,
                    "p99": 1302.1762099999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 619.250916,
                    "min": 603.294363,
                    "p50": 609.946462,
                    "p95": 619.250916,
                    "p99": 619.250916,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 301.452808,
                    "min": 268.983516,
                    "p50": 283.032539,
                    "p95": 301.452808,
                    "p99": 301.452808,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 370.76851,
                    "min": 353.561325,
                    "p50": 364.070697,
                    "p95": 370.76851,
                    "p99": 370.76851,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 875.928136,
                    "min": 850.611396,
                    "p50": 859.335888,
                    "p95": 875.928136,
                    "p99": 875.928136,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 548.956272,
                    "min": 515.997807,
                    "p50": 525.670404,
                    "p95": 548.956272,
                    "p99": 548.956272,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1738.558929,
                    "min": 1684.743219,
                    "p50": 1698.440206,
                    "p95": 1738.558929,
                    "p99": 1738.558929,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 483.675775,
                    "min": 436.907677,
                    "p50": 449.852829,
                    "p95": 483.675775,
                    "p99": 483.675775,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 963.3459039999999,
                    "min": 933.6185089999999,
                    "p50": 950.058222,
                    "p95": 963.3459039999999,
                    "p99": 963.3459039999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 740.798713,
                    "min": 686.730499,
                    "p50": 697.672105,
                    "p95": 740.798713,
                    "p99": 740.798713,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1041.397591,
                    "min": 1019.043917,
                    "p50": 1033.898626,
                    "p95": 1041.397591,
                    "p99": 1041.397591,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1121.03342,
                    "min": 1102.58865,
                    "p50": 1116.787354,
                    "p95": 1121.03342,
                    "p99": 1121.03342,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1501.523402,
                    "min": 1473.350589,
                    "p50": 1488.550292,
                    "p95": 1501.523402,
                    "p99": 1501.523402,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1211.855048,
                    "min": 1183.4156329999998,
                    "p50": 1203.902476,
                    "p95": 1211.855048,
                    "p99": 1211.855048,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 811.691619,
                    "min": 770.880311,
                    "p50": 778.3900639999999,
                    "p95": 811.691619,
                    "p99": 811.691619,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 321.261043,
                    "min": 270.73792,
                    "p50": 284.137886,
                    "p95": 321.261043,
                    "p99": 321.261043,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 994.6338519999999,
                    "min": 954.975971,
                    "p50": 963.849295,
                    "p95": 994.6338519999999,
                    "p99": 994.6338519999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 749.451653,
                    "min": 704.6177,
                    "p50": 717.992857,
                    "p95": 749.451653,
                    "p99": 749.451653,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 608.051326,
                    "min": 581.711514,
                    "p50": 594.07386,
                    "p95": 608.051326,
                    "p99": 608.051326,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 425.811543,
                    "min": 397.53389999999996,
                    "p50": 406.26895099999996,
                    "p95": 425.811543,
                    "p99": 425.811543,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.014651,
                    "min": 208.157849,
                    "p50": 219.68201499999998,
                    "p95": 224.014651,
                    "p99": 224.014651,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 371.176513,
                    "min": 333.03945699999997,
                    "p50": 342.48666399999996,
                    "p95": 371.176513,
                    "p99": 371.176513,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 926.9231609999999,
                    "min": 895.9464399999999,
                    "p50": 906.2287769999999,
                    "p95": 926.9231609999999,
                    "p99": 926.9231609999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1144.970267,
                    "min": 1116.633433,
                    "p50": 1134.2383829999999,
                    "p95": 1144.970267,
                    "p99": 1144.970267,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 490.26505899999995,
                    "min": 455.825139,
                    "p50": 464.174711,
                    "p95": 490.26505899999995,
                    "p99": 490.26505899999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.103379,
                    "min": 641.9315399999999,
                    "p50": 654.548328,
                    "p95": 673.103379,
                    "p99": 673.103379,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1329.7537,
                    "min": 1265.3770849999999,
                    "p50": 1301.899627,
                    "p95": 1329.7537,
                    "p99": 1329.7537,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 802.274064,
                    "min": 770.4137939999999,
                    "p50": 787.492808,
                    "p95": 802.274064,
                    "p99": 802.274064,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 556.545529,
                    "min": 516.9688689999999,
                    "p50": 533.794601,
                    "p95": 556.545529,
                    "p99": 556.545529,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 887.6600659999999,
                    "min": 830.461161,
                    "p50": 841.1995089999999,
                    "p95": 887.6600659999999,
                    "p99": 887.6600659999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2366.7825159999998,
                    "min": 2334.674391,
                    "p50": 2351.505753,
                    "p95": 2366.7825159999998,
                    "p99": 2366.7825159999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1307.689029,
                    "min": 1257.009462,
                    "p50": 1274.401411,
                    "p95": 1307.689029,
                    "p99": 1307.689029,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1603.930286,
                    "min": 1574.192178,
                    "p50": 1581.3676309999998,
                    "p95": 1603.930286,
                    "p99": 1603.930286,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1772.6169599999998,
                    "min": 1717.2175809999999,
                    "p50": 1742.819996,
                    "p95": 1772.6169599999998,
                    "p99": 1772.6169599999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2221.01501,
                    "min": 2186.073213,
                    "p50": 2202.411685,
                    "p95": 2221.01501,
                    "p99": 2221.01501,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2081.5604049999997,
                    "min": 2028.1821459999999,
                    "p50": 2048.054311,
                    "p95": 2081.5604049999997,
                    "p99": 2081.5604049999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 666.235858,
                    "min": 636.916343,
                    "p50": 652.891399,
                    "p95": 666.235858,
                    "p99": 666.235858,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1452.716557,
                    "min": 1415.47185,
                    "p50": 1432.973288,
                    "p95": 1452.716557,
                    "p99": 1452.716557,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1922.126959,
                    "min": 1887.5287529999998,
                    "p50": 1908.6694,
                    "p95": 1922.126959,
                    "p99": 1922.126959,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2774.586935,
                    "min": 2721.2776559999998,
                    "p50": 2742.1348169999997,
                    "p95": 2774.586935,
                    "p99": 2774.586935,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 840.113742,
                    "min": 794.7198539999999,
                    "p50": 808.082191,
                    "p95": 840.113742,
                    "p99": 840.113742,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1145.5778289999998,
                    "min": 1101.950461,
                    "p50": 1120.8544299999999,
                    "p95": 1145.5778289999998,
                    "p99": 1145.5778289999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 499.58782399999996,
                    "min": 484.087116,
                    "p50": 492.816308,
                    "p95": 499.58782399999996,
                    "p99": 499.58782399999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 966.587905,
                    "min": 949.794817,
                    "p50": 963.868221,
                    "p95": 966.587905,
                    "p99": 966.587905,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3160.5693619999997,
                    "min": 3103.4614119999997,
                    "p50": 3138.598326,
                    "p95": 3160.5693619999997,
                    "p99": 3160.5693619999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3111.565779,
                    "min": 3066.3824379999996,
                    "p50": 3093.4551899999997,
                    "p95": 3111.565779,
                    "p99": 3111.565779,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2184.0146689999997,
                    "min": 2134.550598,
                    "p50": 2173.805389,
                    "p95": 2184.0146689999997,
                    "p99": 2184.0146689999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1887.02954,
                    "min": 1838.106182,
                    "p50": 1852.309568,
                    "p95": 1887.02954,
                    "p99": 1887.02954,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1417.9685479999998,
                    "min": 1389.261669,
                    "p50": 1407.747672,
                    "p95": 1417.9685479999998,
                    "p99": 1417.9685479999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1298.3703349999998,
                    "min": 1239.246637,
                    "p50": 1255.545475,
                    "p95": 1298.3703349999998,
                    "p99": 1298.3703349999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 958.162019,
                    "min": 938.029198,
                    "p50": 954.006496,
                    "p95": 958.162019,
                    "p99": 958.162019,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2040.1266289999999,
                    "min": 1999.717659,
                    "p50": 2010.13528,
                    "p95": 2040.1266289999999,
                    "p99": 2040.1266289999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 655.683713,
                    "min": 634.218225,
                    "p50": 642.2138299999999,
                    "p95": 655.683713,
                    "p99": 655.683713,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1730.387448,
                    "min": 1695.457215,
                    "p50": 1710.0063599999999,
                    "p95": 1730.387448,
                    "p99": 1730.387448,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 820.262786,
                    "min": 787.6847839999999,
                    "p50": 795.0218179999999,
                    "p95": 820.262786,
                    "p99": 820.262786,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2726.3096579999997,
                    "min": 2682.965574,
                    "p50": 2704.4294879999998,
                    "p95": 2726.3096579999997,
                    "p99": 2726.3096579999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 509.513237,
                    "min": 480.129911,
                    "p50": 487.020352,
                    "p95": 509.513237,
                    "p99": 509.513237,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1131.61564,
                    "min": 1073.80747,
                    "p50": 1112.163934,
                    "p95": 1131.61564,
                    "p99": 1131.61564,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2337.432766,
                    "min": 2292.640669,
                    "p50": 2306.903413,
                    "p95": 2337.432766,
                    "p99": 2337.432766,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1566.553169,
                    "min": 1539.09216,
                    "p50": 1546.62359,
                    "p95": 1566.553169,
                    "p99": 1566.553169,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1646.513368,
                    "min": 1605.2077299999999,
                    "p50": 1626.8027299999999,
                    "p95": 1646.513368,
                    "p99": 1646.513368,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 922.971731,
                    "min": 889.5722159999999,
                    "p50": 902.397974,
                    "p95": 922.971731,
                    "p99": 922.971731,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 772.370472,
                    "min": 749.564538,
                    "p50": 757.3028929999999,
                    "p95": 772.370472,
                    "p99": 772.370472,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1514.437641,
                    "min": 1476.230204,
                    "p50": 1491.4051499999998,
                    "p95": 1514.437641,
                    "p99": 1514.437641,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2939.2940129999997,
                    "min": 2902.262738,
                    "p50": 2927.8761999999997,
                    "p95": 2939.2940129999997,
                    "p99": 2939.2940129999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.80881,
                    "min": 596.704781,
                    "p50": 609.332907,
                    "p95": 616.80881,
                    "p99": 616.80881,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1075.292342,
                    "min": 1032.784028,
                    "p50": 1054.142137,
                    "p95": 1075.292342,
                    "p99": 1075.292342,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 482.391082,
                    "min": 455.532702,
                    "p50": 465.951979,
                    "p95": 482.391082,
                    "p99": 482.391082,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2227.498039,
                    "min": 2175.347211,
                    "p50": 2205.922649,
                    "p95": 2227.498039,
                    "p99": 2227.498039,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2092.828105,
                    "min": 2031.3726419999998,
                    "p50": 2045.282507,
                    "p95": 2092.828105,
                    "p99": 2092.828105,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1794.98288,
                    "min": 1762.230187,
                    "p50": 1782.838473,
                    "p95": 1794.98288,
                    "p99": 1794.98288,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1943.6685739999998,
                    "min": 1897.6251189999998,
                    "p50": 1915.68141,
                    "p95": 1943.6685739999998,
                    "p99": 1943.6685739999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1382.159539,
                    "min": 1317.005613,
                    "p50": 1340.128086,
                    "p95": 1382.159539,
                    "p99": 1382.159539,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2571.0733849999997,
                    "min": 2539.3720559999997,
                    "p50": 2554.504721,
                    "p95": 2571.0733849999997,
                    "p99": 2571.0733849999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1202.5451349999998,
                    "min": 1177.900168,
                    "p50": 1198.06252,
                    "p95": 1202.5451349999998,
                    "p99": 1202.5451349999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 937.514116,
                    "min": 912.970738,
                    "p50": 928.1603819999999,
                    "p95": 937.514116,
                    "p99": 937.514116,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 746.441053,
                    "min": 508.60308499999996,
                    "p50": 519.390013,
                    "p95": 746.441053,
                    "p99": 746.441053,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1191.624169,
                    "min": 1051.497803,
                    "p50": 1070.164389,
                    "p95": 1191.624169,
                    "p99": 1191.624169,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1257.103277,
                    "min": 1217.961143,
                    "p50": 1242.006044,
                    "p95": 1257.103277,
                    "p99": 1257.103277,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 274.46136,
                    "min": 226.498054,
                    "p50": 234.22999299999998,
                    "p95": 274.46136,
                    "p99": 274.46136,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 871.0730609999999,
                    "min": 843.9819769999999,
                    "p50": 856.6583999999999,
                    "p95": 871.0730609999999,
                    "p99": 871.0730609999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 457.226433,
                    "min": 436.823401,
                    "p50": 440.31383999999997,
                    "p95": 457.226433,
                    "p99": 457.226433,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 308.618684,
                    "min": 295.53112899999996,
                    "p50": 303.738141,
                    "p95": 308.618684,
                    "p99": 308.618684,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2116.631388,
                    "min": 2058.401699,
                    "p50": 2099.146796,
                    "p95": 2116.631388,
                    "p99": 2116.631388,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 708.145368,
                    "min": 636.427564,
                    "p50": 649.608346,
                    "p95": 708.145368,
                    "p99": 708.145368,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 855.0464059999999,
                    "min": 773.925024,
                    "p50": 779.440043,
                    "p95": 855.0464059999999,
                    "p99": 855.0464059999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1068.042882,
                    "min": 974.367976,
                    "p50": 988.886263,
                    "p95": 1068.042882,
                    "p99": 1068.042882,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 384.02750499999996,
                    "min": 361.798066,
                    "p50": 379.29349299999996,
                    "p95": 384.02750499999996,
                    "p99": 384.02750499999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3713.2122799999997,
                    "min": 3459.6772579999997,
                    "p50": 3501.392571,
                    "p95": 3713.2122799999997,
                    "p99": 3713.2122799999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1422.732974,
                    "min": 1392.592514,
                    "p50": 1409.797051,
                    "p95": 1422.732974,
                    "p99": 1422.732974,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 730.407246,
                    "min": 705.196466,
                    "p50": 716.075252,
                    "p95": 730.407246,
                    "p99": 730.407246,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 589.050903,
                    "min": 569.6623549999999,
                    "p50": 581.748979,
                    "p95": 589.050903,
                    "p99": 589.050903,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2824.1579549999997,
                    "min": 2755.060021,
                    "p50": 2778.231343,
                    "p95": 2824.1579549999997,
                    "p99": 2824.1579549999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1310.603504,
                    "min": 1267.204113,
                    "p50": 1291.959946,
                    "p95": 1310.603504,
                    "p99": 1310.603504,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 422.24013399999995,
                    "min": 392.911573,
                    "p50": 406.285125,
                    "p95": 422.24013399999995,
                    "p99": 422.24013399999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 840.1482189999999,
                    "min": 827.885915,
                    "p50": 836.403589,
                    "p95": 840.1482189999999,
                    "p99": 840.1482189999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 617.606132,
                    "min": 588.79607,
                    "p50": 598.955218,
                    "p95": 617.606132,
                    "p99": 617.606132,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 663.569724,
                    "min": 643.439486,
                    "p50": 656.350542,
                    "p95": 663.569724,
                    "p99": 663.569724,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.98772699999998,
                    "min": 212.388939,
                    "p50": 226.612019,
                    "p95": 244.98772699999998,
                    "p99": 244.98772699999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 729.172605,
                    "min": 704.650816,
                    "p50": 714.679026,
                    "p95": 729.172605,
                    "p99": 729.172605,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 347.86632199999997,
                    "min": 327.738789,
                    "p50": 337.869921,
                    "p95": 347.86632199999997,
                    "p99": 347.86632199999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 941.51382,
                    "min": 889.09595,
                    "p50": 904.5786989999999,
                    "p95": 941.51382,
                    "p99": 941.51382,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 549.749229,
                    "min": 517.670797,
                    "p50": 533.276944,
                    "p95": 549.749229,
                    "p99": 549.749229,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1127.078734,
                    "min": 1109.272352,
                    "p50": 1120.1522129999998,
                    "p95": 1127.078734,
                    "p99": 1127.078734,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 784.542344,
                    "min": 766.5125959999999,
                    "p50": 777.674392,
                    "p95": 784.542344,
                    "p99": 784.542344,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 488.29044999999996,
                    "min": 456.859024,
                    "p50": 466.36607399999997,
                    "p95": 488.29044999999996,
                    "p99": 488.29044999999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 294.479182,
                    "min": 268.35139699999996,
                    "p50": 281.49204599999996,
                    "p95": 294.479182,
                    "p99": 294.479182,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1009.235519,
                    "min": 953.09922,
                    "p50": 971.385102,
                    "p95": 1009.235519,
                    "p99": 1009.235519,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1926.395877,
                    "min": 1878.945825,
                    "p50": 1902.7674089999998,
                    "p95": 1926.395877,
                    "p99": 1926.395877,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 603.356843,
                    "min": 570.391019,
                    "p50": 592.802186,
                    "p95": 603.356843,
                    "p99": 603.356843,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 671.9087949999999,
                    "min": 636.695735,
                    "p50": 641.356133,
                    "p95": 671.9087949999999,
                    "p99": 671.9087949999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 346.46556999999996,
                    "min": 325.586781,
                    "p50": 332.475213,
                    "p95": 346.46556999999996,
                    "p99": 346.46556999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 536.333532,
                    "min": 506.848755,
                    "p50": 515.790906,
                    "p95": 536.333532,
                    "p99": 536.333532,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 904.360675,
                    "min": 874.3772759999999,
                    "p50": 890.5567149999999,
                    "p95": 904.360675,
                    "p99": 904.360675,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 237.784957,
                    "min": 202.336086,
                    "p50": 216.79878,
                    "p95": 237.784957,
                    "p99": 237.784957,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1894.504448,
                    "min": 1851.795297,
                    "p50": 1869.995857,
                    "p95": 1894.504448,
                    "p99": 1894.504448,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 718.5606329999999,
                    "min": 703.374339,
                    "p50": 706.7593009999999,
                    "p95": 718.5606329999999,
                    "p99": 718.5606329999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 850.839355,
                    "min": 815.219168,
                    "p50": 832.4356809999999,
                    "p95": 850.839355,
                    "p99": 850.839355,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 398.071732,
                    "min": 385.511682,
                    "p50": 395.900239,
                    "p95": 398.071732,
                    "p99": 398.071732,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1134.021773,
                    "min": 1098.0173949999999,
                    "p50": 1105.5560229999999,
                    "p95": 1134.021773,
                    "p99": 1134.021773,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 795.5227249999999,
                    "min": 760.788408,
                    "p50": 774.349398,
                    "p95": 795.5227249999999,
                    "p99": 795.5227249999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 462.46869599999997,
                    "min": 450.63972099999995,
                    "p50": 457.863551,
                    "p95": 462.46869599999997,
                    "p99": 462.46869599999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2518.135989,
                    "min": 2473.716458,
                    "p50": 2476.9335779999997,
                    "p95": 2518.135989,
                    "p99": 2518.135989,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 284.73028999999997,
                    "min": 269.29891599999996,
                    "p50": 275.011732,
                    "p95": 284.73028999999997,
                    "p99": 284.73028999999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 981.0842359999999,
                    "min": 939.356316,
                    "p50": 953.522693,
                    "p95": 981.0842359999999,
                    "p99": 981.0842359999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1283.906372,
                    "min": 1241.8385779999999,
                    "p50": 1267.253197,
                    "p95": 1283.906372,
                    "p99": 1283.906372,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1887.892504,
                    "min": 1673.354353,
                    "p50": 1772.7889499999999,
                    "p95": 1887.892504,
                    "p99": 1887.892504,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1301.760471,
                    "min": 1138.166464,
                    "p50": 1270.149663,
                    "p95": 1301.760471,
                    "p99": 1301.760471,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1864.7529359999999,
                    "min": 1843.9811889999999,
                    "p50": 1854.715522,
                    "p95": 1864.7529359999999,
                    "p99": 1864.7529359999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1590.2822689999998,
                    "min": 1569.692558,
                    "p50": 1583.872128,
                    "p95": 1590.2822689999998,
                    "p99": 1590.2822689999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1236.472962,
                    "min": 1200.524988,
                    "p50": 1226.701314,
                    "p95": 1236.472962,
                    "p99": 1236.472962,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1484.8301569999999,
                    "min": 1459.39725,
                    "p50": 1471.654497,
                    "p95": 1484.8301569999999,
                    "p99": 1484.8301569999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1713.081173,
                    "min": 1697.146834,
                    "p50": 1710.0019829999999,
                    "p95": 1713.081173,
                    "p99": 1713.081173,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 399.846068,
                    "min": 361.68929399999996,
                    "p50": 393.317364,
                    "p95": 399.846068,
                    "p99": 399.846068,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 522.442219,
                    "min": 480.90669399999996,
                    "p50": 511.266706,
                    "p95": 522.442219,
                    "p99": 522.442219,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 659.709088,
                    "min": 632.539259,
                    "p50": 642.039329,
                    "p95": 659.709088,
                    "p99": 659.709088,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2606.7130469999997,
                    "min": 2396.5427999999997,
                    "p50": 2448.558444,
                    "p95": 2606.7130469999997,
                    "p99": 2606.7130469999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 894.184358,
                    "min": 744.706649,
                    "p50": 757.27267,
                    "p95": 894.184358,
                    "p99": 894.184358,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2326.411716,
                    "min": 2114.328355,
                    "p50": 2254.267505,
                    "p95": 2326.411716,
                    "p99": 2326.411716,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1087.137421,
                    "min": 950.885264,
                    "p50": 996.762113,
                    "p95": 1087.137421,
                    "p99": 1087.137421,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1084.241497,
                    "min": 856.782418,
                    "p50": 882.6139529999999,
                    "p95": 1084.241497,
                    "p99": 1084.241497,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 469.502553,
                    "min": 407.79353599999996,
                    "p50": 454.21338,
                    "p95": 469.502553,
                    "p99": 469.502553,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 507.18360099999995,
                    "min": 414.353323,
                    "p50": 443.120142,
                    "p95": 507.18360099999995,
                    "p99": 507.18360099999995,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 507.341012,
                    "min": 450.461262,
                    "p50": 492.320087,
                    "p95": 507.341012,
                    "p99": 507.341012,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 129.19179599999998,
                    "min": 93.95077599999999,
                    "p50": 117.73411399999999,
                    "p95": 129.19179599999998,
                    "p99": 129.19179599999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 218.31104399999998,
                    "min": 172.167106,
                    "p50": 199.019756,
                    "p95": 218.31104399999998,
                    "p99": 218.31104399999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 332.819596,
                    "min": 308.737233,
                    "p50": 328.84781899999996,
                    "p95": 332.819596,
                    "p99": 332.819596,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 103.877516,
                    "min": 82.482723,
                    "p50": 100.094449,
                    "p95": 103.877516,
                    "p99": 103.877516,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 175.42099,
                    "min": 116.76411999999999,
                    "p50": 153.45465199999998,
                    "p95": 175.42099,
                    "p99": 175.42099,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 175.05884999999998,
                    "min": 160.803341,
                    "p50": 166.90414099999998,
                    "p95": 175.05884999999998,
                    "p99": 175.05884999999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 813.6816359999999,
                    "min": 779.477683,
                    "p50": 804.4275839999999,
                    "p95": 813.6816359999999,
                    "p99": 813.6816359999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 979.603222,
                    "min": 934.583233,
                    "p50": 964.517516,
                    "p95": 979.603222,
                    "p99": 979.603222,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 288.956748,
                    "min": 196.627436,
                    "p50": 214.777697,
                    "p95": 288.956748,
                    "p99": 288.956748,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3480.3540869999997,
                    "min": 3300.7865239999996,
                    "p50": 3394.799869,
                    "p95": 3480.3540869999997,
                    "p99": 3480.3540869999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 98.879373,
                    "min": 79.34912,
                    "p50": 90.979129,
                    "p95": 98.879373,
                    "p99": 98.879373,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 159.714601,
                    "min": 141.074652,
                    "p50": 148.163995,
                    "p95": 159.714601,
                    "p99": 159.714601,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1003.5702849999999,
                    "min": 934.555383,
                    "p50": 968.1210659999999,
                    "p95": 1003.5702849999999,
                    "p99": 1003.5702849999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 940.937631,
                    "min": 820.271357,
                    "p50": 836.795618,
                    "p95": 940.937631,
                    "p99": 940.937631,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 736.722479,
                    "min": 674.7385019999999,
                    "p50": 693.0268149999999,
                    "p95": 736.722479,
                    "p99": 736.722479,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 818.215479,
                    "min": 747.203171,
                    "p50": 759.118868,
                    "p95": 818.215479,
                    "p99": 818.215479,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 435.615655,
                    "min": 389.411025,
                    "p50": 404.482466,
                    "p95": 435.615655,
                    "p99": 435.615655,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2328.343046,
                    "min": 2168.210401,
                    "p50": 2227.4528569999998,
                    "p95": 2328.343046,
                    "p99": 2328.343046,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1320.097411,
                    "min": 1268.150991,
                    "p50": 1306.066356,
                    "p95": 1320.097411,
                    "p99": 1320.097411,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 999.0263329999999,
                    "min": 928.223167,
                    "p50": 977.5105739999999,
                    "p95": 999.0263329999999,
                    "p99": 999.0263329999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 918.1002569999999,
                    "min": 875.112009,
                    "p50": 904.0240749999999,
                    "p95": 918.1002569999999,
                    "p99": 918.1002569999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 552.101595,
                    "min": 527.927839,
                    "p50": 545.238072,
                    "p95": 552.101595,
                    "p99": 552.101595,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1510.265881,
                    "min": 1468.576228,
                    "p50": 1483.751334,
                    "p95": 1510.265881,
                    "p99": 1510.265881,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.350348,
                    "min": 246.360776,
                    "p50": 254.83114999999998,
                    "p95": 260.350348,
                    "p99": 260.350348,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1131.045882,
                    "min": 1111.315832,
                    "p50": 1122.991252,
                    "p95": 1131.045882,
                    "p99": 1131.045882,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 627.498642,
                    "min": 609.605763,
                    "p50": 620.075246,
                    "p95": 627.498642,
                    "p99": 627.498642,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 482.47536499999995,
                    "min": 446.268309,
                    "p50": 468.942316,
                    "p95": 482.47536499999995,
                    "p99": 482.47536499999995,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 332.783191,
                    "min": 322.832736,
                    "p50": 326.270192,
                    "p95": 332.783191,
                    "p99": 332.783191,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1072.043577,
                    "min": 1028.699874,
                    "p50": 1051.6165939999998,
                    "p95": 1072.043577,
                    "p99": 1072.043577,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2628.806314,
                    "min": 2039.170492,
                    "p50": 2514.804102,
                    "p95": 2628.806314,
                    "p99": 2628.806314,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 462.91569799999996,
                    "min": 375.501039,
                    "p50": 451.09135899999995,
                    "p95": 462.91569799999996,
                    "p99": 462.91569799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1756.422267,
                    "min": 1385.796116,
                    "p50": 1692.3830899999998,
                    "p95": 1756.422267,
                    "p99": 1756.422267,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1881.316461,
                    "min": 1498.731795,
                    "p50": 1853.428377,
                    "p95": 1881.316461,
                    "p99": 1881.316461,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 618.4932339999999,
                    "min": 485.052932,
                    "p50": 586.643241,
                    "p95": 618.4932339999999,
                    "p99": 618.4932339999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1608.9837009999999,
                    "min": 1277.2300989999999,
                    "p50": 1578.165278,
                    "p95": 1608.9837009999999,
                    "p99": 1608.9837009999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2169.354457,
                    "min": 1726.052723,
                    "p50": 2114.523458,
                    "p95": 2169.354457,
                    "p99": 2169.354457,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 889.094201,
                    "min": 708.4273049999999,
                    "p50": 854.370406,
                    "p95": 889.094201,
                    "p99": 889.094201,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1314.313893,
                    "min": 1056.347485,
                    "p50": 1300.736995,
                    "p95": 1314.313893,
                    "p99": 1314.313893,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1206.4496199999999,
                    "min": 923.73609,
                    "p50": 1155.816718,
                    "p95": 1206.4496199999999,
                    "p99": 1206.4496199999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2865.622148,
                    "min": 2270.486008,
                    "p50": 2842.237497,
                    "p95": 2865.622148,
                    "p99": 2865.622148,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1454.466322,
                    "min": 1158.664126,
                    "p50": 1444.454011,
                    "p95": 1454.466322,
                    "p99": 1454.466322,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1030.894253,
                    "min": 806.903338,
                    "p50": 1016.615425,
                    "p95": 1030.894253,
                    "p99": 1030.894253,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 740.549573,
                    "min": 592.8655709999999,
                    "p50": 735.924886,
                    "p95": 740.549573,
                    "p99": 740.549573,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2018.9170219999999,
                    "min": 1584.006445,
                    "p50": 1990.933104,
                    "p95": 2018.9170219999999,
                    "p99": 2018.9170219999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 121.52897,
                    "min": 106.120953,
                    "p50": 115.14561499999999,
                    "p95": 121.52897,
                    "p99": 121.52897,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 39.714062,
                    "min": 25.01453,
                    "p50": 36.078479,
                    "p95": 39.714062,
                    "p99": 39.714062,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 226.83191499999998,
                    "min": 208.88872999999998,
                    "p50": 216.86184799999998,
                    "p95": 226.83191499999998,
                    "p99": 226.83191499999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 487.81940699999996,
                    "min": 442.925745,
                    "p50": 480.44696799999997,
                    "p95": 487.81940699999996,
                    "p99": 487.81940699999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 53.049580999999996,
                    "min": 41.876563,
                    "p50": 51.249587,
                    "p95": 53.049580999999996,
                    "p99": 53.049580999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 53.760746999999995,
                    "min": 32.45099,
                    "p50": 51.754957,
                    "p95": 53.760746999999995,
                    "p99": 53.760746999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 194.03597299999998,
                    "min": 162.77325,
                    "p50": 171.414675,
                    "p95": 194.03597299999998,
                    "p99": 194.03597299999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 43.80741,
                    "min": 26.738483,
                    "p50": 42.638484999999996,
                    "p95": 43.80741,
                    "p99": 43.80741,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 55.058394,
                    "min": 27.041062,
                    "p50": 30.975476999999998,
                    "p95": 55.058394,
                    "p99": 55.058394,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 115.826757,
                    "min": 71.592412,
                    "p50": 72.905256,
                    "p95": 115.826757,
                    "p99": 115.826757,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 154.412421,
                    "min": 107.954923,
                    "p50": 129.962567,
                    "p95": 154.412421,
                    "p99": 154.412421,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.891014,
                    "min": 22.853759,
                    "p50": 26.645511,
                    "p95": 28.891014,
                    "p99": 28.891014,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 60.966947999999995,
                    "min": 50.39129,
                    "p50": 56.186524999999996,
                    "p95": 60.966947999999995,
                    "p99": 60.966947999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 80.084301,
                    "min": 62.02849,
                    "p50": 64.336967,
                    "p95": 80.084301,
                    "p99": 80.084301,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 118.34112499999999,
                    "min": 43.752924,
                    "p50": 52.061167,
                    "p95": 118.34112499999999,
                    "p99": 118.34112499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 138.267852,
                    "min": 47.917328999999995,
                    "p50": 53.260773,
                    "p95": 138.267852,
                    "p99": 138.267852,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 61.394701999999995,
                    "min": 53.382712999999995,
                    "p50": 57.080510999999994,
                    "p95": 61.394701999999995,
                    "p99": 61.394701999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 117.940833,
                    "min": 50.387042,
                    "p50": 54.376905,
                    "p95": 117.940833,
                    "p99": 117.940833,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 60.499613999999994,
                    "min": 42.766670999999995,
                    "p50": 54.607288999999994,
                    "p95": 60.499613999999994,
                    "p99": 60.499613999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 386.12028,
                    "min": 341.856969,
                    "p50": 374.398195,
                    "p95": 386.12028,
                    "p99": 386.12028,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.752221,
                    "min": 196.633602,
                    "p50": 214.93611099999998,
                    "p95": 222.752221,
                    "p99": 222.752221,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 697.666781,
                    "min": 494.82735299999996,
                    "p50": 596.799475,
                    "p95": 697.666781,
                    "p99": 697.666781,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 371.021326,
                    "min": 261.801307,
                    "p50": 297.16122,
                    "p95": 371.021326,
                    "p99": 371.021326,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 469.776055,
                    "min": 395.044485,
                    "p50": 423.61967,
                    "p95": 469.776055,
                    "p99": 469.776055,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2281.138156,
                    "min": 1912.014727,
                    "p50": 2155.103358,
                    "p95": 2281.138156,
                    "p99": 2281.138156,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 544.767308,
                    "min": 366.850846,
                    "p50": 388.67091,
                    "p95": 544.767308,
                    "p99": 544.767308,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 722.558514,
                    "min": 483.223077,
                    "p50": 582.502709,
                    "p95": 722.558514,
                    "p99": 722.558514,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 814.367793,
                    "min": 660.972103,
                    "p50": 707.0061039999999,
                    "p95": 814.367793,
                    "p99": 814.367793,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 422.322477,
                    "min": 293.934286,
                    "p50": 342.782698,
                    "p95": 422.322477,
                    "p99": 422.322477,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1860.9468319999999,
                    "min": 1408.856898,
                    "p50": 1573.2831509999999,
                    "p95": 1860.9468319999999,
                    "p99": 1860.9468319999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.306654,
                    "min": 254.46074399999998,
                    "p50": 299.255788,
                    "p95": 352.306654,
                    "p99": 352.306654,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 540.330909,
                    "min": 425.31262699999996,
                    "p50": 507.203736,
                    "p95": 540.330909,
                    "p99": 540.330909,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1326.44535,
                    "min": 1047.2681,
                    "p50": 1111.310467,
                    "p95": 1326.44535,
                    "p99": 1326.44535,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 267.02112999999997,
                    "min": 156.93164,
                    "p50": 201.575673,
                    "p95": 267.02112999999997,
                    "p99": 267.02112999999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4462.084492999999,
                    "min": 3805.957415,
                    "p50": 3891.5903479999997,
                    "p95": 4462.084492999999,
                    "p99": 4462.084492999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.148857,
                    "min": 103.602796,
                    "p50": 139.48845699999998,
                    "p95": 173.148857,
                    "p99": 173.148857,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 683.439938,
                    "min": 567.681823,
                    "p50": 613.8575609999999,
                    "p95": 683.439938,
                    "p99": 683.439938,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 989.451243,
                    "min": 729.2686249999999,
                    "p50": 844.208864,
                    "p95": 989.451243,
                    "p99": 989.451243,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 74.153185,
                    "min": 60.887622,
                    "p50": 68.512367,
                    "p95": 74.153185,
                    "p99": 74.153185,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 91.200076,
                    "min": 80.55820899999999,
                    "p50": 87.908974,
                    "p95": 91.200076,
                    "p99": 91.200076,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 44.511813,
                    "min": 40.145233,
                    "p50": 44.246206,
                    "p95": 44.511813,
                    "p99": 44.511813,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 82.921245,
                    "min": 59.641149999999996,
                    "p50": 68.20447399999999,
                    "p95": 82.921245,
                    "p99": 82.921245,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 38.898688,
                    "min": 21.718135999999998,
                    "p50": 32.290182,
                    "p95": 38.898688,
                    "p99": 38.898688,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 203.94335999999998,
                    "min": 155.09414099999998,
                    "p50": 186.502399,
                    "p95": 203.94335999999998,
                    "p99": 203.94335999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 110.09157499999999,
                    "min": 95.323393,
                    "p50": 106.319058,
                    "p95": 110.09157499999999,
                    "p99": 110.09157499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 80.409297,
                    "min": 51.670086,
                    "p50": 71.898684,
                    "p95": 80.409297,
                    "p99": 80.409297,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 279.02549,
                    "min": 250.14947899999999,
                    "p50": 275.629716,
                    "p95": 279.02549,
                    "p99": 279.02549,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 62.06326,
                    "min": 54.511545999999996,
                    "p50": 58.648382,
                    "p95": 62.06326,
                    "p99": 62.06326,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 59.220611999999996,
                    "min": 50.560216,
                    "p50": 57.903458,
                    "p95": 59.220611999999996,
                    "p99": 59.220611999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 111.70312,
                    "min": 92.736524,
                    "p50": 105.72826099999999,
                    "p95": 111.70312,
                    "p99": 111.70312,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 74.799294,
                    "min": 60.573144,
                    "p50": 68.43972,
                    "p95": 74.799294,
                    "p99": 74.799294,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 188.195765,
                    "min": 96.45356199999999,
                    "p50": 113.400611,
                    "p95": 188.195765,
                    "p99": 188.195765,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 571.3753889999999,
                    "min": 487.904117,
                    "p50": 540.845339,
                    "p95": 571.3753889999999,
                    "p99": 571.3753889999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 94.71488699999999,
                    "min": 75.648215,
                    "p50": 87.28405599999999,
                    "p95": 94.71488699999999,
                    "p99": 94.71488699999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 289.458867,
                    "min": 217.013761,
                    "p50": 233.98990799999999,
                    "p95": 289.458867,
                    "p99": 289.458867,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 129.342578,
                    "min": 109.196508,
                    "p50": 119.820673,
                    "p95": 129.342578,
                    "p99": 129.342578,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 97.17442,
                    "min": 89.727727,
                    "p50": 95.363986,
                    "p95": 97.17442,
                    "p99": 97.17442,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 73.83806799999999,
                    "min": 59.509052,
                    "p50": 70.683177,
                    "p95": 73.83806799999999,
                    "p99": 73.83806799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.701766,
                    "min": 26.11959,
                    "p50": 26.765158,
                    "p95": 27.701766,
                    "p99": 27.701766,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.934192,
                    "min": 22.487862,
                    "p50": 26.767661,
                    "p95": 26.934192,
                    "p99": 26.934192,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.876831,
                    "min": 25.472998999999998,
                    "p50": 26.892758999999998,
                    "p95": 27.876831,
                    "p99": 27.876831,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 49.031448999999995,
                    "min": 26.374314,
                    "p50": 26.940489,
                    "p95": 49.031448999999995,
                    "p99": 49.031448999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.137822,
                    "min": 23.914402,
                    "p50": 26.538504,
                    "p95": 27.137822,
                    "p99": 27.137822,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 30.55128,
                    "min": 25.731526,
                    "p50": 27.11242,
                    "p95": 30.55128,
                    "p99": 30.55128,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.495969,
                    "min": 25.435219,
                    "p50": 26.529598999999997,
                    "p95": 27.495969,
                    "p99": 27.495969,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.918893999999998,
                    "min": 19.664489,
                    "p50": 26.750192,
                    "p95": 26.918893999999998,
                    "p99": 26.918893999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 86.75407799999999,
                    "min": 37.280885,
                    "p50": 42.130755,
                    "p95": 86.75407799999999,
                    "p99": 86.75407799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.023016,
                    "min": 25.40251,
                    "p50": 26.776007,
                    "p95": 27.023016,
                    "p99": 27.023016,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 43.066323,
                    "min": 31.849608999999997,
                    "p50": 33.652902,
                    "p95": 43.066323,
                    "p99": 43.066323,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.568547,
                    "min": 26.233963,
                    "p50": 26.708156,
                    "p95": 27.568547,
                    "p99": 27.568547,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.833377,
                    "min": 19.791874999999997,
                    "p50": 26.482746,
                    "p95": 26.833377,
                    "p99": 26.833377,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.204411,
                    "min": 20.869775999999998,
                    "p50": 26.419031999999998,
                    "p95": 27.204411,
                    "p99": 27.204411,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 100.42186699999999,
                    "min": 59.794957999999994,
                    "p50": 87.761578,
                    "p95": 100.42186699999999,
                    "p99": 100.42186699999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.318161,
                    "min": 23.291878999999998,
                    "p50": 26.795797999999998,
                    "p95": 27.318161,
                    "p99": 27.318161,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.166662,
                    "min": 22.787762,
                    "p50": 26.746679999999998,
                    "p95": 27.166662,
                    "p99": 27.166662,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 31.318661,
                    "min": 26.485260999999998,
                    "p50": 27.081801,
                    "p95": 31.318661,
                    "p99": 31.318661,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 381.049719,
                    "min": 336.236557,
                    "p50": 358.214278,
                    "p95": 381.049719,
                    "p99": 381.049719,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.018778,
                    "min": 124.514229,
                    "p50": 141.27364599999999,
                    "p95": 151.018778,
                    "p99": 151.018778,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4395.233497,
                    "min": 4075.4322469999997,
                    "p50": 4248.313913,
                    "p95": 4395.233497,
                    "p99": 4395.233497,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 988.93063,
                    "min": 730.330196,
                    "p50": 923.916384,
                    "p95": 988.93063,
                    "p99": 988.93063,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.601768,
                    "min": 239.963921,
                    "p50": 288.725865,
                    "p95": 352.601768,
                    "p99": 352.601768,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.52957999999998,
                    "min": 164.857791,
                    "p50": 205.020329,
                    "p95": 209.52957999999998,
                    "p99": 209.52957999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.854082,
                    "min": 242.75417099999999,
                    "p50": 292.076526,
                    "p95": 309.854082,
                    "p99": 309.854082,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1295.275944,
                    "min": 1107.3753729999999,
                    "p50": 1192.1792,
                    "p95": 1295.275944,
                    "p99": 1295.275944,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 680.656486,
                    "min": 500.53484899999995,
                    "p50": 573.745898,
                    "p95": 680.656486,
                    "p99": 680.656486,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 478.19669899999997,
                    "min": 427.130115,
                    "p50": 467.416211,
                    "p95": 478.19669899999997,
                    "p99": 478.19669899999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1644.7341769999998,
                    "min": 1491.7344759999999,
                    "p50": 1572.722816,
                    "p95": 1644.7341769999998,
                    "p99": 1644.7341769999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2370.142904,
                    "min": 1991.4872309999998,
                    "p50": 2131.947815,
                    "p95": 2370.142904,
                    "p99": 2370.142904,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 584.787365,
                    "min": 508.87600999999995,
                    "p50": 553.7676329999999,
                    "p95": 584.787365,
                    "p99": 584.787365,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 271.00429199999996,
                    "min": 201.42512,
                    "p50": 251.23921099999998,
                    "p95": 271.00429199999996,
                    "p99": 271.00429199999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 751.2832649999999,
                    "min": 687.000741,
                    "p50": 722.3183399999999,
                    "p95": 751.2832649999999,
                    "p99": 751.2832649999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 485.041246,
                    "min": 327.59299,
                    "p50": 364.16526899999997,
                    "p95": 485.041246,
                    "p99": 485.041246,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 588.336317,
                    "min": 456.181583,
                    "p50": 523.193218,
                    "p95": 588.336317,
                    "p99": 588.336317,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 670.578588,
                    "min": 554.0594689999999,
                    "p50": 631.895574,
                    "p95": 670.578588,
                    "p99": 670.578588,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 406.00187999999997,
                    "min": 314.59474,
                    "p50": 325.37850599999996,
                    "p95": 406.00187999999997,
                    "p99": 406.00187999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1581.722411,
                    "min": 1370.3716,
                    "p50": 1511.493458,
                    "p95": 1581.722411,
                    "p99": 1581.722411,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 305.938373,
                    "min": 186.8212,
                    "p50": 218.53137199999998,
                    "p95": 305.938373,
                    "p99": 305.938373,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 504.28995399999997,
                    "min": 420.407353,
                    "p50": 462.64802199999997,
                    "p95": 504.28995399999997,
                    "p99": 504.28995399999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 847.04454,
                    "min": 606.041603,
                    "p50": 822.9380199999999,
                    "p95": 847.04454,
                    "p99": 847.04454,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.036717,
                    "min": 230.773702,
                    "p50": 253.59918299999998,
                    "p95": 273.036717,
                    "p99": 273.036717,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 936.869736,
                    "min": 703.5244389999999,
                    "p50": 770.84587,
                    "p95": 936.869736,
                    "p99": 936.869736,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 528.3195999999999,
                    "min": 381.554191,
                    "p50": 475.915728,
                    "p95": 528.3195999999999,
                    "p99": 528.3195999999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 939.572016,
                    "min": 814.158589,
                    "p50": 902.307737,
                    "p95": 939.572016,
                    "p99": 939.572016,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 371.03790799999996,
                    "min": 292.837695,
                    "p50": 321.71234,
                    "p95": 371.03790799999996,
                    "p99": 371.03790799999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 622.5849479999999,
                    "min": 464.09687299999996,
                    "p50": 532.130844,
                    "p95": 622.5849479999999,
                    "p99": 622.5849479999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2143.358281,
                    "min": 1689.2047149999999,
                    "p50": 1932.451546,
                    "p95": 2143.358281,
                    "p99": 2143.358281,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 667.123823,
                    "min": 474.250167,
                    "p50": 608.905551,
                    "p95": 667.123823,
                    "p99": 667.123823,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 462.290999,
                    "min": 330.62411199999997,
                    "p50": 343.387771,
                    "p95": 462.290999,
                    "p99": 462.290999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 752.940247,
                    "min": 602.959425,
                    "p50": 656.606542,
                    "p95": 752.940247,
                    "p99": 752.940247,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 221.74902699999998,
                    "min": 156.407162,
                    "p50": 163.678014,
                    "p95": 221.74902699999998,
                    "p99": 221.74902699999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 758.420788,
                    "min": 598.890219,
                    "p50": 667.372935,
                    "p95": 758.420788,
                    "p99": 758.420788,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1448.735769,
                    "min": 837.7716399999999,
                    "p50": 975.9111009999999,
                    "p95": 1448.735769,
                    "p99": 1448.735769,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2723.743445,
                    "min": 2315.33506,
                    "p50": 2514.1307079999997,
                    "p95": 2723.743445,
                    "p99": 2723.743445,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 516.128931,
                    "min": 332.697072,
                    "p50": 402.34121999999996,
                    "p95": 516.128931,
                    "p99": 516.128931,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 922.5188499999999,
                    "min": 652.468983,
                    "p50": 716.7004,
                    "p95": 922.5188499999999,
                    "p99": 922.5188499999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 695.863929,
                    "min": 533.564271,
                    "p50": 594.981622,
                    "p95": 695.863929,
                    "p99": 695.863929,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1178.971492,
                    "min": 1049.000892,
                    "p50": 1068.739078,
                    "p95": 1178.971492,
                    "p99": 1178.971492,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1047.036692,
                    "min": 920.727132,
                    "p50": 950.848391,
                    "p95": 1047.036692,
                    "p99": 1047.036692,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1358.7442449999999,
                    "min": 1251.142621,
                    "p50": 1277.8072029999998,
                    "p95": 1358.7442449999999,
                    "p99": 1358.7442449999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1608.287766,
                    "min": 1538.6947699999998,
                    "p50": 1574.7086279999999,
                    "p95": 1608.287766,
                    "p99": 1608.287766,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1426.7282679999998,
                    "min": 1320.250764,
                    "p50": 1385.2095239999999,
                    "p95": 1426.7282679999998,
                    "p99": 1426.7282679999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1209.407876,
                    "min": 1120.980404,
                    "p50": 1162.632141,
                    "p95": 1209.407876,
                    "p99": 1209.407876,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2251.3781289999997,
                    "min": 2077.5830619999997,
                    "p50": 2131.390936,
                    "p95": 2251.3781289999997,
                    "p99": 2251.3781289999997,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 820.695797,
                    "min": 736.7588,
                    "p50": 780.382108,
                    "p95": 820.695797,
                    "p99": 820.695797,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 472.606458,
                    "min": 418.846146,
                    "p50": 458.433543,
                    "p95": 472.606458,
                    "p99": 472.606458,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2021.7417799999998,
                    "min": 1798.49622,
                    "p50": 1947.520652,
                    "p95": 2021.7417799999998,
                    "p99": 2021.7417799999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 930.54714,
                    "min": 856.9692739999999,
                    "p50": 910.210708,
                    "p95": 930.54714,
                    "p99": 930.54714,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1607.0412709999998,
                    "min": 1467.820743,
                    "p50": 1543.9723669999998,
                    "p95": 1607.0412709999998,
                    "p99": 1607.0412709999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 916.8368019999999,
                    "min": 854.53161,
                    "p50": 897.7581809999999,
                    "p95": 916.8368019999999,
                    "p99": 916.8368019999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2045.174875,
                    "min": 2003.517893,
                    "p50": 2022.022771,
                    "p95": 2045.174875,
                    "p99": 2045.174875,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2899.998259,
                    "min": 2864.9138089999997,
                    "p50": 2880.924853,
                    "p95": 2899.998259,
                    "p99": 2899.998259,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5725.2795559999995,
                    "min": 5634.506856,
                    "p50": 5679.718096,
                    "p95": 5725.2795559999995,
                    "p99": 5725.2795559999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1603.994289,
                    "min": 1577.295434,
                    "p50": 1596.067484,
                    "p95": 1603.994289,
                    "p99": 1603.994289,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 757.406422,
                    "min": 728.309405,
                    "p50": 742.402147,
                    "p95": 757.406422,
                    "p99": 757.406422,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 626.4587419999999,
                    "min": 597.146245,
                    "p50": 608.295086,
                    "p95": 626.4587419999999,
                    "p99": 626.4587419999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1744.2590619999999,
                    "min": 1704.742113,
                    "p50": 1728.3897029999998,
                    "p95": 1744.2590619999999,
                    "p99": 1744.2590619999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4298.4458079999995,
                    "min": 4235.199748999999,
                    "p50": 4269.80555,
                    "p95": 4298.4458079999995,
                    "p99": 4298.4458079999995,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2526.1039339999998,
                    "min": 2493.842721,
                    "p50": 2511.1626779999997,
                    "p95": 2526.1039339999998,
                    "p99": 2526.1039339999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2172.598821,
                    "min": 2141.497117,
                    "p50": 2155.575121,
                    "p95": 2172.598821,
                    "p99": 2172.598821,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1180.554736,
                    "min": 1162.050251,
                    "p50": 1172.9797959999999,
                    "p95": 1180.554736,
                    "p99": 1180.554736,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1470.549884,
                    "min": 1430.300728,
                    "p50": 1449.5584709999998,
                    "p95": 1470.549884,
                    "p99": 1470.549884,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1052.373062,
                    "min": 1007.7518329999999,
                    "p50": 1022.353846,
                    "p95": 1052.373062,
                    "p99": 1052.373062,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 466.50222199999996,
                    "min": 459.822817,
                    "p50": 461.864014,
                    "p95": 466.50222199999996,
                    "p99": 466.50222199999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1905.830194,
                    "min": 1860.232176,
                    "p50": 1881.339591,
                    "p95": 1905.830194,
                    "p99": 1905.830194,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1330.7128249999998,
                    "min": 1281.353546,
                    "p50": 1305.3087719999999,
                    "p95": 1330.7128249999998,
                    "p99": 1330.7128249999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 617.067415,
                    "min": 589.337389,
                    "p50": 603.480633,
                    "p95": 617.067415,
                    "p99": 617.067415,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1910.6591119999998,
                    "min": 1866.198211,
                    "p50": 1903.2667729999998,
                    "p95": 1910.6591119999998,
                    "p99": 1910.6591119999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3878.367195,
                    "min": 3786.4970679999997,
                    "p50": 3803.500972,
                    "p95": 3878.367195,
                    "p99": 3878.367195,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2103.7230139999997,
                    "min": 2067.403056,
                    "p50": 2089.780979,
                    "p95": 2103.7230139999997,
                    "p99": 2103.7230139999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5603.639988,
                    "min": 5462.042655,
                    "p50": 5568.989654999999,
                    "p95": 5603.639988,
                    "p99": 5603.639988,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1182.410343,
                    "min": 1132.532469,
                    "p50": 1160.729198,
                    "p95": 1182.410343,
                    "p99": 1182.410343,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1761.600076,
                    "min": 1702.570961,
                    "p50": 1737.150367,
                    "p95": 1761.600076,
                    "p99": 1761.600076,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7430.044046,
                    "min": 7216.989329999999,
                    "p50": 7377.140386,
                    "p95": 7430.044046,
                    "p99": 7430.044046,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1004.1233229999999,
                    "min": 978.7923639999999,
                    "p50": 996.5213379999999,
                    "p95": 1004.1233229999999,
                    "p99": 1004.1233229999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2549.408238,
                    "min": 2472.028738,
                    "p50": 2494.807137,
                    "p95": 2549.408238,
                    "p99": 2549.408238,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1358.0994799999999,
                    "min": 1310.718372,
                    "p50": 1334.013377,
                    "p95": 1358.0994799999999,
                    "p99": 1358.0994799999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 807.022961,
                    "min": 739.535136,
                    "p50": 756.244017,
                    "p95": 807.022961,
                    "p99": 807.022961,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2894.973336,
                    "min": 2783.163532,
                    "p50": 2827.633869,
                    "p95": 2894.973336,
                    "p99": 2894.973336,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2706.417818,
                    "min": 2617.052608,
                    "p50": 2675.393589,
                    "p95": 2706.417818,
                    "p99": 2706.417818,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3324.684597,
                    "min": 3251.5458329999997,
                    "p50": 3306.224256,
                    "p95": 3324.684597,
                    "p99": 3324.684597,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1562.755185,
                    "min": 1495.82212,
                    "p50": 1513.8277229999999,
                    "p95": 1562.755185,
                    "p99": 1562.755185,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2313.511861,
                    "min": 2240.888146,
                    "p50": 2276.898621,
                    "p95": 2313.511861,
                    "p99": 2313.511861,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 200.254134,
                    "min": 161.043833,
                    "p50": 192.159868,
                    "p95": 200.254134,
                    "p99": 200.254134,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 124.22833399999999,
                    "min": 115.35898499999999,
                    "p50": 123.484173,
                    "p95": 124.22833399999999,
                    "p99": 124.22833399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 297.95325199999996,
                    "min": 197.662158,
                    "p50": 216.235387,
                    "p95": 297.95325199999996,
                    "p99": 297.95325199999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 361.414365,
                    "min": 291.056067,
                    "p50": 335.594992,
                    "p95": 361.414365,
                    "p99": 361.414365,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1126.5697579999999,
                    "min": 1019.5299309999999,
                    "p50": 1094.621917,
                    "p95": 1126.5697579999999,
                    "p99": 1126.5697579999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 471.425054,
                    "min": 381.887707,
                    "p50": 436.69064099999997,
                    "p95": 471.425054,
                    "p99": 471.425054,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 257.95304,
                    "min": 127.475763,
                    "p50": 131.300286,
                    "p95": 257.95304,
                    "p99": 257.95304,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 138.394607,
                    "min": 41.780063,
                    "p50": 59.433336999999995,
                    "p95": 138.394607,
                    "p99": 138.394607,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 653.175116,
                    "min": 516.585327,
                    "p50": 544.498331,
                    "p95": 653.175116,
                    "p99": 653.175116,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 120.981797,
                    "min": 86.41689799999999,
                    "p50": 104.72858699999999,
                    "p95": 120.981797,
                    "p99": 120.981797,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 246.71803599999998,
                    "min": 99.906747,
                    "p50": 109.41739799999999,
                    "p95": 246.71803599999998,
                    "p99": 246.71803599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 169.485877,
                    "min": 81.345817,
                    "p50": 130.381038,
                    "p95": 169.485877,
                    "p99": 169.485877,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 197.809443,
                    "min": 177.40225999999998,
                    "p50": 186.135921,
                    "p95": 197.809443,
                    "p99": 197.809443,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 83.423384,
                    "min": 62.660157,
                    "p50": 80.344015,
                    "p95": 83.423384,
                    "p99": 83.423384,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 136.754501,
                    "min": 82.777428,
                    "p50": 89.360928,
                    "p95": 136.754501,
                    "p99": 136.754501,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 175.635317,
                    "min": 146.957485,
                    "p50": 169.109287,
                    "p95": 175.635317,
                    "p99": 175.635317,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.25638999999998,
                    "min": 138.631156,
                    "p50": 142.459896,
                    "p95": 183.25638999999998,
                    "p99": 183.25638999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 103.952929,
                    "min": 55.691638,
                    "p50": 68.15279,
                    "p95": 103.952929,
                    "p99": 103.952929,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 203.887113,
                    "min": 118.662706,
                    "p50": 147.81977,
                    "p95": 203.887113,
                    "p99": 203.887113,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2867.8140759999997,
                    "min": 2661.06182,
                    "p50": 2683.31614,
                    "p95": 2867.8140759999997,
                    "p99": 2867.8140759999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1208.6744899999999,
                    "min": 1055.9257109999999,
                    "p50": 1103.868897,
                    "p95": 1208.6744899999999,
                    "p99": 1208.6744899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 892.705978,
                    "min": 761.426039,
                    "p50": 794.4524349999999,
                    "p95": 892.705978,
                    "p99": 892.705978,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1998.9755519999999,
                    "min": 1817.882245,
                    "p50": 1854.6262929999998,
                    "p95": 1998.9755519999999,
                    "p99": 1998.9755519999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1306.6144,
                    "min": 1218.488314,
                    "p50": 1244.486641,
                    "p95": 1306.6144,
                    "p99": 1306.6144,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6470.600017,
                    "min": 5974.95019,
                    "p50": 6071.173295,
                    "p95": 6470.600017,
                    "p99": 6470.600017,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1808.112887,
                    "min": 1670.349616,
                    "p50": 1693.6173689999998,
                    "p95": 1808.112887,
                    "p99": 1808.112887,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1010.6724389999999,
                    "min": 919.8119509999999,
                    "p50": 941.045616,
                    "p95": 1010.6724389999999,
                    "p99": 1010.6724389999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2087.816589,
                    "min": 1958.6207829999998,
                    "p50": 1977.3832679999998,
                    "p95": 2087.816589,
                    "p99": 2087.816589,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4835.884465,
                    "min": 4480.98491,
                    "p50": 4545.626053999999,
                    "p95": 4835.884465,
                    "p99": 4835.884465,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2429.057403,
                    "min": 2271.499211,
                    "p50": 2292.286831,
                    "p95": 2429.057403,
                    "p99": 2429.057403,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3318.1322459999997,
                    "min": 3036.176689,
                    "p50": 3052.607978,
                    "p95": 3318.1322459999997,
                    "p99": 3318.1322459999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 511.54759299999995,
                    "min": 479.96124,
                    "p50": 488.834237,
                    "p95": 511.54759299999995,
                    "p99": 511.54759299999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2335.057374,
                    "min": 2104.087317,
                    "p50": 2161.775002,
                    "p95": 2335.057374,
                    "p99": 2335.057374,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 685.125775,
                    "min": 621.813823,
                    "p50": 641.821637,
                    "p95": 685.125775,
                    "p99": 685.125775,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1665.3342499999999,
                    "min": 1496.1924159999999,
                    "p50": 1527.146086,
                    "p95": 1665.3342499999999,
                    "p99": 1665.3342499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1459.968887,
                    "min": 1376.490884,
                    "p50": 1436.981211,
                    "p95": 1459.968887,
                    "p99": 1459.968887,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2483.448676,
                    "min": 2250.447184,
                    "p50": 2293.0900579999998,
                    "p95": 2483.448676,
                    "p99": 2483.448676,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 723.8794379999999,
                    "min": 605.9188899999999,
                    "p50": 633.105738,
                    "p95": 723.8794379999999,
                    "p99": 723.8794379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1479.7895979999998,
                    "min": 1366.864003,
                    "p50": 1426.134691,
                    "p95": 1479.7895979999998,
                    "p99": 1479.7895979999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2116.1178179999997,
                    "min": 1935.6360889999999,
                    "p50": 1989.1770869999998,
                    "p95": 2116.1178179999997,
                    "p99": 2116.1178179999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1645.203307,
                    "min": 1487.399173,
                    "p50": 1546.309286,
                    "p95": 1645.203307,
                    "p99": 1645.203307,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1865.068163,
                    "min": 1670.8007089999999,
                    "p50": 1728.5037929999999,
                    "p95": 1865.068163,
                    "p99": 1865.068163,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3228.391592,
                    "min": 3001.419367,
                    "p50": 3032.604575,
                    "p95": 3228.391592,
                    "p99": 3228.391592,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4869.990889,
                    "min": 4527.699828,
                    "p50": 4557.851485,
                    "p95": 4869.990889,
                    "p99": 4869.990889,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2001.7266379999999,
                    "min": 1792.2338599999998,
                    "p50": 1857.4151009999998,
                    "p95": 2001.7266379999999,
                    "p99": 2001.7266379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 878.875102,
                    "min": 776.325212,
                    "p50": 793.807697,
                    "p95": 878.875102,
                    "p99": 878.875102,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 522.290487,
                    "min": 479.394452,
                    "p50": 489.016664,
                    "p95": 522.290487,
                    "p99": 522.290487,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 992.582624,
                    "min": 927.166918,
                    "p50": 938.9400489999999,
                    "p95": 992.582624,
                    "p99": 992.582624,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2834.2153049999997,
                    "min": 2621.275964,
                    "p50": 2684.3462059999997,
                    "p95": 2834.2153049999997,
                    "p99": 2834.2153049999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1231.9990289999998,
                    "min": 1078.694372,
                    "p50": 1097.202059,
                    "p95": 1231.9990289999998,
                    "p99": 1231.9990289999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2320.224604,
                    "min": 2117.605845,
                    "p50": 2146.484327,
                    "p95": 2320.224604,
                    "p99": 2320.224604,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1327.542141,
                    "min": 1208.262723,
                    "p50": 1243.371617,
                    "p95": 1327.542141,
                    "p99": 1327.542141,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1419.770664,
                    "min": 1283.219992,
                    "p50": 1354.871185,
                    "p95": 1419.770664,
                    "p99": 1419.770664,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 224.24213699999999,
                    "min": 165.990311,
                    "p50": 198.416519,
                    "p95": 224.24213699999999,
                    "p99": 224.24213699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 735.897882,
                    "min": 614.2827179999999,
                    "p50": 698.135993,
                    "p95": 735.897882,
                    "p99": 735.897882,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 199.65441199999998,
                    "min": 99.971806,
                    "p50": 127.60107099999999,
                    "p95": 199.65441199999998,
                    "p99": 199.65441199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 90.558014,
                    "min": 47.866291999999994,
                    "p50": 76.356865,
                    "p95": 90.558014,
                    "p99": 90.558014,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 239.62910499999998,
                    "min": 166.242164,
                    "p50": 176.43883499999998,
                    "p95": 239.62910499999998,
                    "p99": 239.62910499999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 605.057537,
                    "min": 538.31445,
                    "p50": 568.945624,
                    "p95": 605.057537,
                    "p99": 605.057537,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 261.494289,
                    "min": 206.91060199999998,
                    "p50": 233.644162,
                    "p95": 261.494289,
                    "p99": 261.494289,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 246.870936,
                    "min": 172.154633,
                    "p50": 192.823999,
                    "p95": 246.870936,
                    "p99": 246.870936,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 296.844875,
                    "min": 226.424587,
                    "p50": 257.33901099999997,
                    "p95": 296.844875,
                    "p99": 296.844875,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.27023,
                    "min": 72.158547,
                    "p50": 94.512226,
                    "p95": 96.27023,
                    "p99": 96.27023,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 210.80030599999998,
                    "min": 127.86020699999999,
                    "p50": 166.059159,
                    "p95": 210.80030599999998,
                    "p99": 210.80030599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 97.992865,
                    "min": 57.874734,
                    "p50": 70.153329,
                    "p95": 97.992865,
                    "p99": 97.992865,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 184.130383,
                    "min": 108.476519,
                    "p50": 131.009748,
                    "p95": 184.130383,
                    "p99": 184.130383,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 135.730219,
                    "min": 88.66420699999999,
                    "p50": 107.784973,
                    "p95": 135.730219,
                    "p99": 135.730219,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 180.223641,
                    "min": 103.762095,
                    "p50": 149.281498,
                    "p95": 180.223641,
                    "p99": 180.223641,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.79784999999998,
                    "min": 146.972603,
                    "p50": 152.682184,
                    "p95": 185.79784999999998,
                    "p99": 185.79784999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 455.11499,
                    "min": 375.15158199999996,
                    "p50": 404.510985,
                    "p95": 455.11499,
                    "p99": 455.11499,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 316.14570199999997,
                    "min": 265.197882,
                    "p50": 278.60252099999997,
                    "p95": 316.14570199999997,
                    "p99": 316.14570199999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 117.090419,
                    "min": 45.050863,
                    "p50": 81.065411,
                    "p95": 117.090419,
                    "p99": 117.090419,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 403.307733,
                    "min": 316.149278,
                    "p50": 367.193452,
                    "p95": 403.307733,
                    "p99": 403.307733,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 340.389025,
                    "min": 213.768546,
                    "p50": 310.358336,
                    "p95": 340.389025,
                    "p99": 340.389025,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 249.27623799999998,
                    "min": 158.756375,
                    "p50": 244.70120699999998,
                    "p95": 249.27623799999998,
                    "p99": 249.27623799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 176.56115,
                    "min": 107.277688,
                    "p50": 109.507341,
                    "p95": 176.56115,
                    "p99": 176.56115,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 997.6942359999999,
                    "min": 884.526796,
                    "p50": 964.041574,
                    "p95": 997.6942359999999,
                    "p99": 997.6942359999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 540.8744899999999,
                    "min": 380.72783899999996,
                    "p50": 467.992914,
                    "p95": 540.8744899999999,
                    "p99": 540.8744899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.764363,
                    "min": 107.009547,
                    "p50": 131.293646,
                    "p95": 201.764363,
                    "p99": 201.764363,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 185.889453,
                    "min": 116.49749999999999,
                    "p50": 140.374063,
                    "p95": 185.889453,
                    "p99": 185.889453,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 96.63641,
                    "min": 73.14707299999999,
                    "p50": 94.446968,
                    "p95": 96.63641,
                    "p99": 96.63641,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 183.546807,
                    "min": 90.927664,
                    "p50": 100.568152,
                    "p95": 183.546807,
                    "p99": 183.546807,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 91.912694,
                    "min": 44.352927,
                    "p50": 60.928934,
                    "p95": 91.912694,
                    "p99": 91.912694,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 196.05267999999998,
                    "min": 136.17264,
                    "p50": 162.612485,
                    "p95": 196.05267999999998,
                    "p99": 196.05267999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 133.268073,
                    "min": 98.538806,
                    "p50": 113.648983,
                    "p95": 133.268073,
                    "p99": 133.268073,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 195.073446,
                    "min": 114.577321,
                    "p50": 169.40134799999998,
                    "p95": 195.073446,
                    "p99": 195.073446,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.980382,
                    "min": 84.24412199999999,
                    "p50": 89.241253,
                    "p95": 135.980382,
                    "p99": 135.980382,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 175.281678,
                    "min": 123.381935,
                    "p50": 137.10954999999998,
                    "p95": 175.281678,
                    "p99": 175.281678,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 100.91527099999999,
                    "min": 68.855288,
                    "p50": 81.123425,
                    "p95": 100.91527099999999,
                    "p99": 100.91527099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 100.17120399999999,
                    "min": 31.722053,
                    "p50": 43.058383,
                    "p95": 100.17120399999999,
                    "p99": 100.17120399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 252.953296,
                    "min": 197.46036999999998,
                    "p50": 234.674063,
                    "p95": 252.953296,
                    "p99": 252.953296,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 203.733131,
                    "min": 120.112895,
                    "p50": 127.206915,
                    "p95": 203.733131,
                    "p99": 203.733131,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 343.30316999999997,
                    "min": 261.896791,
                    "p50": 288.123175,
                    "p95": 343.30316999999997,
                    "p99": 343.30316999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 223.777401,
                    "min": 110.67007299999999,
                    "p50": 118.166877,
                    "p95": 223.777401,
                    "p99": 223.777401,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 134.731712,
                    "min": 93.606731,
                    "p50": 105.322024,
                    "p95": 134.731712,
                    "p99": 134.731712,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 111.82301899999999,
                    "min": 74.95702399999999,
                    "p50": 82.18467299999999,
                    "p95": 111.82301899999999,
                    "p99": 111.82301899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 254.669493,
                    "min": 182.94826,
                    "p50": 202.511121,
                    "p95": 254.669493,
                    "p99": 254.669493,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 217.96785,
                    "min": 150.469271,
                    "p50": 161.830256,
                    "p95": 217.96785,
                    "p99": 217.96785,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 434.926109,
                    "min": 365.13320999999996,
                    "p50": 415.432504,
                    "p95": 434.926109,
                    "p99": 434.926109,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 188.72663,
                    "min": 121.541686,
                    "p50": 147.294436,
                    "p95": 188.72663,
                    "p99": 188.72663,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1381.349453,
                    "min": 1268.793185,
                    "p50": 1334.5572459999999,
                    "p95": 1381.349453,
                    "p99": 1381.349453,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 187.024138,
                    "min": 92.615078,
                    "p50": 96.713219,
                    "p95": 187.024138,
                    "p99": 187.024138,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 229.217832,
                    "min": 182.86112,
                    "p50": 204.212276,
                    "p95": 229.217832,
                    "p99": 229.217832,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 212.065893,
                    "min": 166.34494999999998,
                    "p50": 177.480186,
                    "p95": 212.065893,
                    "p99": 212.065893,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 568.989215,
                    "min": 492.442319,
                    "p50": 550.690978,
                    "p95": 568.989215,
                    "p99": 568.989215,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.930081,
                    "min": 51.521505999999995,
                    "p50": 66.26764399999999,
                    "p95": 70.930081,
                    "p99": 70.930081,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 255.25000599999998,
                    "min": 200.89649599999998,
                    "p50": 223.44626399999999,
                    "p95": 255.25000599999998,
                    "p99": 255.25000599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 191.89996299999999,
                    "min": 143.07667899999998,
                    "p50": 151.703226,
                    "p95": 191.89996299999999,
                    "p99": 191.89996299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 707.210199,
                    "min": 627.879286,
                    "p50": 682.600876,
                    "p95": 707.210199,
                    "p99": 707.210199,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1079.878002,
                    "min": 932.6289989999999,
                    "p50": 944.859659,
                    "p95": 1079.878002,
                    "p99": 1079.878002,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 818.176055,
                    "min": 791.490879,
                    "p50": 811.7382339999999,
                    "p95": 818.176055,
                    "p99": 818.176055,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1228.7850409999999,
                    "min": 1178.120262,
                    "p50": 1202.01614,
                    "p95": 1228.7850409999999,
                    "p99": 1228.7850409999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 422.64498699999996,
                    "min": 405.214651,
                    "p50": 418.481474,
                    "p95": 422.64498699999996,
                    "p99": 422.64498699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 552.641973,
                    "min": 521.088616,
                    "p50": 547.557582,
                    "p95": 552.641973,
                    "p99": 552.641973,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1085.9341749999999,
                    "min": 1062.7510439999999,
                    "p50": 1070.535257,
                    "p95": 1085.9341749999999,
                    "p99": 1085.9341749999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 686.192736,
                    "min": 666.842311,
                    "p50": 675.21925,
                    "p95": 686.192736,
                    "p99": 686.192736,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1552.6314479999999,
                    "min": 1465.663284,
                    "p50": 1497.991478,
                    "p95": 1552.6314479999999,
                    "p99": 1552.6314479999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 483.308761,
                    "min": 430.76172199999996,
                    "p50": 472.86610399999995,
                    "p95": 483.308761,
                    "p99": 483.308761,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1206.262238,
                    "min": 1168.259699,
                    "p50": 1183.638763,
                    "p95": 1206.262238,
                    "p99": 1206.262238,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 918.235013,
                    "min": 875.9400039999999,
                    "p50": 902.490495,
                    "p95": 918.235013,
                    "p99": 918.235013,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1062.567565,
                    "min": 1030.891466,
                    "p50": 1049.381972,
                    "p95": 1062.567565,
                    "p99": 1062.567565,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1355.883742,
                    "min": 1309.168813,
                    "p50": 1337.7357339999999,
                    "p95": 1355.883742,
                    "p99": 1355.883742,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 629.845102,
                    "min": 596.4667509999999,
                    "p50": 610.620969,
                    "p95": 629.845102,
                    "p99": 629.845102,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 776.8190069999999,
                    "min": 750.728303,
                    "p50": 759.229883,
                    "p95": 776.8190069999999,
                    "p99": 776.8190069999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1107.013368,
                    "min": 1010.209931,
                    "p50": 1036.890802,
                    "p95": 1107.013368,
                    "p99": 1107.013368,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1954.508296,
                    "min": 1757.621836,
                    "p50": 1793.411023,
                    "p95": 1954.508296,
                    "p99": 1954.508296,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2485.1334159999997,
                    "min": 2253.61453,
                    "p50": 2321.075238,
                    "p95": 2485.1334159999997,
                    "p99": 2485.1334159999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1677.061814,
                    "min": 1538.469036,
                    "p50": 1554.811912,
                    "p95": 1677.061814,
                    "p99": 1677.061814,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3344.7254279999997,
                    "min": 2988.794108,
                    "p50": 3091.2114939999997,
                    "p95": 3344.7254279999997,
                    "p99": 3344.7254279999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 866.2536849999999,
                    "min": 772.012871,
                    "p50": 786.4203239999999,
                    "p95": 866.2536849999999,
                    "p99": 866.2536849999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2771.886732,
                    "min": 2510.469477,
                    "p50": 2554.822522,
                    "p95": 2771.886732,
                    "p99": 2771.886732,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2269.432018,
                    "min": 1972.60095,
                    "p50": 2048.0763389999997,
                    "p95": 2269.432018,
                    "p99": 2269.432018,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1383.985441,
                    "min": 1268.071461,
                    "p50": 1287.537943,
                    "p95": 1383.985441,
                    "p99": 1383.985441,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2996.5005939999996,
                    "min": 2729.770451,
                    "p50": 2796.93509,
                    "p95": 2996.5005939999996,
                    "p99": 2996.5005939999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 831.955481,
                    "min": 809.116173,
                    "p50": 820.0937359999999,
                    "p95": 831.955481,
                    "p99": 831.955481,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1106.0464279999999,
                    "min": 1081.298572,
                    "p50": 1092.875393,
                    "p95": 1106.0464279999999,
                    "p99": 1106.0464279999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 302.326326,
                    "min": 282.850814,
                    "p50": 300.124152,
                    "p95": 302.326326,
                    "p99": 302.326326,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 569.121459,
                    "min": 551.852088,
                    "p50": 562.0453749999999,
                    "p95": 569.121459,
                    "p99": 569.121459,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 963.25698,
                    "min": 946.458931,
                    "p50": 959.290716,
                    "p95": 963.25698,
                    "p99": 963.25698,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 439.58595499999996,
                    "min": 420.81496899999996,
                    "p50": 431.936719,
                    "p95": 439.58595499999996,
                    "p99": 439.58595499999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 696.918083,
                    "min": 684.453358,
                    "p50": 690.5258739999999,
                    "p95": 696.918083,
                    "p99": 696.918083,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2318.632826,
                    "min": 2069.867743,
                    "p50": 2141.268233,
                    "p95": 2318.632826,
                    "p99": 2318.632826,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1180.459842,
                    "min": 1060.667575,
                    "p50": 1090.7414549999999,
                    "p95": 1180.459842,
                    "p99": 1180.459842,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 699.284672,
                    "min": 622.89689,
                    "p50": 639.533401,
                    "p95": 699.284672,
                    "p99": 699.284672,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2170.9801429999998,
                    "min": 1940.2441469999999,
                    "p50": 1981.789221,
                    "p95": 2170.9801429999998,
                    "p99": 2170.9801429999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1688.191675,
                    "min": 1493.8511919999999,
                    "p50": 1536.591774,
                    "p95": 1688.191675,
                    "p99": 1688.191675,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1360.944378,
                    "min": 1204.853547,
                    "p50": 1234.274352,
                    "p95": 1360.944378,
                    "p99": 1360.944378,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2004.9238309999998,
                    "min": 1771.504808,
                    "p50": 1832.567357,
                    "p95": 2004.9238309999998,
                    "p99": 2004.9238309999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 848.9282059999999,
                    "min": 774.073299,
                    "p50": 789.609666,
                    "p95": 848.9282059999999,
                    "p99": 848.9282059999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 516.267737,
                    "min": 480.03428099999996,
                    "p50": 491.623562,
                    "p95": 516.267737,
                    "p99": 516.267737,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2930.922702,
                    "min": 2625.5409139999997,
                    "p50": 2688.359607,
                    "p95": 2930.922702,
                    "p99": 2930.922702,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2481.6846929999997,
                    "min": 2224.681311,
                    "p50": 2292.465394,
                    "p95": 2481.6846929999997,
                    "p99": 2481.6846929999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3298.5344579999996,
                    "min": 2948.893352,
                    "p50": 3031.1818639999997,
                    "p95": 3298.5344579999996,
                    "p99": 3298.5344579999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1508.595805,
                    "min": 1341.4913259999998,
                    "p50": 1387.2734759999998,
                    "p95": 1508.595805,
                    "p99": 1508.595805,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1842.656716,
                    "min": 1605.7998479999999,
                    "p50": 1694.966199,
                    "p95": 1842.656716,
                    "p99": 1842.656716,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1011.7668309999999,
                    "min": 918.253426,
                    "p50": 930.898153,
                    "p95": 1011.7668309999999,
                    "p99": 1011.7668309999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2182.321167,
                    "min": 2008.832318,
                    "p50": 2075.716601,
                    "p95": 2182.321167,
                    "p99": 2182.321167,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 854.1805899999999,
                    "min": 806.742861,
                    "p50": 820.902151,
                    "p95": 854.1805899999999,
                    "p99": 854.1805899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2571.756264,
                    "min": 2335.6587649999997,
                    "p50": 2378.7206659999997,
                    "p95": 2571.756264,
                    "p99": 2571.756264,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1713.5642389999998,
                    "min": 1551.597024,
                    "p50": 1598.0442269999999,
                    "p95": 1713.5642389999998,
                    "p99": 1713.5642389999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 695.113288,
                    "min": 648.177825,
                    "p50": 670.004011,
                    "p95": 695.113288,
                    "p99": 695.113288,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1041.002053,
                    "min": 954.730108,
                    "p50": 981.442991,
                    "p95": 1041.002053,
                    "p99": 1041.002053,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2031.122787,
                    "min": 1861.197997,
                    "p50": 1921.9581939999998,
                    "p95": 2031.122787,
                    "p99": 2031.122787,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2390.640738,
                    "min": 2160.985961,
                    "p50": 2235.106343,
                    "p95": 2390.640738,
                    "p99": 2390.640738,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3393.730546,
                    "min": 3096.890962,
                    "p50": 3161.782237,
                    "p95": 3393.730546,
                    "p99": 3393.730546,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1214.1895809999999,
                    "min": 1093.798665,
                    "p50": 1129.0410669999999,
                    "p95": 1214.1895809999999,
                    "p99": 1214.1895809999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2965.458861,
                    "min": 2712.193549,
                    "p50": 2771.264214,
                    "p95": 2965.458861,
                    "p99": 2965.458861,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1388.5912369999999,
                    "min": 1239.0363579999998,
                    "p50": 1280.867738,
                    "p95": 1388.5912369999999,
                    "p99": 1388.5912369999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1888.927224,
                    "min": 1695.189332,
                    "p50": 1763.8393859999999,
                    "p95": 1888.927224,
                    "p99": 1888.927224,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1548.670923,
                    "min": 1389.6803419999999,
                    "p50": 1448.497394,
                    "p95": 1548.670923,
                    "p99": 1548.670923,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 534.1515089999999,
                    "min": 492.60790299999996,
                    "p50": 504.19888499999996,
                    "p95": 534.1515089999999,
                    "p99": 534.1515089999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 862.012393,
                    "min": 750.72827,
                    "p50": 801.9553169999999,
                    "p95": 862.012393,
                    "p99": 862.012393,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1363.3837409999999,
                    "min": 1205.04925,
                    "p50": 1263.0394159999998,
                    "p95": 1363.3837409999999,
                    "p99": 1363.3837409999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1184.243391,
                    "min": 1058.4021539999999,
                    "p50": 1098.836524,
                    "p95": 1184.243391,
                    "p99": 1184.243391,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2923.3824769999997,
                    "min": 2587.62898,
                    "p50": 2683.1163979999997,
                    "p95": 2923.3824769999997,
                    "p99": 2923.3824769999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2491.926447,
                    "min": 2240.614548,
                    "p50": 2295.098494,
                    "p95": 2491.926447,
                    "p99": 2491.926447,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 532.14203,
                    "min": 481.091952,
                    "p50": 491.53446499999995,
                    "p95": 532.14203,
                    "p99": 532.14203,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1861.460993,
                    "min": 1658.870347,
                    "p50": 1702.385171,
                    "p95": 1861.460993,
                    "p99": 1861.460993,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1701.733927,
                    "min": 1503.9594089999998,
                    "p50": 1544.4997119999998,
                    "p95": 1701.733927,
                    "p99": 1701.733927,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 693.117814,
                    "min": 591.86837,
                    "p50": 646.3192389999999,
                    "p95": 693.117814,
                    "p99": 693.117814,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2012.543629,
                    "min": 1772.461905,
                    "p50": 1848.303579,
                    "p95": 2012.543629,
                    "p99": 2012.543629,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1522.51711,
                    "min": 1362.18988,
                    "p50": 1392.843299,
                    "p95": 1522.51711,
                    "p99": 1522.51711,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3320.0895739999996,
                    "min": 2938.514689,
                    "p50": 3079.873482,
                    "p95": 3320.0895739999996,
                    "p99": 3320.0895739999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2298.777428,
                    "min": 2091.385467,
                    "p50": 2147.541174,
                    "p95": 2298.777428,
                    "p99": 2298.777428,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 987.716112,
                    "min": 916.807276,
                    "p50": 945.2742519999999,
                    "p95": 987.716112,
                    "p99": 987.716112,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2172.486155,
                    "min": 1950.5784999999998,
                    "p50": 2003.035719,
                    "p95": 2172.486155,
                    "p99": 2172.486155,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3317.697151,
                    "min": 2972.169143,
                    "p50": 3028.2631469999997,
                    "p95": 3317.697151,
                    "p99": 3317.697151,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 696.056439,
                    "min": 626.4024949999999,
                    "p50": 639.671739,
                    "p95": 696.056439,
                    "p99": 696.056439,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1513.555598,
                    "min": 1348.714477,
                    "p50": 1380.958242,
                    "p95": 1513.555598,
                    "p99": 1513.555598,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1680.937473,
                    "min": 1487.8426259999999,
                    "p50": 1547.836282,
                    "p95": 1680.937473,
                    "p99": 1680.937473,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1846.7166339999999,
                    "min": 1598.762192,
                    "p50": 1684.0581439999999,
                    "p95": 1846.7166339999999,
                    "p99": 1846.7166339999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2900.3215689999997,
                    "min": 2569.423887,
                    "p50": 2655.68907,
                    "p95": 2900.3215689999997,
                    "p99": 2900.3215689999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1993.424579,
                    "min": 1777.1624419999998,
                    "p50": 1832.669165,
                    "p95": 1993.424579,
                    "p99": 1993.424579,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2145.332562,
                    "min": 1949.303275,
                    "p50": 2008.716131,
                    "p95": 2145.332562,
                    "p99": 2145.332562,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 524.2077899999999,
                    "min": 479.457361,
                    "p50": 486.338326,
                    "p95": 524.2077899999999,
                    "p99": 524.2077899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1018.1457519999999,
                    "min": 888.356082,
                    "p50": 940.2346779999999,
                    "p95": 1018.1457519999999,
                    "p99": 1018.1457519999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 855.675111,
                    "min": 768.4393249999999,
                    "p50": 791.278743,
                    "p95": 855.675111,
                    "p99": 855.675111,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2501.879129,
                    "min": 2229.899316,
                    "p50": 2287.487052,
                    "p95": 2501.879129,
                    "p99": 2501.879129,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1340.922985,
                    "min": 1211.044019,
                    "p50": 1239.222425,
                    "p95": 1340.922985,
                    "p99": 1340.922985,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2320.029115,
                    "min": 2081.141878,
                    "p50": 2136.932178,
                    "p95": 2320.029115,
                    "p99": 2320.029115,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1180.592246,
                    "min": 1058.065208,
                    "p50": 1080.719536,
                    "p95": 1180.592246,
                    "p99": 1180.592246,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 841.228303,
                    "min": 757.655086,
                    "p50": 792.160414,
                    "p95": 841.228303,
                    "p99": 841.228303,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.07254899999998,
                    "min": 185.537908,
                    "p50": 201.46020199999998,
                    "p95": 217.07254899999998,
                    "p99": 217.07254899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4448.311608999999,
                    "min": 4002.7092509999998,
                    "p50": 4116.292553,
                    "p95": 4448.311608999999,
                    "p99": 4448.311608999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 926.1254889999999,
                    "min": 830.9442409999999,
                    "p50": 856.9632849999999,
                    "p95": 926.1254889999999,
                    "p99": 926.1254889999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1386.823279,
                    "min": 1232.745767,
                    "p50": 1257.0130239999999,
                    "p95": 1386.823279,
                    "p99": 1386.823279,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 484.826347,
                    "min": 433.536034,
                    "p50": 448.03077099999996,
                    "p95": 484.826347,
                    "p99": 484.826347,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1809.8221369999999,
                    "min": 1619.932613,
                    "p50": 1669.1901329999998,
                    "p95": 1809.8221369999999,
                    "p99": 1809.8221369999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 302.447182,
                    "min": 276.00851,
                    "p50": 285.313939,
                    "p95": 302.447182,
                    "p99": 302.447182,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 392.890276,
                    "min": 325.185335,
                    "p50": 365.118018,
                    "p95": 392.890276,
                    "p99": 392.890276,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 162.957401,
                    "min": 135.19193199999998,
                    "p50": 159.283648,
                    "p95": 162.957401,
                    "p99": 162.957401,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.167305,
                    "min": 385.41828599999997,
                    "p50": 407.07330099999996,
                    "p95": 435.167305,
                    "p99": 435.167305,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 347.256308,
                    "min": 300.315155,
                    "p50": 325.250299,
                    "p95": 347.256308,
                    "p99": 347.256308,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 522.5528469999999,
                    "min": 476.44543,
                    "p50": 487.82671,
                    "p95": 522.5528469999999,
                    "p99": 522.5528469999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 604.7204889999999,
                    "min": 556.090317,
                    "p50": 573.318278,
                    "p95": 604.7204889999999,
                    "p99": 604.7204889999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 567.692403,
                    "min": 492.79150899999996,
                    "p50": 521.158836,
                    "p95": 567.692403,
                    "p99": 567.692403,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2231.82424,
                    "min": 2018.871391,
                    "p50": 2070.399164,
                    "p95": 2231.82424,
                    "p99": 2231.82424,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.642759,
                    "min": 204.905778,
                    "p50": 238.408664,
                    "p95": 257.642759,
                    "p99": 257.642759,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 672.5904009999999,
                    "min": 576.867409,
                    "p50": 609.76482,
                    "p95": 672.5904009999999,
                    "p99": 672.5904009999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 705.170364,
                    "min": 610.2689849999999,
                    "p50": 645.158088,
                    "p95": 705.170364,
                    "p99": 705.170364,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1087.536467,
                    "min": 1019.9928279999999,
                    "p50": 1047.750168,
                    "p95": 1087.536467,
                    "p99": 1087.536467,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 245.397901,
                    "min": 207.651871,
                    "p50": 241.587526,
                    "p95": 245.397901,
                    "p99": 245.397901,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1428.725441,
                    "min": 1344.380502,
                    "p50": 1394.8331879999998,
                    "p95": 1428.725441,
                    "p99": 1428.725441,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 727.571475,
                    "min": 695.845842,
                    "p50": 715.841266,
                    "p95": 727.571475,
                    "p99": 727.571475,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 519.443139,
                    "min": 488.660573,
                    "p50": 511.610711,
                    "p95": 519.443139,
                    "p99": 519.443139,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 554.132895,
                    "min": 530.264415,
                    "p50": 546.312874,
                    "p95": 554.132895,
                    "p99": 554.132895,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 486.874129,
                    "min": 463.74537399999997,
                    "p50": 480.846254,
                    "p95": 486.874129,
                    "p99": 486.874129,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 642.471359,
                    "min": 609.557638,
                    "p50": 635.373461,
                    "p95": 642.471359,
                    "p99": 642.471359,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 142.16510499999998,
                    "min": 129.819246,
                    "p50": 139.19795399999998,
                    "p95": 142.16510499999998,
                    "p99": 142.16510499999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3507.349952,
                    "min": 3315.0570749999997,
                    "p50": 3403.840439,
                    "p95": 3507.349952,
                    "p99": 3507.349952,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 173.512916,
                    "min": 134.189044,
                    "p50": 171.65413099999998,
                    "p95": 173.512916,
                    "p99": 173.512916,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 209.978396,
                    "min": 192.673014,
                    "p50": 203.865341,
                    "p95": 209.978396,
                    "p99": 209.978396,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 319.581723,
                    "min": 272.473301,
                    "p50": 309.79053899999997,
                    "p95": 319.581723,
                    "p99": 319.581723,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 456.700614,
                    "min": 435.49805499999997,
                    "p50": 444.129056,
                    "p95": 456.700614,
                    "p99": 456.700614,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 346.198686,
                    "min": 315.30170499999997,
                    "p50": 344.09089,
                    "p95": 346.198686,
                    "p99": 346.198686,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 419.957609,
                    "min": 401.503735,
                    "p50": 411.953178,
                    "p95": 419.957609,
                    "p99": 419.957609,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 281.834162,
                    "min": 234.702014,
                    "p50": 276.447732,
                    "p95": 281.834162,
                    "p99": 281.834162,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 382.46619599999997,
                    "min": 341.298677,
                    "p50": 374.250101,
                    "p95": 382.46619599999997,
                    "p99": 382.46619599999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom16KBytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1762.251845,
                    "min": 1648.119547,
                    "p50": 1710.675174,
                    "p95": 1762.251845,
                    "p99": 1762.251845,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 592.62245,
                    "min": 545.327683,
                    "p50": 561.473029,
                    "p95": 592.62245,
                    "p99": 592.62245,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4397.97296,
                    "min": 3987.600328,
                    "p50": 4086.6607289999997,
                    "p95": 4397.97296,
                    "p99": 4397.97296,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.791057,
                    "min": 588.0130839999999,
                    "p50": 611.9697269999999,
                    "p95": 656.791057,
                    "p99": 656.791057,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 438.95570699999996,
                    "min": 385.31996599999997,
                    "p50": 402.77450699999997,
                    "p95": 438.95570699999996,
                    "p99": 438.95570699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 812.0401969999999,
                    "min": 727.244302,
                    "p50": 747.2762409999999,
                    "p95": 812.0401969999999,
                    "p99": 812.0401969999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 924.152823,
                    "min": 830.25148,
                    "p50": 851.6768549999999,
                    "p95": 924.152823,
                    "p99": 924.152823,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 266.64018999999996,
                    "min": 230.434172,
                    "p50": 244.20385399999998,
                    "p95": 266.64018999999996,
                    "p99": 266.64018999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 467.67796799999996,
                    "min": 442.56627499999996,
                    "p50": 446.62251999999995,
                    "p95": 467.67796799999996,
                    "p99": 467.67796799999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 343.298739,
                    "min": 315.35387,
                    "p50": 325.645717,
                    "p95": 343.298739,
                    "p99": 343.298739,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 660.171461,
                    "min": 627.798991,
                    "p50": 652.949338,
                    "p95": 660.171461,
                    "p99": 660.171461,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 559.968536,
                    "min": 508.940743,
                    "p50": 520.311602,
                    "p95": 559.968536,
                    "p99": 559.968536,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1767.565257,
                    "min": 1617.4504479999998,
                    "p50": 1662.011499,
                    "p95": 1767.565257,
                    "p99": 1767.565257,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1370.254135,
                    "min": 1228.9767669999999,
                    "p50": 1263.240824,
                    "p95": 1370.254135,
                    "p99": 1370.254135,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 517.235994,
                    "min": 446.618922,
                    "p50": 482.010787,
                    "p95": 517.235994,
                    "p99": 517.235994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 164.785583,
                    "min": 141.40320499999999,
                    "p50": 159.231627,
                    "p95": 164.785583,
                    "p99": 164.785583,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 392.11875699999996,
                    "min": 348.209411,
                    "p50": 362.224983,
                    "p95": 392.11875699999996,
                    "p99": 392.11875699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 216.410437,
                    "min": 177.819179,
                    "p50": 200.2773,
                    "p95": 216.410437,
                    "p99": 216.410437,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.209719,
                    "min": 236.779426,
                    "p50": 282.08194299999997,
                    "p95": 306.209719,
                    "p99": 306.209719,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2242.251627,
                    "min": 1984.342706,
                    "p50": 2059.582218,
                    "p95": 2242.251627,
                    "p99": 2242.251627,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 442.544825,
                    "min": 420.438115,
                    "p50": 438.274538,
                    "p95": 442.544825,
                    "p99": 442.544825,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 294.291719,
                    "min": 250.812321,
                    "p50": 284.76750699999997,
                    "p95": 294.291719,
                    "p99": 294.291719,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 188.970374,
                    "min": 145.641063,
                    "p50": 182.447643,
                    "p95": 188.970374,
                    "p99": 188.970374,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 336.76025799999996,
                    "min": 291.849389,
                    "p50": 328.387232,
                    "p95": 336.76025799999996,
                    "p99": 336.76025799999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 778.385901,
                    "min": 712.7543059999999,
                    "p50": 757.597847,
                    "p95": 778.385901,
                    "p99": 778.385901,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.244573,
                    "min": 112.49458,
                    "p50": 143.89606899999998,
                    "p95": 152.244573,
                    "p99": 152.244573,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3716.0871429999997,
                    "min": 3556.706428,
                    "p50": 3677.393737,
                    "p95": 3716.0871429999997,
                    "p99": 3716.0871429999997,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 679.96772,
                    "min": 658.88806,
                    "p50": 672.8994319999999,
                    "p95": 679.96772,
                    "p99": 679.96772,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.746284,
                    "min": 210.888879,
                    "p50": 221.27334,
                    "p95": 222.746284,
                    "p99": 222.746284,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 405.918657,
                    "min": 389.401076,
                    "p50": 403.601505,
                    "p95": 405.918657,
                    "p99": 405.918657,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 555.006257,
                    "min": 529.963818,
                    "p50": 544.1144469999999,
                    "p95": 555.006257,
                    "p99": 555.006257,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 253.202511,
                    "min": 239.15136099999998,
                    "p50": 249.504688,
                    "p95": 253.202511,
                    "p99": 253.202511,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 482.64773299999996,
                    "min": 456.50082799999996,
                    "p50": 468.03205399999996,
                    "p95": 482.64773299999996,
                    "p99": 482.64773299999996,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1883.926191,
                    "min": 1805.196905,
                    "p50": 1851.6143949999998,
                    "p95": 1883.926191,
                    "p99": 1883.926191,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1145.851318,
                    "min": 1081.209206,
                    "p50": 1123.607947,
                    "p95": 1145.851318,
                    "p99": 1145.851318,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 527.273206,
                    "min": 464.175328,
                    "p50": 508.18211299999996,
                    "p95": 527.273206,
                    "p99": 527.273206,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 369.623387,
                    "min": 327.97869299999996,
                    "p50": 365.225034,
                    "p95": 369.623387,
                    "p99": 369.623387,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 590.3707499999999,
                    "min": 549.800653,
                    "p50": 582.0514469999999,
                    "p95": 590.3707499999999,
                    "p99": 590.3707499999999,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom1024Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1504.2381269999998,
                    "min": 1423.5485509999999,
                    "p50": 1476.567303,
                    "p95": 1504.2381269999998,
                    "p99": 1504.2381269999998,
                    "n": 8,
                    "description": ""
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 348.99743,
                    "min": 311.37103099999996,
                    "p50": 333.368266,
                    "p95": 348.99743,
                    "p99": 348.99743,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 597.782878,
                    "min": 565.94137,
                    "p50": 584.340522,
                    "p95": 597.782878,
                    "p99": 597.782878,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 529.587993,
                    "min": 496.341322,
                    "p50": 502.20745999999997,
                    "p95": 529.587993,
                    "p99": 529.587993,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.10301,
                    "min": 263.62427199999996,
                    "p50": 288.37631999999996,
                    "p95": 306.10301,
                    "p99": 306.10301,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 907.86966,
                    "min": 854.058084,
                    "p50": 879.848975,
                    "p95": 907.86966,
                    "p99": 907.86966,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.335173,
                    "min": 199.420354,
                    "p50": 207.413279,
                    "p95": 217.335173,
                    "p99": 217.335173,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 398.983247,
                    "min": 372.642357,
                    "p50": 376.566509,
                    "p95": 398.983247,
                    "p99": 398.983247,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 486.982327,
                    "min": 452.701077,
                    "p50": 461.504593,
                    "p95": 486.982327,
                    "p99": 486.982327,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 700.2007229999999,
                    "min": 623.495647,
                    "p50": 671.849144,
                    "p95": 700.2007229999999,
                    "p99": 700.2007229999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1345.037446,
                    "min": 1248.912239,
                    "p50": 1303.264569,
                    "p95": 1345.037446,
                    "p99": 1345.037446,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 572.657291,
                    "min": 514.94322,
                    "p50": 547.428664,
                    "p95": 572.657291,
                    "p99": 572.657291,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 433.531931,
                    "min": 408.53654,
                    "p50": 414.91770299999996,
                    "p95": 433.531931,
                    "p99": 433.531931,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 258.64865399999996,
                    "min": 238.228142,
                    "p50": 250.512946,
                    "p95": 258.64865399999996,
                    "p99": 258.64865399999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 655.474446,
                    "min": 603.540311,
                    "p50": 623.593074,
                    "p95": 655.474446,
                    "p99": 655.474446,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 810.1299809999999,
                    "min": 735.543013,
                    "p50": 774.3328389999999,
                    "p95": 810.1299809999999,
                    "p99": 810.1299809999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1804.042682,
                    "min": 1694.350663,
                    "p50": 1706.194188,
                    "p95": 1804.042682,
                    "p99": 1804.042682,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2254.902225,
                    "min": 2098.81416,
                    "p50": 2139.177326,
                    "p95": 2254.902225,
                    "p99": 2254.902225,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4457.398228,
                    "min": 4199.249441999999,
                    "p50": 4260.3613749999995,
                    "p95": 4457.398228,
                    "p99": 4457.398228,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.161261,
                    "min": 126.715701,
                    "p50": 162.874279,
                    "p95": 173.161261,
                    "p99": 173.161261,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2176.886246,
                    "min": 2006.8557799999999,
                    "p50": 2045.308802,
                    "p95": 2176.886246,
                    "p99": 2176.886246,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 609.427318,
                    "min": 542.955508,
                    "p50": 560.974415,
                    "p95": 609.427318,
                    "p99": 609.427318,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 473.85736699999995,
                    "min": 438.64826999999997,
                    "p50": 444.693173,
                    "p95": 473.85736699999995,
                    "p99": 473.85736699999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 696.165623,
                    "min": 609.005673,
                    "p50": 644.063135,
                    "p95": 696.165623,
                    "p99": 696.165623,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 345.008811,
                    "min": 284.90691699999996,
                    "p50": 315.667437,
                    "p95": 345.008811,
                    "p99": 345.008811,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 255.181792,
                    "min": 205.483914,
                    "p50": 236.71911,
                    "p95": 255.181792,
                    "p99": 255.181792,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.92381899999998,
                    "min": 144.097063,
                    "p50": 159.01444999999998,
                    "p95": 170.92381899999998,
                    "p99": 170.92381899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.451207,
                    "min": 464.065526,
                    "p50": 493.10239199999995,
                    "p95": 516.451207,
                    "p99": 516.451207,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 798.1151709999999,
                    "min": 715.2173779999999,
                    "p50": 745.043992,
                    "p95": 798.1151709999999,
                    "p99": 798.1151709999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.266189,
                    "min": 258.737535,
                    "p50": 281.729969,
                    "p95": 298.266189,
                    "p99": 298.266189,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 387.491673,
                    "min": 320.344121,
                    "p50": 364.782829,
                    "p95": 387.491673,
                    "p99": 387.491673,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 643.437512,
                    "min": 556.0112389999999,
                    "p50": 607.29772,
                    "p95": 643.437512,
                    "p99": 643.437512,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1761.3305639999999,
                    "min": 1625.114186,
                    "p50": 1651.785555,
                    "p95": 1761.3305639999999,
                    "p99": 1761.3305639999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 428.751496,
                    "min": 368.093435,
                    "p50": 401.555823,
                    "p95": 428.751496,
                    "p99": 428.751496,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 925.3751659999999,
                    "min": 803.738717,
                    "p50": 830.5973779999999,
                    "p95": 925.3751659999999,
                    "p99": 925.3751659999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 568.171428,
                    "min": 482.531663,
                    "p50": 521.721609,
                    "p95": 568.171428,
                    "p99": 568.171428,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 217.29275299999998,
                    "min": 161.567423,
                    "p50": 198.11457299999998,
                    "p95": 217.29275299999998,
                    "p99": 217.29275299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1357.081726,
                    "min": 1205.942646,
                    "p50": 1246.1636859999999,
                    "p95": 1357.081726,
                    "p99": 1357.081726,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 819.055,
                    "min": 728.9263179999999,
                    "p50": 740.207954,
                    "p95": 819.055,
                    "p99": 819.055,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 622.393294,
                    "min": 547.94175,
                    "p50": 572.060631,
                    "p95": 622.393294,
                    "p99": 622.393294,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1014.183948,
                    "min": 881.5270459999999,
                    "p50": 932.3235679999999,
                    "p95": 1014.183948,
                    "p99": 1014.183948,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3954.955109,
                    "min": 3483.559562,
                    "p50": 3551.93621,
                    "p95": 3954.955109,
                    "p99": 3954.955109,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2542.65591,
                    "min": 2252.4308969999997,
                    "p50": 2341.636575,
                    "p95": 2542.65591,
                    "p99": 2542.65591,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2944.126344,
                    "min": 2580.621009,
                    "p50": 2659.738988,
                    "p95": 2944.126344,
                    "p99": 2944.126344,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3445.366121,
                    "min": 3010.7338139999997,
                    "p50": 3149.345528,
                    "p95": 3445.366121,
                    "p99": 3445.366121,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1766.5312059999999,
                    "min": 1560.295288,
                    "p50": 1615.0914579999999,
                    "p95": 1766.5312059999999,
                    "p99": 1766.5312059999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1218.763244,
                    "min": 1053.301375,
                    "p50": 1100.594957,
                    "p95": 1218.763244,
                    "p99": 1218.763244,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1586.1317119999999,
                    "min": 1395.014397,
                    "p50": 1448.42663,
                    "p95": 1586.1317119999999,
                    "p99": 1586.1317119999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1390.9227349999999,
                    "min": 1211.708322,
                    "p50": 1265.680492,
                    "p95": 1390.9227349999999,
                    "p99": 1390.9227349999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1974.413145,
                    "min": 1745.449259,
                    "p50": 1822.8183749999998,
                    "p95": 1974.413145,
                    "p99": 1974.413145,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2159.573539,
                    "min": 1913.062193,
                    "p50": 1982.847568,
                    "p95": 2159.573539,
                    "p99": 2159.573539,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2703.128762,
                    "min": 2436.310067,
                    "p50": 2524.151881,
                    "p95": 2703.128762,
                    "p99": 2703.128762,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2370.377661,
                    "min": 2117.127365,
                    "p50": 2157.359394,
                    "p95": 2370.377661,
                    "p99": 2370.377661,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2208.454152,
                    "min": 1914.63143,
                    "p50": 1978.291782,
                    "p95": 2208.454152,
                    "p99": 2208.454152,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2599.8976049999997,
                    "min": 2275.598845,
                    "p50": 2336.227442,
                    "p95": 2599.8976049999997,
                    "p99": 2599.8976049999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2801.351793,
                    "min": 2443.880202,
                    "p50": 2509.670604,
                    "p95": 2801.351793,
                    "p99": 2801.351793,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 828.229075,
                    "min": 710.5199349999999,
                    "p50": 747.135956,
                    "p95": 828.229075,
                    "p99": 828.229075,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 992.976826,
                    "min": 903.3820549999999,
                    "p50": 922.033601,
                    "p95": 992.976826,
                    "p99": 992.976826,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1399.434765,
                    "min": 1231.363926,
                    "p50": 1268.2076049999998,
                    "p95": 1399.434765,
                    "p99": 1399.434765,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1193.569883,
                    "min": 1057.709604,
                    "p50": 1104.949946,
                    "p95": 1193.569883,
                    "p99": 1193.569883,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1984.3353089999998,
                    "min": 1749.206477,
                    "p50": 1804.9642939999999,
                    "p95": 1984.3353089999998,
                    "p99": 1984.3353089999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 635.228696,
                    "min": 552.6737469999999,
                    "p50": 568.703985,
                    "p95": 635.228696,
                    "p99": 635.228696,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1594.817442,
                    "min": 1401.408741,
                    "p50": 1449.536247,
                    "p95": 1594.817442,
                    "p99": 1594.817442,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3451.282091,
                    "min": 3054.800819,
                    "p50": 3133.741963,
                    "p95": 3451.282091,
                    "p99": 3451.282091,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3884.2732939999996,
                    "min": 3470.159216,
                    "p50": 3597.438574,
                    "p95": 3884.2732939999996,
                    "p99": 3884.2732939999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2929.354777,
                    "min": 2626.029136,
                    "p50": 2689.450856,
                    "p95": 2929.354777,
                    "p99": 2929.354777,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1783.9627229999999,
                    "min": 1597.02765,
                    "p50": 1627.341737,
                    "p95": 1783.9627229999999,
                    "p99": 1783.9627229999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2374.231621,
                    "min": 2106.165711,
                    "p50": 2157.914532,
                    "p95": 2374.231621,
                    "p99": 2374.231621,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2637.31302,
                    "min": 2317.8965129999997,
                    "p50": 2411.947886,
                    "p95": 2637.31302,
                    "p99": 2637.31302,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2456.95741,
                    "min": 2161.157447,
                    "p50": 2219.9494879999997,
                    "p95": 2456.95741,
                    "p99": 2456.95741,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2779.083808,
                    "min": 2493.905025,
                    "p50": 2562.486473,
                    "p95": 2779.083808,
                    "p99": 2779.083808,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3227.724257,
                    "min": 2934.3375069999997,
                    "p50": 2978.91653,
                    "p95": 3227.724257,
                    "p99": 3227.724257,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2248.727347,
                    "min": 1957.300064,
                    "p50": 2048.114294,
                    "p95": 2248.727347,
                    "p99": 2248.727347,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2057.0647599999998,
                    "min": 1813.0306659999999,
                    "p50": 1890.4735409999998,
                    "p95": 2057.0647599999998,
                    "p99": 2057.0647599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 584.339263,
                    "min": 525.429837,
                    "p50": 543.2000489999999,
                    "p95": 584.339263,
                    "p99": 584.339263,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3729.173758,
                    "min": 3272.346976,
                    "p50": 3422.747344,
                    "p95": 3729.173758,
                    "p99": 3729.173758,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1872.7157029999998,
                    "min": 1648.318029,
                    "p50": 1713.779178,
                    "p95": 1872.7157029999998,
                    "p99": 1872.7157029999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1693.352772,
                    "min": 1498.706968,
                    "p50": 1550.0847689999998,
                    "p95": 1693.352772,
                    "p99": 1693.352772,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1149.781459,
                    "min": 1011.5522609999999,
                    "p50": 1041.2540239999998,
                    "p95": 1149.781459,
                    "p99": 1149.781459,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1475.342265,
                    "min": 1339.2351079999999,
                    "p50": 1385.188472,
                    "p95": 1475.342265,
                    "p99": 1475.342265,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1315.3941419999999,
                    "min": 1172.272423,
                    "p50": 1212.784749,
                    "p95": 1315.3941419999999,
                    "p99": 1315.3941419999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 774.117656,
                    "min": 687.214703,
                    "p50": 710.5938659999999,
                    "p95": 774.117656,
                    "p99": 774.117656,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 938.887352,
                    "min": 855.944974,
                    "p50": 876.42586,
                    "p95": 938.887352,
                    "p99": 938.887352,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2797.387011,
                    "min": 2441.241504,
                    "p50": 2506.4261899999997,
                    "p95": 2797.387011,
                    "p99": 2797.387011,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2964.835409,
                    "min": 2565.974697,
                    "p50": 2681.251973,
                    "p95": 2964.835409,
                    "p99": 2964.835409,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2398.9660129999997,
                    "min": 2087.018834,
                    "p50": 2154.276382,
                    "p95": 2398.9660129999997,
                    "p99": 2398.9660129999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3409.32298,
                    "min": 3044.763183,
                    "p50": 3123.07364,
                    "p95": 3409.32298,
                    "p99": 3409.32298,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 809.899008,
                    "min": 722.4979129999999,
                    "p50": 744.1094489999999,
                    "p95": 809.899008,
                    "p99": 809.899008,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2148.339165,
                    "min": 1923.8188739999998,
                    "p50": 1977.273514,
                    "p95": 2148.339165,
                    "p99": 2148.339165,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3883.869597,
                    "min": 3435.602034,
                    "p50": 3555.486834,
                    "p95": 3883.869597,
                    "p99": 3883.869597,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1199.04989,
                    "min": 1067.4575969999999,
                    "p50": 1087.939118,
                    "p95": 1199.04989,
                    "p99": 1199.04989,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1590.8697949999998,
                    "min": 1389.399662,
                    "p50": 1439.418228,
                    "p95": 1590.8697949999998,
                    "p99": 1590.8697949999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1397.3214619999999,
                    "min": 1237.816155,
                    "p50": 1276.731749,
                    "p95": 1397.3214619999999,
                    "p99": 1397.3214619999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1006.825399,
                    "min": 886.5957649999999,
                    "p50": 927.4854419999999,
                    "p95": 1006.825399,
                    "p99": 1006.825399,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1782.43601,
                    "min": 1564.063142,
                    "p50": 1618.004672,
                    "p95": 1782.43601,
                    "p99": 1782.43601,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1953.420785,
                    "min": 1738.906199,
                    "p50": 1794.417546,
                    "p95": 1953.420785,
                    "p99": 1953.420785,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 617.7115779999999,
                    "min": 553.573681,
                    "p50": 567.245067,
                    "p95": 617.7115779999999,
                    "p99": 617.7115779999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2553.92235,
                    "min": 2260.0668379999997,
                    "p50": 2341.5621929999998,
                    "p95": 2553.92235,
                    "p99": 2553.92235,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1609.142811,
                    "min": 1517.345804,
                    "p50": 1578.602473,
                    "p95": 1609.142811,
                    "p99": 1609.142811,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 987.1477729999999,
                    "min": 920.512877,
                    "p50": 947.9275779999999,
                    "p95": 987.1477729999999,
                    "p99": 987.1477729999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1160.095891,
                    "min": 1120.553234,
                    "p50": 1137.237346,
                    "p95": 1160.095891,
                    "p99": 1160.095891,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 745.755148,
                    "min": 699.4362709999999,
                    "p50": 732.909002,
                    "p95": 745.755148,
                    "p99": 745.755148,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 654.3800209999999,
                    "min": 605.722863,
                    "p50": 638.432763,
                    "p95": 654.3800209999999,
                    "p99": 654.3800209999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1054.421165,
                    "min": 1006.06705,
                    "p50": 1042.252215,
                    "p95": 1054.421165,
                    "p99": 1054.421165,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 336.856515,
                    "min": 327.615373,
                    "p50": 334.272129,
                    "p95": 336.856515,
                    "p99": 336.856515,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 442.69719799999996,
                    "min": 428.178075,
                    "p50": 439.208528,
                    "p95": 442.69719799999996,
                    "p99": 442.69719799999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 853.005224,
                    "min": 823.4803979999999,
                    "p50": 835.8704419999999,
                    "p95": 853.005224,
                    "p99": 853.005224,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 553.174507,
                    "min": 528.762533,
                    "p50": 536.053356,
                    "p95": 553.174507,
                    "p99": 553.174507,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2083.2956369999997,
                    "min": 2022.384597,
                    "p50": 2052.13785,
                    "p95": 2083.2956369999997,
                    "p99": 2083.2956369999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1289.961574,
                    "min": 1202.9952469999998,
                    "p50": 1232.333342,
                    "p95": 1289.961574,
                    "p99": 1289.961574,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1861.0076139999999,
                    "min": 1762.0968739999998,
                    "p50": 1795.049722,
                    "p95": 1861.0076139999999,
                    "p99": 1861.0076139999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1499.139767,
                    "min": 1405.985379,
                    "p50": 1439.854578,
                    "p95": 1499.139767,
                    "p99": 1499.139767,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1371.265893,
                    "min": 1323.9525609999998,
                    "p50": 1347.839372,
                    "p95": 1371.265893,
                    "p99": 1371.265893,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3182.5483059999997,
                    "min": 2986.483048,
                    "p50": 3037.229479,
                    "p95": 3182.5483059999997,
                    "p99": 3182.5483059999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2147.4314679999998,
                    "min": 1924.632813,
                    "p50": 2034.884525,
                    "p95": 2147.4314679999998,
                    "p99": 2147.4314679999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1605.90717,
                    "min": 1378.750102,
                    "p50": 1455.260906,
                    "p95": 1605.90717,
                    "p99": 1605.90717,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1905.708036,
                    "min": 1642.622198,
                    "p50": 1745.408786,
                    "p95": 1905.708036,
                    "p99": 1905.708036,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2941.501065,
                    "min": 2503.978802,
                    "p50": 2726.13258,
                    "p95": 2941.501065,
                    "p99": 2941.501065,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2592.531379,
                    "min": 2159.481218,
                    "p50": 2413.244346,
                    "p95": 2592.531379,
                    "p99": 2592.531379,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1779.5482559999998,
                    "min": 1480.245168,
                    "p50": 1657.249797,
                    "p95": 1779.5482559999998,
                    "p99": 1779.5482559999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 474.03245599999997,
                    "min": 373.923066,
                    "p50": 445.53612899999996,
                    "p95": 474.03245599999997,
                    "p99": 474.03245599999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 618.784905,
                    "min": 527.465609,
                    "p50": 595.9121269999999,
                    "p95": 618.784905,
                    "p99": 618.784905,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1513.8065339999998,
                    "min": 1282.4531869999998,
                    "p50": 1389.22146,
                    "p95": 1513.8065339999998,
                    "p99": 1513.8065339999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 893.4134439999999,
                    "min": 781.2307629999999,
                    "p50": 844.639913,
                    "p95": 893.4134439999999,
                    "p99": 893.4134439999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1370.526691,
                    "min": 1141.8963609999998,
                    "p50": 1252.908135,
                    "p95": 1370.526691,
                    "p99": 1370.526691,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 759.456702,
                    "min": 646.9109609999999,
                    "p50": 700.439794,
                    "p95": 759.456702,
                    "p99": 759.456702,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2088.461179,
                    "min": 1736.235101,
                    "p50": 1904.0212749999998,
                    "p95": 2088.461179,
                    "p99": 2088.461179,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1209.267606,
                    "min": 1015.0499669999999,
                    "p50": 1114.813298,
                    "p95": 1209.267606,
                    "p99": 1209.267606,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1054.2575729999999,
                    "min": 882.438493,
                    "p50": 979.966995,
                    "p95": 1054.2575729999999,
                    "p99": 1054.2575729999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1473.419789,
                    "min": 1165.683493,
                    "p50": 1266.885533,
                    "p95": 1473.419789,
                    "p99": 1473.419789,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 606.504509,
                    "min": 498.41290699999996,
                    "p50": 529.845697,
                    "p95": 606.504509,
                    "p99": 606.504509,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1183.130896,
                    "min": 956.157344,
                    "p50": 1015.448859,
                    "p95": 1183.130896,
                    "p99": 1183.130896,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1042.9801069999999,
                    "min": 845.865499,
                    "p50": 899.629373,
                    "p95": 1042.9801069999999,
                    "p99": 1042.9801069999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 895.643116,
                    "min": 720.679479,
                    "p50": 777.8240099999999,
                    "p95": 895.643116,
                    "p99": 895.643116,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2191.1024589999997,
                    "min": 1750.611821,
                    "p50": 1908.1884459999999,
                    "p95": 2191.1024589999997,
                    "p99": 2191.1024589999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1907.861553,
                    "min": 1525.106217,
                    "p50": 1650.184293,
                    "p95": 1907.861553,
                    "p99": 1907.861553,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2926.39075,
                    "min": 2322.08153,
                    "p50": 2490.878144,
                    "p95": 2926.39075,
                    "p99": 2926.39075,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4310.860091,
                    "min": 3489.63589,
                    "p50": 3709.189151,
                    "p95": 4310.860091,
                    "p99": 4310.860091,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1733.8836999999999,
                    "min": 1405.92057,
                    "p50": 1498.913769,
                    "p95": 1733.8836999999999,
                    "p99": 1733.8836999999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 754.456745,
                    "min": 612.53604,
                    "p50": 648.764384,
                    "p95": 754.456745,
                    "p99": 754.456745,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1605.1992679999998,
                    "min": 1284.804868,
                    "p50": 1385.192856,
                    "p95": 1605.1992679999998,
                    "p99": 1605.1992679999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 467.00580399999996,
                    "min": 382.46658199999996,
                    "p50": 405.577881,
                    "p95": 467.00580399999996,
                    "p99": 467.00580399999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2001.091845,
                    "min": 1632.397628,
                    "p50": 1738.1375919999998,
                    "p95": 2001.091845,
                    "p99": 2001.091845,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2472.142319,
                    "min": 2027.751935,
                    "p50": 2176.1332279999997,
                    "p95": 2472.142319,
                    "p99": 2472.142319,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1275.921989,
                    "min": 1053.434206,
                    "p50": 1145.836986,
                    "p95": 1275.921989,
                    "p99": 1275.921989,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2379.952164,
                    "min": 2282.597772,
                    "p50": 2330.087668,
                    "p95": 2379.952164,
                    "p99": 2379.952164,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 560.814409,
                    "min": 518.770005,
                    "p50": 555.031329,
                    "p95": 560.814409,
                    "p99": 560.814409,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 389.431404,
                    "min": 346.633375,
                    "p50": 380.72227,
                    "p95": 389.431404,
                    "p99": 389.431404,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 731.149718,
                    "min": 698.694989,
                    "p50": 717.815447,
                    "p95": 731.149718,
                    "p99": 731.149718,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 272.08724,
                    "min": 249.70384299999998,
                    "p50": 262.454066,
                    "p95": 272.08724,
                    "p99": 272.08724,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1207.451981,
                    "min": 1173.214059,
                    "p50": 1188.880823,
                    "p95": 1207.451981,
                    "p99": 1207.451981,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 915.40801,
                    "min": 883.208945,
                    "p50": 896.976399,
                    "p95": 915.40801,
                    "p99": 915.40801,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 856.307855,
                    "min": 833.3533199999999,
                    "p50": 843.341273,
                    "p95": 856.307855,
                    "p99": 856.307855,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 215.514858,
                    "min": 173.92556399999998,
                    "p50": 207.575557,
                    "p95": 215.514858,
                    "p99": 215.514858,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 336.90545,
                    "min": 318.10513,
                    "p50": 325.861565,
                    "p95": 336.90545,
                    "p99": 336.90545,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1085.5459019999998,
                    "min": 1023.8988959999999,
                    "p50": 1047.1214559999999,
                    "p95": 1085.5459019999998,
                    "p99": 1085.5459019999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 509.43717399999997,
                    "min": 486.67272699999995,
                    "p50": 500.345982,
                    "p95": 509.43717399999997,
                    "p99": 509.43717399999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 703.9689169999999,
                    "min": 655.331383,
                    "p50": 665.197945,
                    "p95": 703.9689169999999,
                    "p99": 703.9689169999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 520.041481,
                    "min": 426.08772,
                    "p50": 441.50920499999995,
                    "p95": 520.041481,
                    "p99": 520.041481,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 799.6874419999999,
                    "min": 744.233524,
                    "p50": 782.024335,
                    "p95": 799.6874419999999,
                    "p99": 799.6874419999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1861.409617,
                    "min": 1696.38365,
                    "p50": 1758.4715079999999,
                    "p95": 1861.409617,
                    "p99": 1861.409617,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3284.375393,
                    "min": 2791.9832499999998,
                    "p50": 2912.5798489999997,
                    "p95": 3284.375393,
                    "p99": 3284.375393,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 623.592984,
                    "min": 596.9770609999999,
                    "p50": 613.9368949999999,
                    "p95": 623.592984,
                    "p99": 623.592984,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 465.405308,
                    "min": 442.872301,
                    "p50": 461.506764,
                    "p95": 465.405308,
                    "p99": 465.405308,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1260.6434179999999,
                    "min": 1220.133137,
                    "p50": 1245.1771119999999,
                    "p95": 1260.6434179999999,
                    "p99": 1260.6434179999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1878.9334199999998,
                    "min": 1804.38481,
                    "p50": 1861.570332,
                    "p95": 1878.9334199999998,
                    "p99": 1878.9334199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3091.1781149999997,
                    "min": 2974.967769,
                    "p50": 3068.483436,
                    "p95": 3091.1781149999997,
                    "p99": 3091.1781149999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2477.662015,
                    "min": 2388.555016,
                    "p50": 2454.417922,
                    "p95": 2477.662015,
                    "p99": 2477.662015,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 525.725409,
                    "min": 502.385207,
                    "p50": 515.456309,
                    "p95": 525.725409,
                    "p99": 525.725409,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1097.78758,
                    "min": 1065.730436,
                    "p50": 1089.977924,
                    "p95": 1097.78758,
                    "p99": 1097.78758,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 438.064444,
                    "min": 355.30420699999996,
                    "p50": 389.30564899999996,
                    "p95": 438.064444,
                    "p99": 438.064444,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 889.5486089999999,
                    "min": 832.2240519999999,
                    "p50": 882.296711,
                    "p95": 889.5486089999999,
                    "p99": 889.5486089999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 942.60974,
                    "min": 910.6254279999999,
                    "p50": 937.4467139999999,
                    "p95": 942.60974,
                    "p99": 942.60974,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 283.58392599999996,
                    "min": 263.99886,
                    "p50": 278.412585,
                    "p95": 283.58392599999996,
                    "p99": 283.58392599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 713.641931,
                    "min": 681.91958,
                    "p50": 701.974072,
                    "p95": 713.641931,
                    "p99": 713.641931,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 768.939563,
                    "min": 742.294617,
                    "p50": 760.452814,
                    "p95": 768.939563,
                    "p99": 768.939563,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 362.988517,
                    "min": 308.891199,
                    "p50": 342.613334,
                    "p95": 362.988517,
                    "p99": 362.988517,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.82119899999998,
                    "min": 213.48890899999998,
                    "p50": 218.76978699999998,
                    "p95": 222.82119899999998,
                    "p99": 222.82119899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 845.767329,
                    "min": 806.031168,
                    "p50": 819.4324819999999,
                    "p95": 845.767329,
                    "p99": 845.767329,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 648.893694,
                    "min": 607.891615,
                    "p50": 640.769153,
                    "p95": 648.893694,
                    "p99": 648.893694,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 583.875561,
                    "min": 564.303091,
                    "p50": 579.846109,
                    "p95": 583.875561,
                    "p99": 583.875561,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 985.588757,
                    "min": 940.9948149999999,
                    "p50": 950.521576,
                    "p95": 985.588757,
                    "p99": 985.588757,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1515.898209,
                    "min": 1424.783768,
                    "p50": 1470.3574179999998,
                    "p95": 1515.898209,
                    "p99": 1515.898209,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1305.17897,
                    "min": 1246.030462,
                    "p50": 1265.7818009999999,
                    "p95": 1305.17897,
                    "p99": 1305.17897,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 354.137879,
                    "min": 334.83286699999996,
                    "p50": 340.90495999999996,
                    "p95": 354.137879,
                    "p99": 354.137879,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2164.390462,
                    "min": 2046.0075689999999,
                    "p50": 2083.284994,
                    "p95": 2164.390462,
                    "p99": 2164.390462,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 884.698994,
                    "min": 837.848437,
                    "p50": 867.532736,
                    "p95": 884.698994,
                    "p99": 884.698994,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 564.79463,
                    "min": 527.612292,
                    "p50": 548.785999,
                    "p95": 564.79463,
                    "p99": 564.79463,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1190.565904,
                    "min": 1136.909299,
                    "p50": 1161.498991,
                    "p95": 1190.565904,
                    "p99": 1190.565904,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 678.9750789999999,
                    "min": 638.357209,
                    "p50": 643.799972,
                    "p95": 678.9750789999999,
                    "p99": 678.9750789999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1894.974867,
                    "min": 1806.687724,
                    "p50": 1826.974407,
                    "p95": 1894.974867,
                    "p99": 1894.974867,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 457.664178,
                    "min": 406.97182699999996,
                    "p50": 441.747375,
                    "p95": 457.664178,
                    "p99": 457.664178,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1615.766029,
                    "min": 1528.270779,
                    "p50": 1571.1700779999999,
                    "p95": 1615.766029,
                    "p99": 1615.766029,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 774.888115,
                    "min": 729.234659,
                    "p50": 755.4953489999999,
                    "p95": 774.888115,
                    "p99": 774.888115,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1407.168362,
                    "min": 1342.2409659999998,
                    "p50": 1366.233929,
                    "p95": 1407.168362,
                    "p99": 1407.168362,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1098.215269,
                    "min": 1045.354905,
                    "p50": 1060.117244,
                    "p95": 1098.215269,
                    "p99": 1098.215269,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 675.8680509999999,
                    "min": 589.790247,
                    "p50": 646.103039,
                    "p95": 675.8680509999999,
                    "p99": 675.8680509999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1851.266739,
                    "min": 1675.72451,
                    "p50": 1802.950075,
                    "p95": 1851.266739,
                    "p99": 1851.266739,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1152.732391,
                    "min": 1049.527034,
                    "p50": 1110.740286,
                    "p95": 1152.732391,
                    "p99": 1152.732391,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1647.447248,
                    "min": 1489.233069,
                    "p50": 1583.7310599999998,
                    "p95": 1647.447248,
                    "p99": 1647.447248,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2503.759641,
                    "min": 2280.1876669999997,
                    "p50": 2433.018739,
                    "p95": 2503.759641,
                    "p99": 2503.759641,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1397.842461,
                    "min": 1264.49716,
                    "p50": 1346.5368119999998,
                    "p95": 1397.842461,
                    "p99": 1397.842461,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1776.16011,
                    "min": 1616.533099,
                    "p50": 1712.917449,
                    "p95": 1776.16011,
                    "p99": 1776.16011,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3737.76943,
                    "min": 3421.72201,
                    "p50": 3689.290731,
                    "p95": 3737.76943,
                    "p99": 3737.76943,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 894.085201,
                    "min": 821.5513109999999,
                    "p50": 881.668969,
                    "p95": 894.085201,
                    "p99": 894.085201,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 409.096596,
                    "min": 376.47535799999997,
                    "p50": 394.59297799999996,
                    "p95": 409.096596,
                    "p99": 409.096596,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1282.221585,
                    "min": 1168.3312899999999,
                    "p50": 1244.834294,
                    "p95": 1282.221585,
                    "p99": 1282.221585,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 780.777694,
                    "min": 715.768423,
                    "p50": 763.09402,
                    "p95": 780.777694,
                    "p99": 780.777694,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 528.530713,
                    "min": 488.02664899999996,
                    "p50": 517.729119,
                    "p95": 528.530713,
                    "p99": 528.530713,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1019.8563929999999,
                    "min": 931.9246539999999,
                    "p50": 985.589256,
                    "p95": 1019.8563929999999,
                    "p99": 1019.8563929999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2186.3964659999997,
                    "min": 2005.7625229999999,
                    "p50": 2155.627501,
                    "p95": 2186.3964659999997,
                    "p99": 2186.3964659999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1518.896692,
                    "min": 1388.108213,
                    "p50": 1474.804185,
                    "p95": 1518.896692,
                    "p99": 1518.896692,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1417.5594589999998,
                    "min": 1363.142089,
                    "p50": 1378.219731,
                    "p95": 1417.5594589999998,
                    "p99": 1417.5594589999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1659.416272,
                    "min": 1596.167528,
                    "p50": 1610.214191,
                    "p95": 1659.416272,
                    "p99": 1659.416272,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1761.199498,
                    "min": 1711.702523,
                    "p50": 1736.717802,
                    "p95": 1761.199498,
                    "p99": 1761.199498,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1074.8336769999999,
                    "min": 1029.2382619999998,
                    "p50": 1051.112819,
                    "p95": 1074.8336769999999,
                    "p99": 1074.8336769999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 736.312972,
                    "min": 702.981308,
                    "p50": 714.713746,
                    "p95": 736.312972,
                    "p99": 736.312972,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 968.208933,
                    "min": 925.993343,
                    "p50": 947.3894009999999,
                    "p95": 968.208933,
                    "p99": 968.208933,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 501.90286,
                    "min": 449.559347,
                    "p50": 493.33986899999996,
                    "p95": 501.90286,
                    "p99": 501.90286,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 619.68715,
                    "min": 568.796909,
                    "p50": 600.2673679999999,
                    "p95": 619.68715,
                    "p99": 619.68715,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1198.156526,
                    "min": 1135.602148,
                    "p50": 1175.787774,
                    "p95": 1198.156526,
                    "p99": 1198.156526,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 870.050215,
                    "min": 815.8227469999999,
                    "p50": 834.0070519999999,
                    "p95": 870.050215,
                    "p99": 870.050215,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2353.763485,
                    "min": 2248.4665219999997,
                    "p50": 2316.328522,
                    "p95": 2353.763485,
                    "p99": 2353.763485,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1308.849211,
                    "min": 1260.119242,
                    "p50": 1286.9370079999999,
                    "p95": 1308.849211,
                    "p99": 1308.849211,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2056.484371,
                    "min": 1980.715718,
                    "p50": 2046.165611,
                    "p95": 2056.484371,
                    "p99": 2056.484371,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 388.718164,
                    "min": 364.780755,
                    "p50": 377.581242,
                    "p95": 388.718164,
                    "p99": 388.718164,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1551.951775,
                    "min": 1463.317527,
                    "p50": 1510.993266,
                    "p95": 1551.951775,
                    "p99": 1551.951775,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1013.3665179999999,
                    "min": 965.253524,
                    "p50": 984.372532,
                    "p95": 1013.3665179999999,
                    "p99": 1013.3665179999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 534.8132899999999,
                    "min": 493.990005,
                    "p50": 511.41291199999995,
                    "p95": 534.8132899999999,
                    "p99": 534.8132899999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 366.767653,
                    "min": 318.317776,
                    "p50": 350.075814,
                    "p95": 366.767653,
                    "p99": 366.767653,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.93665799999997,
                    "min": 252.57027699999998,
                    "p50": 274.737593,
                    "p95": 283.93665799999997,
                    "p99": 283.93665799999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1113.479041,
                    "min": 1007.003566,
                    "p50": 1051.8096369999998,
                    "p95": 1113.479041,
                    "p99": 1113.479041,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1274.191547,
                    "min": 1191.820068,
                    "p50": 1212.021502,
                    "p95": 1274.191547,
                    "p99": 1274.191547,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 775.8220809999999,
                    "min": 726.5738319999999,
                    "p50": 746.800834,
                    "p95": 775.8220809999999,
                    "p99": 775.8220809999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1670.4647249999998,
                    "min": 1572.434863,
                    "p50": 1591.92391,
                    "p95": 1670.4647249999998,
                    "p99": 1670.4647249999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 864.102168,
                    "min": 776.640127,
                    "p50": 815.42413,
                    "p95": 864.102168,
                    "p99": 864.102168,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 611.421217,
                    "min": 545.539803,
                    "p50": 582.260289,
                    "p95": 611.421217,
                    "p99": 611.421217,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1473.5927769999998,
                    "min": 1381.712476,
                    "p50": 1398.114239,
                    "p95": 1473.5927769999998,
                    "p99": 1473.5927769999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1181.6177579999999,
                    "min": 1102.39832,
                    "p50": 1124.235808,
                    "p95": 1181.6177579999999,
                    "p99": 1181.6177579999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 448.276486,
                    "min": 404.165672,
                    "p50": 427.18935999999997,
                    "p95": 448.276486,
                    "p99": 448.276486,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 701.1905419999999,
                    "min": 623.471315,
                    "p50": 659.3817379999999,
                    "p95": 701.1905419999999,
                    "p99": 701.1905419999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2507.364647,
                    "min": 2341.2227869999997,
                    "p50": 2369.046031,
                    "p95": 2507.364647,
                    "p99": 2507.364647,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 948.1894599999999,
                    "min": 878.705934,
                    "p50": 891.24315,
                    "p95": 948.1894599999999,
                    "p99": 948.1894599999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3280.061154,
                    "min": 3093.996952,
                    "p50": 3143.779412,
                    "p95": 3280.061154,
                    "p99": 3280.061154,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1075.676534,
                    "min": 1013.3657499999999,
                    "p50": 1036.7067829999999,
                    "p95": 1075.676534,
                    "p99": 1075.676534,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 551.821726,
                    "min": 534.870414,
                    "p50": 542.114997,
                    "p95": 551.821726,
                    "p99": 551.821726,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2110.135446,
                    "min": 2026.390482,
                    "p50": 2050.080257,
                    "p95": 2110.135446,
                    "p99": 2110.135446,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1496.4788509999998,
                    "min": 1420.24058,
                    "p50": 1449.475035,
                    "p95": 1496.4788509999998,
                    "p99": 1496.4788509999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 660.820065,
                    "min": 629.514916,
                    "p50": 640.2464659999999,
                    "p95": 660.820065,
                    "p99": 660.820065,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1594.613458,
                    "min": 1513.0725679999998,
                    "p50": 1542.1270479999998,
                    "p95": 1594.613458,
                    "p99": 1594.613458,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 762.899156,
                    "min": 728.950104,
                    "p50": 739.9539699999999,
                    "p95": 762.899156,
                    "p99": 762.899156,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1285.523798,
                    "min": 1214.382427,
                    "p50": 1248.265443,
                    "p95": 1285.523798,
                    "p99": 1285.523798,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 963.4352429999999,
                    "min": 930.119727,
                    "p50": 948.652339,
                    "p95": 963.4352429999999,
                    "p99": 963.4352429999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1364.301125,
                    "min": 1324.66142,
                    "p50": 1352.5629689999998,
                    "p95": 1364.301125,
                    "p99": 1364.301125,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1850.4093859999998,
                    "min": 1746.1752359999998,
                    "p50": 1813.8113309999999,
                    "p95": 1850.4093859999998,
                    "p99": 1850.4093859999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 865.498511,
                    "min": 827.50739,
                    "p50": 850.587001,
                    "p95": 865.498511,
                    "p99": 865.498511,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1182.8463649999999,
                    "min": 1091.042627,
                    "p50": 1160.7833249999999,
                    "p95": 1182.8463649999999,
                    "p99": 1182.8463649999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 346.13820699999997,
                    "min": 301.594848,
                    "p50": 340.336686,
                    "p95": 346.13820699999997,
                    "p99": 346.13820699999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 447.66339999999997,
                    "min": 425.71216999999996,
                    "p50": 436.92348899999996,
                    "p95": 447.66339999999997,
                    "p99": 447.66339999999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1427.643943,
                    "min": 1345.675926,
                    "p50": 1367.386886,
                    "p95": 1427.643943,
                    "p99": 1427.643943,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 581.672508,
                    "min": 550.816472,
                    "p50": 571.8657019999999,
                    "p95": 581.672508,
                    "p99": 581.672508,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1685.147317,
                    "min": 1641.1202859999999,
                    "p50": 1660.102748,
                    "p95": 1685.147317,
                    "p99": 1685.147317,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1988.7669349999999,
                    "min": 1890.068067,
                    "p50": 1916.4448189999998,
                    "p95": 1988.7669349999999,
                    "p99": 1988.7669349999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 719.728715,
                    "min": 694.2835249999999,
                    "p50": 704.107757,
                    "p95": 719.728715,
                    "p99": 719.728715,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1302.625401,
                    "min": 1227.048184,
                    "p50": 1237.305469,
                    "p95": 1302.625401,
                    "p99": 1302.625401,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1145.266879,
                    "min": 1099.855219,
                    "p50": 1112.7824229999999,
                    "p95": 1145.266879,
                    "p99": 1145.266879,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 861.1066209999999,
                    "min": 828.5886869999999,
                    "p50": 840.872942,
                    "p95": 861.1066209999999,
                    "p99": 861.1066209999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 450.33527899999996,
                    "min": 415.01494299999996,
                    "p50": 437.738651,
                    "p95": 450.33527899999996,
                    "p99": 450.33527899999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2419.691613,
                    "min": 2350.7009359999997,
                    "p50": 2387.517256,
                    "p95": 2419.691613,
                    "p99": 2419.691613,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1535.3378599999999,
                    "min": 1485.717827,
                    "p50": 1515.961991,
                    "p95": 1535.3378599999999,
                    "p99": 1535.3378599999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1797.9341009999998,
                    "min": 1751.760358,
                    "p50": 1778.97129,
                    "p95": 1797.9341009999998,
                    "p99": 1797.9341009999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2750.416053,
                    "min": 2669.6804629999997,
                    "p50": 2717.953994,
                    "p95": 2750.416053,
                    "p99": 2750.416053,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2067.835483,
                    "min": 2008.832594,
                    "p50": 2045.037427,
                    "p95": 2067.835483,
                    "p99": 2067.835483,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 993.376305,
                    "min": 942.9015579999999,
                    "p50": 962.303147,
                    "p95": 993.376305,
                    "p99": 993.376305,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1881.196005,
                    "min": 1748.864724,
                    "p50": 1801.812524,
                    "p95": 1881.196005,
                    "p99": 1881.196005,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1083.380864,
                    "min": 1035.2004259999999,
                    "p50": 1059.549387,
                    "p95": 1083.380864,
                    "p99": 1083.380864,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1511.1572409999999,
                    "min": 1434.810348,
                    "p50": 1487.977882,
                    "p95": 1511.1572409999999,
                    "p99": 1511.1572409999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1613.4265249999999,
                    "min": 1537.730899,
                    "p50": 1571.468433,
                    "p95": 1613.4265249999999,
                    "p99": 1613.4265249999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2127.452683,
                    "min": 2021.234741,
                    "p50": 2077.25797,
                    "p95": 2127.452683,
                    "p99": 2127.452683,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1166.695477,
                    "min": 1133.49143,
                    "p50": 1151.674619,
                    "p95": 1166.695477,
                    "p99": 1166.695477,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 655.471827,
                    "min": 618.700526,
                    "p50": 644.946483,
                    "p95": 655.471827,
                    "p99": 655.471827,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 872.6454749999999,
                    "min": 834.047649,
                    "p50": 852.368423,
                    "p95": 872.6454749999999,
                    "p99": 872.6454749999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1395.109283,
                    "min": 1325.313127,
                    "p50": 1357.767922,
                    "p95": 1395.109283,
                    "p99": 1395.109283,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1284.34001,
                    "min": 1229.959204,
                    "p50": 1254.689504,
                    "p95": 1284.34001,
                    "p99": 1284.34001,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3129.707165,
                    "min": 3014.1852019999997,
                    "p50": 3088.411009,
                    "p95": 3129.707165,
                    "p99": 3129.707165,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 759.40293,
                    "min": 704.9820649999999,
                    "p50": 742.8192789999999,
                    "p95": 759.40293,
                    "p99": 759.40293,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 344.48425299999997,
                    "min": 323.064401,
                    "p50": 340.005131,
                    "p95": 344.48425299999997,
                    "p99": 344.48425299999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 559.015678,
                    "min": 532.705734,
                    "p50": 541.731719,
                    "p95": 559.015678,
                    "p99": 559.015678,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 976.5830229999999,
                    "min": 939.6030559999999,
                    "p50": 947.207759,
                    "p95": 976.5830229999999,
                    "p99": 976.5830229999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 452.881,
                    "min": 426.00706099999996,
                    "p50": 438.06875099999996,
                    "p95": 452.881,
                    "p99": 452.881,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1591.7426169999999,
                    "min": 1517.558178,
                    "p50": 1540.1308549999999,
                    "p95": 1591.7426169999999,
                    "p99": 1591.7426169999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 772.9572999999999,
                    "min": 733.26501,
                    "p50": 742.287793,
                    "p95": 772.9572999999999,
                    "p99": 772.9572999999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 363.931992,
                    "min": 316.418184,
                    "p50": 338.550749,
                    "p95": 363.931992,
                    "p99": 363.931992,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 449.457945,
                    "min": 433.830878,
                    "p50": 444.84520999999995,
                    "p95": 449.457945,
                    "p99": 449.457945,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1081.115116,
                    "min": 1024.530368,
                    "p50": 1041.9031439999999,
                    "p95": 1081.115116,
                    "p99": 1081.115116,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 666.602009,
                    "min": 632.20366,
                    "p50": 655.980545,
                    "p95": 666.602009,
                    "p99": 666.602009,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2130.0009259999997,
                    "min": 2011.043931,
                    "p50": 2069.985216,
                    "p95": 2130.0009259999997,
                    "p99": 2130.0009259999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 561.907879,
                    "min": 513.87259,
                    "p50": 535.187086,
                    "p95": 561.907879,
                    "p99": 561.907879,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1186.730879,
                    "min": 1119.244319,
                    "p50": 1166.642337,
                    "p95": 1186.730879,
                    "p99": 1186.730879,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 867.859163,
                    "min": 810.525778,
                    "p50": 842.354527,
                    "p95": 867.859163,
                    "p99": 867.859163,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1277.968464,
                    "min": 1229.765081,
                    "p50": 1257.65804,
                    "p95": 1277.968464,
                    "p99": 1277.968464,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1406.2005709999999,
                    "min": 1318.681898,
                    "p50": 1347.407271,
                    "p95": 1406.2005709999999,
                    "p99": 1406.2005709999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1868.397855,
                    "min": 1770.52625,
                    "p50": 1820.204164,
                    "p95": 1868.397855,
                    "p99": 1868.397855,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1502.7392009999999,
                    "min": 1419.511797,
                    "p50": 1461.817541,
                    "p95": 1502.7392009999999,
                    "p99": 1502.7392009999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 982.19516,
                    "min": 928.296117,
                    "p50": 944.371189,
                    "p95": 982.19516,
                    "p99": 982.19516,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 543.0055679999999,
                    "min": 501.116699,
                    "p50": 538.717099,
                    "p95": 543.0055679999999,
                    "p99": 543.0055679999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1923.3386719999999,
                    "min": 1856.354991,
                    "p50": 1913.8876089999999,
                    "p95": 1923.3386719999999,
                    "p99": 1923.3386719999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1437.647199,
                    "min": 1370.028357,
                    "p50": 1399.499558,
                    "p95": 1437.647199,
                    "p99": 1437.647199,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1176.958436,
                    "min": 1108.7802649999999,
                    "p50": 1141.727168,
                    "p95": 1176.958436,
                    "p99": 1176.958436,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 791.509113,
                    "min": 765.612898,
                    "p50": 770.522266,
                    "p95": 791.509113,
                    "p99": 791.509113,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 409.066043,
                    "min": 379.09968399999997,
                    "p50": 400.59817699999996,
                    "p95": 409.066043,
                    "p99": 409.066043,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 667.096824,
                    "min": 634.5343349999999,
                    "p50": 651.5833819999999,
                    "p95": 667.096824,
                    "p99": 667.096824,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1812.778736,
                    "min": 1737.5034369999998,
                    "p50": 1771.791761,
                    "p95": 1812.778736,
                    "p99": 1812.778736,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2252.52434,
                    "min": 2134.3853489999997,
                    "p50": 2223.524109,
                    "p95": 2252.52434,
                    "p99": 2252.52434,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 923.1420919999999,
                    "min": 894.656081,
                    "p50": 911.5655049999999,
                    "p95": 923.1420919999999,
                    "p99": 923.1420919999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1294.059376,
                    "min": 1244.052852,
                    "p50": 1278.459994,
                    "p95": 1294.059376,
                    "p99": 1294.059376,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2557.529737,
                    "min": 2476.732389,
                    "p50": 2526.726341,
                    "p95": 2557.529737,
                    "p99": 2557.529737,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1545.58934,
                    "min": 1519.1450379999999,
                    "p50": 1533.797992,
                    "p95": 1545.58934,
                    "p99": 1545.58934,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1046.164182,
                    "min": 1012.152752,
                    "p50": 1026.337767,
                    "p95": 1046.164182,
                    "p99": 1046.164182,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1657.954379,
                    "min": 1610.325942,
                    "p50": 1648.6876009999999,
                    "p95": 1657.954379,
                    "p99": 1657.954379,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2529.634727,
                    "min": 2427.037086,
                    "p50": 2512.415901,
                    "p95": 2529.634727,
                    "p99": 2529.634727,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1381.284806,
                    "min": 1280.597624,
                    "p50": 1344.4839769999999,
                    "p95": 1381.284806,
                    "p99": 1381.284806,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1704.636781,
                    "min": 1602.635413,
                    "p50": 1668.01002,
                    "p95": 1704.636781,
                    "p99": 1704.636781,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1871.1189319999999,
                    "min": 1801.5210849999999,
                    "p50": 1847.2222729999999,
                    "p95": 1871.1189319999999,
                    "p99": 1871.1189319999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2371.151992,
                    "min": 2271.79472,
                    "p50": 2344.908918,
                    "p95": 2371.151992,
                    "p99": 2371.151992,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2257.884968,
                    "min": 2091.5126609999998,
                    "p50": 2165.615798,
                    "p95": 2257.884968,
                    "p99": 2257.884968,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 708.496003,
                    "min": 669.3618319999999,
                    "p50": 687.880379,
                    "p95": 708.496003,
                    "p99": 708.496003,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1563.6535159999999,
                    "min": 1452.54204,
                    "p50": 1513.774764,
                    "p95": 1563.6535159999999,
                    "p99": 1563.6535159999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2046.1156079999998,
                    "min": 1929.2718249999998,
                    "p50": 2016.6117929999998,
                    "p95": 2046.1156079999998,
                    "p99": 2046.1156079999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2932.2842729999998,
                    "min": 2791.8996789999997,
                    "p50": 2911.012088,
                    "p95": 2932.2842729999998,
                    "p99": 2932.2842729999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 865.7478669999999,
                    "min": 846.315488,
                    "p50": 849.645307,
                    "p95": 865.7478669999999,
                    "p99": 865.7478669999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1216.4747929999999,
                    "min": 1154.9317999999998,
                    "p50": 1187.779942,
                    "p95": 1216.4747929999999,
                    "p99": 1216.4747929999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 535.99921,
                    "min": 488.21975799999996,
                    "p50": 531.1537999999999,
                    "p95": 535.99921,
                    "p99": 535.99921,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1048.118753,
                    "min": 989.90456,
                    "p50": 1018.349113,
                    "p95": 1048.118753,
                    "p99": 1048.118753,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3400.7758,
                    "min": 3222.3932999999997,
                    "p50": 3306.8125109999996,
                    "p95": 3400.7758,
                    "p99": 3400.7758,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3394.635535,
                    "min": 3257.296386,
                    "p50": 3338.841723,
                    "p95": 3394.635535,
                    "p99": 3394.635535,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2386.191449,
                    "min": 2295.668616,
                    "p50": 2349.138466,
                    "p95": 2386.191449,
                    "p99": 2386.191449,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2081.581186,
                    "min": 1932.5622449999998,
                    "p50": 2021.3398789999999,
                    "p95": 2081.581186,
                    "p99": 2081.581186,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1578.440983,
                    "min": 1453.503541,
                    "p50": 1528.128587,
                    "p95": 1578.440983,
                    "p99": 1578.440983,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1377.341362,
                    "min": 1291.7796059999998,
                    "p50": 1352.804121,
                    "p95": 1377.341362,
                    "p99": 1377.341362,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1054.746627,
                    "min": 1001.353087,
                    "p50": 1020.213211,
                    "p95": 1054.746627,
                    "p99": 1054.746627,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2222.430139,
                    "min": 2128.884248,
                    "p50": 2176.725132,
                    "p95": 2222.430139,
                    "p99": 2222.430139,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 733.07557,
                    "min": 679.8343169999999,
                    "p50": 697.7676,
                    "p95": 733.07557,
                    "p99": 733.07557,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1894.262018,
                    "min": 1813.4145879999999,
                    "p50": 1842.9187259999999,
                    "p95": 1894.262018,
                    "p99": 1894.262018,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 880.013934,
                    "min": 836.489435,
                    "p50": 866.8668399999999,
                    "p95": 880.013934,
                    "p99": 880.013934,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2965.2776759999997,
                    "min": 2845.873604,
                    "p50": 2923.6994379999996,
                    "p95": 2965.2776759999997,
                    "p99": 2965.2776759999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 543.1731619999999,
                    "min": 525.474378,
                    "p50": 537.550216,
                    "p95": 543.1731619999999,
                    "p99": 543.1731619999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1226.8315089999999,
                    "min": 1168.9839749999999,
                    "p50": 1194.6944039999998,
                    "p95": 1226.8315089999999,
                    "p99": 1226.8315089999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2583.900012,
                    "min": 2452.5458599999997,
                    "p50": 2508.7617999999998,
                    "p95": 2583.900012,
                    "p99": 2583.900012,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1716.263504,
                    "min": 1628.785232,
                    "p50": 1685.312526,
                    "p95": 1716.263504,
                    "p99": 1716.263504,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1918.332037,
                    "min": 1788.8532349999998,
                    "p50": 1864.0556259999998,
                    "p95": 1918.332037,
                    "p99": 1918.332037,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1065.0322529999999,
                    "min": 1000.41175,
                    "p50": 1025.877197,
                    "p95": 1065.0322529999999,
                    "p99": 1065.0322529999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 886.6828419999999,
                    "min": 833.844343,
                    "p50": 873.123169,
                    "p95": 886.6828419999999,
                    "p99": 886.6828419999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1741.360448,
                    "min": 1628.1762199999998,
                    "p50": 1696.2976629999998,
                    "p95": 1741.360448,
                    "p99": 1741.360448,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3437.635879,
                    "min": 3291.412354,
                    "p50": 3365.8941219999997,
                    "p95": 3437.635879,
                    "p99": 3437.635879,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 732.8476459999999,
                    "min": 687.592168,
                    "p50": 697.7742139999999,
                    "p95": 732.8476459999999,
                    "p99": 732.8476459999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1233.0931719999999,
                    "min": 1178.5100579999998,
                    "p50": 1204.449651,
                    "p95": 1233.0931719999999,
                    "p99": 1233.0931719999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 552.775339,
                    "min": 518.280663,
                    "p50": 531.9462669999999,
                    "p95": 552.775339,
                    "p99": 552.775339,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2606.354853,
                    "min": 2468.650964,
                    "p50": 2536.098064,
                    "p95": 2606.354853,
                    "p99": 2606.354853,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2432.688056,
                    "min": 2291.585994,
                    "p50": 2383.1483909999997,
                    "p95": 2432.688056,
                    "p99": 2432.688056,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2104.88987,
                    "min": 1960.5115389999999,
                    "p50": 2042.947839,
                    "p95": 2104.88987,
                    "p99": 2104.88987,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2244.328819,
                    "min": 2153.907684,
                    "p50": 2207.101228,
                    "p95": 2244.328819,
                    "p99": 2244.328819,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1565.568884,
                    "min": 1505.868864,
                    "p50": 1542.13483,
                    "p95": 1565.568884,
                    "p99": 1565.568884,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3032.659295,
                    "min": 2892.8164159999997,
                    "p50": 2958.213836,
                    "p95": 3032.659295,
                    "p99": 3032.659295,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1411.169379,
                    "min": 1350.2381679999999,
                    "p50": 1371.865261,
                    "p95": 1411.169379,
                    "p99": 1411.169379,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 816.6611859999999,
                    "min": 791.8765609999999,
                    "p50": 812.0265569999999,
                    "p95": 816.6611859999999,
                    "p99": 816.6611859999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 461.826176,
                    "min": 444.92679699999997,
                    "p50": 456.24776699999995,
                    "p95": 461.826176,
                    "p99": 461.826176,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 941.965969,
                    "min": 898.573541,
                    "p50": 933.172384,
                    "p95": 941.965969,
                    "p99": 941.965969,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1112.003082,
                    "min": 1053.213054,
                    "p50": 1073.649222,
                    "p95": 1112.003082,
                    "p99": 1112.003082,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 236.34985899999998,
                    "min": 179.556965,
                    "p50": 216.796349,
                    "p95": 236.34985899999998,
                    "p99": 236.34985899999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 760.735193,
                    "min": 738.430476,
                    "p50": 744.142357,
                    "p95": 760.735193,
                    "p99": 760.735193,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 406.601956,
                    "min": 389.06460699999997,
                    "p50": 397.337814,
                    "p95": 406.601956,
                    "p99": 406.601956,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 279.65339,
                    "min": 269.53061299999996,
                    "p50": 274.372528,
                    "p95": 279.65339,
                    "p99": 279.65339,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1849.3880889999998,
                    "min": 1777.7023179999999,
                    "p50": 1828.0004359999998,
                    "p95": 1849.3880889999998,
                    "p99": 1849.3880889999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 580.1844199999999,
                    "min": 561.591114,
                    "p50": 575.5703189999999,
                    "p95": 580.1844199999999,
                    "p99": 580.1844199999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 699.861447,
                    "min": 667.9450019999999,
                    "p50": 697.3867319999999,
                    "p95": 699.861447,
                    "p99": 699.861447,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 884.18049,
                    "min": 857.27355,
                    "p50": 873.3288379999999,
                    "p95": 884.18049,
                    "p99": 884.18049,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 348.846822,
                    "min": 302.65790699999997,
                    "p50": 337.328766,
                    "p95": 348.846822,
                    "p99": 348.846822,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3329.3252749999997,
                    "min": 2963.155234,
                    "p50": 3036.018039,
                    "p95": 3329.3252749999997,
                    "p99": 3329.3252749999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1246.1005969999999,
                    "min": 1206.334372,
                    "p50": 1234.836844,
                    "p95": 1246.1005969999999,
                    "p99": 1246.1005969999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 700.442267,
                    "min": 622.449668,
                    "p50": 640.985988,
                    "p95": 700.442267,
                    "p99": 700.442267,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 519.085879,
                    "min": 496.34983,
                    "p50": 512.352439,
                    "p95": 519.085879,
                    "p99": 519.085879,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2460.874544,
                    "min": 2368.741332,
                    "p50": 2430.547154,
                    "p95": 2460.874544,
                    "p99": 2460.874544,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2767.854058,
                    "min": 2658.036188,
                    "p50": 2732.330711,
                    "p95": 2767.854058,
                    "p99": 2767.854058,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 859.933273,
                    "min": 824.0421829999999,
                    "p50": 845.3810629999999,
                    "p95": 859.933273,
                    "p99": 859.933273,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1800.749138,
                    "min": 1736.182756,
                    "p50": 1778.2470289999999,
                    "p95": 1800.749138,
                    "p99": 1800.749138,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1257.120856,
                    "min": 1199.389422,
                    "p50": 1243.6457799999998,
                    "p95": 1257.120856,
                    "p99": 1257.120856,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1407.711959,
                    "min": 1372.358929,
                    "p50": 1380.1156959999998,
                    "p95": 1407.711959,
                    "p99": 1407.711959,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 448.027003,
                    "min": 428.63176,
                    "p50": 441.591279,
                    "p95": 448.027003,
                    "p99": 448.027003,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1551.221136,
                    "min": 1491.484044,
                    "p50": 1518.2443059999998,
                    "p95": 1551.221136,
                    "p99": 1551.221136,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 728.449137,
                    "min": 695.3562109999999,
                    "p50": 710.2161639999999,
                    "p95": 728.449137,
                    "p99": 728.449137,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1964.898098,
                    "min": 1892.2855579999998,
                    "p50": 1923.987339,
                    "p95": 1964.898098,
                    "p99": 1964.898098,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1136.23926,
                    "min": 1092.4183209999999,
                    "p50": 1109.930154,
                    "p95": 1136.23926,
                    "p99": 1136.23926,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2449.309756,
                    "min": 2348.6128329999997,
                    "p50": 2388.275995,
                    "p95": 2449.309756,
                    "p99": 2449.309756,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1690.1326789999998,
                    "min": 1627.6693,
                    "p50": 1652.013997,
                    "p95": 1690.1326789999998,
                    "p99": 1690.1326789999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1002.472497,
                    "min": 939.354465,
                    "p50": 977.8379279999999,
                    "p95": 1002.472497,
                    "p99": 1002.472497,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 586.301613,
                    "min": 538.031989,
                    "p50": 577.9078969999999,
                    "p95": 586.301613,
                    "p99": 586.301613,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2090.7738369999997,
                    "min": 2022.146458,
                    "p50": 2054.987537,
                    "p95": 2090.7738369999997,
                    "p99": 2090.7738369999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4168.118431,
                    "min": 3993.9423469999997,
                    "p50": 4049.7120099999997,
                    "p95": 4168.118431,
                    "p99": 4168.118431,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 921.5568129999999,
                    "min": 892.229845,
                    "p50": 904.3090199999999,
                    "p95": 921.5568129999999,
                    "p99": 921.5568129999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1029.535627,
                    "min": 993.0331319999999,
                    "p50": 1019.447111,
                    "p95": 1029.535627,
                    "p99": 1029.535627,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 540.620142,
                    "min": 511.913279,
                    "p50": 531.223828,
                    "p95": 540.620142,
                    "p99": 540.620142,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 827.12258,
                    "min": 791.457965,
                    "p50": 818.1263879999999,
                    "p95": 827.12258,
                    "p99": 827.12258,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1446.521368,
                    "min": 1376.327429,
                    "p50": 1393.748044,
                    "p95": 1446.521368,
                    "p99": 1446.521368,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 333.68377899999996,
                    "min": 321.73992799999996,
                    "p50": 330.78844,
                    "p95": 333.68377899999996,
                    "p99": 333.68377899999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3003.932084,
                    "min": 2917.7845789999997,
                    "p50": 2989.452236,
                    "p95": 3003.932084,
                    "p99": 3003.932084,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1139.3566329999999,
                    "min": 1076.0531429999999,
                    "p50": 1119.156991,
                    "p95": 1139.3566329999999,
                    "p99": 1139.3566329999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1330.543227,
                    "min": 1261.973943,
                    "p50": 1317.456416,
                    "p95": 1330.543227,
                    "p99": 1330.543227,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 634.0096179999999,
                    "min": 607.3218059999999,
                    "p50": 624.373908,
                    "p95": 634.0096179999999,
                    "p99": 634.0096179999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1805.8797519999998,
                    "min": 1706.9170829999998,
                    "p50": 1758.196798,
                    "p95": 1805.8797519999998,
                    "p99": 1805.8797519999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1231.961865,
                    "min": 1179.736242,
                    "p50": 1218.996218,
                    "p95": 1231.961865,
                    "p99": 1231.961865,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 734.035451,
                    "min": 702.84338,
                    "p50": 724.02897,
                    "p95": 734.035451,
                    "p99": 734.035451,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4004.171182,
                    "min": 3882.317497,
                    "p50": 3946.4552949999998,
                    "p95": 4004.171182,
                    "p99": 4004.171182,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 431.570403,
                    "min": 399.76188199999996,
                    "p50": 420.798838,
                    "p95": 431.570403,
                    "p99": 431.570403,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1509.276891,
                    "min": 1469.4836309999998,
                    "p50": 1499.922319,
                    "p95": 1509.276891,
                    "p99": 1509.276891,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2017.6156819999999,
                    "min": 1962.0639079999999,
                    "p50": 1995.715338,
                    "p95": 2017.6156819999999,
                    "p99": 2017.6156819999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom16KBytes",
        "RipemdFrom8Bytes",
        "RipemdFrom1024Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}