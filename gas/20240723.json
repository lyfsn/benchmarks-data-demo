{
    "nethermind": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "346.44",
            "p50": "321.25",
            "p95": "204.75",
            "p99": "318.10",
            "min": "169.32",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "870.20",
            "p50": "743.23",
            "p95": "608.64",
            "p99": "817.89",
            "min": "562.49",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "457.86",
            "p50": "385.66",
            "p95": "334.16",
            "p99": "433.12",
            "min": "312.33",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "258.11",
            "p50": "241.78",
            "p95": "202.67",
            "p99": "247.02",
            "min": "188.82",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8311.58",
            "p50": "5445.60",
            "p95": "1089.18",
            "p99": "6867.10",
            "min": "1089.18",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "950.45",
            "p50": "716.29",
            "p95": "456.49",
            "p99": "851.66",
            "min": "456.49",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13772.02",
            "p50": "5488.02",
            "p95": "1363.88",
            "p99": "11290.39",
            "min": "1363.88",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "18552.14",
            "p50": "4700.42",
            "p95": "122.70",
            "p99": "14866.26",
            "min": "122.70",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1027.86",
            "p50": "799.34",
            "p95": "512.04",
            "p99": "924.70",
            "min": "512.04",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "411.36",
            "p50": "361.53",
            "p95": "275.47",
            "p99": "384.18",
            "min": "268.32",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "238.74",
            "p50": "232.93",
            "p95": "217.84",
            "p99": "234.56",
            "min": "212.61",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.21",
            "p50": "70.73",
            "p95": "67.63",
            "p99": "70.50",
            "min": "67.24",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.63",
            "p50": "76.94",
            "p95": "71.20",
            "p99": "78.75",
            "min": "70.15",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2321.23",
            "p50": "1431.28",
            "p95": "996.69",
            "p99": "2056.32",
            "min": "996.69",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "71.10",
            "p50": "68.83",
            "p95": "63.68",
            "p99": "69.62",
            "min": "62.85",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "71.14",
            "p50": "69.00",
            "p95": "65.70",
            "p99": "70.05",
            "min": "64.74",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1437.74",
            "p50": "1061.34",
            "p95": "653.61",
            "p99": "1280.92",
            "min": "653.61",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3619.59",
            "p50": "1870.11",
            "p95": "1368.10",
            "p99": "3169.29",
            "min": "1368.10",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1463.47",
            "p50": "1142.68",
            "p95": "655.74",
            "p99": "1301.92",
            "min": "655.74",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.45",
            "p50": "134.24",
            "p95": "130.02",
            "p99": "134.37",
            "min": "121.88",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.05",
            "p50": "131.27",
            "p95": "127.50",
            "p99": "134.34",
            "min": "117.04",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "183.40",
            "p50": "169.77",
            "p95": "161.84",
            "p99": "179.09",
            "min": "144.20",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "194.50",
            "p50": "146.83",
            "p95": "173.42",
            "p99": "190.29",
            "min": "141.79",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "130.41",
            "p50": "124.25",
            "p95": "112.51",
            "p99": "126.83",
            "min": "108.03",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "152.48",
            "p50": "146.57",
            "p95": "137.25",
            "p99": "149.43",
            "min": "133.44",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "133.67",
            "p50": "126.41",
            "p95": "117.33",
            "p99": "130.40",
            "min": "113.25",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "129.03",
            "p50": "126.12",
            "p95": "114.98",
            "p99": "126.22",
            "min": "111.46",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "799.88",
            "p50": "640.54",
            "p95": "371.17",
            "p99": "714.14",
            "min": "371.17",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "774.06",
            "p50": "696.78",
            "p95": "541.93",
            "p99": "727.63",
            "min": "541.93",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "814.19",
            "p50": "746.84",
            "p95": "473.69",
            "p99": "746.09",
            "min": "473.69",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "755.60",
            "p50": "696.33",
            "p95": "420.63",
            "p99": "688.60",
            "min": "420.63",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "739.57",
            "p50": "620.13",
            "p95": "352.96",
            "p99": "662.25",
            "min": "352.96",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "834.82",
            "p50": "702.71",
            "p95": "417.19",
            "p99": "751.30",
            "min": "395.20",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "237.11",
            "p50": "208.94",
            "p95": "177.45",
            "p99": "225.17",
            "min": "162.53",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "231.77",
            "p50": "219.29",
            "p95": "202.80",
            "p99": "225.98",
            "min": "195.56",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "245.52",
            "p50": "217.16",
            "p95": "198.27",
            "p99": "236.07",
            "min": "186.46",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "226.85",
            "p50": "213.94",
            "p95": "178.60",
            "p99": "217.20",
            "min": "166.54",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "231.25",
            "p50": "225.06",
            "p95": "194.81",
            "p99": "223.96",
            "min": "188.38",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "290.63",
            "p50": "267.51",
            "p95": "225.34",
            "p99": "277.57",
            "min": "209.01",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "314.54",
            "p50": "286.18",
            "p95": "250.74",
            "p99": "301.78",
            "min": "239.49",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "408.78",
            "p50": "396.25",
            "p95": "294.54",
            "p99": "385.93",
            "min": "288.52",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "636.26",
            "p50": "532.24",
            "p95": "403.77",
            "p99": "589.76",
            "min": "391.54",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "272.47",
            "p50": "267.83",
            "p95": "243.15",
            "p99": "266.61",
            "min": "235.82",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "225.75",
            "p50": "220.15",
            "p95": "180.41",
            "p99": "216.68",
            "min": "172.41",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "271.29",
            "p50": "266.77",
            "p95": "224.97",
            "p99": "262.03",
            "min": "213.39",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "377.04",
            "p50": "352.58",
            "p95": "286.96",
            "p99": "359.02",
            "min": "276.96",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "231.80",
            "p50": "225.86",
            "p95": "202.89",
            "p99": "226.01",
            "min": "195.66",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "278.93",
            "p50": "260.50",
            "p95": "222.26",
            "p99": "267.60",
            "min": "208.10",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "276.49",
            "p50": "259.16",
            "p95": "222.73",
            "p99": "265.74",
            "min": "213.25",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "219.38",
            "p50": "211.84",
            "p95": "187.68",
            "p99": "213.04",
            "min": "179.76",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "280.07",
            "p50": "259.15",
            "p95": "230.49",
            "p99": "270.15",
            "min": "218.09",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "123.68",
            "p50": "121.89",
            "p95": "107.51",
            "p99": "120.45",
            "min": "103.47",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "122.80",
            "p50": "121.81",
            "p95": "114.48",
            "p99": "121.13",
            "min": "112.40",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "123.53",
            "p50": "122.18",
            "p95": "105.79",
            "p99": "119.98",
            "min": "101.36",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "382.91",
            "p50": "372.15",
            "p95": "293.80",
            "p99": "365.09",
            "min": "289.11",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "259.99",
            "p50": "254.79",
            "p95": "205.43",
            "p99": "249.08",
            "min": "195.80",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "425.30",
            "p50": "411.14",
            "p95": "307.52",
            "p99": "401.74",
            "min": "294.43",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "182.92",
            "p50": "173.76",
            "p95": "151.85",
            "p99": "176.70",
            "min": "144.08",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "799.02",
            "p50": "604.86",
            "p95": "559.08",
            "p99": "751.03",
            "min": "516.73",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "235.30",
            "p50": "220.70",
            "p95": "179.72",
            "p99": "224.19",
            "min": "169.92",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "155.78",
            "p50": "147.75",
            "p95": "135.11",
            "p99": "151.65",
            "min": "129.95",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2425.73",
            "p50": "1489.17",
            "p95": "1125.06",
            "p99": "2165.60",
            "min": "1125.06",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "328.46",
            "p50": "277.36",
            "p95": "211.36",
            "p99": "305.04",
            "min": "211.36",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3794.79",
            "p50": "2393.62",
            "p95": "890.49",
            "p99": "3213.93",
            "min": "890.49",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "7309.54",
            "p50": "4427.79",
            "p95": "1134.10",
            "p99": "6074.45",
            "min": "1134.10",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "364.59",
            "p50": "322.38",
            "p95": "221.94",
            "p99": "336.06",
            "min": "221.94",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "160.73",
            "p50": "149.36",
            "p95": "136.93",
            "p99": "155.97",
            "min": "135.68",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "143.79",
            "p50": "135.72",
            "p95": "113.71",
            "p99": "137.77",
            "min": "106.18",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "236.65",
            "p50": "210.95",
            "p95": "178.59",
            "p99": "225.04",
            "min": "172.13",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "50.79",
            "p50": "48.60",
            "p95": "46.02",
            "p99": "49.83",
            "min": "45.49",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "211.89",
            "p50": "192.59",
            "p95": "151.77",
            "p99": "199.87",
            "min": "151.77",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.92",
            "p50": "81.91",
            "p95": "78.02",
            "p99": "85.14",
            "min": "77.03",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "85.09",
            "p50": "83.32",
            "p95": "73.22",
            "p99": "82.71",
            "min": "71.13",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.56",
            "p50": "90.40",
            "p95": "80.87",
            "p99": "91.02",
            "min": "80.87",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "212.80",
            "p50": "196.17",
            "p95": "136.99",
            "p99": "197.64",
            "min": "136.99",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.31",
            "p50": "89.93",
            "p95": "71.72",
            "p99": "89.00",
            "min": "71.72",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "105.66",
            "p50": "101.69",
            "p95": "102.15",
            "p99": "104.96",
            "min": "96.89",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "113.89",
            "p50": "108.62",
            "p95": "107.60",
            "p99": "112.63",
            "min": "99.91",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "265.44",
            "p50": "242.70",
            "p95": "200.65",
            "p99": "252.48",
            "min": "147.65",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "129.75",
            "p50": "120.77",
            "p95": "124.50",
            "p99": "128.70",
            "min": "116.63",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "457.82",
            "p50": "383.44",
            "p95": "296.62",
            "p99": "425.58",
            "min": "256.32",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "466.34",
            "p50": "403.35",
            "p95": "289.96",
            "p99": "431.06",
            "min": "245.87",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "442.85",
            "p50": "403.82",
            "p95": "289.14",
            "p99": "412.11",
            "min": "250.71",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "477.44",
            "p50": "386.59",
            "p95": "329.32",
            "p99": "447.81",
            "min": "292.29",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "968.57",
            "p50": "730.79",
            "p95": "502.66",
            "p99": "875.38",
            "min": "502.66",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "795.52",
            "p50": "621.90",
            "p95": "403.03",
            "p99": "717.02",
            "min": "403.03",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "940.49",
            "p50": "725.66",
            "p95": "451.67",
            "p99": "842.73",
            "min": "451.67",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "819.24",
            "p50": "623.29",
            "p95": "439.02",
            "p99": "743.19",
            "min": "439.02",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "830.58",
            "p50": "649.94",
            "p95": "435.57",
            "p99": "751.58",
            "min": "435.57",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "933.53",
            "p50": "674.29",
            "p95": "508.13",
            "p99": "848.45",
            "min": "485.74",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "400.22",
            "p50": "332.96",
            "p95": "274.26",
            "p99": "375.03",
            "min": "242.76",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "383.78",
            "p50": "332.22",
            "p95": "271.48",
            "p99": "361.32",
            "min": "243.40",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "383.87",
            "p50": "317.58",
            "p95": "244.08",
            "p99": "355.91",
            "min": "209.13",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "401.19",
            "p50": "345.06",
            "p95": "284.58",
            "p99": "377.87",
            "min": "255.42",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "67.55",
            "p50": "65.81",
            "p95": "62.01",
            "p99": "66.44",
            "min": "61.03",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "154.96",
            "p50": "147.10",
            "p95": "132.01",
            "p99": "150.37",
            "min": "126.27",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "151.33",
            "p50": "141.04",
            "p95": "125.35",
            "p99": "146.14",
            "min": "120.76",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "161.09",
            "p50": "154.02",
            "p95": "128.73",
            "p99": "154.62",
            "min": "127.03",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "230.08",
            "p50": "209.01",
            "p95": "166.90",
            "p99": "217.44",
            "min": "163.58",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "140.24",
            "p50": "134.29",
            "p95": "121.95",
            "p99": "136.58",
            "min": "117.38",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "195.90",
            "p50": "179.93",
            "p95": "151.35",
            "p99": "186.99",
            "min": "143.49",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "156.03",
            "p50": "144.25",
            "p95": "133.00",
            "p99": "151.42",
            "min": "127.24",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "221.03",
            "p50": "205.14",
            "p95": "180.86",
            "p99": "213.00",
            "min": "176.40",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "108.37",
            "p50": "101.61",
            "p95": "93.74",
            "p99": "105.44",
            "min": "90.08",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "183.39",
            "p50": "178.05",
            "p95": "152.37",
            "p99": "177.19",
            "min": "144.61",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "157.89",
            "p50": "148.34",
            "p95": "135.22",
            "p99": "153.36",
            "min": "131.21",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "144.52",
            "p50": "137.68",
            "p95": "123.46",
            "p99": "140.31",
            "min": "118.19",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "188.15",
            "p50": "177.95",
            "p95": "153.62",
            "p99": "181.25",
            "min": "144.99",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "69.43",
            "p50": "68.73",
            "p95": "63.38",
            "p99": "68.22",
            "min": "61.87",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "71.37",
            "p50": "69.12",
            "p95": "66.27",
            "p99": "70.35",
            "min": "65.00",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "75.11",
            "p50": "73.47",
            "p95": "68.75",
            "p99": "73.84",
            "min": "67.16",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "170.84",
            "p50": "160.22",
            "p95": "134.63",
            "p99": "163.60",
            "min": "132.72",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "192.84",
            "p50": "179.69",
            "p95": "152.93",
            "p99": "184.86",
            "min": "145.89",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "195.95",
            "p50": "180.76",
            "p95": "152.15",
            "p99": "187.19",
            "min": "147.28",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "635.64",
            "p50": "571.40",
            "p95": "424.67",
            "p99": "593.45",
            "min": "371.92",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1538.61",
            "p50": "1048.62",
            "p95": "1003.55",
            "p99": "1431.60",
            "min": "909.12",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "845.50",
            "p50": "698.69",
            "p95": "518.09",
            "p99": "780.02",
            "min": "460.31",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "723.32",
            "p50": "613.28",
            "p95": "477.82",
            "p99": "674.22",
            "min": "416.45",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "7961.00",
            "p50": "4900.95",
            "p95": "1112.43",
            "p99": "6591.29",
            "min": "1112.43",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "789.68",
            "p50": "644.11",
            "p95": "407.68",
            "p99": "713.28",
            "min": "407.68",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "11986.91",
            "p50": "4915.46",
            "p95": "1235.01",
            "p99": "9836.53",
            "min": "1235.01",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "20377.88",
            "p50": "4911.77",
            "p95": "1229.92",
            "p99": "16548.29",
            "min": "1229.92",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "788.69",
            "p50": "643.81",
            "p95": "399.95",
            "p99": "710.94",
            "min": "399.95",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "408.34",
            "p50": "356.80",
            "p95": "269.45",
            "p99": "380.57",
            "min": "262.14",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "233.98",
            "p50": "219.58",
            "p95": "187.92",
            "p99": "224.76",
            "min": "176.40",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.52",
            "p50": "69.98",
            "p95": "64.85",
            "p99": "70.18",
            "min": "64.11",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.93",
            "p50": "77.45",
            "p95": "73.98",
            "p99": "79.54",
            "min": "73.20",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "169.45",
            "p50": "160.10",
            "p95": "137.13",
            "p99": "162.98",
            "min": "137.13",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.67",
            "p50": "51.71",
            "p95": "48.96",
            "p99": "51.93",
            "min": "48.55",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.66",
            "p50": "51.27",
            "p95": "49.75",
            "p99": "52.08",
            "min": "49.23",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1196.30",
            "p50": "915.78",
            "p95": "563.49",
            "p99": "1069.74",
            "min": "563.49",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "4893.26",
            "p50": "2889.62",
            "p95": "1242.46",
            "p99": "4163.10",
            "min": "1242.46",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1036.87",
            "p50": "779.08",
            "p95": "487.74",
            "p99": "927.04",
            "min": "487.74",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "62.44",
            "p50": "61.73",
            "p95": "61.93",
            "p99": "62.34",
            "min": "61.16",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "68.53",
            "p50": "67.12",
            "p95": "66.09",
            "p99": "68.04",
            "min": "63.12",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "308.76",
            "p50": "268.80",
            "p95": "258.79",
            "p99": "298.77",
            "min": "217.91",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "83.08",
            "p50": "72.71",
            "p95": "77.71",
            "p99": "82.00",
            "min": "69.67",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "463.72",
            "p50": "394.29",
            "p95": "325.97",
            "p99": "436.17",
            "min": "291.53",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "453.16",
            "p50": "409.91",
            "p95": "327.78",
            "p99": "428.08",
            "min": "296.43",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "469.50",
            "p50": "401.86",
            "p95": "329.17",
            "p99": "441.43",
            "min": "294.09",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "459.96",
            "p50": "401.03",
            "p95": "321.91",
            "p99": "432.35",
            "min": "287.40",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1423.46",
            "p50": "1021.12",
            "p95": "736.03",
            "p99": "1285.97",
            "min": "736.03",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1341.83",
            "p50": "1033.30",
            "p95": "652.88",
            "p99": "1204.04",
            "min": "652.88",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1515.42",
            "p50": "1017.31",
            "p95": "749.43",
            "p99": "1362.23",
            "min": "749.43",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1300.37",
            "p50": "920.00",
            "p95": "632.57",
            "p99": "1166.81",
            "min": "632.57",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1327.03",
            "p50": "929.12",
            "p95": "644.64",
            "p99": "1190.55",
            "min": "644.64",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1453.13",
            "p50": "1046.86",
            "p95": "757.81",
            "p99": "1314.07",
            "min": "721.22",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "388.68",
            "p50": "346.29",
            "p95": "306.24",
            "p99": "372.19",
            "min": "285.62",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "371.13",
            "p50": "344.97",
            "p95": "284.01",
            "p99": "353.71",
            "min": "262.23",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "409.23",
            "p50": "360.96",
            "p95": "295.03",
            "p99": "386.39",
            "min": "266.49",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "398.38",
            "p50": "350.54",
            "p95": "288.82",
            "p99": "376.47",
            "min": "261.43",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "268.68",
            "p50": "247.41",
            "p95": "216.48",
            "p99": "258.24",
            "min": "207.27",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "737.70",
            "p50": "564.24",
            "p95": "449.73",
            "p99": "680.11",
            "min": "377.74",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "708.96",
            "p50": "628.05",
            "p95": "482.43",
            "p99": "663.65",
            "min": "442.45",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "526.35",
            "p50": "469.04",
            "p95": "371.25",
            "p99": "495.33",
            "min": "363.09",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "906.21",
            "p50": "706.85",
            "p95": "484.69",
            "p99": "821.91",
            "min": "462.51",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "469.20",
            "p50": "431.92",
            "p95": "359.33",
            "p99": "447.23",
            "min": "331.86",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "586.15",
            "p50": "505.78",
            "p95": "391.98",
            "p99": "547.31",
            "min": "357.71",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "725.81",
            "p50": "577.40",
            "p95": "439.79",
            "p99": "668.60",
            "min": "368.28",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "853.39",
            "p50": "715.59",
            "p95": "495.37",
            "p99": "781.79",
            "min": "455.58",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "271.02",
            "p50": "246.13",
            "p95": "212.22",
            "p99": "259.26",
            "min": "197.52",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "674.37",
            "p50": "533.19",
            "p95": "422.12",
            "p99": "623.92",
            "min": "359.06",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "717.62",
            "p50": "580.00",
            "p95": "467.14",
            "p99": "667.52",
            "min": "422.94",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "226.37",
            "p50": "218.01",
            "p95": "190.08",
            "p99": "219.11",
            "min": "181.01",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "624.97",
            "p50": "560.92",
            "p95": "422.50",
            "p99": "584.48",
            "min": "371.88",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "146.35",
            "p50": "140.22",
            "p95": "128.29",
            "p99": "142.74",
            "min": "123.77",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "151.19",
            "p50": "144.62",
            "p95": "129.99",
            "p99": "146.95",
            "min": "124.70",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "149.47",
            "p50": "143.86",
            "p95": "130.39",
            "p99": "145.65",
            "min": "125.62",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "445.49",
            "p50": "395.94",
            "p95": "291.05",
            "p99": "414.60",
            "min": "282.92",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "652.83",
            "p50": "577.34",
            "p95": "390.89",
            "p99": "600.44",
            "min": "344.66",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "665.90",
            "p50": "568.85",
            "p95": "401.50",
            "p99": "613.02",
            "min": "372.12",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "159.07",
            "p50": "155.36",
            "p95": "149.29",
            "p99": "157.11",
            "min": "146.03",
            "n": "14",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "200.81",
            "p50": "182.20",
            "p95": "172.80",
            "p99": "195.21",
            "min": "144.80",
            "n": "9",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "200.75",
            "p50": "196.02",
            "p95": "166.58",
            "p99": "193.92",
            "min": "148.19",
            "n": "12",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "158.29",
            "p50": "154.59",
            "p95": "149.01",
            "p99": "156.44",
            "min": "146.69",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2213.30",
            "p50": "1411.47",
            "p95": "691.91",
            "p99": "1909.03",
            "min": "691.91",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "338.45",
            "p50": "317.80",
            "p95": "274.55",
            "p99": "325.67",
            "min": "274.55",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3040.37",
            "p50": "2090.98",
            "p95": "851.53",
            "p99": "2602.60",
            "min": "851.53",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10093.83",
            "p50": "4068.79",
            "p95": "1124.40",
            "p99": "8299.94",
            "min": "1124.40",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "334.20",
            "p50": "316.37",
            "p95": "280.27",
            "p99": "323.41",
            "min": "280.27",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "160.26",
            "p50": "156.85",
            "p95": "143.95",
            "p99": "157.00",
            "min": "143.09",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "118.10",
            "p50": "116.03",
            "p95": "113.00",
            "p99": "117.08",
            "min": "111.73",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "236.89",
            "p50": "225.22",
            "p95": "190.63",
            "p99": "227.64",
            "min": "185.49",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.34",
            "p50": "49.85",
            "p95": "48.50",
            "p99": "50.77",
            "min": "48.18",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "204.89",
            "p50": "196.79",
            "p95": "167.07",
            "p99": "197.32",
            "min": "167.07",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "85.77",
            "p50": "84.39",
            "p95": "80.38",
            "p99": "84.69",
            "min": "79.78",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "85.95",
            "p50": "84.01",
            "p95": "79.31",
            "p99": "84.62",
            "min": "78.14",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.69",
            "p50": "90.60",
            "p95": "83.39",
            "p99": "90.83",
            "min": "83.39",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "211.23",
            "p50": "202.20",
            "p95": "182.67",
            "p99": "205.52",
            "min": "182.67",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.18",
            "p50": "90.69",
            "p95": "84.46",
            "p99": "90.63",
            "min": "84.46",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.01",
            "p50": "105.71",
            "p95": "105.72",
            "p99": "107.55",
            "min": "102.28",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "110.75",
            "p50": "109.01",
            "p95": "107.02",
            "p99": "110.00",
            "min": "102.48",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "158.49",
            "p50": "148.80",
            "p95": "144.62",
            "p99": "155.71",
            "min": "133.27",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "150.74",
            "p50": "127.00",
            "p95": "138.49",
            "p99": "148.29",
            "min": "120.13",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "244.75",
            "p50": "226.42",
            "p95": "193.21",
            "p99": "234.44",
            "min": "180.32",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "263.84",
            "p50": "249.26",
            "p95": "223.94",
            "p99": "255.86",
            "min": "213.96",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "244.66",
            "p50": "232.30",
            "p95": "206.21",
            "p99": "236.97",
            "min": "196.59",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "245.32",
            "p50": "222.96",
            "p95": "199.95",
            "p99": "236.24",
            "min": "188.61",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "847.57",
            "p50": "719.54",
            "p95": "455.40",
            "p99": "769.13",
            "min": "455.40",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "818.50",
            "p50": "705.36",
            "p95": "500.34",
            "p99": "754.87",
            "min": "500.34",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "823.62",
            "p50": "665.04",
            "p95": "504.74",
            "p99": "759.84",
            "min": "504.74",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "796.59",
            "p50": "658.87",
            "p95": "480.73",
            "p99": "733.42",
            "min": "480.73",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "773.43",
            "p50": "656.32",
            "p95": "511.13",
            "p99": "720.97",
            "min": "511.13",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "789.86",
            "p50": "685.75",
            "p95": "554.37",
            "p99": "742.77",
            "min": "541.97",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "211.94",
            "p50": "201.04",
            "p95": "189.43",
            "p99": "207.44",
            "min": "183.80",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "207.84",
            "p50": "199.28",
            "p95": "186.40",
            "p99": "203.55",
            "min": "181.04",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "216.23",
            "p50": "202.04",
            "p95": "186.67",
            "p99": "210.32",
            "min": "179.28",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "212.24",
            "p50": "205.69",
            "p95": "164.24",
            "p99": "202.64",
            "min": "152.24",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "90.19",
            "p50": "86.07",
            "p95": "84.41",
            "p99": "89.04",
            "min": "83.39",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "82.26",
            "p50": "80.19",
            "p95": "77.35",
            "p99": "81.28",
            "min": "76.13",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "76.81",
            "p50": "75.16",
            "p95": "70.91",
            "p99": "75.63",
            "min": "69.87",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "120.04",
            "p50": "116.09",
            "p95": "110.01",
            "p99": "118.03",
            "min": "109.49",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "177.22",
            "p50": "172.17",
            "p95": "144.90",
            "p99": "170.76",
            "min": "143.20",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "119.98",
            "p50": "118.36",
            "p95": "110.75",
            "p99": "118.14",
            "min": "108.45",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "172.98",
            "p50": "164.88",
            "p95": "141.52",
            "p99": "166.69",
            "min": "135.97",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "157.42",
            "p50": "155.87",
            "p95": "126.78",
            "p99": "151.29",
            "min": "119.12",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "178.97",
            "p50": "170.51",
            "p95": "152.34",
            "p99": "173.65",
            "min": "149.38",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "88.78",
            "p50": "87.30",
            "p95": "80.99",
            "p99": "87.22",
            "min": "79.05",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "157.47",
            "p50": "153.06",
            "p95": "144.92",
            "p99": "154.96",
            "min": "141.79",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "132.31",
            "p50": "129.81",
            "p95": "121.56",
            "p99": "130.16",
            "min": "119.66",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "119.24",
            "p50": "114.65",
            "p95": "109.99",
            "p99": "117.39",
            "min": "107.68",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "156.19",
            "p50": "150.08",
            "p95": "141.25",
            "p99": "153.20",
            "min": "137.52",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "64.30",
            "p50": "63.08",
            "p95": "61.50",
            "p99": "63.74",
            "min": "60.80",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "65.13",
            "p50": "63.91",
            "p95": "62.15",
            "p99": "64.54",
            "min": "61.40",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "68.48",
            "p50": "67.38",
            "p95": "64.72",
            "p99": "67.73",
            "min": "63.78",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "144.67",
            "p50": "138.37",
            "p95": "122.85",
            "p99": "140.31",
            "min": "121.70",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "158.28",
            "p50": "153.14",
            "p95": "143.84",
            "p99": "155.39",
            "min": "141.29",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "161.80",
            "p50": "155.53",
            "p95": "144.01",
            "p99": "158.24",
            "min": "142.03",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "82.87",
            "p50": "80.07",
            "p95": "65.47",
            "p99": "79.39",
            "min": "61.12",
            "n": "15",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "543.51",
            "p50": "405.31",
            "p95": "251.26",
            "p99": "485.06",
            "min": "199.69",
            "n": "16",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "136.85",
            "p50": "132.19",
            "p95": "119.87",
            "p99": "133.46",
            "min": "116.87",
            "n": "16",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "71.64",
            "p50": "69.85",
            "p95": "66.94",
            "p99": "70.70",
            "min": "65.76",
            "n": "15",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2557.75",
            "p50": "2142.51",
            "p95": "1086.18",
            "p99": "2263.43",
            "min": "1086.18",
            "n": "19",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "280.92",
            "p50": "247.06",
            "p95": "183.47",
            "p99": "261.43",
            "min": "183.47",
            "n": "19",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4076.57",
            "p50": "1406.59",
            "p95": "482.72",
            "p99": "3357.80",
            "min": "482.72",
            "n": "19",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10222.35",
            "p50": "4843.83",
            "p95": "1105.98",
            "p99": "8399.07",
            "min": "1105.98",
            "n": "19",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "275.20",
            "p50": "234.50",
            "p95": "196.81",
            "p99": "259.52",
            "min": "196.81",
            "n": "19",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "230.34",
            "p50": "209.39",
            "p95": "151.68",
            "p99": "214.61",
            "min": "147.54",
            "n": "18",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "95.89",
            "p50": "92.62",
            "p95": "80.17",
            "p99": "92.75",
            "min": "76.24",
            "n": "15",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "69.84",
            "p50": "68.62",
            "p95": "65.60",
            "p99": "68.99",
            "min": "65.13",
            "n": "17",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "55.02",
            "p50": "53.02",
            "p95": "52.13",
            "p99": "54.44",
            "min": "51.81",
            "n": "17",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1131.70",
            "p50": "824.76",
            "p95": "286.70",
            "p99": "962.70",
            "min": "286.70",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "66.11",
            "p50": "64.49",
            "p95": "61.68",
            "p99": "65.22",
            "min": "61.19",
            "n": "17",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.55",
            "p50": "64.86",
            "p95": "59.49",
            "p99": "65.13",
            "min": "58.24",
            "n": "16",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "841.79",
            "p50": "687.21",
            "p95": "437.83",
            "p99": "761.00",
            "min": "437.83",
            "n": "19",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1255.52",
            "p50": "899.53",
            "p95": "353.99",
            "p99": "1075.21",
            "min": "353.99",
            "n": "19",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "878.34",
            "p50": "700.11",
            "p95": "223.69",
            "p99": "747.41",
            "min": "223.69",
            "n": "19",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "76.04",
            "p50": "74.00",
            "p95": "74.45",
            "p99": "75.72",
            "min": "72.06",
            "n": "7",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "68.78",
            "p50": "67.15",
            "p95": "67.52",
            "p99": "68.53",
            "min": "66.00",
            "n": "8",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "40.45",
            "p50": "38.87",
            "p95": "39.21",
            "p99": "40.20",
            "min": "38.20",
            "n": "10",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "102.07",
            "p50": "86.66",
            "p95": "94.39",
            "p99": "100.54",
            "min": "82.85",
            "n": "7",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "66.75",
            "p50": "65.68",
            "p95": "62.85",
            "p99": "65.97",
            "min": "61.88",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "64.64",
            "p50": "63.19",
            "p95": "60.62",
            "p99": "63.83",
            "min": "59.62",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "67.01",
            "p50": "65.71",
            "p95": "63.97",
            "p99": "66.40",
            "min": "63.21",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "67.64",
            "p50": "65.57",
            "p95": "64.02",
            "p99": "66.92",
            "min": "63.12",
            "n": "15",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "246.13",
            "p50": "225.46",
            "p95": "200.41",
            "p99": "236.99",
            "min": "200.41",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "300.93",
            "p50": "280.14",
            "p95": "221.03",
            "p99": "284.95",
            "min": "221.03",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "243.86",
            "p50": "228.34",
            "p95": "197.26",
            "p99": "234.54",
            "min": "197.26",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "278.22",
            "p50": "261.65",
            "p95": "207.49",
            "p99": "264.07",
            "min": "207.49",
            "n": "19",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "237.65",
            "p50": "224.82",
            "p95": "194.01",
            "p99": "228.92",
            "min": "194.01",
            "n": "19",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "244.25",
            "p50": "229.10",
            "p95": "188.48",
            "p99": "233.09",
            "min": "185.55",
            "n": "18",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "57.50",
            "p50": "56.10",
            "p95": "54.50",
            "p99": "56.90",
            "min": "53.76",
            "n": "15",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "57.38",
            "p50": "56.58",
            "p95": "53.95",
            "p99": "56.70",
            "min": "53.09",
            "n": "15",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "60.74",
            "p50": "58.92",
            "p95": "56.42",
            "p99": "59.88",
            "min": "55.34",
            "n": "15",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "57.49",
            "p50": "56.02",
            "p95": "55.04",
            "p99": "57.00",
            "min": "54.43",
            "n": "15",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "100.64",
            "p50": "96.70",
            "p95": "91.52",
            "p99": "98.82",
            "min": "89.91",
            "n": "16",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "73.56",
            "p50": "72.02",
            "p95": "67.80",
            "p99": "72.41",
            "min": "66.36",
            "n": "15",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "79.57",
            "p50": "77.41",
            "p95": "73.59",
            "p99": "78.38",
            "min": "72.53",
            "n": "16",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "175.67",
            "p50": "168.17",
            "p95": "140.74",
            "p99": "168.69",
            "min": "138.90",
            "n": "18",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "166.06",
            "p50": "160.55",
            "p95": "143.78",
            "p99": "161.60",
            "min": "142.61",
            "n": "18",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "95.66",
            "p50": "94.00",
            "p95": "88.67",
            "p99": "94.26",
            "min": "86.92",
            "n": "15",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "88.35",
            "p50": "85.28",
            "p95": "75.57",
            "p99": "85.79",
            "min": "73.31",
            "n": "16",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "87.32",
            "p50": "86.26",
            "p95": "82.39",
            "p99": "86.33",
            "min": "81.16",
            "n": "15",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "128.37",
            "p50": "123.92",
            "p95": "112.47",
            "p99": "125.19",
            "min": "110.70",
            "n": "17",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "100.21",
            "p50": "97.95",
            "p95": "93.23",
            "p99": "98.82",
            "min": "91.49",
            "n": "15",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "75.42",
            "p50": "73.08",
            "p95": "69.99",
            "p99": "74.34",
            "min": "68.63",
            "n": "15",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "100.42",
            "p50": "97.63",
            "p95": "92.92",
            "p99": "98.92",
            "min": "91.60",
            "n": "16",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "100.49",
            "p50": "98.85",
            "p95": "91.79",
            "p99": "98.75",
            "min": "89.62",
            "n": "15",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "81.28",
            "p50": "80.10",
            "p95": "75.58",
            "p99": "80.14",
            "min": "74.15",
            "n": "15",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "61.41",
            "p50": "60.25",
            "p95": "58.70",
            "p99": "60.87",
            "min": "58.03",
            "n": "15",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "60.55",
            "p50": "60.15",
            "p95": "58.43",
            "p99": "60.13",
            "min": "57.89",
            "n": "15",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "60.62",
            "p50": "60.12",
            "p95": "58.44",
            "p99": "60.18",
            "min": "57.89",
            "n": "15",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "169.83",
            "p50": "164.16",
            "p95": "152.36",
            "p99": "166.33",
            "min": "151.44",
            "n": "18",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "75.22",
            "p50": "72.31",
            "p95": "69.58",
            "p99": "74.09",
            "min": "68.59",
            "n": "16",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "103.71",
            "p50": "100.50",
            "p95": "94.79",
            "p99": "101.92",
            "min": "93.80",
            "n": "17",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    }
}