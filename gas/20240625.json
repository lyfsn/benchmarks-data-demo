{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1074.784838,
                    "min": 645.2822259999999,
                    "p50": 786.078452,
                    "p95": 1074.784838,
                    "p99": 1074.784838,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 336.689665,
                    "min": 291.648558,
                    "p50": 306.069705,
                    "p95": 336.689665,
                    "p99": 336.689665,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 523.815556,
                    "min": 473.977286,
                    "p50": 481.30049599999995,
                    "p95": 523.815556,
                    "p99": 523.815556,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 430.826638,
                    "min": 405.61872,
                    "p50": 426.585125,
                    "p95": 430.826638,
                    "p99": 430.826638,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 356.49575999999996,
                    "min": 325.37496699999997,
                    "p50": 332.917212,
                    "p95": 356.49575999999996,
                    "p99": 356.49575999999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 425.637541,
                    "min": 375.52313599999997,
                    "p50": 387.78727899999996,
                    "p95": 425.637541,
                    "p99": 425.637541,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 505.931656,
                    "min": 437.45761899999997,
                    "p50": 447.829793,
                    "p95": 505.931656,
                    "p99": 505.931656,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 133.019524,
                    "min": 90.339214,
                    "p50": 128.754013,
                    "p95": 133.019524,
                    "p99": 133.019524,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 173.573793,
                    "min": 151.646506,
                    "p50": 158.14744,
                    "p95": 173.573793,
                    "p99": 173.573793,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 199.771456,
                    "min": 167.240646,
                    "p50": 177.249382,
                    "p95": 199.771456,
                    "p99": 199.771456,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 728.9799969999999,
                    "min": 622.7221529999999,
                    "p50": 642.12069,
                    "p95": 728.9799969999999,
                    "p99": 728.9799969999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 235.240149,
                    "min": 186.26889699999998,
                    "p50": 219.712424,
                    "p95": 235.240149,
                    "p99": 235.240149,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 626.689706,
                    "min": 556.444387,
                    "p50": 567.7534979999999,
                    "p95": 626.689706,
                    "p99": 626.689706,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 294.708265,
                    "min": 243.10963099999998,
                    "p50": 274.80523,
                    "p95": 294.708265,
                    "p99": 294.708265,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 276.040577,
                    "min": 237.150356,
                    "p50": 245.167653,
                    "p95": 276.040577,
                    "p99": 276.040577,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 163.81178,
                    "min": 128.60174899999998,
                    "p50": 147.88913,
                    "p95": 163.81178,
                    "p99": 163.81178,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 232.092731,
                    "min": 213.823524,
                    "p50": 226.15900299999998,
                    "p95": 232.092731,
                    "p99": 232.092731,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 296.628451,
                    "min": 265.692531,
                    "p50": 274.949754,
                    "p95": 296.628451,
                    "p99": 296.628451,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 81.672553,
                    "min": 75.652041,
                    "p50": 78.654308,
                    "p95": 81.672553,
                    "p99": 81.672553,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 191.921643,
                    "min": 142.495721,
                    "p50": 188.319911,
                    "p95": 191.921643,
                    "p99": 191.921643,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 283.316177,
                    "min": 237.119204,
                    "p50": 252.62714899999997,
                    "p95": 283.316177,
                    "p99": 283.316177,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 68.510348,
                    "min": 51.905907,
                    "p50": 63.425687999999994,
                    "p95": 68.510348,
                    "p99": 68.510348,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.141996,
                    "min": 122.110596,
                    "p50": 132.203849,
                    "p95": 140.141996,
                    "p99": 140.141996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 157.726793,
                    "min": 120.14443999999999,
                    "p50": 142.39006999999998,
                    "p95": 157.726793,
                    "p99": 157.726793,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 427.34595199999995,
                    "min": 397.951685,
                    "p50": 423.566172,
                    "p95": 427.34595199999995,
                    "p99": 427.34595199999995,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 545.004555,
                    "min": 514.360916,
                    "p50": 534.921822,
                    "p95": 545.004555,
                    "p99": 545.004555,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 173.959389,
                    "min": 161.138612,
                    "p50": 169.486512,
                    "p95": 173.959389,
                    "p99": 173.959389,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1281.554654,
                    "min": 1204.729308,
                    "p50": 1254.2456989999998,
                    "p95": 1281.554654,
                    "p99": 1281.554654,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 50.489866,
                    "min": 46.013056,
                    "p50": 49.066447,
                    "p95": 50.489866,
                    "p99": 50.489866,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 112.92322,
                    "min": 91.450694,
                    "p50": 94.358885,
                    "p95": 112.92322,
                    "p99": 112.92322,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 651.923727,
                    "min": 625.399246,
                    "p50": 641.5968429999999,
                    "p95": 651.923727,
                    "p99": 651.923727,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 301.590131,
                    "min": 281.396479,
                    "p50": 285.05734,
                    "p95": 301.590131,
                    "p99": 301.590131,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 241.24556099999998,
                    "min": 225.127422,
                    "p50": 238.515067,
                    "p95": 241.24556099999998,
                    "p99": 241.24556099999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 259.918429,
                    "min": 237.58786999999998,
                    "p50": 247.775195,
                    "p95": 259.918429,
                    "p99": 259.918429,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 151.65194499999998,
                    "min": 111.63973399999999,
                    "p50": 144.30729599999998,
                    "p95": 151.65194499999998,
                    "p99": 151.65194499999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 741.7017629999999,
                    "min": 669.2905579999999,
                    "p50": 694.21697,
                    "p95": 741.7017629999999,
                    "p99": 741.7017629999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 449.557263,
                    "min": 418.055299,
                    "p50": 423.503293,
                    "p95": 449.557263,
                    "p99": 449.557263,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 338.996423,
                    "min": 311.984581,
                    "p50": 324.673636,
                    "p95": 338.996423,
                    "p99": 338.996423,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 309.374896,
                    "min": 282.655558,
                    "p50": 294.613211,
                    "p95": 309.374896,
                    "p99": 309.374896,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 195.21826199999998,
                    "min": 175.913524,
                    "p50": 183.414995,
                    "p95": 195.21826199999998,
                    "p99": 195.21826199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 513.798715,
                    "min": 437.530967,
                    "p50": 473.954185,
                    "p95": 513.798715,
                    "p99": 513.798715,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 110.977336,
                    "min": 66.129222,
                    "p50": 92.519534,
                    "p95": 110.977336,
                    "p99": 110.977336,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 393.22773,
                    "min": 326.738048,
                    "p50": 359.9079,
                    "p95": 393.22773,
                    "p99": 393.22773,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 216.357833,
                    "min": 189.188438,
                    "p50": 205.76446199999998,
                    "p95": 216.357833,
                    "p99": 216.357833,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 171.652088,
                    "min": 132.53149299999998,
                    "p50": 158.28722299999998,
                    "p95": 171.652088,
                    "p99": 171.652088,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 128.349393,
                    "min": 88.609359,
                    "p50": 126.36918299999999,
                    "p95": 128.349393,
                    "p99": 128.349393,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 359.591884,
                    "min": 308.51473599999997,
                    "p50": 346.58466899999996,
                    "p95": 359.591884,
                    "p99": 359.591884,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 721.5675709999999,
                    "min": 620.833004,
                    "p50": 654.044751,
                    "p95": 721.5675709999999,
                    "p99": 721.5675709999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 147.836031,
                    "min": 106.703244,
                    "p50": 138.38535,
                    "p95": 147.836031,
                    "p99": 147.836031,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 508.352552,
                    "min": 451.716752,
                    "p50": 468.698363,
                    "p95": 508.352552,
                    "p99": 508.352552,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 557.239528,
                    "min": 484.793838,
                    "p50": 499.683265,
                    "p95": 557.239528,
                    "p99": 557.239528,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 190.966647,
                    "min": 171.063638,
                    "p50": 177.696151,
                    "p95": 190.966647,
                    "p99": 190.966647,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 476.30067199999996,
                    "min": 418.53855599999997,
                    "p50": 430.00676999999996,
                    "p95": 476.30067199999996,
                    "p99": 476.30067199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 647.747897,
                    "min": 548.201924,
                    "p50": 573.38482,
                    "p95": 647.747897,
                    "p99": 647.747897,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 270.17981,
                    "min": 234.675864,
                    "p50": 249.75574799999998,
                    "p95": 270.17981,
                    "p99": 270.17981,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 391.691508,
                    "min": 322.865095,
                    "p50": 359.865936,
                    "p95": 391.691508,
                    "p99": 391.691508,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 339.11963299999996,
                    "min": 312.156043,
                    "p50": 323.08094,
                    "p95": 339.11963299999996,
                    "p99": 339.11963299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 832.395857,
                    "min": 723.4763009999999,
                    "p50": 764.165491,
                    "p95": 832.395857,
                    "p99": 832.395857,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 436.383178,
                    "min": 382.27219199999996,
                    "p50": 392.73684199999997,
                    "p95": 436.383178,
                    "p99": 436.383178,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 320.616512,
                    "min": 267.32431299999996,
                    "p50": 277.456777,
                    "p95": 320.616512,
                    "p99": 320.616512,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.814314,
                    "min": 199.817817,
                    "p50": 211.554023,
                    "p95": 227.814314,
                    "p99": 227.814314,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 582.75094,
                    "min": 524.971498,
                    "p50": 535.996617,
                    "p95": 582.75094,
                    "p99": 582.75094,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 49.579896999999995,
                    "min": 26.739245,
                    "p50": 30.433550999999998,
                    "p95": 49.579896999999995,
                    "p99": 49.579896999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.452382999999998,
                    "min": 20.607962999999998,
                    "p50": 26.987485,
                    "p95": 27.452382999999998,
                    "p99": 27.452382999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 85.40351799999999,
                    "min": 78.169156,
                    "p50": 81.105549,
                    "p95": 85.40351799999999,
                    "p99": 85.40351799999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 161.884307,
                    "min": 147.709226,
                    "p50": 155.93658,
                    "p95": 161.884307,
                    "p99": 161.884307,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.951584999999998,
                    "min": 25.44306,
                    "p50": 27.378763,
                    "p95": 27.951584999999998,
                    "p99": 27.951584999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.62107,
                    "min": 25.781592999999997,
                    "p50": 27.338694999999998,
                    "p95": 27.62107,
                    "p99": 27.62107,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 55.659838,
                    "min": 49.698328,
                    "p50": 52.318729999999995,
                    "p95": 55.659838,
                    "p99": 55.659838,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 29.062704,
                    "min": 26.583098,
                    "p50": 27.190825999999998,
                    "p95": 29.062704,
                    "p99": 29.062704,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.073271,
                    "min": 22.25714,
                    "p50": 27.259213,
                    "p95": 28.073271,
                    "p99": 28.073271,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 76.91790499999999,
                    "min": 26.925631,
                    "p50": 28.548384,
                    "p95": 76.91790499999999,
                    "p99": 76.91790499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 50.840764,
                    "min": 44.259917,
                    "p50": 46.290155999999996,
                    "p95": 50.840764,
                    "p99": 50.840764,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.814826999999998,
                    "min": 26.770706,
                    "p50": 27.293225999999997,
                    "p95": 27.814826999999998,
                    "p99": 27.814826999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.032968999999998,
                    "min": 26.797914,
                    "p50": 27.007506,
                    "p95": 27.032968999999998,
                    "p99": 27.032968999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 28.170154999999998,
                    "min": 26.296409999999998,
                    "p50": 27.161410999999998,
                    "p95": 28.170154999999998,
                    "p99": 28.170154999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 30.680788999999997,
                    "min": 26.799647999999998,
                    "p50": 27.157514,
                    "p95": 30.680788999999997,
                    "p99": 30.680788999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.734709,
                    "min": 15.441429,
                    "p50": 27.534111,
                    "p95": 27.734709,
                    "p99": 27.734709,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.221895999999997,
                    "min": 25.153957,
                    "p50": 27.274642,
                    "p95": 28.221895999999997,
                    "p99": 28.221895999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.161911999999997,
                    "min": 24.307506,
                    "p50": 26.641036999999997,
                    "p95": 27.161911999999997,
                    "p99": 27.161911999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.249164999999998,
                    "min": 23.864597,
                    "p50": 26.809396,
                    "p95": 27.249164999999998,
                    "p99": 27.249164999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 230.36602399999998,
                    "min": 162.98049699999999,
                    "p50": 167.89568,
                    "p95": 230.36602399999998,
                    "p99": 230.36602399999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 88.66749399999999,
                    "min": 69.40026399999999,
                    "p50": 84.650351,
                    "p95": 88.66749399999999,
                    "p99": 88.66749399999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 172.697025,
                    "min": 129.118097,
                    "p50": 157.846625,
                    "p95": 172.697025,
                    "p99": 172.697025,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 96.58042599999999,
                    "min": 75.49821899999999,
                    "p50": 95.179952,
                    "p95": 96.58042599999999,
                    "p99": 96.58042599999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 145.376115,
                    "min": 118.362038,
                    "p50": 132.830927,
                    "p95": 145.376115,
                    "p99": 145.376115,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 510.33320299999997,
                    "min": 484.75872899999996,
                    "p50": 496.07285199999995,
                    "p95": 510.33320299999997,
                    "p99": 510.33320299999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 133.834996,
                    "min": 91.38670499999999,
                    "p50": 132.283808,
                    "p95": 133.834996,
                    "p99": 133.834996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 164.392745,
                    "min": 148.616886,
                    "p50": 161.38741199999998,
                    "p95": 164.392745,
                    "p99": 164.392745,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 207.12750699999998,
                    "min": 186.85691599999998,
                    "p50": 200.225539,
                    "p95": 207.12750699999998,
                    "p99": 207.12750699999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 115.92573999999999,
                    "min": 111.76273099999999,
                    "p50": 114.361623,
                    "p95": 115.92573999999999,
                    "p99": 115.92573999999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 420.857539,
                    "min": 387.81451,
                    "p50": 402.225012,
                    "p95": 420.857539,
                    "p99": 420.857539,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 107.115252,
                    "min": 102.56026399999999,
                    "p50": 105.671717,
                    "p95": 107.115252,
                    "p99": 107.115252,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 157.231008,
                    "min": 144.433931,
                    "p50": 151.109683,
                    "p95": 157.231008,
                    "p99": 157.231008,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 330.45102399999996,
                    "min": 281.263132,
                    "p50": 313.8286,
                    "p95": 330.45102399999996,
                    "p99": 330.45102399999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.161293,
                    "min": 37.919641,
                    "p50": 59.061074999999995,
                    "p95": 74.161293,
                    "p99": 74.161293,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 968.775277,
                    "min": 907.808948,
                    "p50": 951.813183,
                    "p95": 968.775277,
                    "p99": 968.775277,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 58.909624,
                    "min": 28.621131,
                    "p50": 55.572655,
                    "p95": 58.909624,
                    "p99": 58.909624,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 203.020368,
                    "min": 140.75991399999998,
                    "p50": 171.956062,
                    "p95": 203.020368,
                    "p99": 203.020368,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 230.314667,
                    "min": 186.504133,
                    "p50": 211.759073,
                    "p95": 230.314667,
                    "p99": 230.314667,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.552719999999997,
                    "min": 25.798644,
                    "p50": 27.201672,
                    "p95": 27.552719999999997,
                    "p99": 27.552719999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.390694,
                    "min": 25.005744,
                    "p50": 26.748466999999998,
                    "p95": 27.390694,
                    "p99": 27.390694,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.287936,
                    "min": 25.481420999999997,
                    "p50": 26.821344999999997,
                    "p95": 27.287936,
                    "p99": 27.287936,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.934010999999998,
                    "min": 24.894188999999997,
                    "p50": 27.253635,
                    "p95": 27.934010999999998,
                    "p99": 27.934010999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 41.624168,
                    "min": 26.287426999999997,
                    "p50": 27.312966,
                    "p95": 41.624168,
                    "p99": 41.624168,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 28.63469,
                    "min": 26.839881,
                    "p50": 27.524221999999998,
                    "p95": 28.63469,
                    "p99": 28.63469,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.462179,
                    "min": 20.103566,
                    "p50": 26.987406999999997,
                    "p95": 27.462179,
                    "p99": 27.462179,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.819097,
                    "min": 24.126215,
                    "p50": 27.205491,
                    "p95": 27.819097,
                    "p99": 27.819097,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 53.338854999999995,
                    "min": 46.753809,
                    "p50": 50.794703999999996,
                    "p95": 53.338854999999995,
                    "p99": 53.338854999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 33.366769,
                    "min": 24.552754,
                    "p50": 27.001973,
                    "p95": 33.366769,
                    "p99": 33.366769,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.965821,
                    "min": 25.218456,
                    "p50": 26.724151,
                    "p95": 26.965821,
                    "p99": 26.965821,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.825457,
                    "min": 25.08241,
                    "p50": 26.882378,
                    "p95": 27.825457,
                    "p99": 27.825457,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.667807999999997,
                    "min": 26.466331,
                    "p50": 27.163110999999997,
                    "p95": 27.667807999999997,
                    "p99": 27.667807999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 29.288383999999997,
                    "min": 22.753414,
                    "p50": 27.168232999999997,
                    "p95": 29.288383999999997,
                    "p99": 29.288383999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 83.801402,
                    "min": 75.62447,
                    "p50": 79.207517,
                    "p95": 83.801402,
                    "p99": 83.801402,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 92.02878199999999,
                    "min": 22.574635,
                    "p50": 26.943006999999998,
                    "p95": 92.02878199999999,
                    "p99": 92.02878199999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 43.559684999999995,
                    "min": 30.86348,
                    "p50": 40.810752,
                    "p95": 43.559684999999995,
                    "p99": 43.559684999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 28.525332,
                    "min": 25.895775999999998,
                    "p50": 27.079083999999998,
                    "p95": 28.525332,
                    "p99": 28.525332,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.835186,
                    "min": 26.859886,
                    "p50": 27.388935,
                    "p95": 27.835186,
                    "p99": 27.835186,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 29.251509,
                    "min": 26.566843,
                    "p50": 27.236123,
                    "p95": 29.251509,
                    "p99": 29.251509,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.52669,
                    "min": 26.53993,
                    "p50": 27.203443999999998,
                    "p95": 27.52669,
                    "p99": 27.52669,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.674802,
                    "min": 25.809068999999997,
                    "p50": 27.204627,
                    "p95": 27.674802,
                    "p99": 27.674802,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.166334,
                    "min": 26.69033,
                    "p50": 27.438463,
                    "p95": 28.166334,
                    "p99": 28.166334,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.658870999999998,
                    "min": 26.579428999999998,
                    "p50": 27.248579,
                    "p95": 27.658870999999998,
                    "p99": 27.658870999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.765859,
                    "min": 26.497270999999998,
                    "p50": 27.225195,
                    "p95": 27.765859,
                    "p99": 27.765859,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.533355,
                    "min": 25.741262,
                    "p50": 26.836858,
                    "p95": 27.533355,
                    "p99": 27.533355,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.178044999999997,
                    "min": 25.895287,
                    "p50": 26.870697,
                    "p95": 27.178044999999997,
                    "p99": 27.178044999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.565970999999998,
                    "min": 21.034124,
                    "p50": 26.851094,
                    "p95": 27.565970999999998,
                    "p99": 27.565970999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 27.582704,
                    "min": 26.011944,
                    "p50": 27.014139,
                    "p95": 27.582704,
                    "p99": 27.582704,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.606913,
                    "min": 21.795084,
                    "p50": 27.287481,
                    "p95": 27.606913,
                    "p99": 27.606913,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.819523,
                    "min": 25.999710999999998,
                    "p50": 27.028909,
                    "p95": 27.819523,
                    "p99": 27.819523,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 28.030382,
                    "min": 24.133585999999998,
                    "p50": 26.930474999999998,
                    "p95": 28.030382,
                    "p99": 28.030382,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.056461,
                    "min": 25.051461999999997,
                    "p50": 27.335296,
                    "p95": 28.056461,
                    "p99": 28.056461,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.061144,
                    "min": 26.437155999999998,
                    "p50": 27.26973,
                    "p95": 31.061144,
                    "p99": 31.061144,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 49.842968,
                    "min": 45.684911,
                    "p50": 47.328117999999996,
                    "p95": 49.842968,
                    "p99": 49.842968,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.556563999999998,
                    "min": 19.012348,
                    "p50": 27.062428999999998,
                    "p95": 27.556563999999998,
                    "p99": 27.556563999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.423040999999998,
                    "min": 26.072412999999997,
                    "p50": 27.281751,
                    "p95": 27.423040999999998,
                    "p99": 27.423040999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 229.98398899999998,
                    "min": 26.091901,
                    "p50": 27.589471999999997,
                    "p95": 229.98398899999998,
                    "p99": 229.98398899999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 123.70770599999999,
                    "min": 110.698236,
                    "p50": 121.593747,
                    "p95": 123.70770599999999,
                    "p99": 123.70770599999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 51.464909999999996,
                    "min": 47.171672,
                    "p50": 50.296755,
                    "p95": 51.464909999999996,
                    "p99": 51.464909999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 865.168001,
                    "min": 834.637653,
                    "p50": 848.081283,
                    "p95": 865.168001,
                    "p99": 865.168001,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 205.185013,
                    "min": 164.180109,
                    "p50": 194.82383,
                    "p95": 205.185013,
                    "p99": 205.185013,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 98.338753,
                    "min": 84.83622299999999,
                    "p50": 96.78168699999999,
                    "p95": 98.338753,
                    "p99": 98.338753,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 64.93295499999999,
                    "min": 33.215244999999996,
                    "p50": 63.849883,
                    "p95": 64.93295499999999,
                    "p99": 64.93295499999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 90.879341,
                    "min": 78.874431,
                    "p50": 88.233328,
                    "p95": 90.879341,
                    "p99": 90.879341,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 290.173971,
                    "min": 263.312282,
                    "p50": 282.97274699999997,
                    "p95": 290.173971,
                    "p99": 290.173971,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 148.998223,
                    "min": 106.19844099999999,
                    "p50": 143.878119,
                    "p95": 148.998223,
                    "p99": 148.998223,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 132.87784,
                    "min": 89.180917,
                    "p50": 129.734069,
                    "p95": 132.87784,
                    "p99": 132.87784,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 372.156257,
                    "min": 338.772542,
                    "p50": 362.702501,
                    "p95": 372.156257,
                    "p99": 372.156257,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 454.69220199999995,
                    "min": 406.36541,
                    "p50": 442.757319,
                    "p95": 454.69220199999995,
                    "p99": 454.69220199999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 159.93416499999998,
                    "min": 113.96304099999999,
                    "p50": 151.40501,
                    "p95": 159.93416499999998,
                    "p99": 159.93416499999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 79.656384,
                    "min": 45.809045,
                    "p50": 71.929414,
                    "p95": 79.656384,
                    "p99": 79.656384,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 186.38583699999998,
                    "min": 140.487379,
                    "p50": 183.411845,
                    "p95": 186.38583699999998,
                    "p99": 186.38583699999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 115.31974799999999,
                    "min": 72.49265299999999,
                    "p50": 112.067517,
                    "p95": 115.31974799999999,
                    "p99": 115.31974799999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 147.680199,
                    "min": 132.077844,
                    "p50": 138.030022,
                    "p95": 147.680199,
                    "p99": 147.680199,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 173.851823,
                    "min": 158.75625499999998,
                    "p50": 167.86817399999998,
                    "p95": 173.851823,
                    "p99": 173.851823,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 110.259525,
                    "min": 103.353781,
                    "p50": 105.772061,
                    "p95": 110.259525,
                    "p99": 110.259525,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 727.84507,
                    "min": 680.865877,
                    "p50": 721.064592,
                    "p95": 727.84507,
                    "p99": 727.84507,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 132.993514,
                    "min": 119.07252299999999,
                    "p50": 131.489554,
                    "p95": 132.993514,
                    "p99": 132.993514,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 248.71428,
                    "min": 218.220262,
                    "p50": 239.32844599999999,
                    "p95": 248.71428,
                    "p99": 248.71428,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 359.733079,
                    "min": 330.76032299999997,
                    "p50": 347.954051,
                    "p95": 359.733079,
                    "p99": 359.733079,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 148.733135,
                    "min": 131.28275499999998,
                    "p50": 141.25007,
                    "p95": 148.733135,
                    "p99": 148.733135,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 378.339703,
                    "min": 340.86699999999996,
                    "p50": 371.266073,
                    "p95": 378.339703,
                    "p99": 378.339703,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 224.053842,
                    "min": 178.87372,
                    "p50": 218.30909,
                    "p95": 224.053842,
                    "p99": 224.053842,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 428.507428,
                    "min": 401.06724599999995,
                    "p50": 421.895218,
                    "p95": 428.507428,
                    "p99": 428.507428,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 168.12358,
                    "min": 132.348156,
                    "p50": 163.224816,
                    "p95": 168.12358,
                    "p99": 168.12358,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 272.06648,
                    "min": 251.44601799999998,
                    "p50": 261.178768,
                    "p95": 272.06648,
                    "p99": 272.06648,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 974.9176,
                    "min": 900.2749379999999,
                    "p50": 915.5602299999999,
                    "p95": 974.9176,
                    "p99": 974.9176,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 306.78275199999996,
                    "min": 284.106966,
                    "p50": 300.671773,
                    "p95": 306.78275199999996,
                    "p99": 306.78275199999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 207.944052,
                    "min": 165.759483,
                    "p50": 197.114342,
                    "p95": 207.944052,
                    "p99": 207.944052,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 330.353969,
                    "min": 272.658422,
                    "p50": 327.902613,
                    "p95": 330.353969,
                    "p99": 330.353969,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.46356,
                    "min": 90.866985,
                    "p50": 110.460732,
                    "p95": 112.46356,
                    "p99": 112.46356,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 362.578986,
                    "min": 317.63606599999997,
                    "p50": 355.12354,
                    "p95": 362.578986,
                    "p99": 362.578986,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 540.096084,
                    "min": 466.19705,
                    "p50": 503.808878,
                    "p95": 540.096084,
                    "p99": 540.096084,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1583.201223,
                    "min": 1373.4549319999999,
                    "p50": 1419.1621109999999,
                    "p95": 1583.201223,
                    "p99": 1583.201223,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 167.158426,
                    "min": 127.677257,
                    "p50": 166.022569,
                    "p95": 167.158426,
                    "p99": 167.158426,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 293.94644,
                    "min": 254.04242299999999,
                    "p50": 281.431281,
                    "p95": 293.94644,
                    "p99": 293.94644,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.044478,
                    "min": 211.25769,
                    "p50": 241.75829,
                    "p95": 252.044478,
                    "p99": 252.044478,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 468.95050499999996,
                    "min": 425.551758,
                    "p50": 456.51019099999996,
                    "p95": 468.95050499999996,
                    "p99": 468.95050499999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 430.278208,
                    "min": 373.952298,
                    "p50": 405.44791,
                    "p95": 430.278208,
                    "p99": 430.278208,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 556.126594,
                    "min": 511.343682,
                    "p50": 544.443015,
                    "p95": 556.126594,
                    "p99": 556.126594,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 690.471155,
                    "min": 629.8318849999999,
                    "p50": 672.394539,
                    "p95": 690.471155,
                    "p99": 690.471155,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 585.967535,
                    "min": 547.8632319999999,
                    "p50": 581.527485,
                    "p95": 585.967535,
                    "p99": 585.967535,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 501.907004,
                    "min": 473.59311299999996,
                    "p50": 498.577974,
                    "p95": 501.907004,
                    "p99": 501.907004,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 887.924409,
                    "min": 842.142896,
                    "p50": 873.86398,
                    "p95": 887.924409,
                    "p99": 887.924409,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 336.363979,
                    "min": 297.177347,
                    "p50": 329.961594,
                    "p95": 336.363979,
                    "p99": 336.363979,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 209.77138399999998,
                    "min": 171.35678299999998,
                    "p50": 196.335906,
                    "p95": 209.77138399999998,
                    "p99": 209.77138399999998,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 787.086632,
                    "min": 738.0986819999999,
                    "p50": 752.9511309999999,
                    "p95": 787.086632,
                    "p99": 787.086632,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 378.585221,
                    "min": 339.328101,
                    "p50": 369.57779899999997,
                    "p95": 378.585221,
                    "p99": 378.585221,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 638.8939419999999,
                    "min": 589.590047,
                    "p50": 592.647978,
                    "p95": 638.8939419999999,
                    "p99": 638.8939419999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 892.2356169999999,
                    "min": 860.037775,
                    "p50": 867.869601,
                    "p95": 892.2356169999999,
                    "p99": 892.2356169999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2025.708363,
                    "min": 1978.1600139999998,
                    "p50": 2014.617613,
                    "p95": 2025.708363,
                    "p99": 2025.708363,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2882.266096,
                    "min": 2834.329158,
                    "p50": 2872.716723,
                    "p95": 2882.266096,
                    "p99": 2882.266096,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5779.42818,
                    "min": 5670.139298,
                    "p50": 5710.762724,
                    "p95": 5779.42818,
                    "p99": 5779.42818,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1610.364194,
                    "min": 1568.111475,
                    "p50": 1597.703346,
                    "p95": 1610.364194,
                    "p99": 1610.364194,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 754.26945,
                    "min": 713.798735,
                    "p50": 719.199307,
                    "p95": 754.26945,
                    "p99": 754.26945,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 611.466925,
                    "min": 570.984733,
                    "p50": 590.665003,
                    "p95": 611.466925,
                    "p99": 611.466925,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1739.540875,
                    "min": 1708.743084,
                    "p50": 1732.5163289999998,
                    "p95": 1739.540875,
                    "p99": 1739.540875,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4327.145361,
                    "min": 4261.960289,
                    "p50": 4302.84108,
                    "p95": 4327.145361,
                    "p99": 4327.145361,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2544.981582,
                    "min": 2494.362231,
                    "p50": 2507.3709949999998,
                    "p95": 2544.981582,
                    "p99": 2544.981582,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2180.792869,
                    "min": 2164.875903,
                    "p50": 2170.304164,
                    "p95": 2180.792869,
                    "p99": 2180.792869,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1193.278572,
                    "min": 1150.337654,
                    "p50": 1174.642527,
                    "p95": 1193.278572,
                    "p99": 1193.278572,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1475.598967,
                    "min": 1438.4674069999999,
                    "p50": 1463.408461,
                    "p95": 1475.598967,
                    "p99": 1475.598967,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1048.981734,
                    "min": 995.486555,
                    "p50": 1007.4650899999999,
                    "p95": 1048.981734,
                    "p99": 1048.981734,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 469.986974,
                    "min": 433.168071,
                    "p50": 455.01447199999996,
                    "p95": 469.986974,
                    "p99": 469.986974,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1903.674959,
                    "min": 1865.653673,
                    "p50": 1893.517175,
                    "p95": 1903.674959,
                    "p99": 1903.674959,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1336.065525,
                    "min": 1285.660343,
                    "p50": 1304.0621589999998,
                    "p95": 1336.065525,
                    "p99": 1336.065525,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 435.596022,
                    "min": 394.13894799999997,
                    "p50": 416.880321,
                    "p95": 435.596022,
                    "p99": 435.596022,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1327.2368259999998,
                    "min": 1276.280245,
                    "p50": 1313.952879,
                    "p95": 1327.2368259999998,
                    "p99": 1327.2368259999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2638.713412,
                    "min": 2601.350699,
                    "p50": 2626.0404829999998,
                    "p95": 2638.713412,
                    "p99": 2638.713412,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1467.260216,
                    "min": 1433.690987,
                    "p50": 1458.510642,
                    "p95": 1467.260216,
                    "p99": 1467.260216,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3853.202328,
                    "min": 3773.685125,
                    "p50": 3817.99629,
                    "p95": 3853.202328,
                    "p99": 3853.202328,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 821.383214,
                    "min": 786.242715,
                    "p50": 811.705924,
                    "p95": 821.383214,
                    "p99": 821.383214,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1220.3970729999999,
                    "min": 1173.762503,
                    "p50": 1211.6782739999999,
                    "p95": 1220.3970729999999,
                    "p99": 1220.3970729999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5089.583129,
                    "min": 5031.350522,
                    "p50": 5080.414822,
                    "p95": 5089.583129,
                    "p99": 5089.583129,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 703.2290879999999,
                    "min": 670.946229,
                    "p50": 694.255134,
                    "p95": 703.2290879999999,
                    "p99": 703.2290879999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1750.1937859999998,
                    "min": 1720.833085,
                    "p50": 1733.113772,
                    "p95": 1750.1937859999998,
                    "p99": 1750.1937859999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 949.64901,
                    "min": 911.0527649999999,
                    "p50": 929.65112,
                    "p95": 949.64901,
                    "p99": 949.64901,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.974186,
                    "min": 520.4788669999999,
                    "p50": 545.734157,
                    "p95": 555.974186,
                    "p99": 555.974186,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1999.464826,
                    "min": 1943.113975,
                    "p50": 1974.223556,
                    "p95": 1999.464826,
                    "p99": 1999.464826,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1869.5708789999999,
                    "min": 1834.210678,
                    "p50": 1860.105705,
                    "p95": 1869.5708789999999,
                    "p99": 1869.5708789999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2289.079114,
                    "min": 2255.35388,
                    "p50": 2281.791312,
                    "p95": 2289.079114,
                    "p99": 2289.079114,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1062.935587,
                    "min": 1048.29224,
                    "p50": 1059.430856,
                    "p95": 1062.935587,
                    "p99": 1062.935587,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1604.136998,
                    "min": 1550.139767,
                    "p50": 1579.495179,
                    "p95": 1604.136998,
                    "p99": 1604.136998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 109.39770899999999,
                    "min": 70.992952,
                    "p50": 102.77346,
                    "p95": 109.39770899999999,
                    "p99": 109.39770899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 96.501774,
                    "min": 49.577233,
                    "p50": 87.149236,
                    "p95": 96.501774,
                    "p99": 96.501774,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 136.79803099999998,
                    "min": 94.80896399999999,
                    "p50": 129.58427799999998,
                    "p95": 136.79803099999998,
                    "p99": 136.79803099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 181.55437,
                    "min": 139.841554,
                    "p50": 167.241313,
                    "p95": 181.55437,
                    "p99": 181.55437,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 512.080523,
                    "min": 456.96261699999997,
                    "p50": 500.66146299999997,
                    "p95": 512.080523,
                    "p99": 512.080523,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 230.87812799999998,
                    "min": 217.28935299999998,
                    "p50": 223.587974,
                    "p95": 230.87812799999998,
                    "p99": 230.87812799999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 93.683943,
                    "min": 55.48778,
                    "p50": 90.973998,
                    "p95": 93.683943,
                    "p99": 93.683943,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 32.336025,
                    "min": 27.132892,
                    "p50": 30.582818,
                    "p95": 32.336025,
                    "p99": 32.336025,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 275.972348,
                    "min": 232.73563,
                    "p50": 258.195605,
                    "p95": 275.972348,
                    "p99": 275.972348,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 65.718335,
                    "min": 36.321768,
                    "p50": 64.908176,
                    "p95": 65.718335,
                    "p99": 65.718335,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 78.261147,
                    "min": 58.467924,
                    "p50": 73.274787,
                    "p95": 78.261147,
                    "p99": 78.261147,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 84.88275,
                    "min": 44.837067999999995,
                    "p50": 63.934642,
                    "p95": 84.88275,
                    "p99": 84.88275,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 121.67303,
                    "min": 82.946604,
                    "p50": 108.419675,
                    "p95": 121.67303,
                    "p99": 121.67303,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 51.46776,
                    "min": 27.128787,
                    "p50": 48.632162,
                    "p95": 51.46776,
                    "p99": 51.46776,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 57.535785,
                    "min": 31.730977,
                    "p50": 45.518252,
                    "p95": 57.535785,
                    "p99": 57.535785,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 114.004421,
                    "min": 92.18781,
                    "p50": 108.705621,
                    "p95": 114.004421,
                    "p99": 114.004421,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 98.675133,
                    "min": 58.793586999999995,
                    "p50": 89.985828,
                    "p95": 98.675133,
                    "p99": 98.675133,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 40.641874,
                    "min": 27.268929,
                    "p50": 39.05323,
                    "p95": 40.641874,
                    "p99": 40.641874,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 101.39487799999999,
                    "min": 62.271065,
                    "p50": 89.644787,
                    "p95": 101.39487799999999,
                    "p99": 101.39487799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2568.885726,
                    "min": 2503.134364,
                    "p50": 2553.319516,
                    "p95": 2568.885726,
                    "p99": 2568.885726,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1058.819592,
                    "min": 1017.6651439999999,
                    "p50": 1045.901146,
                    "p95": 1058.819592,
                    "p99": 1058.819592,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 769.8255489999999,
                    "min": 729.474833,
                    "p50": 750.421119,
                    "p95": 769.8255489999999,
                    "p99": 769.8255489999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1780.7436349999998,
                    "min": 1730.2562759999998,
                    "p50": 1761.197017,
                    "p95": 1780.7436349999998,
                    "p99": 1780.7436349999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1189.923083,
                    "min": 1141.515391,
                    "p50": 1162.651985,
                    "p95": 1189.923083,
                    "p99": 1189.923083,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5781.056865,
                    "min": 5694.654044999999,
                    "p50": 5739.309854,
                    "p95": 5781.056865,
                    "p99": 5781.056865,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1633.914736,
                    "min": 1564.2649629999999,
                    "p50": 1611.7483109999998,
                    "p95": 1633.914736,
                    "p99": 1633.914736,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 912.4850829999999,
                    "min": 878.475095,
                    "p50": 895.434029,
                    "p95": 912.4850829999999,
                    "p99": 912.4850829999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1928.0174809999999,
                    "min": 1899.1353769999998,
                    "p50": 1914.054183,
                    "p95": 1928.0174809999999,
                    "p99": 1928.0174809999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4361.181445,
                    "min": 4302.0077329999995,
                    "p50": 4344.026815,
                    "p95": 4361.181445,
                    "p99": 4361.181445,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2209.6045879999997,
                    "min": 2156.2511879999997,
                    "p50": 2173.756542,
                    "p95": 2209.6045879999997,
                    "p99": 2209.6045879999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2932.607677,
                    "min": 2886.1332159999997,
                    "p50": 2905.8953979999997,
                    "p95": 2932.607677,
                    "p99": 2932.607677,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 480.733407,
                    "min": 464.559358,
                    "p50": 479.387832,
                    "p95": 480.733407,
                    "p99": 480.733407,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2066.841047,
                    "min": 2040.432411,
                    "p50": 2060.5051249999997,
                    "p95": 2066.841047,
                    "p99": 2066.841047,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 619.116169,
                    "min": 584.255219,
                    "p50": 614.532037,
                    "p95": 619.116169,
                    "p99": 619.116169,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1487.66362,
                    "min": 1443.847503,
                    "p50": 1473.034821,
                    "p95": 1487.66362,
                    "p99": 1487.66362,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1343.154979,
                    "min": 1299.972419,
                    "p50": 1323.2371429999998,
                    "p95": 1343.154979,
                    "p99": 1343.154979,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2208.505049,
                    "min": 2166.227249,
                    "p50": 2176.092772,
                    "p95": 2208.505049,
                    "p99": 2208.505049,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 626.446411,
                    "min": 611.662365,
                    "p50": 621.1387209999999,
                    "p95": 626.446411,
                    "p99": 626.446411,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1348.9919869999999,
                    "min": 1293.7975,
                    "p50": 1341.795492,
                    "p95": 1348.9919869999999,
                    "p99": 1348.9919869999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1932.279133,
                    "min": 1904.737809,
                    "p50": 1918.574367,
                    "p95": 1932.279133,
                    "p99": 1932.279133,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1492.080099,
                    "min": 1472.663889,
                    "p50": 1484.74021,
                    "p95": 1492.080099,
                    "p99": 1492.080099,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1626.6782249999999,
                    "min": 1583.374175,
                    "p50": 1596.4872209999999,
                    "p95": 1626.6782249999999,
                    "p99": 1626.6782249999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2933.4708299999998,
                    "min": 2845.046515,
                    "p50": 2914.56,
                    "p95": 2933.4708299999998,
                    "p99": 2933.4708299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4369.478601,
                    "min": 4279.55373,
                    "p50": 4329.353574,
                    "p95": 4369.478601,
                    "p99": 4369.478601,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1787.33257,
                    "min": 1768.759754,
                    "p50": 1778.6805029999998,
                    "p95": 1787.33257,
                    "p99": 1787.33257,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 771.0932879999999,
                    "min": 726.322381,
                    "p50": 758.427452,
                    "p95": 771.0932879999999,
                    "p99": 771.0932879999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 482.298026,
                    "min": 439.17283499999996,
                    "p50": 445.32170499999995,
                    "p95": 482.298026,
                    "p99": 482.298026,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 910.89568,
                    "min": 899.676981,
                    "p50": 908.709384,
                    "p95": 910.89568,
                    "p99": 910.89568,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2561.2977029999997,
                    "min": 2522.904383,
                    "p50": 2546.633441,
                    "p95": 2561.2977029999997,
                    "p99": 2561.2977029999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1060.694596,
                    "min": 1020.0302529999999,
                    "p50": 1043.3985639999999,
                    "p95": 1060.694596,
                    "p99": 1060.694596,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2069.376506,
                    "min": 2014.834379,
                    "p50": 2043.2068789999998,
                    "p95": 2069.376506,
                    "p99": 2069.376506,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1198.235475,
                    "min": 1157.2665829999999,
                    "p50": 1173.870637,
                    "p95": 1198.235475,
                    "p99": 1198.235475,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 762.070942,
                    "min": 714.027927,
                    "p50": 751.967409,
                    "p95": 762.070942,
                    "p99": 762.070942,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 150.995012,
                    "min": 104.140119,
                    "p50": 140.764666,
                    "p95": 150.995012,
                    "p99": 150.995012,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 407.619579,
                    "min": 362.74616699999996,
                    "p50": 390.36553399999997,
                    "p95": 407.619579,
                    "p99": 407.619579,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.02219199999999,
                    "min": 53.651233,
                    "p50": 91.712184,
                    "p95": 93.02219199999999,
                    "p99": 93.02219199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 60.584635999999996,
                    "min": 33.030498,
                    "p50": 59.462475999999995,
                    "p95": 60.584635999999996,
                    "p99": 60.584635999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 127.624833,
                    "min": 89.265148,
                    "p50": 96.217857,
                    "p95": 127.624833,
                    "p99": 127.624833,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 333.036417,
                    "min": 287.88656499999996,
                    "p50": 313.0447,
                    "p95": 333.036417,
                    "p99": 333.036417,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 150.245462,
                    "min": 132.961175,
                    "p50": 145.3389,
                    "p95": 150.245462,
                    "p99": 150.245462,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 136.523282,
                    "min": 95.63402599999999,
                    "p50": 133.57432,
                    "p95": 136.523282,
                    "p99": 136.523282,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 169.212347,
                    "min": 128.55073199999998,
                    "p50": 131.681182,
                    "p95": 169.212347,
                    "p99": 169.212347,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 74.291938,
                    "min": 59.440678,
                    "p50": 69.96171799999999,
                    "p95": 74.291938,
                    "p99": 74.291938,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 125.90684599999999,
                    "min": 101.42585799999999,
                    "p50": 120.466899,
                    "p95": 125.90684599999999,
                    "p99": 125.90684599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.561917,
                    "min": 25.460898999999998,
                    "p50": 27.113162,
                    "p95": 48.561917,
                    "p99": 48.561917,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 96.675906,
                    "min": 60.897703,
                    "p50": 61.82985,
                    "p95": 96.675906,
                    "p99": 96.675906,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.97478199999999,
                    "min": 47.290668,
                    "p50": 85.024726,
                    "p95": 86.97478199999999,
                    "p99": 86.97478199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 112.66153899999999,
                    "min": 68.55903099999999,
                    "p50": 95.216078,
                    "p95": 112.66153899999999,
                    "p99": 112.66153899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 116.615546,
                    "min": 75.769774,
                    "p50": 104.438473,
                    "p95": 116.615546,
                    "p99": 116.615546,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 260.47947999999997,
                    "min": 219.199938,
                    "p50": 245.39142999999999,
                    "p95": 260.47947999999997,
                    "p99": 260.47947999999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 184.365264,
                    "min": 147.441485,
                    "p50": 177.531331,
                    "p95": 184.365264,
                    "p99": 184.365264,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 39.878997999999996,
                    "min": 25.163204999999998,
                    "p50": 37.363337,
                    "p95": 39.878997999999996,
                    "p99": 39.878997999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 165.404989,
                    "min": 121.672219,
                    "p50": 156.42711799999998,
                    "p95": 165.404989,
                    "p99": 165.404989,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 132.266268,
                    "min": 91.989938,
                    "p50": 121.41965599999999,
                    "p95": 132.266268,
                    "p99": 132.266268,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 105.57748699999999,
                    "min": 63.077327999999994,
                    "p50": 102.518853,
                    "p95": 105.57748699999999,
                    "p99": 105.57748699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 65.129918,
                    "min": 33.162554,
                    "p50": 49.830824,
                    "p95": 65.129918,
                    "p99": 65.129918,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 355.096437,
                    "min": 299.051445,
                    "p50": 336.347625,
                    "p95": 355.096437,
                    "p99": 355.096437,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 200.41539699999998,
                    "min": 176.27843099999998,
                    "p50": 191.90020199999998,
                    "p95": 200.41539699999998,
                    "p99": 200.41539699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 78.21862999999999,
                    "min": 38.572328999999996,
                    "p50": 70.933579,
                    "p95": 78.21862999999999,
                    "p99": 78.21862999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 83.525138,
                    "min": 45.091203,
                    "p50": 71.31316,
                    "p95": 83.525138,
                    "p99": 83.525138,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 60.132591999999995,
                    "min": 40.884786,
                    "p50": 52.265349,
                    "p95": 60.132591999999995,
                    "p99": 60.132591999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 65.937086,
                    "min": 31.520162,
                    "p50": 45.191398,
                    "p95": 65.937086,
                    "p99": 65.937086,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 31.226437999999998,
                    "min": 26.887054,
                    "p50": 27.197025,
                    "p95": 31.226437999999998,
                    "p99": 31.226437999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 95.730916,
                    "min": 56.441483,
                    "p50": 82.94019399999999,
                    "p95": 95.730916,
                    "p99": 95.730916,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 79.685265,
                    "min": 36.414911,
                    "p50": 64.842405,
                    "p95": 79.685265,
                    "p99": 79.685265,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 90.87090599999999,
                    "min": 48.016768,
                    "p50": 80.235197,
                    "p95": 90.87090599999999,
                    "p99": 90.87090599999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 48.490731,
                    "min": 26.729982999999997,
                    "p50": 44.912906,
                    "p95": 48.490731,
                    "p99": 48.490731,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 82.89195,
                    "min": 43.241814999999995,
                    "p50": 78.701611,
                    "p95": 82.89195,
                    "p99": 82.89195,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 35.758283999999996,
                    "min": 27.020477,
                    "p50": 34.646577,
                    "p95": 35.758283999999996,
                    "p99": 35.758283999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.349957,
                    "min": 24.803074,
                    "p50": 26.928717,
                    "p95": 27.349957,
                    "p99": 27.349957,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 171.18135999999998,
                    "min": 127.158628,
                    "p50": 165.767295,
                    "p95": 171.18135999999998,
                    "p99": 171.18135999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 98.15249899999999,
                    "min": 80.311205,
                    "p50": 95.419596,
                    "p95": 98.15249899999999,
                    "p99": 98.15249899999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 188.658582,
                    "min": 169.240151,
                    "p50": 182.801526,
                    "p95": 188.658582,
                    "p99": 188.658582,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 92.462154,
                    "min": 53.155246,
                    "p50": 90.562416,
                    "p95": 92.462154,
                    "p99": 92.462154,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 85.24664,
                    "min": 45.105799999999995,
                    "p50": 67.615385,
                    "p95": 85.24664,
                    "p99": 85.24664,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 60.353787,
                    "min": 58.544737999999995,
                    "p50": 58.999358,
                    "p95": 60.353787,
                    "p99": 60.353787,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 142.673208,
                    "min": 101.945402,
                    "p50": 140.231235,
                    "p95": 142.673208,
                    "p99": 142.673208,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 119.22539099999999,
                    "min": 80.761414,
                    "p50": 99.756355,
                    "p95": 119.22539099999999,
                    "p99": 119.22539099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 254.37312699999998,
                    "min": 213.83829599999999,
                    "p50": 240.84824999999998,
                    "p95": 254.37312699999998,
                    "p99": 254.37312699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 105.92112999999999,
                    "min": 66.174592,
                    "p50": 97.630094,
                    "p95": 105.92112999999999,
                    "p99": 105.92112999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 749.3867399999999,
                    "min": 700.964356,
                    "p50": 732.9356369999999,
                    "p95": 749.3867399999999,
                    "p99": 749.3867399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 72.62992299999999,
                    "min": 68.159016,
                    "p50": 71.673293,
                    "p95": 72.62992299999999,
                    "p99": 72.62992299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 133.81255299999998,
                    "min": 97.95947299999999,
                    "p50": 132.822472,
                    "p95": 133.81255299999998,
                    "p99": 133.81255299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 128.54548499999999,
                    "min": 88.45467,
                    "p50": 125.200126,
                    "p95": 128.54548499999999,
                    "p99": 128.54548499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 329.768986,
                    "min": 283.913397,
                    "p50": 318.565964,
                    "p95": 329.768986,
                    "p99": 329.768986,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.599176,
                    "min": 26.534368999999998,
                    "p50": 41.481899,
                    "p95": 45.599176,
                    "p99": 45.599176,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 148.298389,
                    "min": 114.76620799999999,
                    "p50": 135.411145,
                    "p95": 148.298389,
                    "p99": 148.298389,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 111.908715,
                    "min": 74.03061799999999,
                    "p50": 86.506346,
                    "p95": 111.908715,
                    "p99": 111.908715,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 400.240417,
                    "min": 349.862329,
                    "p50": 388.053856,
                    "p95": 400.240417,
                    "p99": 400.240417,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 571.404311,
                    "min": 563.5591909999999,
                    "p50": 569.197819,
                    "p95": 571.404311,
                    "p99": 571.404311,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 490.48705099999995,
                    "min": 479.815336,
                    "p50": 488.951033,
                    "p95": 490.48705099999995,
                    "p99": 490.48705099999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 717.445242,
                    "min": 671.32717,
                    "p50": 705.1486,
                    "p95": 717.445242,
                    "p99": 717.445242,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 259.44546199999996,
                    "min": 221.85901199999998,
                    "p50": 251.18715899999998,
                    "p95": 259.44546199999996,
                    "p99": 259.44546199999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 338.575743,
                    "min": 300.316436,
                    "p50": 335.34119999999996,
                    "p95": 338.575743,
                    "p99": 338.575743,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 641.7308449999999,
                    "min": 600.312652,
                    "p50": 633.9474829999999,
                    "p95": 641.7308449999999,
                    "p99": 641.7308449999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 412.54990699999996,
                    "min": 374.26241,
                    "p50": 402.132703,
                    "p95": 412.54990699999996,
                    "p99": 412.54990699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 779.276535,
                    "min": 737.703002,
                    "p50": 768.5727109999999,
                    "p95": 779.276535,
                    "p99": 779.276535,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 265.360734,
                    "min": 224.85262,
                    "p50": 259.91362399999997,
                    "p95": 265.360734,
                    "p99": 265.360734,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 636.657866,
                    "min": 591.7792549999999,
                    "p50": 627.000151,
                    "p95": 636.657866,
                    "p99": 636.657866,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 486.941136,
                    "min": 447.91464299999996,
                    "p50": 474.93940299999997,
                    "p95": 486.941136,
                    "p99": 486.941136,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 557.947867,
                    "min": 519.130125,
                    "p50": 550.886761,
                    "p95": 557.947867,
                    "p99": 557.947867,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 709.948166,
                    "min": 674.081724,
                    "p50": 705.630643,
                    "p95": 709.948166,
                    "p99": 709.948166,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 336.759407,
                    "min": 301.650645,
                    "p50": 329.27095299999996,
                    "p95": 336.759407,
                    "p99": 336.759407,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.042113,
                    "min": 376.359631,
                    "p50": 398.50388999999996,
                    "p95": 413.042113,
                    "p99": 413.042113,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.448217,
                    "min": 243.013048,
                    "p50": 280.26305099999996,
                    "p95": 288.448217,
                    "p99": 288.448217,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 490.943962,
                    "min": 425.10124199999996,
                    "p50": 466.295275,
                    "p95": 490.943962,
                    "p99": 490.943962,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 610.4537879999999,
                    "min": 549.595573,
                    "p50": 581.8234199999999,
                    "p95": 610.4537879999999,
                    "p99": 610.4537879999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 419.553341,
                    "min": 378.71394,
                    "p50": 402.537417,
                    "p95": 419.553341,
                    "p99": 419.553341,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 796.823933,
                    "min": 749.4996709999999,
                    "p50": 766.175166,
                    "p95": 796.823933,
                    "p99": 796.823933,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.60837899999999,
                    "min": 182.748226,
                    "p50": 211.05557199999998,
                    "p95": 226.60837899999999,
                    "p99": 226.60837899999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 658.483485,
                    "min": 608.724337,
                    "p50": 647.5219539999999,
                    "p95": 658.483485,
                    "p99": 658.483485,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 526.607754,
                    "min": 478.306894,
                    "p50": 520.837495,
                    "p95": 526.607754,
                    "p99": 526.607754,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 352.552279,
                    "min": 301.078305,
                    "p50": 338.905548,
                    "p95": 352.552279,
                    "p99": 352.552279,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 744.4461,
                    "min": 677.565249,
                    "p50": 700.468652,
                    "p95": 744.4461,
                    "p99": 744.4461,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 497.501262,
                    "min": 459.54738299999997,
                    "p50": 491.006015,
                    "p95": 497.501262,
                    "p99": 497.501262,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 645.766743,
                    "min": 607.741988,
                    "p50": 639.485099,
                    "p95": 645.766743,
                    "p99": 645.766743,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.122041,
                    "min": 155.092797,
                    "p50": 174.839939,
                    "p95": 198.122041,
                    "p99": 198.122041,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 345.380435,
                    "min": 306.955266,
                    "p50": 333.004701,
                    "p95": 345.380435,
                    "p99": 345.380435,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 573.860955,
                    "min": 536.126598,
                    "p50": 572.173317,
                    "p95": 573.860955,
                    "p99": 573.860955,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 270.741176,
                    "min": 229.68211499999998,
                    "p50": 266.19489,
                    "p95": 270.741176,
                    "p99": 270.741176,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 420.682689,
                    "min": 377.623812,
                    "p50": 408.094671,
                    "p95": 420.682689,
                    "p99": 420.682689,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1177.7008759999999,
                    "min": 1123.902126,
                    "p50": 1152.081352,
                    "p95": 1177.7008759999999,
                    "p99": 1177.7008759999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 605.426422,
                    "min": 552.4883239999999,
                    "p50": 587.550604,
                    "p95": 605.426422,
                    "p99": 605.426422,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 364.489089,
                    "min": 313.92316,
                    "p50": 353.761961,
                    "p95": 364.489089,
                    "p99": 364.489089,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1089.443021,
                    "min": 1005.8861599999999,
                    "p50": 1053.5203219999999,
                    "p95": 1089.443021,
                    "p99": 1089.443021,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 842.588703,
                    "min": 780.862054,
                    "p50": 834.432781,
                    "p95": 842.588703,
                    "p99": 842.588703,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 672.895903,
                    "min": 641.772392,
                    "p50": 665.504164,
                    "p95": 672.895903,
                    "p99": 672.895903,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1016.079071,
                    "min": 971.9170909999999,
                    "p50": 985.00609,
                    "p95": 1016.079071,
                    "p99": 1016.079071,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 434.880333,
                    "min": 405.84383599999995,
                    "p50": 428.062926,
                    "p95": 434.880333,
                    "p99": 434.880333,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 281.767855,
                    "min": 241.31773299999998,
                    "p50": 271.79299299999997,
                    "p95": 281.767855,
                    "p99": 281.767855,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1439.6494169999999,
                    "min": 1362.1013799999998,
                    "p50": 1429.6460969999998,
                    "p95": 1439.6494169999999,
                    "p99": 1439.6494169999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1277.803881,
                    "min": 1182.824887,
                    "p50": 1219.6738229999999,
                    "p95": 1277.803881,
                    "p99": 1277.803881,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1676.0755339999998,
                    "min": 1571.2959059999998,
                    "p50": 1606.0228909999998,
                    "p95": 1676.0755339999998,
                    "p99": 1676.0755339999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 778.890319,
                    "min": 737.041793,
                    "p50": 751.306689,
                    "p95": 778.890319,
                    "p99": 778.890319,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 932.810309,
                    "min": 866.1263329999999,
                    "p50": 896.087015,
                    "p95": 932.810309,
                    "p99": 932.810309,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 525.379452,
                    "min": 469.19397699999996,
                    "p50": 510.07147,
                    "p95": 525.379452,
                    "p99": 525.379452,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 948.046429,
                    "min": 875.362774,
                    "p50": 921.966877,
                    "p95": 948.046429,
                    "p99": 948.046429,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 376.685718,
                    "min": 334.76243,
                    "p50": 372.20378,
                    "p95": 376.685718,
                    "p99": 376.685718,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1075.488269,
                    "min": 1002.9343399999999,
                    "p50": 1037.969014,
                    "p95": 1075.488269,
                    "p99": 1075.488269,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 731.915095,
                    "min": 691.343171,
                    "p50": 721.849076,
                    "p95": 731.915095,
                    "p99": 731.915095,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 312.624979,
                    "min": 269.29486099999997,
                    "p50": 276.29812599999997,
                    "p95": 312.624979,
                    "p99": 312.624979,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 462.01455599999997,
                    "min": 432.040214,
                    "p50": 446.183606,
                    "p95": 462.01455599999997,
                    "p99": 462.01455599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 860.9935479999999,
                    "min": 815.050967,
                    "p50": 844.61695,
                    "p95": 860.9935479999999,
                    "p99": 860.9935479999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1011.504342,
                    "min": 965.3533789999999,
                    "p50": 989.3840369999999,
                    "p95": 1011.504342,
                    "p99": 1011.504342,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1438.739317,
                    "min": 1380.446338,
                    "p50": 1405.048499,
                    "p95": 1438.739317,
                    "p99": 1438.739317,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 514.397233,
                    "min": 471.03745599999996,
                    "p50": 506.679956,
                    "p95": 514.397233,
                    "p99": 514.397233,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1271.241855,
                    "min": 1213.4195949999998,
                    "p50": 1232.451329,
                    "p95": 1271.241855,
                    "p99": 1271.241855,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 598.603796,
                    "min": 558.245511,
                    "p50": 576.6662309999999,
                    "p95": 598.603796,
                    "p99": 598.603796,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 815.879946,
                    "min": 737.726366,
                    "p50": 784.694251,
                    "p95": 815.879946,
                    "p99": 815.879946,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 669.415268,
                    "min": 604.2023019999999,
                    "p50": 639.075193,
                    "p95": 669.415268,
                    "p99": 669.415268,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 248.321745,
                    "min": 205.23366199999998,
                    "p50": 241.16845899999998,
                    "p95": 248.321745,
                    "p99": 248.321745,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 436.139971,
                    "min": 386.774762,
                    "p50": 418.34890199999995,
                    "p95": 436.139971,
                    "p99": 436.139971,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 669.923222,
                    "min": 640.922952,
                    "p50": 655.906252,
                    "p95": 669.923222,
                    "p99": 669.923222,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 603.7480899999999,
                    "min": 568.637692,
                    "p50": 591.61146,
                    "p95": 603.7480899999999,
                    "p99": 603.7480899999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1446.669436,
                    "min": 1349.186035,
                    "p50": 1412.7151139999999,
                    "p95": 1446.669436,
                    "p99": 1446.669436,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1209.2974769999998,
                    "min": 1171.615507,
                    "p50": 1199.72234,
                    "p95": 1209.2974769999998,
                    "p99": 1209.2974769999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.422313,
                    "min": 235.660194,
                    "p50": 263.107171,
                    "p95": 283.422313,
                    "p99": 283.422313,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 924.622941,
                    "min": 862.181068,
                    "p50": 901.262387,
                    "p95": 924.622941,
                    "p99": 924.622941,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 836.7271949999999,
                    "min": 771.597457,
                    "p50": 818.3235689999999,
                    "p95": 836.7271949999999,
                    "p99": 836.7271949999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 547.680565,
                    "min": 315.510222,
                    "p50": 354.133628,
                    "p95": 547.680565,
                    "p99": 547.680565,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1013.037825,
                    "min": 931.199995,
                    "p50": 987.301611,
                    "p95": 1013.037825,
                    "p99": 1013.037825,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 775.84263,
                    "min": 708.857386,
                    "p50": 738.0173239999999,
                    "p95": 775.84263,
                    "p99": 775.84263,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1638.386278,
                    "min": 1554.582477,
                    "p50": 1598.847215,
                    "p95": 1638.386278,
                    "p99": 1638.386278,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1146.3046259999999,
                    "min": 1074.851967,
                    "p50": 1127.791536,
                    "p95": 1146.3046259999999,
                    "p99": 1146.3046259999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 516.929008,
                    "min": 474.727106,
                    "p50": 509.332815,
                    "p95": 516.929008,
                    "p99": 516.929008,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1077.159741,
                    "min": 1016.761715,
                    "p50": 1061.961439,
                    "p95": 1077.159741,
                    "p99": 1077.159741,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1639.7513279999998,
                    "min": 1558.218744,
                    "p50": 1599.65808,
                    "p95": 1639.7513279999998,
                    "p99": 1639.7513279999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 368.41193499999997,
                    "min": 317.380313,
                    "p50": 346.583079,
                    "p95": 368.41193499999997,
                    "p99": 368.41193499999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 752.303356,
                    "min": 719.643105,
                    "p50": 738.160142,
                    "p95": 752.303356,
                    "p99": 752.303356,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 844.4875999999999,
                    "min": 797.290977,
                    "p50": 827.070825,
                    "p95": 844.4875999999999,
                    "p99": 844.4875999999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 927.2269759999999,
                    "min": 867.364598,
                    "p50": 897.3822329999999,
                    "p95": 927.2269759999999,
                    "p99": 927.2269759999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1455.944487,
                    "min": 1364.5982629999999,
                    "p50": 1430.3452069999998,
                    "p95": 1455.944487,
                    "p99": 1455.944487,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1535.772774,
                    "min": 944.6834319999999,
                    "p50": 982.825847,
                    "p95": 1535.772774,
                    "p99": 1535.772774,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1087.51462,
                    "min": 1023.434365,
                    "p50": 1037.593561,
                    "p95": 1087.51462,
                    "p99": 1087.51462,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 285.291001,
                    "min": 234.56756399999998,
                    "p50": 273.509136,
                    "p95": 285.291001,
                    "p99": 285.291001,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 533.949378,
                    "min": 470.82399599999997,
                    "p50": 502.248608,
                    "p95": 533.949378,
                    "p99": 533.949378,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 433.87490199999996,
                    "min": 412.673251,
                    "p50": 426.53502299999997,
                    "p95": 433.87490199999996,
                    "p99": 433.87490199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1253.7918829999999,
                    "min": 1174.8054789999999,
                    "p50": 1228.958198,
                    "p95": 1253.7918829999999,
                    "p99": 1253.7918829999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 692.2386309999999,
                    "min": 636.276394,
                    "p50": 672.575791,
                    "p95": 692.2386309999999,
                    "p99": 692.2386309999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1166.55957,
                    "min": 1115.7654189999998,
                    "p50": 1143.675994,
                    "p95": 1166.55957,
                    "p99": 1166.55957,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 615.258531,
                    "min": 554.69567,
                    "p50": 594.162861,
                    "p95": 615.258531,
                    "p99": 615.258531,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 512.858564,
                    "min": 328.017859,
                    "p50": 355.93974,
                    "p95": 512.858564,
                    "p99": 512.858564,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.484336,
                    "min": 58.811099999999996,
                    "p50": 61.880531999999995,
                    "p95": 86.484336,
                    "p99": 86.484336,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1414.7503239999999,
                    "min": 1328.9653469999998,
                    "p50": 1358.0485959999999,
                    "p95": 1414.7503239999999,
                    "p99": 1414.7503239999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 320.605841,
                    "min": 282.925556,
                    "p50": 312.471437,
                    "p95": 320.605841,
                    "p99": 320.605841,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 461.863411,
                    "min": 413.97360899999995,
                    "p50": 452.857888,
                    "p95": 461.863411,
                    "p99": 461.863411,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.77212799999998,
                    "min": 140.400326,
                    "p50": 166.979134,
                    "p95": 178.77212799999998,
                    "p99": 178.77212799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 610.780003,
                    "min": 544.733829,
                    "p50": 593.725223,
                    "p95": 610.780003,
                    "p99": 610.780003,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.34786799999999,
                    "min": 86.620165,
                    "p50": 113.196522,
                    "p95": 125.34786799999999,
                    "p99": 125.34786799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 151.684191,
                    "min": 112.17891399999999,
                    "p50": 141.00630999999998,
                    "p95": 151.684191,
                    "p99": 151.684191,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 83.560796,
                    "min": 46.257906999999996,
                    "p50": 68.955992,
                    "p95": 83.560796,
                    "p99": 83.560796,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 172.589451,
                    "min": 125.34593799999999,
                    "p50": 164.728948,
                    "p95": 172.589451,
                    "p99": 172.589451,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.321798,
                    "min": 100.560441,
                    "p50": 137.270625,
                    "p95": 140.321798,
                    "p99": 140.321798,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 200.303192,
                    "min": 151.137383,
                    "p50": 182.46961199999998,
                    "p95": 200.303192,
                    "p99": 200.303192,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 222.457248,
                    "min": 188.901795,
                    "p50": 217.777052,
                    "p95": 222.457248,
                    "p99": 222.457248,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.558232,
                    "min": 174.046091,
                    "p50": 206.007299,
                    "p95": 208.558232,
                    "p99": 208.558232,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 736.3527899999999,
                    "min": 678.03211,
                    "p50": 716.651164,
                    "p95": 736.3527899999999,
                    "p99": 736.3527899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.792761,
                    "min": 73.799251,
                    "p50": 110.231141,
                    "p95": 111.792761,
                    "p99": 111.792761,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 233.868313,
                    "min": 194.63277399999998,
                    "p50": 225.781568,
                    "p95": 233.868313,
                    "p99": 233.868313,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 251.35885,
                    "min": 210.185028,
                    "p50": 243.04598399999998,
                    "p95": 251.35885,
                    "p99": 251.35885,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.409687,
                    "min": 177.28267499999998,
                    "p50": 216.90402999999998,
                    "p95": 223.409687,
                    "p99": 223.409687,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1383.251863,
                    "min": 1318.931486,
                    "p50": 1326.623148,
                    "p95": 1383.251863,
                    "p99": 1383.251863,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 234.99930999999998,
                    "min": 190.26188399999998,
                    "p50": 221.64420299999998,
                    "p95": 234.99930999999998,
                    "p99": 234.99930999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.272752,
                    "min": 126.337789,
                    "p50": 163.600948,
                    "p95": 165.272752,
                    "p99": 165.272752,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 267.543493,
                    "min": 237.02872499999998,
                    "p50": 252.118991,
                    "p95": 267.543493,
                    "p99": 267.543493,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 313.521467,
                    "min": 267.25948,
                    "p50": 303.311279,
                    "p95": 313.521467,
                    "p99": 313.521467,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 110.046015,
                    "min": 72.160235,
                    "p50": 107.68915899999999,
                    "p95": 110.046015,
                    "p99": 110.046015,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 178.075796,
                    "min": 135.718868,
                    "p50": 173.814158,
                    "p95": 178.075796,
                    "p99": 178.075796,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.72615,
                    "min": 95.95293099999999,
                    "p50": 134.48243,
                    "p95": 143.72615,
                    "p99": 143.72615,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.29250399999998,
                    "min": 229.73243599999998,
                    "p50": 238.02027999999999,
                    "p95": 246.29250399999998,
                    "p99": 246.29250399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 204.37608,
                    "min": 165.397549,
                    "p50": 190.32905399999999,
                    "p95": 204.37608,
                    "p99": 204.37608,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 592.3877209999999,
                    "min": 534.315674,
                    "p50": 574.44669,
                    "p95": 592.3877209999999,
                    "p99": 592.3877209999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 448.62906699999996,
                    "min": 402.786523,
                    "p50": 440.035763,
                    "p95": 448.62906699999996,
                    "p99": 448.62906699999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 194.863799,
                    "min": 151.954434,
                    "p50": 188.54063399999998,
                    "p95": 194.863799,
                    "p99": 194.863799,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.010216,
                    "min": 43.241845999999995,
                    "p50": 63.784043,
                    "p95": 82.010216,
                    "p99": 82.010216,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.983679,
                    "min": 110.710214,
                    "p50": 145.137329,
                    "p95": 152.983679,
                    "p99": 152.983679,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 94.545498,
                    "min": 56.748380999999995,
                    "p50": 83.13389,
                    "p95": 94.545498,
                    "p99": 94.545498,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.925714,
                    "min": 85.720286,
                    "p50": 120.70585399999999,
                    "p95": 122.925714,
                    "p99": 122.925714,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 738.6791969999999,
                    "min": 679.3930449999999,
                    "p50": 706.485595,
                    "p95": 738.6791969999999,
                    "p99": 738.6791969999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 148.364519,
                    "min": 106.522195,
                    "p50": 143.28865,
                    "p95": 148.364519,
                    "p99": 148.364519,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 239.14657799999998,
                    "min": 196.52438999999998,
                    "p50": 230.052057,
                    "p95": 239.14657799999998,
                    "p99": 239.14657799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 208.889998,
                    "min": 164.438236,
                    "p50": 191.593181,
                    "p95": 208.889998,
                    "p99": 208.889998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 130.084226,
                    "min": 90.576394,
                    "p50": 123.614312,
                    "p95": 130.084226,
                    "p99": 130.084226,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 347.76388599999996,
                    "min": 293.554672,
                    "p50": 338.09378699999996,
                    "p95": 347.76388599999996,
                    "p99": 347.76388599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 108.06101799999999,
                    "min": 63.666756,
                    "p50": 89.135669,
                    "p95": 108.06101799999999,
                    "p99": 108.06101799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1025.7942209999999,
                    "min": 121.277811,
                    "p50": 156.10398999999998,
                    "p95": 1025.7942209999999,
                    "p99": 1025.7942209999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 196.28663799999998,
                    "min": 150.32365,
                    "p50": 172.197939,
                    "p95": 196.28663799999998,
                    "p99": 196.28663799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 265.687998,
                    "min": 251.092998,
                    "p50": 259.124355,
                    "p95": 265.687998,
                    "p99": 265.687998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 497.444868,
                    "min": 449.276418,
                    "p50": 487.51217699999995,
                    "p95": 497.444868,
                    "p99": 497.444868,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 220.080298,
                    "min": 194.525342,
                    "p50": 211.40823799999998,
                    "p95": 220.080298,
                    "p99": 220.080298,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 177.259054,
                    "min": 133.804148,
                    "p50": 166.984409,
                    "p95": 177.259054,
                    "p99": 177.259054,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 119.44021099999999,
                    "min": 77.35136399999999,
                    "p50": 103.63673299999999,
                    "p95": 119.44021099999999,
                    "p99": 119.44021099999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 253.75144699999998,
                    "min": 213.172763,
                    "p50": 242.511093,
                    "p95": 253.75144699999998,
                    "p99": 253.75144699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 299.96326799999997,
                    "min": 268.66220799999996,
                    "p50": 294.08460199999996,
                    "p95": 299.96326799999997,
                    "p99": 299.96326799999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 633.1851429999999,
                    "min": 596.045625,
                    "p50": 620.095606,
                    "p95": 633.1851429999999,
                    "p99": 633.1851429999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 785.955353,
                    "min": 731.2800599999999,
                    "p50": 763.565891,
                    "p95": 785.955353,
                    "p99": 785.955353,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1545.4910559999998,
                    "min": 1450.376197,
                    "p50": 1490.388545,
                    "p95": 1545.4910559999998,
                    "p99": 1545.4910559999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 85.322516,
                    "min": 47.380995999999996,
                    "p50": 75.613264,
                    "p95": 85.322516,
                    "p99": 85.322516,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 713.058188,
                    "min": 657.192739,
                    "p50": 699.8380549999999,
                    "p95": 713.058188,
                    "p99": 713.058188,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 217.907962,
                    "min": 175.23128599999998,
                    "p50": 202.191833,
                    "p95": 217.907962,
                    "p99": 217.907962,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 184.85290799999999,
                    "min": 159.759994,
                    "p50": 170.35607199999998,
                    "p95": 184.85290799999999,
                    "p99": 184.85290799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 230.12797799999998,
                    "min": 199.751792,
                    "p50": 226.226351,
                    "p95": 230.12797799999998,
                    "p99": 230.12797799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 124.51660199999999,
                    "min": 95.558848,
                    "p50": 101.010446,
                    "p95": 124.51660199999999,
                    "p99": 124.51660199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 605.9547769999999,
                    "min": 97.640739,
                    "p50": 106.746487,
                    "p95": 605.9547769999999,
                    "p99": 605.9547769999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 88.455801,
                    "min": 64.120164,
                    "p50": 81.384676,
                    "p95": 88.455801,
                    "p99": 88.455801,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 188.382237,
                    "min": 149.243458,
                    "p50": 177.91735599999998,
                    "p95": 188.382237,
                    "p99": 188.382237,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 275.78459499999997,
                    "min": 239.31604199999998,
                    "p50": 272.93629599999997,
                    "p95": 275.78459499999997,
                    "p99": 275.78459499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.20896499999999,
                    "min": 83.872728,
                    "p50": 108.427876,
                    "p95": 126.20896499999999,
                    "p99": 126.20896499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 152.308554,
                    "min": 109.260446,
                    "p50": 129.45220799999998,
                    "p95": 152.308554,
                    "p99": 152.308554,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 230.27564099999998,
                    "min": 186.47378,
                    "p50": 225.781924,
                    "p95": 230.27564099999998,
                    "p99": 230.27564099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 595.675961,
                    "min": 555.510954,
                    "p50": 574.910652,
                    "p95": 595.675961,
                    "p99": 595.675961,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1394.876836,
                    "min": 1295.545342,
                    "p50": 1331.531282,
                    "p95": 1394.876836,
                    "p99": 1394.876836,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.361346,
                    "min": 143.093145,
                    "p50": 159.210149,
                    "p95": 165.361346,
                    "p99": 165.361346,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 309.498613,
                    "min": 263.81417899999997,
                    "p50": 302.76597,
                    "p95": 309.498613,
                    "p99": 309.498613,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 195.610332,
                    "min": 165.723808,
                    "p50": 187.627286,
                    "p95": 195.610332,
                    "p99": 195.610332,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.936792,
                    "min": 58.370287999999995,
                    "p50": 85.11436499999999,
                    "p95": 95.936792,
                    "p99": 95.936792,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 444.496105,
                    "min": 403.83459799999997,
                    "p50": 435.628968,
                    "p95": 444.496105,
                    "p99": 444.496105,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 248.14083699999998,
                    "min": 208.27948999999998,
                    "p50": 242.95126199999999,
                    "p95": 248.14083699999998,
                    "p99": 248.14083699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.998189,
                    "min": 140.217247,
                    "p50": 178.383538,
                    "p95": 178.998189,
                    "p99": 178.998189,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 269.247846,
                    "min": 225.36397699999998,
                    "p50": 247.701629,
                    "p95": 269.247846,
                    "p99": 269.247846,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 980.720389,
                    "min": 904.5386189999999,
                    "p50": 939.6227819999999,
                    "p95": 980.720389,
                    "p99": 980.720389,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 646.119051,
                    "min": 592.521427,
                    "p50": 614.1491629999999,
                    "p95": 646.119051,
                    "p99": 646.119051,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 738.2535439999999,
                    "min": 701.242633,
                    "p50": 721.045951,
                    "p95": 738.2535439999999,
                    "p99": 738.2535439999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 840.2979919999999,
                    "min": 778.5847349999999,
                    "p50": 823.861735,
                    "p95": 840.2979919999999,
                    "p99": 840.2979919999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1052.0003299999998,
                    "min": 412.091821,
                    "p50": 444.363594,
                    "p95": 1052.0003299999998,
                    "p99": 1052.0003299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 324.626129,
                    "min": 281.62204199999996,
                    "p50": 313.404685,
                    "p95": 324.626129,
                    "p99": 324.626129,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 407.99233999999996,
                    "min": 369.33750799999996,
                    "p50": 402.601438,
                    "p95": 407.99233999999996,
                    "p99": 407.99233999999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 360.633949,
                    "min": 317.590214,
                    "p50": 353.840326,
                    "p95": 360.633949,
                    "p99": 360.633949,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 517.941016,
                    "min": 459.093187,
                    "p50": 496.13559,
                    "p95": 517.941016,
                    "p99": 517.941016,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 549.368127,
                    "min": 498.323019,
                    "p50": 517.842026,
                    "p95": 549.368127,
                    "p99": 549.368127,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 692.97674,
                    "min": 633.869379,
                    "p50": 678.375865,
                    "p95": 692.97674,
                    "p99": 692.97674,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 605.0082219999999,
                    "min": 552.374568,
                    "p50": 572.164402,
                    "p95": 605.0082219999999,
                    "p99": 605.0082219999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 575.892393,
                    "min": 510.193426,
                    "p50": 547.568121,
                    "p95": 575.892393,
                    "p99": 575.892393,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 673.4577859999999,
                    "min": 596.1682059999999,
                    "p50": 652.176059,
                    "p95": 673.4577859999999,
                    "p99": 673.4577859999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 707.329312,
                    "min": 636.678123,
                    "p50": 677.892348,
                    "p95": 707.329312,
                    "p99": 707.329312,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 227.367102,
                    "min": 208.754346,
                    "p50": 220.78964599999998,
                    "p95": 227.367102,
                    "p99": 227.367102,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 275.02126499999997,
                    "min": 230.06677399999998,
                    "p50": 259.403148,
                    "p95": 275.02126499999997,
                    "p99": 275.02126499999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 376.57640699999996,
                    "min": 328.676927,
                    "p50": 357.15968399999997,
                    "p95": 376.57640699999996,
                    "p99": 376.57640699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.10725199999996,
                    "min": 279.921028,
                    "p50": 312.217882,
                    "p95": 323.10725199999996,
                    "p99": 323.10725199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 520.467619,
                    "min": 452.526274,
                    "p50": 498.77721099999997,
                    "p95": 520.467619,
                    "p99": 520.467619,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.581886,
                    "min": 142.04103899999998,
                    "p50": 174.045427,
                    "p95": 182.581886,
                    "p99": 182.581886,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 427.13732799999997,
                    "min": 369.072031,
                    "p50": 402.302594,
                    "p95": 427.13732799999997,
                    "p99": 427.13732799999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1158.9350769999999,
                    "min": 797.527396,
                    "p50": 854.4177219999999,
                    "p95": 1158.9350769999999,
                    "p99": 1158.9350769999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 978.370419,
                    "min": 882.450791,
                    "p50": 955.5727119999999,
                    "p95": 978.370419,
                    "p99": 978.370419,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 753.239789,
                    "min": 677.743041,
                    "p50": 720.694258,
                    "p95": 753.239789,
                    "p99": 753.239789,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 450.357259,
                    "min": 406.363504,
                    "p50": 437.306645,
                    "p95": 450.357259,
                    "p99": 450.357259,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 607.676646,
                    "min": 563.370195,
                    "p50": 595.7045509999999,
                    "p95": 607.676646,
                    "p99": 607.676646,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 712.454615,
                    "min": 624.574834,
                    "p50": 669.733215,
                    "p95": 712.454615,
                    "p99": 712.454615,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 647.647758,
                    "min": 575.634459,
                    "p50": 614.394217,
                    "p95": 647.647758,
                    "p99": 647.647758,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 734.0804489999999,
                    "min": 666.229373,
                    "p50": 698.0674379999999,
                    "p95": 734.0804489999999,
                    "p99": 734.0804489999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 847.170501,
                    "min": 754.048219,
                    "p50": 784.304453,
                    "p95": 847.170501,
                    "p99": 847.170501,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 603.020149,
                    "min": 546.469437,
                    "p50": 558.62934,
                    "p95": 603.020149,
                    "p99": 603.020149,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 932.6577739999999,
                    "min": 489.70501199999995,
                    "p50": 526.9415359999999,
                    "p95": 932.6577739999999,
                    "p99": 932.6577739999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.61337699999999,
                    "min": 139.753254,
                    "p50": 159.465359,
                    "p95": 172.61337699999999,
                    "p99": 172.61337699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 956.089694,
                    "min": 847.672779,
                    "p50": 892.2438239999999,
                    "p95": 956.089694,
                    "p99": 956.089694,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 512.475693,
                    "min": 459.197181,
                    "p50": 482.62224899999995,
                    "p95": 512.475693,
                    "p99": 512.475693,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 468.447507,
                    "min": 404.912765,
                    "p50": 435.064035,
                    "p95": 468.447507,
                    "p99": 468.447507,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 315.267727,
                    "min": 275.720402,
                    "p50": 308.760359,
                    "p95": 315.267727,
                    "p99": 315.267727,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.543345,
                    "min": 385.267451,
                    "p50": 401.26281,
                    "p95": 415.543345,
                    "p99": 415.543345,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 372.796246,
                    "min": 308.951367,
                    "p50": 344.748848,
                    "p95": 372.796246,
                    "p99": 372.796246,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 225.422922,
                    "min": 177.945987,
                    "p50": 214.81294,
                    "p95": 225.422922,
                    "p99": 225.422922,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 275.280357,
                    "min": 226.295445,
                    "p50": 256.73657,
                    "p95": 275.280357,
                    "p99": 275.280357,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 698.891616,
                    "min": 648.367453,
                    "p50": 674.1983309999999,
                    "p95": 698.891616,
                    "p99": 698.891616,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 736.7223319999999,
                    "min": 696.375411,
                    "p50": 729.6217029999999,
                    "p95": 736.7223319999999,
                    "p99": 736.7223319999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 601.317357,
                    "min": 546.2244539999999,
                    "p50": 568.280228,
                    "p95": 601.317357,
                    "p99": 601.317357,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 828.313856,
                    "min": 782.200117,
                    "p50": 810.703614,
                    "p95": 828.313856,
                    "p99": 828.313856,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 226.422099,
                    "min": 181.0387,
                    "p50": 211.721619,
                    "p95": 226.422099,
                    "p99": 226.422099,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 555.230382,
                    "min": 499.699173,
                    "p50": 522.905578,
                    "p95": 555.230382,
                    "p99": 555.230382,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 974.460869,
                    "min": 913.625382,
                    "p50": 938.997614,
                    "p95": 974.460869,
                    "p99": 974.460869,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 319.55584699999997,
                    "min": 282.057431,
                    "p50": 302.87496,
                    "p95": 319.55584699999997,
                    "p99": 319.55584699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 409.372052,
                    "min": 362.109237,
                    "p50": 400.92767,
                    "p95": 409.372052,
                    "p99": 409.372052,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 378.537564,
                    "min": 324.24359999999996,
                    "p50": 357.218376,
                    "p95": 378.537564,
                    "p99": 378.537564,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 280.89349,
                    "min": 228.826643,
                    "p50": 235.79739099999998,
                    "p95": 280.89349,
                    "p99": 280.89349,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 761.346603,
                    "min": 410.87591199999997,
                    "p50": 448.98440999999997,
                    "p95": 761.346603,
                    "p99": 761.346603,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 523.7301649999999,
                    "min": 460.549537,
                    "p50": 490.52331,
                    "p95": 523.7301649999999,
                    "p99": 523.7301649999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.48968599999998,
                    "min": 144.090353,
                    "p50": 166.298911,
                    "p95": 180.48968599999998,
                    "p99": 180.48968599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 657.125274,
                    "min": 605.01395,
                    "p50": 642.426563,
                    "p95": 657.125274,
                    "p99": 657.125274,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 679.835324,
                    "min": 641.716473,
                    "p50": 672.474508,
                    "p95": 679.835324,
                    "p99": 679.835324,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 420.243049,
                    "min": 382.44737599999996,
                    "p50": 413.18200199999995,
                    "p95": 420.243049,
                    "p99": 420.243049,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 510.305271,
                    "min": 466.095627,
                    "p50": 496.435006,
                    "p95": 510.305271,
                    "p99": 510.305271,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 340.171291,
                    "min": 300.247709,
                    "p50": 314.675452,
                    "p95": 340.171291,
                    "p99": 340.171291,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.19273,
                    "min": 256.46160599999996,
                    "p50": 293.82431299999996,
                    "p95": 298.19273,
                    "p99": 298.19273,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 469.213176,
                    "min": 424.44329799999997,
                    "p50": 449.18584799999996,
                    "p95": 469.213176,
                    "p99": 469.213176,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 171.777304,
                    "min": 129.537041,
                    "p50": 168.473911,
                    "p95": 171.777304,
                    "p99": 171.777304,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.98710499999999,
                    "min": 172.340858,
                    "p50": 201.430638,
                    "p95": 210.98710499999999,
                    "p99": 210.98710499999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 383.10801799999996,
                    "min": 340.28798,
                    "p50": 346.40279,
                    "p95": 383.10801799999996,
                    "p99": 383.10801799999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.321393,
                    "min": 239.865872,
                    "p50": 253.574309,
                    "p95": 479.321393,
                    "p99": 479.321393,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1297.395829,
                    "min": 846.720066,
                    "p50": 884.040883,
                    "p95": 1297.395829,
                    "p99": 1297.395829,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 561.516523,
                    "min": 507.751534,
                    "p50": 540.50973,
                    "p95": 561.516523,
                    "p99": 561.516523,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 803.145,
                    "min": 739.2806969999999,
                    "p50": 773.8862909999999,
                    "p95": 803.145,
                    "p99": 803.145,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 653.642866,
                    "min": 593.6033719999999,
                    "p50": 635.9408169999999,
                    "p95": 653.642866,
                    "p99": 653.642866,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 596.8371569999999,
                    "min": 553.750108,
                    "p50": 579.361803,
                    "p95": 596.8371569999999,
                    "p99": 596.8371569999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1328.422114,
                    "min": 1264.3053009999999,
                    "p50": 1309.422151,
                    "p95": 1328.422114,
                    "p99": 1328.422114,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 565.535313,
                    "min": 510.88766999999996,
                    "p50": 539.727116,
                    "p95": 565.535313,
                    "p99": 565.535313,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 533.652821,
                    "min": 369.43046999999996,
                    "p50": 413.80029199999996,
                    "p95": 533.652821,
                    "p99": 533.652821,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 506.973444,
                    "min": 456.836216,
                    "p50": 479.25845999999996,
                    "p95": 506.973444,
                    "p99": 506.973444,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 759.51816,
                    "min": 707.66793,
                    "p50": 721.826569,
                    "p95": 759.51816,
                    "p99": 759.51816,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 659.630685,
                    "min": 621.017923,
                    "p50": 636.109572,
                    "p95": 659.630685,
                    "p99": 659.630685,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 466.66472,
                    "min": 409.860231,
                    "p50": 434.46257299999996,
                    "p95": 466.66472,
                    "p99": 466.66472,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.10948399999998,
                    "min": 104.34031,
                    "p50": 143.157589,
                    "p95": 148.10948399999998,
                    "p99": 148.10948399999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 186.53369999999998,
                    "min": 143.003353,
                    "p50": 175.70833399999998,
                    "p95": 186.53369999999998,
                    "p99": 186.53369999999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 399.212062,
                    "min": 335.947168,
                    "p50": 382.273889,
                    "p95": 399.212062,
                    "p99": 399.212062,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 254.10000699999998,
                    "min": 203.29440699999998,
                    "p50": 250.922111,
                    "p95": 254.10000699999998,
                    "p99": 254.10000699999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 360.523019,
                    "min": 305.499443,
                    "p50": 334.766173,
                    "p95": 360.523019,
                    "p99": 360.523019,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 218.76142199999998,
                    "min": 169.635517,
                    "p50": 210.14834199999999,
                    "p95": 218.76142199999998,
                    "p99": 218.76142199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 541.580499,
                    "min": 493.902045,
                    "p50": 518.333631,
                    "p95": 541.580499,
                    "p99": 541.580499,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 321.390291,
                    "min": 286.583095,
                    "p50": 308.145947,
                    "p95": 321.390291,
                    "p99": 321.390291,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 287.413396,
                    "min": 262.862309,
                    "p50": 280.036271,
                    "p95": 287.413396,
                    "p99": 287.413396,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 365.08214699999996,
                    "min": 315.39635599999997,
                    "p50": 353.151139,
                    "p95": 365.08214699999996,
                    "p99": 365.08214699999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 178.291259,
                    "min": 129.409089,
                    "p50": 164.89429199999998,
                    "p95": 178.291259,
                    "p99": 178.291259,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 306.220034,
                    "min": 275.654764,
                    "p50": 300.867598,
                    "p95": 306.220034,
                    "p99": 306.220034,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 645.041205,
                    "min": 219.44078399999998,
                    "p50": 251.185929,
                    "p95": 645.041205,
                    "p99": 645.041205,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 238.049007,
                    "min": 200.308876,
                    "p50": 218.78129199999998,
                    "p95": 238.049007,
                    "p99": 238.049007,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 514.999199,
                    "min": 493.520586,
                    "p50": 498.89003299999996,
                    "p95": 514.999199,
                    "p99": 514.999199,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 474.90680499999996,
                    "min": 429.070095,
                    "p50": 447.854656,
                    "p95": 474.90680499999996,
                    "p99": 474.90680499999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 697.22367,
                    "min": 644.766343,
                    "p50": 682.86993,
                    "p95": 697.22367,
                    "p99": 697.22367,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1025.9947419999999,
                    "min": 929.288331,
                    "p50": 983.637113,
                    "p95": 1025.9947419999999,
                    "p99": 1025.9947419999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 436.20627299999995,
                    "min": 388.51120499999996,
                    "p50": 417.431915,
                    "p95": 436.20627299999995,
                    "p99": 436.20627299999995,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 203.522639,
                    "min": 157.483858,
                    "p50": 199.11963699999998,
                    "p95": 203.522639,
                    "p99": 203.522639,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 403.222487,
                    "min": 368.251739,
                    "p50": 385.999761,
                    "p95": 403.222487,
                    "p99": 403.222487,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 140.590518,
                    "min": 96.937591,
                    "p50": 126.683606,
                    "p95": 140.590518,
                    "p99": 140.590518,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 499.82219799999996,
                    "min": 464.90770899999995,
                    "p50": 488.915601,
                    "p95": 499.82219799999996,
                    "p99": 499.82219799999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 612.7413339999999,
                    "min": 549.128304,
                    "p50": 589.047418,
                    "p95": 612.7413339999999,
                    "p99": 612.7413339999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 334.682686,
                    "min": 284.429824,
                    "p50": 299.999172,
                    "p95": 334.682686,
                    "p99": 334.682686,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1039.504031,
                    "min": 993.365378,
                    "p50": 1020.1081079999999,
                    "p95": 1039.504031,
                    "p99": 1039.504031,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 266.711504,
                    "min": 225.67592199999999,
                    "p50": 258.03081099999997,
                    "p95": 266.711504,
                    "p99": 266.711504,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 175.89019299999998,
                    "min": 152.02645099999998,
                    "p50": 165.849973,
                    "p95": 175.89019299999998,
                    "p99": 175.89019299999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 341.59624299999996,
                    "min": 300.927635,
                    "p50": 334.69516,
                    "p95": 341.59624299999996,
                    "p99": 341.59624299999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 140.21756299999998,
                    "min": 102.44917,
                    "p50": 129.545377,
                    "p95": 140.21756299999998,
                    "p99": 140.21756299999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 543.443027,
                    "min": 503.999954,
                    "p50": 530.4658929999999,
                    "p95": 543.443027,
                    "p99": 543.443027,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 418.59385599999996,
                    "min": 377.08993499999997,
                    "p50": 411.341396,
                    "p95": 418.59385599999996,
                    "p99": 418.59385599999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 392.628858,
                    "min": 351.682241,
                    "p50": 381.836791,
                    "p95": 392.628858,
                    "p99": 392.628858,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 118.734245,
                    "min": 77.39307699999999,
                    "p50": 111.72479299999999,
                    "p95": 118.734245,
                    "p99": 118.734245,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 166.303678,
                    "min": 127.10242799999999,
                    "p50": 154.93823,
                    "p95": 166.303678,
                    "p99": 166.303678,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 477.945903,
                    "min": 442.33649499999996,
                    "p50": 471.973506,
                    "p95": 477.945903,
                    "p99": 477.945903,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 240.699882,
                    "min": 201.13013899999999,
                    "p50": 233.02334499999998,
                    "p95": 240.699882,
                    "p99": 240.699882,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 316.545503,
                    "min": 303.3283,
                    "p50": 312.601226,
                    "p95": 316.545503,
                    "p99": 316.545503,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 216.86693699999998,
                    "min": 176.458954,
                    "p50": 203.610702,
                    "p95": 216.86693699999998,
                    "p99": 216.86693699999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 370.24067199999996,
                    "min": 332.097226,
                    "p50": 365.06818599999997,
                    "p95": 370.24067199999996,
                    "p99": 370.24067199999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 799.46771,
                    "min": 745.130244,
                    "p50": 780.013237,
                    "p95": 799.46771,
                    "p99": 799.46771,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1284.35816,
                    "min": 1243.345484,
                    "p50": 1273.471284,
                    "p95": 1284.35816,
                    "p99": 1284.35816,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 291.92989,
                    "min": 250.88870699999998,
                    "p50": 288.378699,
                    "p95": 291.92989,
                    "p99": 291.92989,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 153.430001,
                    "min": 113.15829799999999,
                    "p50": 151.934848,
                    "p95": 153.430001,
                    "p99": 153.430001,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 360.17130399999996,
                    "min": 317.96216,
                    "p50": 357.415532,
                    "p95": 360.17130399999996,
                    "p99": 360.17130399999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 520.809161,
                    "min": 500.72741299999996,
                    "p50": 513.503095,
                    "p95": 520.809161,
                    "p99": 520.809161,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 832.7343159999999,
                    "min": 785.680433,
                    "p50": 822.8315,
                    "p95": 832.7343159999999,
                    "p99": 832.7343159999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 676.378159,
                    "min": 629.70894,
                    "p50": 663.468436,
                    "p95": 676.378159,
                    "p99": 676.378159,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 167.557831,
                    "min": 129.732312,
                    "p50": 162.591465,
                    "p95": 167.557831,
                    "p99": 167.557831,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 326.174655,
                    "min": 279.340325,
                    "p50": 316.663182,
                    "p95": 326.174655,
                    "p99": 326.174655,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.33701399999998,
                    "min": 97.12248799999999,
                    "p50": 103.633116,
                    "p95": 128.33701399999998,
                    "p99": 128.33701399999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 261.408811,
                    "min": 226.525683,
                    "p50": 256.013112,
                    "p95": 261.408811,
                    "p99": 261.408811,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 281.08177,
                    "min": 238.96462,
                    "p50": 277.773216,
                    "p95": 281.08177,
                    "p99": 281.08177,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 104.451943,
                    "min": 65.943607,
                    "p50": 92.419843,
                    "p95": 104.451943,
                    "p99": 104.451943,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 215.682065,
                    "min": 176.34913799999998,
                    "p50": 206.49589799999998,
                    "p95": 215.682065,
                    "p99": 215.682065,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 233.15438799999998,
                    "min": 194.55655099999998,
                    "p50": 222.331563,
                    "p95": 233.15438799999998,
                    "p99": 233.15438799999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 127.89177199999999,
                    "min": 108.80224799999999,
                    "p50": 119.370142,
                    "p95": 127.89177199999999,
                    "p99": 127.89177199999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.891941,
                    "min": 51.080979,
                    "p50": 87.44169,
                    "p95": 89.891941,
                    "p99": 89.891941,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 246.547662,
                    "min": 211.394328,
                    "p50": 243.033107,
                    "p95": 246.547662,
                    "p99": 246.547662,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 197.99892699999998,
                    "min": 159.76305499999998,
                    "p50": 187.309009,
                    "p95": 197.99892699999998,
                    "p99": 197.99892699999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 174.757588,
                    "min": 144.51971699999999,
                    "p50": 168.879197,
                    "p95": 174.757588,
                    "p99": 174.757588,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 392.420712,
                    "min": 317.794438,
                    "p50": 337.400035,
                    "p95": 392.420712,
                    "p99": 392.420712,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 582.261089,
                    "min": 479.14824699999997,
                    "p50": 499.316441,
                    "p95": 582.261089,
                    "p99": 582.261089,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 504.009307,
                    "min": 412.04790199999997,
                    "p50": 453.573292,
                    "p95": 504.009307,
                    "p99": 504.009307,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.66741199999998,
                    "min": 108.017668,
                    "p50": 144.40416199999999,
                    "p95": 150.66741199999998,
                    "p99": 150.66741199999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 815.702084,
                    "min": 695.042326,
                    "p50": 720.8309959999999,
                    "p95": 815.702084,
                    "p99": 815.702084,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 313.050903,
                    "min": 282.179036,
                    "p50": 305.962727,
                    "p95": 313.050903,
                    "p99": 313.050903,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.40711,
                    "min": 196.46049299999999,
                    "p50": 212.759933,
                    "p95": 214.40711,
                    "p99": 214.40711,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 467.05540499999995,
                    "min": 401.638198,
                    "p50": 419.013739,
                    "p95": 467.05540499999995,
                    "p99": 467.05540499999995,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 264.571869,
                    "min": 212.464946,
                    "p50": 241.385866,
                    "p95": 264.571869,
                    "p99": 264.571869,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 680.0660869999999,
                    "min": 630.2123379999999,
                    "p50": 648.464114,
                    "p95": 680.0660869999999,
                    "p99": 680.0660869999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 183.732047,
                    "min": 146.810642,
                    "p50": 180.40002099999998,
                    "p95": 183.732047,
                    "p99": 183.732047,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 601.923721,
                    "min": 515.69638,
                    "p50": 558.018702,
                    "p95": 601.923721,
                    "p99": 601.923721,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 595.2484089999999,
                    "min": 244.107936,
                    "p50": 283.163668,
                    "p95": 595.2484089999999,
                    "p99": 595.2484089999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 539.137558,
                    "min": 448.719473,
                    "p50": 481.628915,
                    "p95": 539.137558,
                    "p99": 539.137558,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 424.916456,
                    "min": 345.165626,
                    "p50": 383.271702,
                    "p95": 424.916456,
                    "p99": 424.916456,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.23874099999998,
                    "min": 222.61863699999998,
                    "p50": 240.995431,
                    "p95": 252.23874099999998,
                    "p99": 252.23874099999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 748.43535,
                    "min": 594.431118,
                    "p50": 676.8977739999999,
                    "p95": 748.43535,
                    "p99": 748.43535,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 471.572729,
                    "min": 357.338351,
                    "p50": 397.269522,
                    "p95": 471.572729,
                    "p99": 471.572729,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 652.174051,
                    "min": 515.273747,
                    "p50": 583.42984,
                    "p95": 652.174051,
                    "p99": 652.174051,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 999.0194459999999,
                    "min": 791.957399,
                    "p50": 864.9360969999999,
                    "p95": 999.0194459999999,
                    "p99": 999.0194459999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 571.5492939999999,
                    "min": 437.506472,
                    "p50": 495.542914,
                    "p95": 571.5492939999999,
                    "p99": 571.5492939999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 700.736033,
                    "min": 589.633323,
                    "p50": 608.2372829999999,
                    "p95": 700.736033,
                    "p99": 700.736033,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1475.7756889999998,
                    "min": 1214.276504,
                    "p50": 1302.247543,
                    "p95": 1475.7756889999998,
                    "p99": 1475.7756889999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 377.724951,
                    "min": 278.79571899999996,
                    "p50": 318.086319,
                    "p95": 377.724951,
                    "p99": 377.724951,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.969262,
                    "min": 120.906171,
                    "p50": 147.860037,
                    "p95": 185.969262,
                    "p99": 185.969262,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 510.876579,
                    "min": 400.595615,
                    "p50": 441.902697,
                    "p95": 510.876579,
                    "p99": 510.876579,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 316.377927,
                    "min": 241.553925,
                    "p50": 281.231547,
                    "p95": 316.377927,
                    "p99": 316.377927,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 222.014161,
                    "min": 171.760708,
                    "p50": 198.66231,
                    "p95": 222.014161,
                    "p99": 222.014161,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 426.696483,
                    "min": 317.467643,
                    "p50": 357.202833,
                    "p95": 426.696483,
                    "p99": 426.696483,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 886.583838,
                    "min": 687.1419139999999,
                    "p50": 775.861039,
                    "p95": 886.583838,
                    "p99": 886.583838,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 623.651067,
                    "min": 474.46072799999996,
                    "p50": 513.15157,
                    "p95": 623.651067,
                    "p99": 623.651067,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 510.812028,
                    "min": 449.87104,
                    "p50": 485.84734199999997,
                    "p95": 510.812028,
                    "p99": 510.812028,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 580.879323,
                    "min": 526.919319,
                    "p50": 567.722397,
                    "p95": 580.879323,
                    "p99": 580.879323,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 618.9837249999999,
                    "min": 562.1246669999999,
                    "p50": 593.7622339999999,
                    "p95": 618.9837249999999,
                    "p99": 618.9837249999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 415.39529699999997,
                    "min": 363.014845,
                    "p50": 376.803857,
                    "p95": 415.39529699999997,
                    "p99": 415.39529699999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 271.530512,
                    "min": 226.479199,
                    "p50": 262.035477,
                    "p95": 271.530512,
                    "p99": 271.530512,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 341.68095,
                    "min": 303.005468,
                    "p50": 329.188095,
                    "p95": 341.68095,
                    "p99": 341.68095,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 196.762679,
                    "min": 153.2784,
                    "p50": 188.203744,
                    "p95": 196.762679,
                    "p99": 196.762679,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 235.12556099999998,
                    "min": 190.50785499999998,
                    "p50": 227.461156,
                    "p95": 235.12556099999998,
                    "p99": 235.12556099999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 423.829683,
                    "min": 374.842576,
                    "p50": 412.87611,
                    "p95": 423.829683,
                    "p99": 423.829683,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 309.962693,
                    "min": 262.559964,
                    "p50": 272.279406,
                    "p95": 309.962693,
                    "p99": 309.962693,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 811.0852659999999,
                    "min": 765.9481989999999,
                    "p50": 791.567554,
                    "p95": 811.0852659999999,
                    "p99": 811.0852659999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 455.61675099999997,
                    "min": 415.161183,
                    "p50": 450.24366799999996,
                    "p95": 455.61675099999997,
                    "p99": 455.61675099999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 704.408584,
                    "min": 684.263506,
                    "p50": 696.997351,
                    "p95": 704.408584,
                    "p99": 704.408584,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.078363,
                    "min": 115.218102,
                    "p50": 144.230165,
                    "p95": 155.078363,
                    "p99": 155.078363,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 539.480328,
                    "min": 503.983974,
                    "p50": 524.6016129999999,
                    "p95": 539.480328,
                    "p99": 539.480328,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 370.968175,
                    "min": 311.373085,
                    "p50": 349.26656399999996,
                    "p95": 370.968175,
                    "p99": 370.968175,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 206.026245,
                    "min": 159.295731,
                    "p50": 197.632004,
                    "p95": 206.026245,
                    "p99": 206.026245,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 147.404296,
                    "min": 105.66177499999999,
                    "p50": 139.287452,
                    "p95": 147.404296,
                    "p99": 147.404296,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 123.83040299999999,
                    "min": 106.174782,
                    "p50": 117.99595699999999,
                    "p95": 123.83040299999999,
                    "p99": 123.83040299999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 396.488363,
                    "min": 339.916162,
                    "p50": 375.394767,
                    "p95": 396.488363,
                    "p99": 396.488363,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 458.02493,
                    "min": 389.35360499999996,
                    "p50": 416.232844,
                    "p95": 458.02493,
                    "p99": 458.02493,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 273.455381,
                    "min": 235.64912099999998,
                    "p50": 271.40887599999996,
                    "p95": 273.455381,
                    "p99": 273.455381,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 578.9582829999999,
                    "min": 516.854349,
                    "p50": 549.610781,
                    "p95": 578.9582829999999,
                    "p99": 578.9582829999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 305.657901,
                    "min": 267.548529,
                    "p50": 296.693407,
                    "p95": 305.657901,
                    "p99": 305.657901,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 222.71764399999998,
                    "min": 182.32755899999998,
                    "p50": 221.373134,
                    "p95": 222.71764399999998,
                    "p99": 222.71764399999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 524.666144,
                    "min": 451.30951999999996,
                    "p50": 490.437836,
                    "p95": 524.666144,
                    "p99": 524.666144,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 425.749148,
                    "min": 361.24949,
                    "p50": 401.200592,
                    "p95": 425.749148,
                    "p99": 425.749148,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 177.12896899999998,
                    "min": 132.896735,
                    "p50": 168.20718599999998,
                    "p95": 177.12896899999998,
                    "p99": 177.12896899999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 261.23116699999997,
                    "min": 234.973582,
                    "p50": 245.3456,
                    "p95": 261.23116699999997,
                    "p99": 261.23116699999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 868.92095,
                    "min": 768.8404459999999,
                    "p50": 810.4316249999999,
                    "p95": 868.92095,
                    "p99": 868.92095,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 347.293822,
                    "min": 285.25208599999996,
                    "p50": 324.13109099999997,
                    "p95": 347.293822,
                    "p99": 347.293822,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1147.500654,
                    "min": 1025.5343579999999,
                    "p50": 1065.061072,
                    "p95": 1147.500654,
                    "p99": 1147.500654,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 467.743382,
                    "min": 431.607956,
                    "p50": 462.53371799999996,
                    "p95": 467.743382,
                    "p99": 467.743382,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.28750599999998,
                    "min": 216.49778899999998,
                    "p50": 241.01030699999998,
                    "p95": 253.28750599999998,
                    "p99": 253.28750599999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 903.8695849999999,
                    "min": 855.709306,
                    "p50": 883.984463,
                    "p95": 903.8695849999999,
                    "p99": 903.8695849999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 641.925655,
                    "min": 597.915389,
                    "p50": 632.2712789999999,
                    "p95": 641.925655,
                    "p99": 641.925655,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 298.810167,
                    "min": 256.39313699999997,
                    "p50": 288.138266,
                    "p95": 298.810167,
                    "p99": 298.810167,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 670.215409,
                    "min": 636.824445,
                    "p50": 663.286343,
                    "p95": 670.215409,
                    "p99": 670.215409,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 339.45499,
                    "min": 301.038983,
                    "p50": 322.29161,
                    "p95": 339.45499,
                    "p99": 339.45499,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 559.5013329999999,
                    "min": 514.319298,
                    "p50": 547.567496,
                    "p95": 559.5013329999999,
                    "p99": 559.5013329999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 434.940741,
                    "min": 385.32471699999996,
                    "p50": 410.319037,
                    "p95": 434.940741,
                    "p99": 434.940741,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 596.5049849999999,
                    "min": 578.239971,
                    "p50": 592.308103,
                    "p95": 596.5049849999999,
                    "p99": 596.5049849999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 784.5605549999999,
                    "min": 760.7055409999999,
                    "p50": 780.247808,
                    "p95": 784.5605549999999,
                    "p99": 784.5605549999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 384.00663599999996,
                    "min": 341.01120199999997,
                    "p50": 380.238384,
                    "p95": 384.00663599999996,
                    "p99": 384.00663599999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 510.247823,
                    "min": 471.23033999999996,
                    "p50": 499.79921099999996,
                    "p95": 510.247823,
                    "p99": 510.247823,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 173.786766,
                    "min": 130.21792399999998,
                    "p50": 165.24414199999998,
                    "p95": 173.786766,
                    "p99": 173.786766,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 213.084497,
                    "min": 172.62762899999998,
                    "p50": 199.05337899999998,
                    "p95": 213.084497,
                    "p99": 213.084497,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 409.08364,
                    "min": 353.558568,
                    "p50": 378.853701,
                    "p95": 409.08364,
                    "p99": 409.08364,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.76413599999998,
                    "min": 143.132174,
                    "p50": 175.788335,
                    "p95": 184.76413599999998,
                    "p99": 184.76413599999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 481.841903,
                    "min": 417.77914699999997,
                    "p50": 452.728547,
                    "p95": 481.841903,
                    "p99": 481.841903,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 550.271519,
                    "min": 505.924924,
                    "p50": 524.4056019999999,
                    "p95": 550.271519,
                    "p99": 550.271519,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 224.06486099999998,
                    "min": 176.728885,
                    "p50": 214.637373,
                    "p95": 224.06486099999998,
                    "p99": 224.06486099999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 374.70187699999997,
                    "min": 312.922863,
                    "p50": 349.96074799999997,
                    "p95": 374.70187699999997,
                    "p99": 374.70187699999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 330.370409,
                    "min": 292.778081,
                    "p50": 314.84524999999996,
                    "p95": 330.370409,
                    "p99": 330.370409,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 261.500798,
                    "min": 231.260641,
                    "p50": 246.29820099999998,
                    "p95": 261.500798,
                    "p99": 261.500798,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.016628,
                    "min": 107.143653,
                    "p50": 132.53603999999999,
                    "p95": 145.016628,
                    "p99": 145.016628,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 674.0610409999999,
                    "min": 604.85388,
                    "p50": 650.454109,
                    "p95": 674.0610409999999,
                    "p99": 674.0610409999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 430.16878099999997,
                    "min": 401.528119,
                    "p50": 419.13088999999997,
                    "p95": 430.16878099999997,
                    "p99": 430.16878099999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 497.993608,
                    "min": 449.07203599999997,
                    "p50": 472.688247,
                    "p95": 497.993608,
                    "p99": 497.993608,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 765.81734,
                    "min": 716.350635,
                    "p50": 731.111845,
                    "p95": 765.81734,
                    "p99": 765.81734,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 584.711054,
                    "min": 546.194288,
                    "p50": 554.086382,
                    "p95": 584.711054,
                    "p99": 584.711054,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 296.392062,
                    "min": 259.98182099999997,
                    "p50": 282.750671,
                    "p95": 296.392062,
                    "p99": 296.392062,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 795.77785,
                    "min": 644.583685,
                    "p50": 692.0894969999999,
                    "p95": 795.77785,
                    "p99": 795.77785,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 456.935865,
                    "min": 392.405623,
                    "p50": 405.12163499999997,
                    "p95": 456.935865,
                    "p99": 456.935865,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 637.75644,
                    "min": 513.691978,
                    "p50": 548.096737,
                    "p95": 637.75644,
                    "p99": 637.75644,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 648.236849,
                    "min": 548.492158,
                    "p50": 585.322553,
                    "p95": 648.236849,
                    "p99": 648.236849,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 852.3250949999999,
                    "min": 726.018185,
                    "p50": 763.9784649999999,
                    "p95": 852.3250949999999,
                    "p99": 852.3250949999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 466.887728,
                    "min": 403.476635,
                    "p50": 441.44066499999997,
                    "p95": 466.887728,
                    "p99": 466.887728,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 266.25874799999997,
                    "min": 222.24083,
                    "p50": 258.594087,
                    "p95": 266.25874799999997,
                    "p99": 266.25874799999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 335.648725,
                    "min": 295.675731,
                    "p50": 320.098241,
                    "p95": 335.648725,
                    "p99": 335.648725,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 523.205929,
                    "min": 496.930794,
                    "p50": 502.109183,
                    "p95": 523.205929,
                    "p99": 523.205929,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 480.552841,
                    "min": 439.538047,
                    "p50": 465.15430599999996,
                    "p95": 480.552841,
                    "p99": 480.552841,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1181.031219,
                    "min": 1104.076981,
                    "p50": 1122.010169,
                    "p95": 1181.031219,
                    "p99": 1181.031219,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 300.034622,
                    "min": 257.813675,
                    "p50": 283.507178,
                    "p95": 300.034622,
                    "p99": 300.034622,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.144445,
                    "min": 112.639022,
                    "p50": 136.72007299999999,
                    "p95": 150.144445,
                    "p99": 150.144445,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.178043,
                    "min": 185.590562,
                    "p50": 210.522266,
                    "p95": 222.178043,
                    "p99": 222.178043,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 372.90009799999996,
                    "min": 333.78266099999996,
                    "p50": 368.13652199999996,
                    "p95": 372.90009799999996,
                    "p99": 372.90009799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 187.155442,
                    "min": 148.079711,
                    "p50": 176.513147,
                    "p95": 187.155442,
                    "p99": 187.155442,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 725.954782,
                    "min": 682.405935,
                    "p50": 701.875282,
                    "p95": 725.954782,
                    "p99": 725.954782,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 350.0558,
                    "min": 315.58901499999996,
                    "p50": 331.75068,
                    "p95": 350.0558,
                    "p99": 350.0558,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.335981,
                    "min": 154.611151,
                    "p50": 168.89118399999998,
                    "p95": 172.335981,
                    "p99": 172.335981,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 224.73443,
                    "min": 176.221643,
                    "p50": 216.72915799999998,
                    "p95": 224.73443,
                    "p99": 224.73443,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 490.84934999999996,
                    "min": 446.61422999999996,
                    "p50": 473.927131,
                    "p95": 490.84934999999996,
                    "p99": 490.84934999999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.84413,
                    "min": 274.086736,
                    "p50": 302.239844,
                    "p95": 323.84413,
                    "p99": 323.84413,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 962.3012689999999,
                    "min": 893.893154,
                    "p50": 921.047253,
                    "p95": 962.3012689999999,
                    "p99": 962.3012689999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.777815,
                    "min": 223.819833,
                    "p50": 258.63472,
                    "p95": 273.777815,
                    "p99": 273.777815,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 521.036912,
                    "min": 487.627775,
                    "p50": 512.650041,
                    "p95": 521.036912,
                    "p99": 521.036912,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 410.07721799999996,
                    "min": 354.978134,
                    "p50": 389.495953,
                    "p95": 410.07721799999996,
                    "p99": 410.07721799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 598.4011429999999,
                    "min": 530.415906,
                    "p50": 565.385581,
                    "p95": 598.4011429999999,
                    "p99": 598.4011429999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 616.032118,
                    "min": 579.357159,
                    "p50": 611.482894,
                    "p95": 616.032118,
                    "p99": 616.032118,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 855.5845889999999,
                    "min": 762.042339,
                    "p50": 805.883305,
                    "p95": 855.5845889999999,
                    "p99": 855.5845889999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 657.4258629999999,
                    "min": 628.941547,
                    "p50": 651.960644,
                    "p95": 657.4258629999999,
                    "p99": 657.4258629999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 460.42648499999996,
                    "min": 399.505028,
                    "p50": 438.417293,
                    "p95": 460.42648499999996,
                    "p99": 460.42648499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 182.118947,
                    "min": 146.2088,
                    "p50": 176.32736699999998,
                    "p95": 182.118947,
                    "p99": 182.118947,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 612.9085289999999,
                    "min": 533.651287,
                    "p50": 570.272436,
                    "p95": 612.9085289999999,
                    "p99": 612.9085289999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 460.38347699999997,
                    "min": 391.736002,
                    "p50": 418.092565,
                    "p95": 460.38347699999997,
                    "p99": 460.38347699999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 386.000098,
                    "min": 321.860503,
                    "p50": 359.470647,
                    "p95": 386.000098,
                    "p99": 386.000098,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 270.37566899999996,
                    "min": 216.04727799999998,
                    "p50": 252.558561,
                    "p95": 270.37566899999996,
                    "p99": 270.37566899999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 154.921985,
                    "min": 110.378277,
                    "p50": 146.61345699999998,
                    "p95": 154.921985,
                    "p99": 154.921985,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.89756,
                    "min": 180.780399,
                    "p50": 207.12381499999998,
                    "p95": 231.89756,
                    "p99": 231.89756,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 562.943769,
                    "min": 499.25144,
                    "p50": 518.462185,
                    "p95": 562.943769,
                    "p99": 562.943769,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 698.207672,
                    "min": 647.569923,
                    "p50": 660.902695,
                    "p95": 698.207672,
                    "p99": 698.207672,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 292.572212,
                    "min": 250.89881599999998,
                    "p50": 276.979937,
                    "p95": 292.572212,
                    "p99": 292.572212,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 404.866522,
                    "min": 351.57146,
                    "p50": 392.867929,
                    "p95": 404.866522,
                    "p99": 404.866522,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 766.5144879999999,
                    "min": 701.7385959999999,
                    "p50": 736.429255,
                    "p95": 766.5144879999999,
                    "p99": 766.5144879999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 471.30103199999996,
                    "min": 421.66335699999996,
                    "p50": 460.144117,
                    "p95": 471.30103199999996,
                    "p99": 471.30103199999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 345.440108,
                    "min": 286.15009,
                    "p50": 312.895305,
                    "p95": 345.440108,
                    "p99": 345.440108,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 518.958074,
                    "min": 463.005254,
                    "p50": 498.54304199999996,
                    "p95": 518.958074,
                    "p99": 518.958074,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1243.432707,
                    "min": 1205.4587199999999,
                    "p50": 1237.591555,
                    "p95": 1243.432707,
                    "p99": 1243.432707,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 698.534592,
                    "min": 630.356777,
                    "p50": 671.8938969999999,
                    "p95": 698.534592,
                    "p99": 698.534592,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 861.636035,
                    "min": 787.934577,
                    "p50": 829.5261859999999,
                    "p95": 861.636035,
                    "p99": 861.636035,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 939.623805,
                    "min": 862.5959479999999,
                    "p50": 921.045661,
                    "p95": 939.623805,
                    "p99": 939.623805,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1184.005302,
                    "min": 1123.707386,
                    "p50": 1163.31929,
                    "p95": 1184.005302,
                    "p99": 1184.005302,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1109.00769,
                    "min": 1032.3727669999998,
                    "p50": 1084.886427,
                    "p95": 1109.00769,
                    "p99": 1109.00769,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 370.993945,
                    "min": 324.019841,
                    "p50": 353.456685,
                    "p95": 370.993945,
                    "p99": 370.993945,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 780.555828,
                    "min": 722.3813359999999,
                    "p50": 753.5119199999999,
                    "p95": 780.555828,
                    "p99": 780.555828,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1024.817863,
                    "min": 944.280077,
                    "p50": 1010.206013,
                    "p95": 1024.817863,
                    "p99": 1024.817863,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1454.349663,
                    "min": 1399.3037439999998,
                    "p50": 1431.447347,
                    "p95": 1454.349663,
                    "p99": 1454.349663,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 446.119327,
                    "min": 395.690639,
                    "p50": 432.122707,
                    "p95": 446.119327,
                    "p99": 446.119327,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 598.387246,
                    "min": 562.629747,
                    "p50": 597.22827,
                    "p95": 598.387246,
                    "p99": 598.387246,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 285.767175,
                    "min": 241.74812599999998,
                    "p50": 280.788713,
                    "p95": 285.767175,
                    "p99": 285.767175,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 521.585963,
                    "min": 487.23404,
                    "p50": 504.37202099999996,
                    "p95": 521.585963,
                    "p99": 521.585963,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1658.364384,
                    "min": 1604.889175,
                    "p50": 1635.8377289999999,
                    "p95": 1658.364384,
                    "p99": 1658.364384,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1657.1472059999999,
                    "min": 1586.568814,
                    "p50": 1633.346901,
                    "p95": 1657.1472059999999,
                    "p99": 1657.1472059999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1183.339995,
                    "min": 1123.11448,
                    "p50": 1149.297149,
                    "p95": 1183.339995,
                    "p99": 1183.339995,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1017.737188,
                    "min": 967.8963299999999,
                    "p50": 999.4694539999999,
                    "p95": 1017.737188,
                    "p99": 1017.737188,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 784.0933249999999,
                    "min": 708.3125309999999,
                    "p50": 748.272428,
                    "p95": 784.0933249999999,
                    "p99": 784.0933249999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 693.4120409999999,
                    "min": 630.893782,
                    "p50": 673.113983,
                    "p95": 693.4120409999999,
                    "p99": 693.4120409999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 529.06389,
                    "min": 480.217622,
                    "p50": 515.264474,
                    "p95": 529.06389,
                    "p99": 529.06389,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1084.22711,
                    "min": 1029.092715,
                    "p50": 1074.497999,
                    "p95": 1084.22711,
                    "p99": 1084.22711,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 366.637294,
                    "min": 339.829073,
                    "p50": 358.556666,
                    "p95": 366.637294,
                    "p99": 366.637294,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 932.429141,
                    "min": 890.120006,
                    "p50": 917.73047,
                    "p95": 932.429141,
                    "p99": 932.429141,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 447.506719,
                    "min": 391.82032899999996,
                    "p50": 431.289768,
                    "p95": 447.506719,
                    "p99": 447.506719,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1457.4557849999999,
                    "min": 1364.1837759999999,
                    "p50": 1420.597162,
                    "p95": 1457.4557849999999,
                    "p99": 1457.4557849999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 279.572973,
                    "min": 244.277973,
                    "p50": 271.585732,
                    "p95": 279.572973,
                    "p99": 279.572973,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 614.773317,
                    "min": 566.5126769999999,
                    "p50": 591.780041,
                    "p95": 614.773317,
                    "p99": 614.773317,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1249.132063,
                    "min": 1180.912274,
                    "p50": 1207.6765249999999,
                    "p95": 1249.132063,
                    "p99": 1249.132063,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 842.275236,
                    "min": 804.15005,
                    "p50": 822.8473759999999,
                    "p95": 842.275236,
                    "p99": 842.275236,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 931.82268,
                    "min": 884.939391,
                    "p50": 900.1830649999999,
                    "p95": 931.82268,
                    "p99": 931.82268,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 529.005446,
                    "min": 499.68467799999996,
                    "p50": 505.029231,
                    "p95": 529.005446,
                    "p99": 529.005446,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 450.448629,
                    "min": 402.442797,
                    "p50": 427.048901,
                    "p95": 450.448629,
                    "p99": 450.448629,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 864.853078,
                    "min": 790.7985739999999,
                    "p50": 830.98416,
                    "p95": 864.853078,
                    "p99": 864.853078,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1677.260047,
                    "min": 1561.771086,
                    "p50": 1643.5830839999999,
                    "p95": 1677.260047,
                    "p99": 1677.260047,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 366.501154,
                    "min": 329.171398,
                    "p50": 351.706925,
                    "p95": 366.501154,
                    "p99": 366.501154,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 610.095701,
                    "min": 546.780297,
                    "p50": 590.393122,
                    "p95": 610.095701,
                    "p99": 610.095701,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 284.571691,
                    "min": 241.752919,
                    "p50": 260.961112,
                    "p95": 284.571691,
                    "p99": 284.571691,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1245.843145,
                    "min": 1192.9665909999999,
                    "p50": 1217.242962,
                    "p95": 1245.843145,
                    "p99": 1245.843145,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1169.162482,
                    "min": 1110.94119,
                    "p50": 1148.7948059999999,
                    "p95": 1169.162482,
                    "p99": 1169.162482,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1008.652894,
                    "min": 961.350682,
                    "p50": 982.179127,
                    "p95": 1008.652894,
                    "p99": 1008.652894,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1101.905943,
                    "min": 1022.3489549999999,
                    "p50": 1080.215129,
                    "p95": 1101.905943,
                    "p99": 1101.905943,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 765.486357,
                    "min": 725.6637979999999,
                    "p50": 755.031758,
                    "p95": 765.486357,
                    "p99": 765.486357,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1439.687876,
                    "min": 1371.76139,
                    "p50": 1423.239053,
                    "p95": 1439.687876,
                    "p99": 1439.687876,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 683.850318,
                    "min": 628.249989,
                    "p50": 671.201996,
                    "p95": 683.850318,
                    "p99": 683.850318,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 388.53515899999996,
                    "min": 346.03538599999996,
                    "p50": 379.96338,
                    "p95": 388.53515899999996,
                    "p99": 388.53515899999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 227.249991,
                    "min": 185.312606,
                    "p50": 220.155822,
                    "p95": 227.249991,
                    "p99": 227.249991,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 434.89167,
                    "min": 394.418079,
                    "p50": 427.281821,
                    "p95": 434.89167,
                    "p99": 434.89167,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 534.743826,
                    "min": 460.73308399999996,
                    "p50": 488.710607,
                    "p95": 534.743826,
                    "p99": 534.743826,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 121.68853399999999,
                    "min": 107.81796299999999,
                    "p50": 120.567139,
                    "p95": 121.68853399999999,
                    "p99": 121.68853399999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 361.752791,
                    "min": 317.47418799999997,
                    "p50": 354.169979,
                    "p95": 361.752791,
                    "p99": 361.752791,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 204.526589,
                    "min": 184.032049,
                    "p50": 198.817965,
                    "p95": 204.526589,
                    "p99": 204.526589,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 149.211903,
                    "min": 107.987006,
                    "p50": 137.33405199999999,
                    "p95": 149.211903,
                    "p99": 149.211903,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 885.5654579999999,
                    "min": 790.0574379999999,
                    "p50": 828.679681,
                    "p95": 885.5654579999999,
                    "p99": 885.5654579999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 284.097131,
                    "min": 247.105754,
                    "p50": 275.13994099999996,
                    "p95": 284.097131,
                    "p99": 284.097131,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 334.638173,
                    "min": 292.126742,
                    "p50": 324.696179,
                    "p95": 334.638173,
                    "p99": 334.638173,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 414.374211,
                    "min": 372.227819,
                    "p50": 408.49909199999996,
                    "p95": 414.374211,
                    "p99": 414.374211,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 176.980388,
                    "min": 134.089244,
                    "p50": 160.147817,
                    "p95": 176.980388,
                    "p99": 176.980388,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1450.4694909999998,
                    "min": 1309.74526,
                    "p50": 1340.189102,
                    "p95": 1450.4694909999998,
                    "p99": 1450.4694909999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 612.215425,
                    "min": 525.598382,
                    "p50": 558.936603,
                    "p95": 612.215425,
                    "p99": 612.215425,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 321.82142899999997,
                    "min": 285.70960299999996,
                    "p50": 301.85128499999996,
                    "p95": 321.82142899999997,
                    "p99": 321.82142899999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 256.302776,
                    "min": 213.092105,
                    "p50": 249.612316,
                    "p95": 256.302776,
                    "p99": 256.302776,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1157.047979,
                    "min": 1050.0517989999998,
                    "p50": 1087.763377,
                    "p95": 1157.047979,
                    "p99": 1157.047979,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 838.7122919999999,
                    "min": 737.294865,
                    "p50": 779.021985,
                    "p95": 838.7122919999999,
                    "p99": 838.7122919999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 271.33547999999996,
                    "min": 223.121267,
                    "p50": 260.340257,
                    "p95": 271.33547999999996,
                    "p99": 271.33547999999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 546.559445,
                    "min": 488.119302,
                    "p50": 522.515236,
                    "p95": 546.559445,
                    "p99": 546.559445,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 383.252766,
                    "min": 341.470212,
                    "p50": 373.488245,
                    "p95": 383.252766,
                    "p99": 383.252766,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 441.25331,
                    "min": 376.673566,
                    "p50": 407.90026,
                    "p95": 441.25331,
                    "p99": 441.25331,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.018174,
                    "min": 113.79520799999999,
                    "p50": 152.406748,
                    "p95": 155.018174,
                    "p99": 155.018174,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 450.291118,
                    "min": 414.36483499999997,
                    "p50": 447.052774,
                    "p95": 450.291118,
                    "p99": 450.291118,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 226.86220799999998,
                    "min": 191.206369,
                    "p50": 214.89482999999998,
                    "p95": 226.86220799999998,
                    "p99": 226.86220799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 571.1066099999999,
                    "min": 517.290153,
                    "p50": 535.3987989999999,
                    "p95": 571.1066099999999,
                    "p99": 571.1066099999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 356.485058,
                    "min": 306.096672,
                    "p50": 335.59588099999996,
                    "p95": 356.485058,
                    "p99": 356.485058,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 732.799303,
                    "min": 659.9317699999999,
                    "p50": 686.666918,
                    "p95": 732.799303,
                    "p99": 732.799303,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 490.562755,
                    "min": 444.572978,
                    "p50": 476.95962599999996,
                    "p95": 490.562755,
                    "p99": 490.562755,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 313.112282,
                    "min": 262.43806,
                    "p50": 287.266797,
                    "p95": 313.112282,
                    "p99": 313.112282,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 190.971799,
                    "min": 156.674739,
                    "p50": 188.767821,
                    "p95": 190.971799,
                    "p99": 190.971799,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 637.364602,
                    "min": 585.020452,
                    "p50": 590.987996,
                    "p95": 637.364602,
                    "p99": 637.364602,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1231.914579,
                    "min": 1138.449744,
                    "p50": 1157.485424,
                    "p95": 1231.914579,
                    "p99": 1231.914579,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 258.451285,
                    "min": 217.69659199999998,
                    "p50": 219.475009,
                    "p95": 258.451285,
                    "p99": 258.451285,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 281.32785,
                    "min": 242.064382,
                    "p50": 267.959976,
                    "p95": 281.32785,
                    "p99": 281.32785,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 160.61165499999998,
                    "min": 122.61672,
                    "p50": 123.93619199999999,
                    "p95": 160.61165499999998,
                    "p99": 160.61165499999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 233.27521199999998,
                    "min": 194.383107,
                    "p50": 219.568311,
                    "p95": 233.27521199999998,
                    "p99": 233.27521199999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 377.40831,
                    "min": 337.164771,
                    "p50": 372.67425199999997,
                    "p95": 377.40831,
                    "p99": 377.40831,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 114.227986,
                    "min": 75.386269,
                    "p50": 112.84264599999999,
                    "p95": 114.227986,
                    "p99": 114.227986,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 764.169579,
                    "min": 719.748975,
                    "p50": 741.335789,
                    "p95": 764.169579,
                    "p99": 764.169579,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 306.084492,
                    "min": 267.61227199999996,
                    "p50": 303.46245999999996,
                    "p95": 306.084492,
                    "p99": 306.084492,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 353.33302599999996,
                    "min": 314.805404,
                    "p50": 340.673311,
                    "p95": 353.33302599999996,
                    "p99": 353.33302599999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 185.44345099999998,
                    "min": 147.555974,
                    "p50": 184.956158,
                    "p95": 185.44345099999998,
                    "p99": 185.44345099999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 461.461903,
                    "min": 417.671749,
                    "p50": 423.071804,
                    "p95": 461.461903,
                    "p99": 461.461903,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 334.810909,
                    "min": 290.702609,
                    "p50": 324.554038,
                    "p95": 334.810909,
                    "p99": 334.810909,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 209.532062,
                    "min": 171.76469799999998,
                    "p50": 202.291992,
                    "p95": 209.532062,
                    "p99": 209.532062,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 997.1089069999999,
                    "min": 949.4491909999999,
                    "p50": 981.1205759999999,
                    "p95": 997.1089069999999,
                    "p99": 997.1089069999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.118357,
                    "min": 98.880462,
                    "p50": 124.51239,
                    "p95": 137.118357,
                    "p99": 137.118357,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 398.70050799999996,
                    "min": 362.968723,
                    "p50": 388.92420799999996,
                    "p95": 398.70050799999996,
                    "p99": 398.70050799999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 521.5024129999999,
                    "min": 482.565657,
                    "p50": 507.829259,
                    "p95": 521.5024129999999,
                    "p99": 521.5024129999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 665.235627,
                    "min": 596.681917,
                    "p50": 636.767527,
                    "p95": 665.235627,
                    "p99": 665.235627,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 547.6447499999999,
                    "min": 498.147569,
                    "p50": 542.6871239999999,
                    "p95": 547.6447499999999,
                    "p99": 547.6447499999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 871.306795,
                    "min": 835.124975,
                    "p50": 842.930174,
                    "p95": 871.306795,
                    "p99": 871.306795,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 751.216146,
                    "min": 715.9368029999999,
                    "p50": 744.7482299999999,
                    "p95": 751.216146,
                    "p99": 751.216146,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 610.3149189999999,
                    "min": 552.353286,
                    "p50": 588.054345,
                    "p95": 610.3149189999999,
                    "p99": 610.3149189999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 699.0537029999999,
                    "min": 645.0981499999999,
                    "p50": 687.4645929999999,
                    "p95": 699.0537029999999,
                    "p99": 699.0537029999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 801.3368059999999,
                    "min": 780.97006,
                    "p50": 793.3895299999999,
                    "p95": 801.3368059999999,
                    "p99": 801.3368059999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 228.335197,
                    "min": 191.524872,
                    "p50": 200.33878199999998,
                    "p95": 228.335197,
                    "p99": 228.335197,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 302.40948399999996,
                    "min": 248.27465999999998,
                    "p50": 290.114222,
                    "p95": 302.40948399999996,
                    "p99": 302.40948399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 334.65095099999996,
                    "min": 276.045994,
                    "p50": 300.283659,
                    "p95": 334.65095099999996,
                    "p99": 334.65095099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1131.546613,
                    "min": 1049.727042,
                    "p50": 1093.186152,
                    "p95": 1131.546613,
                    "p99": 1131.546613,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 406.088618,
                    "min": 343.09629,
                    "p50": 350.556901,
                    "p95": 406.088618,
                    "p99": 406.088618,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 989.416128,
                    "min": 923.8246399999999,
                    "p50": 967.3559859999999,
                    "p95": 989.416128,
                    "p99": 989.416128,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 500.51879099999996,
                    "min": 448.93114399999996,
                    "p50": 494.34162599999996,
                    "p95": 500.51879099999996,
                    "p99": 500.51879099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 440.389776,
                    "min": 396.172218,
                    "p50": 434.85997299999997,
                    "p95": 440.389776,
                    "p99": 440.389776,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 173.083714,
                    "min": 126.79378899999999,
                    "p50": 157.630711,
                    "p95": 173.083714,
                    "p99": 173.083714,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 267.915536,
                    "min": 190.51438299999998,
                    "p50": 240.457712,
                    "p95": 267.915536,
                    "p99": 267.915536,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 365.171773,
                    "min": 280.90212199999996,
                    "p50": 306.997563,
                    "p95": 365.171773,
                    "p99": 365.171773,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 121.212598,
                    "min": 89.89826599999999,
                    "p50": 105.91872199999999,
                    "p95": 121.212598,
                    "p99": 121.212598,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 207.31974,
                    "min": 162.814981,
                    "p50": 173.343291,
                    "p95": 207.31974,
                    "p99": 207.31974,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 281.796794,
                    "min": 229.725054,
                    "p50": 260.766895,
                    "p95": 281.796794,
                    "p99": 281.796794,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 93.7586,
                    "min": 67.880991,
                    "p50": 82.305072,
                    "p95": 93.7586,
                    "p99": 93.7586,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 146.700708,
                    "min": 117.85273,
                    "p50": 132.40877,
                    "p95": 146.700708,
                    "p99": 146.700708,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 163.099257,
                    "min": 138.657365,
                    "p50": 156.874123,
                    "p95": 163.099257,
                    "p99": 163.099257,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 443.228172,
                    "min": 377.463357,
                    "p50": 396.14894599999997,
                    "p95": 443.228172,
                    "p99": 443.228172,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 578.415576,
                    "min": 506.31954399999995,
                    "p50": 555.920315,
                    "p95": 578.415576,
                    "p99": 578.415576,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 223.14399799999998,
                    "min": 159.825214,
                    "p50": 192.439761,
                    "p95": 223.14399799999998,
                    "p99": 223.14399799999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1327.2670409999998,
                    "min": 1167.042125,
                    "p50": 1258.389345,
                    "p95": 1327.2670409999998,
                    "p99": 1327.2670409999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 75.90216099999999,
                    "min": 40.189771,
                    "p50": 65.03107899999999,
                    "p95": 75.90216099999999,
                    "p99": 75.90216099999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 133.90320499999999,
                    "min": 76.922583,
                    "p50": 117.891071,
                    "p95": 133.90320499999999,
                    "p99": 133.90320499999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 731.495353,
                    "min": 573.46296,
                    "p50": 662.239462,
                    "p95": 731.495353,
                    "p99": 731.495353,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 527.496102,
                    "min": 436.160191,
                    "p50": 511.400876,
                    "p95": 527.496102,
                    "p99": 527.496102,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 453.327447,
                    "min": 373.432187,
                    "p50": 434.147738,
                    "p95": 453.327447,
                    "p99": 453.327447,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 605.3426109999999,
                    "min": 415.22941199999997,
                    "p50": 546.07794,
                    "p95": 605.3426109999999,
                    "p99": 605.3426109999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 287.25629599999996,
                    "min": 230.15186799999998,
                    "p50": 260.315353,
                    "p95": 287.25629599999996,
                    "p99": 287.25629599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1327.492645,
                    "min": 1199.552364,
                    "p50": 1243.7611,
                    "p95": 1327.492645,
                    "p99": 1327.492645,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 834.3888539999999,
                    "min": 725.5610889999999,
                    "p50": 769.970617,
                    "p95": 834.3888539999999,
                    "p99": 834.3888539999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 573.9548639999999,
                    "min": 546.181074,
                    "p50": 556.541755,
                    "p95": 573.9548639999999,
                    "p99": 573.9548639999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 541.388774,
                    "min": 501.939775,
                    "p50": 516.304858,
                    "p95": 541.388774,
                    "p99": 541.388774,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 369.534025,
                    "min": 312.094144,
                    "p50": 322.891777,
                    "p95": 369.534025,
                    "p99": 369.534025,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 865.42783,
                    "min": 819.624344,
                    "p50": 827.637741,
                    "p95": 865.42783,
                    "p99": 865.42783,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 199.07749099999998,
                    "min": 126.93118799999999,
                    "p50": 165.698575,
                    "p95": 199.07749099999998,
                    "p99": 199.07749099999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 717.840423,
                    "min": 625.816418,
                    "p50": 639.807639,
                    "p95": 717.840423,
                    "p99": 717.840423,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 360.563019,
                    "min": 345.547054,
                    "p50": 353.980282,
                    "p95": 360.563019,
                    "p99": 360.563019,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 306.015983,
                    "min": 271.614675,
                    "p50": 284.299717,
                    "p95": 306.015983,
                    "p99": 306.015983,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.74473799999998,
                    "min": 196.304209,
                    "p50": 206.37675299999998,
                    "p95": 210.74473799999998,
                    "p99": 210.74473799999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 649.604709,
                    "min": 589.925468,
                    "p50": 597.969373,
                    "p95": 649.604709,
                    "p99": 649.604709,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1173.765738,
                    "min": 1107.35262,
                    "p50": 1130.831717,
                    "p95": 1173.765738,
                    "p99": 1173.765738,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 275.666474,
                    "min": 195.60114099999998,
                    "p50": 233.093008,
                    "p95": 275.666474,
                    "p99": 275.666474,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 870.8447649999999,
                    "min": 773.208368,
                    "p50": 786.9128539999999,
                    "p95": 870.8447649999999,
                    "p99": 870.8447649999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 894.414323,
                    "min": 833.001996,
                    "p50": 852.2092299999999,
                    "p95": 894.414323,
                    "p99": 894.414323,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.17738499999996,
                    "min": 288.125761,
                    "p50": 296.155511,
                    "p95": 307.17738499999996,
                    "p99": 307.17738499999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 777.160476,
                    "min": 717.120907,
                    "p50": 735.2199109999999,
                    "p95": 777.160476,
                    "p99": 777.160476,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1017.8709389999999,
                    "min": 954.0208819999999,
                    "p50": 992.221111,
                    "p95": 1017.8709389999999,
                    "p99": 1017.8709389999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 467.50206,
                    "min": 398.82915299999996,
                    "p50": 444.632179,
                    "p95": 467.50206,
                    "p99": 467.50206,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 609.7314759999999,
                    "min": 595.316051,
                    "p50": 605.8981709999999,
                    "p95": 609.7314759999999,
                    "p99": 609.7314759999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 588.498977,
                    "min": 535.486998,
                    "p50": 545.499328,
                    "p95": 588.498977,
                    "p99": 588.498977,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1358.846378,
                    "min": 1258.894229,
                    "p50": 1288.976854,
                    "p95": 1358.846378,
                    "p99": 1358.846378,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 705.5500979999999,
                    "min": 651.409005,
                    "p50": 665.5768439999999,
                    "p95": 705.5500979999999,
                    "p99": 705.5500979999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 500.367438,
                    "min": 468.169606,
                    "p50": 474.183412,
                    "p95": 500.367438,
                    "p99": 500.367438,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 357.85241099999996,
                    "min": 345.348431,
                    "p50": 356.254597,
                    "p95": 357.85241099999996,
                    "p99": 357.85241099999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 985.277016,
                    "min": 897.9640899999999,
                    "p50": 903.6370119999999,
                    "p95": 985.277016,
                    "p99": 985.277016,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 128.333027,
                    "min": 106.424711,
                    "p50": 113.016027,
                    "p95": 128.333027,
                    "p99": 128.333027,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 40.880945,
                    "min": 27.107042999999997,
                    "p50": 27.658936999999998,
                    "p95": 40.880945,
                    "p99": 40.880945,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 244.175741,
                    "min": 202.658175,
                    "p50": 222.80962,
                    "p95": 244.175741,
                    "p99": 244.175741,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 429.57939,
                    "min": 361.051173,
                    "p50": 402.322118,
                    "p95": 429.57939,
                    "p99": 429.57939,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 113.028949,
                    "min": 51.597572,
                    "p50": 93.332747,
                    "p95": 113.028949,
                    "p99": 113.028949,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 54.551316,
                    "min": 42.957709,
                    "p50": 48.990156,
                    "p95": 54.551316,
                    "p99": 54.551316,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 205.518866,
                    "min": 157.06323,
                    "p50": 176.660687,
                    "p95": 205.518866,
                    "p99": 205.518866,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 48.507284,
                    "min": 32.0175,
                    "p50": 34.032723,
                    "p95": 48.507284,
                    "p99": 48.507284,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 42.016974999999995,
                    "min": 26.912958,
                    "p50": 40.461394999999996,
                    "p95": 42.016974999999995,
                    "p99": 42.016974999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 115.532281,
                    "min": 102.497243,
                    "p50": 107.887092,
                    "p95": 115.532281,
                    "p99": 115.532281,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 190.917476,
                    "min": 140.03086299999998,
                    "p50": 165.189086,
                    "p95": 190.917476,
                    "p99": 190.917476,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 29.323027,
                    "min": 26.773871,
                    "p50": 27.191968,
                    "p95": 29.323027,
                    "p99": 29.323027,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 85.80039099999999,
                    "min": 71.091337,
                    "p50": 78.509012,
                    "p95": 85.80039099999999,
                    "p99": 85.80039099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 108.737128,
                    "min": 93.316913,
                    "p50": 97.482973,
                    "p95": 108.737128,
                    "p99": 108.737128,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 70.09971,
                    "min": 47.356558,
                    "p50": 53.142402,
                    "p95": 70.09971,
                    "p99": 70.09971,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 63.357454,
                    "min": 50.590900999999995,
                    "p50": 58.147254,
                    "p95": 63.357454,
                    "p99": 63.357454,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 100.801672,
                    "min": 73.36222,
                    "p50": 87.374772,
                    "p95": 100.801672,
                    "p99": 100.801672,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 69.867077,
                    "min": 35.640238,
                    "p50": 64.56605499999999,
                    "p95": 69.867077,
                    "p99": 69.867077,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 77.14369599999999,
                    "min": 65.41567599999999,
                    "p50": 70.49850599999999,
                    "p95": 77.14369599999999,
                    "p99": 77.14369599999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 347.398961,
                    "min": 287.01487,
                    "p50": 318.593769,
                    "p95": 347.398961,
                    "p99": 347.398961,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 208.28031099999998,
                    "min": 183.148011,
                    "p50": 195.63609,
                    "p95": 208.28031099999998,
                    "p99": 208.28031099999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 499.571824,
                    "min": 447.549405,
                    "p50": 454.51397599999996,
                    "p95": 499.571824,
                    "p99": 499.571824,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 226.73197299999998,
                    "min": 223.318342,
                    "p50": 225.766238,
                    "p95": 226.73197299999998,
                    "p99": 226.73197299999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 470.92875599999996,
                    "min": 366.33759499999996,
                    "p50": 368.57066199999997,
                    "p95": 470.92875599999996,
                    "p99": 470.92875599999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1588.988617,
                    "min": 1523.46591,
                    "p50": 1558.028532,
                    "p95": 1588.988617,
                    "p99": 1588.988617,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 387.483722,
                    "min": 336.518552,
                    "p50": 342.240577,
                    "p95": 387.483722,
                    "p99": 387.483722,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 503.99841799999996,
                    "min": 416.692642,
                    "p50": 445.12931799999996,
                    "p95": 503.99841799999996,
                    "p99": 503.99841799999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 605.1005269999999,
                    "min": 547.345933,
                    "p50": 564.576873,
                    "p95": 605.1005269999999,
                    "p99": 605.1005269999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 287.643285,
                    "min": 267.657605,
                    "p50": 283.518111,
                    "p95": 287.643285,
                    "p99": 287.643285,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1255.290413,
                    "min": 1162.319599,
                    "p50": 1228.219404,
                    "p95": 1255.290413,
                    "p99": 1255.290413,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 258.64909,
                    "min": 246.888816,
                    "p50": 253.45819999999998,
                    "p95": 258.64909,
                    "p99": 258.64909,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 464.108161,
                    "min": 393.28336199999995,
                    "p50": 419.21165299999996,
                    "p95": 464.108161,
                    "p99": 464.108161,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 962.8722759999999,
                    "min": 866.327733,
                    "p50": 922.6685659999999,
                    "p95": 962.8722759999999,
                    "p99": 962.8722759999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 174.560002,
                    "min": 166.338288,
                    "p50": 167.280913,
                    "p95": 174.560002,
                    "p99": 174.560002,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3138.1989949999997,
                    "min": 2961.5567069999997,
                    "p50": 3052.5798369999998,
                    "p95": 3138.1989949999997,
                    "p99": 3138.1989949999997,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.681646,
                    "min": 132.399049,
                    "p50": 139.099424,
                    "p95": 187.681646,
                    "p99": 187.681646,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 528.966701,
                    "min": 477.79218799999995,
                    "p50": 489.917651,
                    "p95": 528.966701,
                    "p99": 528.966701,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 681.081087,
                    "min": 628.745147,
                    "p50": 645.245623,
                    "p95": 681.081087,
                    "p99": 681.081087,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 37.375397,
                    "min": 33.376149999999996,
                    "p50": 34.676065,
                    "p95": 37.375397,
                    "p99": 37.375397,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 55.904976999999995,
                    "min": 40.271651999999996,
                    "p50": 47.656481,
                    "p95": 55.904976999999995,
                    "p99": 55.904976999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.633861,
                    "min": 25.133377,
                    "p50": 26.817549,
                    "p95": 27.633861,
                    "p99": 27.633861,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 43.089645999999995,
                    "min": 26.386022,
                    "p50": 39.692786999999996,
                    "p95": 43.089645999999995,
                    "p99": 43.089645999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 49.802102999999995,
                    "min": 28.577972,
                    "p50": 47.403323,
                    "p95": 49.802102999999995,
                    "p99": 49.802102999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 139.541668,
                    "min": 102.35713799999999,
                    "p50": 116.30567099999999,
                    "p95": 139.541668,
                    "p99": 139.541668,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 62.095454999999994,
                    "min": 47.26733,
                    "p50": 55.076789,
                    "p95": 62.095454999999994,
                    "p99": 62.095454999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 40.505873,
                    "min": 27.232158,
                    "p50": 32.788208,
                    "p95": 40.505873,
                    "p99": 40.505873,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 197.296686,
                    "min": 136.59617599999999,
                    "p50": 162.75715399999999,
                    "p95": 197.296686,
                    "p99": 197.296686,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 40.073093,
                    "min": 30.318113,
                    "p50": 36.337089999999996,
                    "p95": 40.073093,
                    "p99": 40.073093,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.627435,
                    "min": 26.467069,
                    "p50": 27.283649999999998,
                    "p95": 28.627435,
                    "p99": 28.627435,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 74.136754,
                    "min": 32.682409,
                    "p50": 51.279317999999996,
                    "p95": 74.136754,
                    "p99": 74.136754,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 36.49868,
                    "min": 28.484464,
                    "p50": 29.952683999999998,
                    "p95": 36.49868,
                    "p99": 36.49868,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 64.447678,
                    "min": 51.730689999999996,
                    "p50": 63.35957,
                    "p95": 64.447678,
                    "p99": 64.447678,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 285.815139,
                    "min": 247.392651,
                    "p50": 262.445945,
                    "p95": 285.815139,
                    "p99": 285.815139,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 46.000260999999995,
                    "min": 39.088114999999995,
                    "p50": 41.525914,
                    "p95": 46.000260999999995,
                    "p99": 46.000260999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 145.334089,
                    "min": 99.118406,
                    "p50": 129.077132,
                    "p95": 145.334089,
                    "p99": 145.334089,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 81.028618,
                    "min": 66.948363,
                    "p50": 75.12088299999999,
                    "p95": 81.028618,
                    "p99": 81.028618,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 46.519307,
                    "min": 43.967622,
                    "p50": 45.056128,
                    "p95": 46.519307,
                    "p99": 46.519307,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 71.31936499999999,
                    "min": 61.7001,
                    "p50": 62.816489,
                    "p95": 71.31936499999999,
                    "p99": 71.31936499999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.173804,
                    "min": 26.598474,
                    "p50": 26.802611,
                    "p95": 27.173804,
                    "p99": 27.173804,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.359954,
                    "min": 22.227784,
                    "p50": 26.768932,
                    "p95": 27.359954,
                    "p99": 27.359954,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.402386999999997,
                    "min": 21.907363,
                    "p50": 26.961344999999998,
                    "p95": 28.402386999999997,
                    "p99": 28.402386999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 30.217938999999998,
                    "min": 26.296324,
                    "p50": 26.862181,
                    "p95": 30.217938999999998,
                    "p99": 30.217938999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.091331999999998,
                    "min": 26.567715999999997,
                    "p50": 26.700302999999998,
                    "p95": 31.091331999999998,
                    "p99": 31.091331999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 30.938771,
                    "min": 24.739365,
                    "p50": 26.761229999999998,
                    "p95": 30.938771,
                    "p99": 30.938771,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.976105,
                    "min": 26.578616999999998,
                    "p50": 26.891167,
                    "p95": 26.976105,
                    "p99": 26.976105,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 26.853181,
                    "min": 26.327835,
                    "p50": 26.611373999999998,
                    "p95": 26.853181,
                    "p99": 26.853181,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 61.106848,
                    "min": 51.029939,
                    "p50": 54.917344,
                    "p95": 61.106848,
                    "p99": 61.106848,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.778463,
                    "min": 20.655116,
                    "p50": 26.690503,
                    "p95": 27.778463,
                    "p99": 27.778463,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 48.973824,
                    "min": 39.63725,
                    "p50": 39.985239,
                    "p95": 48.973824,
                    "p99": 48.973824,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 37.67463,
                    "min": 28.011917,
                    "p50": 29.80125,
                    "p95": 37.67463,
                    "p99": 37.67463,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 34.263946,
                    "min": 25.182313999999998,
                    "p50": 26.946158,
                    "p95": 34.263946,
                    "p99": 34.263946,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 32.755694,
                    "min": 20.670158,
                    "p50": 26.79795,
                    "p95": 32.755694,
                    "p99": 32.755694,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 122.77799399999999,
                    "min": 98.84890299999999,
                    "p50": 112.96037199999999,
                    "p95": 122.77799399999999,
                    "p99": 122.77799399999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.077862999999997,
                    "min": 26.007672,
                    "p50": 26.884916999999998,
                    "p95": 27.077862999999997,
                    "p99": 27.077862999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 30.190942999999997,
                    "min": 24.828926,
                    "p50": 26.976316999999998,
                    "p95": 30.190942999999997,
                    "p99": 30.190942999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 33.488687,
                    "min": 26.449949,
                    "p50": 27.019417999999998,
                    "p95": 33.488687,
                    "p99": 33.488687,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 398.701005,
                    "min": 340.283389,
                    "p50": 350.229519,
                    "p95": 398.701005,
                    "p99": 398.701005,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.72061499999998,
                    "min": 136.87354399999998,
                    "p50": 139.978762,
                    "p95": 144.72061499999998,
                    "p99": 144.72061499999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3131.368294,
                    "min": 3031.278221,
                    "p50": 3092.143083,
                    "p95": 3131.368294,
                    "p99": 3131.368294,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 707.0204779999999,
                    "min": 643.578792,
                    "p50": 670.623109,
                    "p95": 707.0204779999999,
                    "p99": 707.0204779999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 322.468259,
                    "min": 250.55828,
                    "p50": 258.96887399999997,
                    "p95": 322.468259,
                    "p99": 322.468259,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 173.694078,
                    "min": 168.169453,
                    "p50": 170.318628,
                    "p95": 173.694078,
                    "p99": 173.694078,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 278.729805,
                    "min": 219.75577199999998,
                    "p50": 230.260153,
                    "p95": 278.729805,
                    "p99": 278.729805,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 999.355189,
                    "min": 926.167696,
                    "p50": 960.437252,
                    "p95": 999.355189,
                    "p99": 999.355189,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 494.59979899999996,
                    "min": 428.864991,
                    "p50": 441.129467,
                    "p95": 494.59979899999996,
                    "p99": 494.59979899999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 407.44805099999996,
                    "min": 369.944993,
                    "p50": 379.152196,
                    "p95": 407.44805099999996,
                    "p99": 407.44805099999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1310.834102,
                    "min": 1223.086713,
                    "p50": 1287.2431649999999,
                    "p95": 1310.834102,
                    "p99": 1310.834102,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1590.461916,
                    "min": 1499.032862,
                    "p50": 1565.81746,
                    "p95": 1590.461916,
                    "p99": 1590.461916,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 513.083261,
                    "min": 458.01935499999996,
                    "p50": 470.97547799999995,
                    "p95": 513.083261,
                    "p99": 513.083261,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 211.249168,
                    "min": 197.03322899999998,
                    "p50": 199.570323,
                    "p95": 211.249168,
                    "p99": 211.249168,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 596.277028,
                    "min": 556.69162,
                    "p50": 573.41274,
                    "p95": 596.277028,
                    "p99": 596.277028,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 379.32010399999996,
                    "min": 313.114269,
                    "p50": 337.954232,
                    "p95": 379.32010399999996,
                    "p99": 379.32010399999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 454.825623,
                    "min": 400.658353,
                    "p50": 407.612954,
                    "p95": 454.825623,
                    "p99": 454.825623,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 569.439001,
                    "min": 481.18240799999995,
                    "p50": 526.456228,
                    "p95": 569.439001,
                    "p99": 569.439001,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 330.167355,
                    "min": 284.652673,
                    "p50": 289.888649,
                    "p95": 330.167355,
                    "p99": 330.167355,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1917.243845,
                    "min": 1703.9117079999999,
                    "p50": 1867.610494,
                    "p95": 1917.243845,
                    "p99": 1917.243845,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.82941,
                    "min": 258.342079,
                    "p50": 266.69021299999997,
                    "p95": 322.82941,
                    "p99": 322.82941,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 645.679218,
                    "min": 572.1155,
                    "p50": 584.29541,
                    "p95": 645.679218,
                    "p99": 645.679218,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 891.124015,
                    "min": 842.390728,
                    "p50": 859.282057,
                    "p95": 891.124015,
                    "p99": 891.124015,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 399.005819,
                    "min": 300.298005,
                    "p50": 314.983497,
                    "p95": 399.005819,
                    "p99": 399.005819,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 980.361408,
                    "min": 877.3726029999999,
                    "p50": 935.328236,
                    "p95": 980.361408,
                    "p99": 980.361408,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 572.3293199999999,
                    "min": 461.393644,
                    "p50": 485.408395,
                    "p95": 572.3293199999999,
                    "p99": 572.3293199999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1130.132668,
                    "min": 1022.5090009999999,
                    "p50": 1050.167316,
                    "p95": 1130.132668,
                    "p99": 1130.132668,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 414.244554,
                    "min": 367.771911,
                    "p50": 401.85118,
                    "p95": 414.244554,
                    "p99": 414.244554,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 684.778652,
                    "min": 600.199928,
                    "p50": 640.537832,
                    "p95": 684.778652,
                    "p99": 684.778652,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2465.5796809999997,
                    "min": 2298.869513,
                    "p50": 2323.491932,
                    "p95": 2465.5796809999997,
                    "p99": 2465.5796809999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 723.066753,
                    "min": 644.697048,
                    "p50": 655.552912,
                    "p95": 723.066753,
                    "p99": 723.066753,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 527.606604,
                    "min": 437.697657,
                    "p50": 476.89070599999997,
                    "p95": 527.606604,
                    "p99": 527.606604,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 796.423179,
                    "min": 687.9911609999999,
                    "p50": 750.718723,
                    "p95": 796.423179,
                    "p99": 796.423179,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 262.176117,
                    "min": 209.150837,
                    "p50": 250.479413,
                    "p95": 262.176117,
                    "p99": 262.176117,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 896.2654829999999,
                    "min": 771.9028099999999,
                    "p50": 827.126486,
                    "p95": 896.2654829999999,
                    "p99": 896.2654829999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1308.288613,
                    "min": 1203.2733879999998,
                    "p50": 1241.3912659999999,
                    "p95": 1308.288613,
                    "p99": 1308.288613,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3073.57823,
                    "min": 2796.785032,
                    "p50": 2880.339658,
                    "p95": 3073.57823,
                    "p99": 3073.57823,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 283.74609799999996,
                    "min": 251.123168,
                    "p50": 264.908318,
                    "p95": 283.74609799999996,
                    "p99": 283.74609799999996,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 525.89112,
                    "min": 467.571966,
                    "p50": 483.37253999999996,
                    "p95": 525.89112,
                    "p99": 525.89112,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 417.837581,
                    "min": 395.727844,
                    "p50": 403.367041,
                    "p95": 417.837581,
                    "p99": 417.837581,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 802.845158,
                    "min": 745.471688,
                    "p50": 762.328208,
                    "p95": 802.845158,
                    "p99": 802.845158,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 711.157953,
                    "min": 678.874117,
                    "p50": 692.5696479999999,
                    "p95": 711.157953,
                    "p99": 711.157953,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 957.688816,
                    "min": 892.808806,
                    "p50": 912.8883559999999,
                    "p95": 957.688816,
                    "p99": 957.688816,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1115.995831,
                    "min": 1100.732746,
                    "p50": 1109.558881,
                    "p95": 1115.995831,
                    "p99": 1115.995831,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1011.881988,
                    "min": 960.1349399999999,
                    "p50": 968.7187429999999,
                    "p95": 1011.881988,
                    "p99": 1011.881988,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 869.0832839999999,
                    "min": 815.8924989999999,
                    "p50": 818.553757,
                    "p95": 869.0832839999999,
                    "p99": 869.0832839999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1538.721519,
                    "min": 1455.2609889999999,
                    "p50": 1458.293316,
                    "p95": 1538.721519,
                    "p99": 1538.721519,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 577.937051,
                    "min": 539.011443,
                    "p50": 545.283019,
                    "p95": 577.937051,
                    "p99": 577.937051,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 335.725502,
                    "min": 322.998172,
                    "p50": 331.085987,
                    "p95": 335.725502,
                    "p99": 335.725502,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1331.424831,
                    "min": 1276.2216509999998,
                    "p50": 1316.2127329999998,
                    "p95": 1331.424831,
                    "p99": 1331.424831,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 622.355063,
                    "min": 606.849828,
                    "p50": 617.443853,
                    "p95": 622.355063,
                    "p99": 622.355063,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1063.36689,
                    "min": 1005.9853149999999,
                    "p50": 1034.819105,
                    "p95": 1063.36689,
                    "p99": 1063.36689,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 309.611288,
                    "min": 288.861387,
                    "p50": 297.90189799999996,
                    "p95": 309.611288,
                    "p99": 309.611288,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 678.364347,
                    "min": 608.860823,
                    "p50": 636.312998,
                    "p95": 678.364347,
                    "p99": 678.364347,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 956.0445609999999,
                    "min": 866.923178,
                    "p50": 881.926845,
                    "p95": 956.0445609999999,
                    "p99": 956.0445609999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1826.725503,
                    "min": 1687.396078,
                    "p50": 1732.734606,
                    "p95": 1826.725503,
                    "p99": 1826.725503,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 513.197857,
                    "min": 496.492597,
                    "p50": 505.91222999999997,
                    "p95": 513.197857,
                    "p99": 513.197857,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 295.883334,
                    "min": 249.91418,
                    "p50": 264.00523,
                    "p95": 295.883334,
                    "p99": 295.883334,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 229.16555599999998,
                    "min": 216.584575,
                    "p50": 219.581954,
                    "p95": 229.16555599999998,
                    "p99": 229.16555599999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 568.434838,
                    "min": 532.809171,
                    "p50": 552.363929,
                    "p95": 568.434838,
                    "p99": 568.434838,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1368.223479,
                    "min": 1271.7967859999999,
                    "p50": 1290.3473649999999,
                    "p95": 1368.223479,
                    "p99": 1368.223479,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 877.905487,
                    "min": 766.694698,
                    "p50": 801.087943,
                    "p95": 877.905487,
                    "p99": 877.905487,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 718.043272,
                    "min": 666.22217,
                    "p50": 680.3336069999999,
                    "p95": 718.043272,
                    "p99": 718.043272,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 426.736022,
                    "min": 366.81625499999996,
                    "p50": 383.523222,
                    "p95": 426.736022,
                    "p99": 426.736022,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 509.75206599999996,
                    "min": 460.63255,
                    "p50": 469.153935,
                    "p95": 509.75206599999996,
                    "p99": 509.75206599999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 365.33849,
                    "min": 336.610323,
                    "p50": 346.468892,
                    "p95": 365.33849,
                    "p99": 365.33849,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 206.25515199999998,
                    "min": 174.71070899999998,
                    "p50": 176.622209,
                    "p95": 206.25515199999998,
                    "p99": 206.25515199999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 634.424541,
                    "min": 581.973157,
                    "p50": 599.79553,
                    "p95": 634.424541,
                    "p99": 634.424541,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 461.974877,
                    "min": 415.758608,
                    "p50": 424.85909499999997,
                    "p95": 461.974877,
                    "p99": 461.974877,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 684.77914,
                    "min": 653.992271,
                    "p50": 666.538189,
                    "p95": 684.77914,
                    "p99": 684.77914,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2059.878503,
                    "min": 1998.788891,
                    "p50": 2022.982842,
                    "p95": 2059.878503,
                    "p99": 2059.878503,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4136.8614259999995,
                    "min": 4039.439211,
                    "p50": 4121.104871,
                    "p95": 4136.8614259999995,
                    "p99": 4136.8614259999995,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2287.104329,
                    "min": 2232.90942,
                    "p50": 2250.749215,
                    "p95": 2287.104329,
                    "p99": 2287.104329,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 6013.527228999999,
                    "min": 5916.760418,
                    "p50": 5970.81099,
                    "p95": 6013.527228999999,
                    "p99": 6013.527228999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1311.246862,
                    "min": 1261.4082389999999,
                    "p50": 1264.566423,
                    "p95": 1311.246862,
                    "p99": 1311.246862,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1905.1990059999998,
                    "min": 1848.855987,
                    "p50": 1870.271143,
                    "p95": 1905.1990059999998,
                    "p99": 1905.1990059999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7943.538017,
                    "min": 7879.484240999999,
                    "p50": 7912.317166999999,
                    "p95": 7943.538017,
                    "p99": 7943.538017,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1082.726696,
                    "min": 1053.183865,
                    "p50": 1078.288569,
                    "p95": 1082.726696,
                    "p99": 1082.726696,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2729.171145,
                    "min": 2662.5602879999997,
                    "p50": 2705.135471,
                    "p95": 2729.171145,
                    "p99": 2729.171145,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1451.748349,
                    "min": 1429.199739,
                    "p50": 1439.5554439999999,
                    "p95": 1451.748349,
                    "p99": 1451.748349,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 883.235828,
                    "min": 844.3178919999999,
                    "p50": 861.444535,
                    "p95": 883.235828,
                    "p99": 883.235828,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3122.6576529999998,
                    "min": 3038.143843,
                    "p50": 3098.1748989999996,
                    "p95": 3122.6576529999998,
                    "p99": 3122.6576529999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2930.4411769999997,
                    "min": 2853.87572,
                    "p50": 2886.1798799999997,
                    "p95": 2930.4411769999997,
                    "p99": 2930.4411769999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3599.8089,
                    "min": 3487.3414169999996,
                    "p50": 3543.051629,
                    "p95": 3599.8089,
                    "p99": 3599.8089,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1647.9020879999998,
                    "min": 1612.90302,
                    "p50": 1642.809926,
                    "p95": 1647.9020879999998,
                    "p99": 1647.9020879999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2530.735691,
                    "min": 2447.3927369999997,
                    "p50": 2466.0522029999997,
                    "p95": 2530.735691,
                    "p99": 2530.735691,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 771.094342,
                    "min": 707.845147,
                    "p50": 714.642392,
                    "p95": 771.094342,
                    "p99": 771.094342,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 572.3131539999999,
                    "min": 520.7566909999999,
                    "p50": 530.023544,
                    "p95": 572.3131539999999,
                    "p99": 572.3131539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1048.25912,
                    "min": 983.165994,
                    "p50": 1036.1324379999999,
                    "p95": 1048.25912,
                    "p99": 1048.25912,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1534.587579,
                    "min": 1460.79566,
                    "p50": 1484.465747,
                    "p95": 1534.587579,
                    "p99": 1534.587579,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4927.031559999999,
                    "min": 4821.32639,
                    "p50": 4848.558287,
                    "p95": 4927.031559999999,
                    "p99": 4927.031559999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2016.045561,
                    "min": 1935.875178,
                    "p50": 1973.037243,
                    "p95": 2016.045561,
                    "p99": 2016.045561,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 615.5847689999999,
                    "min": 567.270838,
                    "p50": 585.5048049999999,
                    "p95": 615.5847689999999,
                    "p99": 615.5847689999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 214.01352599999998,
                    "min": 192.79254699999998,
                    "p50": 193.97642499999998,
                    "p95": 214.01352599999998,
                    "p99": 214.01352599999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2509.281136,
                    "min": 2394.839275,
                    "p50": 2434.363638,
                    "p95": 2509.281136,
                    "p99": 2509.281136,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 404.73701,
                    "min": 366.769506,
                    "p50": 384.111533,
                    "p95": 404.73701,
                    "p99": 404.73701,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 436.782853,
                    "min": 406.56249499999996,
                    "p50": 429.728637,
                    "p95": 436.782853,
                    "p99": 436.782853,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 490.960942,
                    "min": 461.09804199999996,
                    "p50": 478.913208,
                    "p95": 490.960942,
                    "p99": 490.960942,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 960.454542,
                    "min": 864.5498,
                    "p50": 879.808818,
                    "p95": 960.454542,
                    "p99": 960.454542,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 301.019612,
                    "min": 286.045353,
                    "p50": 289.109002,
                    "p95": 301.019612,
                    "p99": 301.019612,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 411.19245,
                    "min": 329.32836199999997,
                    "p50": 334.640806,
                    "p95": 411.19245,
                    "p99": 411.19245,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 811.4391529999999,
                    "min": 755.034865,
                    "p50": 774.994248,
                    "p95": 811.4391529999999,
                    "p99": 811.4391529999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 667.614504,
                    "min": 604.996581,
                    "p50": 628.3679539999999,
                    "p95": 667.614504,
                    "p99": 667.614504,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 265.314932,
                    "min": 238.367863,
                    "p50": 241.335309,
                    "p95": 265.314932,
                    "p99": 265.314932,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 711.898792,
                    "min": 649.64924,
                    "p50": 666.447308,
                    "p95": 711.898792,
                    "p99": 711.898792,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2113.086193,
                    "min": 2028.994849,
                    "p50": 2061.614669,
                    "p95": 2113.086193,
                    "p99": 2113.086193,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 888.312062,
                    "min": 850.1256629999999,
                    "p50": 861.066251,
                    "p95": 888.312062,
                    "p99": 888.312062,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 665.401744,
                    "min": 617.556074,
                    "p50": 628.061441,
                    "p95": 665.401744,
                    "p99": 665.401744,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1487.929435,
                    "min": 1402.351383,
                    "p50": 1426.8117069999998,
                    "p95": 1487.929435,
                    "p99": 1487.929435,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1020.68742,
                    "min": 964.431554,
                    "p50": 977.144546,
                    "p95": 1020.68742,
                    "p99": 1020.68742,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4729.468124,
                    "min": 4624.355743,
                    "p50": 4669.978391,
                    "p95": 4729.468124,
                    "p99": 4729.468124,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1332.4001719999999,
                    "min": 1297.668189,
                    "p50": 1311.508685,
                    "p95": 1332.4001719999999,
                    "p99": 1332.4001719999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 746.770001,
                    "min": 726.370102,
                    "p50": 740.800116,
                    "p95": 746.770001,
                    "p99": 746.770001,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1586.467042,
                    "min": 1509.1022229999999,
                    "p50": 1559.632721,
                    "p95": 1586.467042,
                    "p99": 1586.467042,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3620.502508,
                    "min": 3497.058876,
                    "p50": 3557.639761,
                    "p95": 3620.502508,
                    "p99": 3620.502508,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1870.308852,
                    "min": 1751.052952,
                    "p50": 1799.705417,
                    "p95": 1870.308852,
                    "p99": 1870.308852,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2391.6295529999998,
                    "min": 2313.842059,
                    "p50": 2355.794564,
                    "p95": 2391.6295529999998,
                    "p99": 2391.6295529999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 408.957453,
                    "min": 389.424766,
                    "p50": 399.43773899999997,
                    "p95": 408.957453,
                    "p99": 408.957453,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1717.7968309999999,
                    "min": 1643.185434,
                    "p50": 1670.598139,
                    "p95": 1717.7968309999999,
                    "p99": 1717.7968309999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 590.735774,
                    "min": 496.335134,
                    "p50": 509.47347299999996,
                    "p95": 590.735774,
                    "p99": 590.735774,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1250.123466,
                    "min": 1157.380815,
                    "p50": 1207.569832,
                    "p95": 1250.123466,
                    "p99": 1250.123466,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1167.7087179999999,
                    "min": 1039.8546569999999,
                    "p50": 1086.8043089999999,
                    "p95": 1167.7087179999999,
                    "p99": 1167.7087179999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1836.938798,
                    "min": 1743.789237,
                    "p50": 1803.568053,
                    "p95": 1836.938798,
                    "p99": 1836.938798,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 521.01675,
                    "min": 502.57291799999996,
                    "p50": 511.447594,
                    "p95": 521.01675,
                    "p99": 521.01675,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1142.9529949999999,
                    "min": 1069.529434,
                    "p50": 1092.983579,
                    "p95": 1142.9529949999999,
                    "p99": 1142.9529949999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1612.156025,
                    "min": 1522.132744,
                    "p50": 1536.1410919999998,
                    "p95": 1612.156025,
                    "p99": 1612.156025,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1251.94352,
                    "min": 1187.846812,
                    "p50": 1197.278817,
                    "p95": 1251.94352,
                    "p99": 1251.94352,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1373.8146,
                    "min": 1298.080992,
                    "p50": 1314.694554,
                    "p95": 1373.8146,
                    "p99": 1373.8146,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2379.706378,
                    "min": 2309.007767,
                    "p50": 2332.16759,
                    "p95": 2379.706378,
                    "p99": 2379.706378,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3523.8749319999997,
                    "min": 3466.000929,
                    "p50": 3507.727993,
                    "p95": 3523.8749319999997,
                    "p99": 3523.8749319999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1517.788165,
                    "min": 1425.645064,
                    "p50": 1483.719077,
                    "p95": 1517.788165,
                    "p99": 1517.788165,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 645.1521379999999,
                    "min": 615.6398899999999,
                    "p50": 629.368912,
                    "p95": 645.1521379999999,
                    "p99": 645.1521379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 449.59455299999996,
                    "min": 389.688691,
                    "p50": 399.587895,
                    "p95": 449.59455299999996,
                    "p99": 449.59455299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 791.7671849999999,
                    "min": 725.3889419999999,
                    "p50": 745.4026759999999,
                    "p95": 791.7671849999999,
                    "p99": 791.7671849999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2144.5120589999997,
                    "min": 2036.8186309999999,
                    "p50": 2085.273337,
                    "p95": 2144.5120589999997,
                    "p99": 2144.5120589999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 895.5782039999999,
                    "min": 847.6742899999999,
                    "p50": 856.4379769999999,
                    "p95": 895.5782039999999,
                    "p99": 895.5782039999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1694.6721519999999,
                    "min": 1649.0846689999998,
                    "p50": 1654.630271,
                    "p95": 1694.6721519999999,
                    "p99": 1694.6721519999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1016.158194,
                    "min": 962.53685,
                    "p50": 968.583586,
                    "p95": 1016.158194,
                    "p99": 1016.158194,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10923.171387,
                    "min": 10742.378456,
                    "p50": 10850.188114999999,
                    "p95": 10923.171387,
                    "p99": 10923.171387,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1573.306508,
                    "min": 1542.065328,
                    "p50": 1560.314382,
                    "p95": 1573.306508,
                    "p99": 1573.306508,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5663.090875999999,
                    "min": 5371.319458999999,
                    "p50": 5437.960484,
                    "p95": 5663.090875999999,
                    "p99": 5663.090875999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 840.575438,
                    "min": 790.961991,
                    "p50": 807.5952179999999,
                    "p95": 840.575438,
                    "p99": 840.575438,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 486.47572299999996,
                    "min": 478.121058,
                    "p50": 483.999714,
                    "p95": 486.47572299999996,
                    "p99": 486.47572299999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1400.296085,
                    "min": 1330.852613,
                    "p50": 1365.362114,
                    "p95": 1400.296085,
                    "p99": 1400.296085,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4419.147871,
                    "min": 4327.988139,
                    "p50": 4377.540562,
                    "p95": 4419.147871,
                    "p99": 4419.147871,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1692.114002,
                    "min": 1642.592758,
                    "p50": 1660.1078599999998,
                    "p95": 1692.114002,
                    "p99": 1692.114002,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1484.9096399999999,
                    "min": 1423.486209,
                    "p50": 1453.2179199999998,
                    "p95": 1484.9096399999999,
                    "p99": 1484.9096399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2050.21721,
                    "min": 1914.1711879999998,
                    "p50": 1957.188545,
                    "p95": 2050.21721,
                    "p99": 2050.21721,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 645.602304,
                    "min": 556.866367,
                    "p50": 595.599648,
                    "p95": 645.602304,
                    "p99": 645.602304,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1305.868536,
                    "min": 1219.986474,
                    "p50": 1230.084563,
                    "p95": 1305.868536,
                    "p99": 1305.868536,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 395.436993,
                    "min": 367.768646,
                    "p50": 375.481965,
                    "p95": 395.436993,
                    "p99": 395.436993,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 938.4731949999999,
                    "min": 904.3010999999999,
                    "p50": 916.13897,
                    "p95": 938.4731949999999,
                    "p99": 938.4731949999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 744.5541499999999,
                    "min": 683.26992,
                    "p50": 701.5856309999999,
                    "p95": 744.5541499999999,
                    "p99": 744.5541499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1045.98955,
                    "min": 1011.4062369999999,
                    "p50": 1027.808962,
                    "p95": 1045.98955,
                    "p99": 1045.98955,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1126.2690539999999,
                    "min": 1117.2094339999999,
                    "p50": 1120.372038,
                    "p95": 1126.2690539999999,
                    "p99": 1126.2690539999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3303.791688,
                    "min": 3242.617233,
                    "p50": 3283.571418,
                    "p95": 3303.791688,
                    "p99": 3303.791688,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2245.88309,
                    "min": 2178.93137,
                    "p50": 2230.04182,
                    "p95": 2245.88309,
                    "p99": 2245.88309,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 362.454929,
                    "min": 316.53000299999997,
                    "p50": 330.975552,
                    "p95": 362.454929,
                    "p99": 362.454929,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1985.257334,
                    "min": 1867.598859,
                    "p50": 1922.426753,
                    "p95": 1985.257334,
                    "p99": 1985.257334,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1472.21129,
                    "min": 1415.864315,
                    "p50": 1467.0626459999999,
                    "p95": 1472.21129,
                    "p99": 1472.21129,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1021.372611,
                    "min": 963.5282189999999,
                    "p50": 981.598986,
                    "p95": 1021.372611,
                    "p99": 1021.372611,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 561.8918279999999,
                    "min": 506.352034,
                    "p50": 511.871337,
                    "p95": 561.8918279999999,
                    "p99": 561.8918279999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4768.005701,
                    "min": 4634.021323999999,
                    "p50": 4715.059427,
                    "p95": 4768.005701,
                    "p99": 4768.005701,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2417.286965,
                    "min": 2334.837322,
                    "p50": 2392.716151,
                    "p95": 2417.286965,
                    "p99": 2417.286965,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 623.0197469999999,
                    "min": 597.39548,
                    "p50": 606.514378,
                    "p95": 623.0197469999999,
                    "p99": 623.0197469999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 702.9801689999999,
                    "min": 682.7310749999999,
                    "p50": 692.7235979999999,
                    "p95": 702.9801689999999,
                    "p99": 702.9801689999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 503.838437,
                    "min": 414.712656,
                    "p50": 416.824143,
                    "p95": 503.838437,
                    "p99": 503.838437,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 514.78656,
                    "min": 451.726089,
                    "p50": 469.537833,
                    "p95": 514.78656,
                    "p99": 514.78656,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 295.89403,
                    "min": 234.090541,
                    "p50": 239.94148199999998,
                    "p95": 295.89403,
                    "p99": 295.89403,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 920.749959,
                    "min": 857.783827,
                    "p50": 899.396128,
                    "p95": 920.749959,
                    "p99": 920.749959,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 565.8626489999999,
                    "min": 555.529399,
                    "p50": 557.7964549999999,
                    "p95": 565.8626489999999,
                    "p99": 565.8626489999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 820.546353,
                    "min": 734.6345699999999,
                    "p50": 757.970066,
                    "p95": 820.546353,
                    "p99": 820.546353,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 377.924561,
                    "min": 364.897018,
                    "p50": 374.031484,
                    "p95": 377.924561,
                    "p99": 377.924561,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 708.728802,
                    "min": 643.8378829999999,
                    "p50": 654.1524939999999,
                    "p95": 708.728802,
                    "p99": 708.728802,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 295.522007,
                    "min": 276.430643,
                    "p50": 282.982802,
                    "p95": 295.522007,
                    "p99": 295.522007,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 197.73594,
                    "min": 186.415683,
                    "p50": 189.008205,
                    "p95": 197.73594,
                    "p99": 197.73594,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1983.16455,
                    "min": 1909.9234059999999,
                    "p50": 1940.415939,
                    "p95": 1983.16455,
                    "p99": 1983.16455,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 952.526129,
                    "min": 903.254997,
                    "p50": 911.073403,
                    "p95": 952.526129,
                    "p99": 952.526129,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2244.0888449999998,
                    "min": 2161.035585,
                    "p50": 2205.554885,
                    "p95": 2244.0888449999998,
                    "p99": 2244.0888449999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 911.4779679999999,
                    "min": 796.292785,
                    "p50": 833.805452,
                    "p95": 911.4779679999999,
                    "p99": 911.4779679999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 744.927325,
                    "min": 688.250785,
                    "p50": 698.435522,
                    "p95": 744.927325,
                    "p99": 744.927325,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 494.047335,
                    "min": 453.01646,
                    "p50": 480.53099199999997,
                    "p95": 494.047335,
                    "p99": 494.047335,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1595.168261,
                    "min": 1539.1772999999998,
                    "p50": 1555.9281429999999,
                    "p95": 1595.168261,
                    "p99": 1595.168261,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1276.640565,
                    "min": 1215.413527,
                    "p50": 1231.871972,
                    "p95": 1276.640565,
                    "p99": 1276.640565,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3315.207439,
                    "min": 3239.920542,
                    "p50": 3279.639975,
                    "p95": 3315.207439,
                    "p99": 3315.207439,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1067.156371,
                    "min": 1001.3576009999999,
                    "p50": 1022.972457,
                    "p95": 1067.156371,
                    "p99": 1067.156371,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10867.968819,
                    "min": 10735.192158,
                    "p50": 10842.401861999999,
                    "p95": 10867.968819,
                    "p99": 10867.968819,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 596.4295149999999,
                    "min": 580.844292,
                    "p50": 588.8324739999999,
                    "p95": 596.4295149999999,
                    "p99": 596.4295149999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1476.860076,
                    "min": 1426.984992,
                    "p50": 1445.8297479999999,
                    "p95": 1476.860076,
                    "p99": 1476.860076,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1389.841475,
                    "min": 1319.7872419999999,
                    "p50": 1346.9398019999999,
                    "p95": 1389.841475,
                    "p99": 1389.841475,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4422.980977,
                    "min": 4334.463705,
                    "p50": 4395.734475,
                    "p95": 4422.980977,
                    "p99": 4422.980977,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 425.694206,
                    "min": 365.41729499999997,
                    "p50": 373.956329,
                    "p95": 425.694206,
                    "p99": 425.694206,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1704.6905419999998,
                    "min": 1643.572389,
                    "p50": 1672.2619519999998,
                    "p95": 1704.6905419999998,
                    "p99": 1704.6905419999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1166.3147239999998,
                    "min": 1122.493467,
                    "p50": 1133.694045,
                    "p95": 1166.3147239999998,
                    "p99": 1166.3147239999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5485.730407999999,
                    "min": 5323.028349,
                    "p50": 5452.872657999999,
                    "p95": 5485.730407999999,
                    "p99": 5485.730407999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 683.492934,
                    "min": 659.767596,
                    "p50": 678.009232,
                    "p95": 683.492934,
                    "p99": 683.492934,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 593.5636539999999,
                    "min": 578.131112,
                    "p50": 587.466508,
                    "p95": 593.5636539999999,
                    "p99": 593.5636539999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 926.0491129999999,
                    "min": 854.0342029999999,
                    "p50": 860.5895909999999,
                    "p95": 926.0491129999999,
                    "p99": 926.0491129999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 315.941449,
                    "min": 306.963574,
                    "p50": 312.138562,
                    "p95": 315.941449,
                    "p99": 315.941449,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 419.40183099999996,
                    "min": 394.241267,
                    "p50": 403.60087699999997,
                    "p95": 419.40183099999996,
                    "p99": 419.40183099999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 810.618959,
                    "min": 759.171202,
                    "p50": 765.09961,
                    "p95": 810.618959,
                    "p99": 810.618959,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 503.099881,
                    "min": 490.180725,
                    "p50": 495.517705,
                    "p95": 503.099881,
                    "p99": 503.099881,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 940.9751359999999,
                    "min": 892.723902,
                    "p50": 903.8957959999999,
                    "p95": 940.9751359999999,
                    "p99": 940.9751359999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 305.495075,
                    "min": 294.622098,
                    "p50": 303.431011,
                    "p95": 305.495075,
                    "p99": 305.495075,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 766.825014,
                    "min": 713.846057,
                    "p50": 722.0149839999999,
                    "p95": 766.825014,
                    "p99": 766.825014,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 566.834808,
                    "min": 550.237861,
                    "p50": 563.6338579999999,
                    "p95": 566.834808,
                    "p99": 566.834808,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 647.956202,
                    "min": 631.5949079999999,
                    "p50": 642.597912,
                    "p95": 647.956202,
                    "p99": 647.956202,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 856.4072219999999,
                    "min": 802.5083119999999,
                    "p50": 808.029648,
                    "p95": 856.4072219999999,
                    "p99": 856.4072219999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 409.346338,
                    "min": 375.28779199999997,
                    "p50": 391.616554,
                    "p95": 409.346338,
                    "p99": 409.346338,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 518.637285,
                    "min": 467.225147,
                    "p50": 474.326346,
                    "p95": 518.637285,
                    "p99": 518.637285,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 223.435838,
                    "min": 177.333202,
                    "p50": 182.481171,
                    "p95": 223.435838,
                    "p99": 223.435838,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.093684,
                    "min": 281.40909999999997,
                    "p50": 320.617791,
                    "p95": 341.093684,
                    "p99": 341.093684,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 434.917831,
                    "min": 345.535935,
                    "p50": 384.166517,
                    "p95": 434.917831,
                    "p99": 434.917831,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 310.011461,
                    "min": 250.47573899999998,
                    "p50": 281.697022,
                    "p95": 310.011461,
                    "p99": 310.011461,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 505.55452599999995,
                    "min": 440.29670999999996,
                    "p50": 487.610301,
                    "p95": 505.55452599999995,
                    "p99": 505.55452599999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 191.0382,
                    "min": 121.613788,
                    "p50": 151.06694,
                    "p95": 191.0382,
                    "p99": 191.0382,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 432.312236,
                    "min": 382.089657,
                    "p50": 408.910846,
                    "p95": 432.312236,
                    "p99": 432.312236,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 351.99526699999996,
                    "min": 295.475189,
                    "p50": 317.521003,
                    "p95": 351.99526699999996,
                    "p99": 351.99526699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 254.34392799999998,
                    "min": 204.703654,
                    "p50": 209.79941599999998,
                    "p95": 254.34392799999998,
                    "p99": 254.34392799999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 486.91691799999995,
                    "min": 414.359352,
                    "p50": 463.37731499999995,
                    "p95": 486.91691799999995,
                    "p99": 486.91691799999995,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 601.294981,
                    "min": 586.5722539999999,
                    "p50": 597.3784509999999,
                    "p95": 601.294981,
                    "p99": 601.294981,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 781.797888,
                    "min": 765.808413,
                    "p50": 772.7914619999999,
                    "p95": 781.797888,
                    "p99": 781.797888,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 276.187098,
                    "min": 230.60975299999998,
                    "p50": 233.73421299999998,
                    "p95": 276.187098,
                    "p99": 276.187098,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 420.153817,
                    "min": 405.45424099999997,
                    "p50": 411.554932,
                    "p95": 420.153817,
                    "p99": 420.153817,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 693.046533,
                    "min": 676.428239,
                    "p50": 688.8582389999999,
                    "p95": 693.046533,
                    "p99": 693.046533,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 412.800663,
                    "min": 320.107121,
                    "p50": 326.593707,
                    "p95": 412.800663,
                    "p99": 412.800663,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 508.86193299999996,
                    "min": 490.576327,
                    "p50": 506.65570499999995,
                    "p95": 508.86193299999996,
                    "p99": 508.86193299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 396.61198199999995,
                    "min": 317.040513,
                    "p50": 341.76912,
                    "p95": 396.61198199999995,
                    "p99": 396.61198199999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 244.891001,
                    "min": 176.451867,
                    "p50": 191.23500199999998,
                    "p95": 244.891001,
                    "p99": 244.891001,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 154.051357,
                    "min": 124.356439,
                    "p50": 132.192492,
                    "p95": 154.051357,
                    "p99": 154.051357,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 347.803358,
                    "min": 299.113837,
                    "p50": 302.958796,
                    "p95": 347.803358,
                    "p99": 347.803358,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 306.455644,
                    "min": 232.93695,
                    "p50": 254.784437,
                    "p95": 306.455644,
                    "p99": 306.455644,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 234.642678,
                    "min": 195.035371,
                    "p50": 206.38840499999998,
                    "p95": 234.642678,
                    "p99": 234.642678,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 366.800816,
                    "min": 282.932938,
                    "p50": 319.80256399999996,
                    "p95": 366.800816,
                    "p99": 366.800816,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 198.392668,
                    "min": 146.1376,
                    "p50": 148.734002,
                    "p95": 198.392668,
                    "p99": 198.392668,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 136.013946,
                    "min": 101.17918,
                    "p50": 120.616593,
                    "p95": 136.013946,
                    "p99": 136.013946,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 456.457952,
                    "min": 393.54855499999996,
                    "p50": 427.21886,
                    "p95": 456.457952,
                    "p99": 456.457952,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 394.84006,
                    "min": 318.539469,
                    "p50": 345.421133,
                    "p95": 394.84006,
                    "p99": 394.84006,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 522.952988,
                    "min": 439.967805,
                    "p50": 471.250516,
                    "p95": 522.952988,
                    "p99": 522.952988,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 264.50789,
                    "min": 224.219676,
                    "p50": 228.436536,
                    "p95": 264.50789,
                    "p99": 264.50789,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 324.37589499999996,
                    "min": 260.509249,
                    "p50": 302.067088,
                    "p95": 324.37589499999996,
                    "p99": 324.37589499999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 215.662049,
                    "min": 163.001679,
                    "p50": 174.69352899999998,
                    "p95": 215.662049,
                    "p99": 215.662049,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 402.40984499999996,
                    "min": 285.669589,
                    "p50": 306.50953699999997,
                    "p95": 402.40984499999996,
                    "p99": 402.40984499999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 168.301298,
                    "min": 136.150952,
                    "p50": 144.544131,
                    "p95": 168.301298,
                    "p99": 168.301298,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 413.104377,
                    "min": 330.57134099999996,
                    "p50": 372.362663,
                    "p95": 413.104377,
                    "p99": 413.104377,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 307.340123,
                    "min": 236.029891,
                    "p50": 260.223259,
                    "p95": 307.340123,
                    "p99": 307.340123,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.215911,
                    "min": 125.92177799999999,
                    "p50": 143.182718,
                    "p95": 159.215911,
                    "p99": 159.215911,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 201.347499,
                    "min": 152.39427,
                    "p50": 162.13032099999998,
                    "p95": 201.347499,
                    "p99": 201.347499,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 338.545554,
                    "min": 278.690017,
                    "p50": 317.993084,
                    "p95": 338.545554,
                    "p99": 338.545554,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 367.866623,
                    "min": 316.21347299999996,
                    "p50": 340.292964,
                    "p95": 367.866623,
                    "p99": 367.866623,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 470.02403699999996,
                    "min": 416.462471,
                    "p50": 430.39088499999997,
                    "p95": 470.02403699999996,
                    "p99": 470.02403699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 219.07834599999998,
                    "min": 179.592492,
                    "p50": 214.35113199999998,
                    "p95": 219.07834599999998,
                    "p99": 219.07834599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 431.53405,
                    "min": 366.35279099999997,
                    "p50": 377.44416,
                    "p95": 431.53405,
                    "p99": 431.53405,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 242.63441,
                    "min": 191.90277999999998,
                    "p50": 200.987608,
                    "p95": 242.63441,
                    "p99": 242.63441,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 324.466322,
                    "min": 250.24790299999998,
                    "p50": 289.19636299999996,
                    "p95": 324.466322,
                    "p99": 324.466322,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 255.78230499999998,
                    "min": 215.924792,
                    "p50": 221.044425,
                    "p95": 255.78230499999998,
                    "p99": 255.78230499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 113.219274,
                    "min": 98.122597,
                    "p50": 99.92498499999999,
                    "p95": 113.219274,
                    "p99": 113.219274,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 196.334655,
                    "min": 149.263407,
                    "p50": 155.93445,
                    "p95": 196.334655,
                    "p99": 196.334655,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 255.210454,
                    "min": 198.764728,
                    "p50": 204.779339,
                    "p95": 255.210454,
                    "p99": 255.210454,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 236.55209599999998,
                    "min": 146.62206899999998,
                    "p50": 187.98517199999998,
                    "p95": 236.55209599999998,
                    "p99": 236.55209599999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 441.55537699999996,
                    "min": 385.907803,
                    "p50": 399.090867,
                    "p95": 441.55537699999996,
                    "p99": 441.55537699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 383.025152,
                    "min": 334.312195,
                    "p50": 341.488523,
                    "p95": 383.025152,
                    "p99": 383.025152,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.591061,
                    "min": 100.18735799999999,
                    "p50": 127.798361,
                    "p95": 131.591061,
                    "p99": 131.591061,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 296.282088,
                    "min": 259.172277,
                    "p50": 263.572741,
                    "p95": 296.282088,
                    "p99": 296.282088,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 255.95342399999998,
                    "min": 236.25303499999998,
                    "p50": 245.49135099999998,
                    "p95": 255.95342399999998,
                    "p99": 255.95342399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 153.949347,
                    "min": 123.38214199999999,
                    "p50": 129.529339,
                    "p95": 153.949347,
                    "p99": 153.949347,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 322.94865999999996,
                    "min": 273.58628799999997,
                    "p50": 314.432481,
                    "p95": 322.94865999999996,
                    "p99": 322.94865999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 342.689258,
                    "min": 225.040684,
                    "p50": 278.141883,
                    "p95": 342.689258,
                    "p99": 342.689258,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 494.549564,
                    "min": 441.96169899999995,
                    "p50": 465.54531099999997,
                    "p95": 494.549564,
                    "p99": 494.549564,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 351.20967099999996,
                    "min": 304.765069,
                    "p50": 322.759644,
                    "p95": 351.20967099999996,
                    "p99": 351.20967099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 195.79245899999998,
                    "min": 160.24089899999998,
                    "p50": 168.641235,
                    "p95": 195.79245899999998,
                    "p99": 195.79245899999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 375.72222,
                    "min": 302.19354999999996,
                    "p50": 338.64616,
                    "p95": 375.72222,
                    "p99": 375.72222,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 488.454216,
                    "min": 449.755971,
                    "p50": 479.67331199999995,
                    "p95": 488.454216,
                    "p99": 488.454216,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 131.174405,
                    "min": 109.51043999999999,
                    "p50": 127.83931399999999,
                    "p95": 131.174405,
                    "p99": 131.174405,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 294.456416,
                    "min": 225.58241199999998,
                    "p50": 269.247643,
                    "p95": 294.456416,
                    "p99": 294.456416,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 335.659352,
                    "min": 232.457843,
                    "p50": 245.48876399999997,
                    "p95": 335.659352,
                    "p99": 335.659352,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 334.851345,
                    "min": 268.584641,
                    "p50": 293.579858,
                    "p95": 334.851345,
                    "p99": 334.851345,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 476.393214,
                    "min": 392.31888399999997,
                    "p50": 443.409053,
                    "p95": 476.393214,
                    "p99": 476.393214,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 325.510989,
                    "min": 277.910257,
                    "p50": 308.347797,
                    "p95": 325.510989,
                    "p99": 325.510989,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 376.19341,
                    "min": 303.731713,
                    "p50": 349.585213,
                    "p95": 376.19341,
                    "p99": 376.19341,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.436126,
                    "min": 98.820059,
                    "p50": 127.2008,
                    "p95": 144.436126,
                    "p99": 144.436126,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 170.970236,
                    "min": 159.714609,
                    "p50": 167.385368,
                    "p95": 170.970236,
                    "p99": 170.970236,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 195.732336,
                    "min": 150.86019,
                    "p50": 177.348072,
                    "p95": 195.732336,
                    "p99": 195.732336,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 473.754377,
                    "min": 332.962411,
                    "p50": 382.508625,
                    "p95": 473.754377,
                    "p99": 473.754377,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 266.65004,
                    "min": 202.270344,
                    "p50": 208.95747,
                    "p95": 266.65004,
                    "p99": 266.65004,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 381.42472699999996,
                    "min": 319.076579,
                    "p50": 337.116283,
                    "p95": 381.42472699999996,
                    "p99": 381.42472699999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 231.734965,
                    "min": 183.64676699999998,
                    "p50": 206.018488,
                    "p95": 231.734965,
                    "p99": 231.734965,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 258.69545999999997,
                    "min": 209.774339,
                    "p50": 210.950208,
                    "p95": 258.69545999999997,
                    "p99": 258.69545999999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.504046,
                    "min": 75.587287,
                    "p50": 79.178243,
                    "p95": 86.504046,
                    "p99": 86.504046,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1105.2950859999999,
                    "min": 979.51429,
                    "p50": 1016.221277,
                    "p95": 1105.2950859999999,
                    "p99": 1105.2950859999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 291.144257,
                    "min": 229.836074,
                    "p50": 250.196169,
                    "p95": 291.144257,
                    "p99": 291.144257,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 383.597226,
                    "min": 323.0626,
                    "p50": 328.83194,
                    "p95": 383.597226,
                    "p99": 383.597226,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 190.956523,
                    "min": 135.06937299999998,
                    "p50": 148.438898,
                    "p95": 190.956523,
                    "p99": 190.956523,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 480.36942,
                    "min": 413.864085,
                    "p50": 429.476461,
                    "p95": 480.36942,
                    "p99": 480.36942,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 99.321944,
                    "min": 88.331375,
                    "p50": 98.695832,
                    "p95": 99.321944,
                    "p99": 99.321944,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.696498,
                    "min": 118.94212499999999,
                    "p50": 123.97117,
                    "p95": 132.696498,
                    "p99": 132.696498,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 66.657253,
                    "min": 57.872474,
                    "p50": 58.212126999999995,
                    "p95": 66.657253,
                    "p99": 66.657253,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 170.23018299999998,
                    "min": 126.345057,
                    "p50": 133.010058,
                    "p95": 170.23018299999998,
                    "p99": 170.23018299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.734558,
                    "min": 114.295423,
                    "p50": 116.585557,
                    "p95": 136.734558,
                    "p99": 136.734558,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 175.55446899999998,
                    "min": 147.05056299999998,
                    "p50": 152.508981,
                    "p95": 175.55446899999998,
                    "p99": 175.55446899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 209.768803,
                    "min": 164.05419999999998,
                    "p50": 173.168014,
                    "p95": 209.768803,
                    "p99": 209.768803,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 188.752039,
                    "min": 158.082651,
                    "p50": 165.111176,
                    "p95": 188.752039,
                    "p99": 188.752039,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 557.9199659999999,
                    "min": 508.14858699999996,
                    "p50": 519.242767,
                    "p95": 557.9199659999999,
                    "p99": 557.9199659999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 91.54522899999999,
                    "min": 89.141983,
                    "p50": 89.81750799999999,
                    "p95": 91.54522899999999,
                    "p99": 91.54522899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 202.08699099999998,
                    "min": 178.445909,
                    "p50": 184.785775,
                    "p95": 202.08699099999998,
                    "p99": 202.08699099999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 194.285043,
                    "min": 188.23688099999998,
                    "p50": 190.374559,
                    "p95": 194.285043,
                    "p99": 194.285043,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 214.242236,
                    "min": 175.98302999999999,
                    "p50": 186.65625,
                    "p95": 214.242236,
                    "p99": 214.242236,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1117.3145279999999,
                    "min": 1025.0246419999999,
                    "p50": 1071.697883,
                    "p95": 1117.3145279999999,
                    "p99": 1117.3145279999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 235.49443699999998,
                    "min": 183.225734,
                    "p50": 186.546495,
                    "p95": 235.49443699999998,
                    "p99": 235.49443699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 152.498639,
                    "min": 136.724023,
                    "p50": 138.581916,
                    "p95": 152.498639,
                    "p99": 152.498639,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 238.66948,
                    "min": 215.72206599999998,
                    "p50": 227.52540199999999,
                    "p95": 238.66948,
                    "p99": 238.66948,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 296.625649,
                    "min": 234.466364,
                    "p50": 253.89977,
                    "p95": 296.625649,
                    "p99": 296.625649,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 100.624928,
                    "min": 78.818569,
                    "p50": 94.126628,
                    "p95": 100.624928,
                    "p99": 100.624928,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 193.678486,
                    "min": 142.611549,
                    "p50": 149.12553699999998,
                    "p95": 193.678486,
                    "p99": 193.678486,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.19448,
                    "min": 101.31129399999999,
                    "p50": 121.072745,
                    "p95": 135.19448,
                    "p99": 135.19448,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 216.745603,
                    "min": 196.062771,
                    "p50": 198.34622399999998,
                    "p95": 216.745603,
                    "p99": 216.745603,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 169.043147,
                    "min": 159.525833,
                    "p50": 167.466238,
                    "p95": 169.043147,
                    "p99": 169.043147,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 577.793203,
                    "min": 424.96859,
                    "p50": 440.93539,
                    "p95": 577.793203,
                    "p99": 577.793203,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 386.766842,
                    "min": 336.28601,
                    "p50": 343.52736,
                    "p95": 386.766842,
                    "p99": 386.766842,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 172.43274399999999,
                    "min": 147.61499999999998,
                    "p50": 158.361244,
                    "p95": 172.43274399999999,
                    "p99": 172.43274399999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.776990999999995,
                    "min": 60.640170999999995,
                    "p50": 61.062445999999994,
                    "p95": 61.776990999999995,
                    "p99": 61.776990999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 145.829497,
                    "min": 124.13895699999999,
                    "p50": 135.705966,
                    "p95": 145.829497,
                    "p99": 145.829497,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.93384499999999,
                    "min": 79.785822,
                    "p50": 81.710472,
                    "p95": 87.93384499999999,
                    "p99": 87.93384499999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 127.55170899999999,
                    "min": 101.312111,
                    "p50": 110.134868,
                    "p95": 127.55170899999999,
                    "p99": 127.55170899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 602.1060749999999,
                    "min": 577.252124,
                    "p50": 584.049405,
                    "p95": 602.1060749999999,
                    "p99": 602.1060749999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 152.916877,
                    "min": 81.410791,
                    "p50": 129.22589299999999,
                    "p95": 152.916877,
                    "p99": 152.916877,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 232.75010699999999,
                    "min": 190.807817,
                    "p50": 207.119838,
                    "p95": 232.75010699999999,
                    "p99": 232.75010699999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 181.723067,
                    "min": 161.495801,
                    "p50": 172.282423,
                    "p95": 181.723067,
                    "p99": 181.723067,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 133.253781,
                    "min": 115.314736,
                    "p50": 118.09642099999999,
                    "p95": 133.253781,
                    "p99": 133.253781,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 345.610039,
                    "min": 268.170546,
                    "p50": 299.543102,
                    "p95": 345.610039,
                    "p99": 345.610039,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 96.858064,
                    "min": 62.258877999999996,
                    "p50": 89.896343,
                    "p95": 96.858064,
                    "p99": 96.858064,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 167.588853,
                    "min": 138.11471899999998,
                    "p50": 139.682899,
                    "p95": 167.588853,
                    "p99": 167.588853,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 211.78587399999998,
                    "min": 157.470339,
                    "p50": 162.327419,
                    "p95": 211.78587399999998,
                    "p99": 211.78587399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 256.564798,
                    "min": 211.04000299999998,
                    "p50": 217.58201799999998,
                    "p95": 256.564798,
                    "p99": 256.564798,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 432.14887,
                    "min": 371.22078,
                    "p50": 382.27756,
                    "p95": 432.14887,
                    "p99": 432.14887,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 203.488329,
                    "min": 175.442289,
                    "p50": 184.477263,
                    "p95": 203.488329,
                    "p99": 203.488329,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 193.10206599999998,
                    "min": 148.80377099999998,
                    "p50": 151.32921299999998,
                    "p95": 193.10206599999998,
                    "p99": 193.10206599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 113.134547,
                    "min": 59.573907999999996,
                    "p50": 98.877017,
                    "p95": 113.134547,
                    "p99": 113.134547,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 246.67058899999998,
                    "min": 196.13989899999999,
                    "p50": 208.22455599999998,
                    "p95": 246.67058899999998,
                    "p99": 246.67058899999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 286.748891,
                    "min": 241.632218,
                    "p50": 248.088257,
                    "p95": 286.748891,
                    "p99": 286.748891,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 553.430929,
                    "min": 480.059485,
                    "p50": 500.12922299999997,
                    "p95": 553.430929,
                    "p99": 553.430929,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 661.660977,
                    "min": 598.435988,
                    "p50": 612.372921,
                    "p95": 661.660977,
                    "p99": 661.660977,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1251.1890449999999,
                    "min": 1172.013103,
                    "p50": 1198.4811479999998,
                    "p95": 1251.1890449999999,
                    "p99": 1251.1890449999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.339046,
                    "min": 66.941593,
                    "p50": 68.904662,
                    "p95": 77.339046,
                    "p99": 77.339046,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 600.072288,
                    "min": 546.1717669999999,
                    "p50": 581.310529,
                    "p95": 600.072288,
                    "p99": 600.072288,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 223.138666,
                    "min": 177.598603,
                    "p50": 184.950956,
                    "p95": 223.138666,
                    "p99": 223.138666,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 163.011138,
                    "min": 138.72121199999998,
                    "p50": 149.98819699999999,
                    "p95": 163.011138,
                    "p99": 163.011138,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 208.471473,
                    "min": 162.410464,
                    "p50": 199.406192,
                    "p95": 208.471473,
                    "p99": 208.471473,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.456213,
                    "min": 119.76198,
                    "p50": 124.06060199999999,
                    "p95": 143.456213,
                    "p99": 143.456213,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 97.770534,
                    "min": 66.511858,
                    "p50": 93.512569,
                    "p95": 97.770534,
                    "p99": 97.770534,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.059391,
                    "min": 62.213446999999995,
                    "p50": 62.48283,
                    "p95": 63.059391,
                    "p99": 63.059391,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 207.947833,
                    "min": 154.336186,
                    "p50": 160.637905,
                    "p95": 207.947833,
                    "p99": 207.947833,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 271.46531999999996,
                    "min": 221.123519,
                    "p50": 228.00372399999998,
                    "p95": 271.46531999999996,
                    "p99": 271.46531999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 118.59221,
                    "min": 101.373211,
                    "p50": 110.35432899999999,
                    "p95": 118.59221,
                    "p99": 118.59221,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.046564,
                    "min": 122.11916799999999,
                    "p50": 130.37610899999999,
                    "p95": 132.046564,
                    "p99": 132.046564,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 264.697445,
                    "min": 189.228368,
                    "p50": 225.38056799999998,
                    "p95": 264.697445,
                    "p99": 264.697445,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 499.84157,
                    "min": 450.81350899999995,
                    "p50": 489.17814899999996,
                    "p95": 499.84157,
                    "p99": 499.84157,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1155.1887709999999,
                    "min": 1067.320422,
                    "p50": 1103.397765,
                    "p95": 1155.1887709999999,
                    "p99": 1155.1887709999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 188.763465,
                    "min": 139.71284599999998,
                    "p50": 160.177198,
                    "p95": 188.763465,
                    "p99": 188.763465,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 325.678741,
                    "min": 247.246006,
                    "p50": 276.472583,
                    "p95": 325.678741,
                    "p99": 325.678741,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 188.930537,
                    "min": 130.269127,
                    "p50": 170.584968,
                    "p95": 188.930537,
                    "p99": 188.930537,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 85.146909,
                    "min": 76.268141,
                    "p50": 81.424996,
                    "p95": 85.146909,
                    "p99": 85.146909,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 372.25656499999997,
                    "min": 340.49289699999997,
                    "p50": 345.039604,
                    "p95": 372.25656499999997,
                    "p99": 372.25656499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 143.245387,
                    "min": 134.599214,
                    "p50": 139.336668,
                    "p95": 143.245387,
                    "p99": 143.245387,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 124.37921,
                    "min": 109.144638,
                    "p50": 118.211681,
                    "p95": 124.37921,
                    "p99": 124.37921,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 187.656792,
                    "min": 148.733761,
                    "p50": 165.071565,
                    "p95": 187.656792,
                    "p99": 187.656792,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 559.386561,
                    "min": 497.15171999999995,
                    "p50": 544.107183,
                    "p95": 559.386561,
                    "p99": 559.386561,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 401.970283,
                    "min": 337.81994599999996,
                    "p50": 380.50749199999996,
                    "p95": 401.970283,
                    "p99": 401.970283,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 424.726321,
                    "min": 375.49286,
                    "p50": 396.793346,
                    "p95": 424.726321,
                    "p99": 424.726321,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 536.374974,
                    "min": 436.405347,
                    "p50": 482.70815799999997,
                    "p95": 536.374974,
                    "p99": 536.374974,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 298.16682499999996,
                    "min": 244.551303,
                    "p50": 256.787828,
                    "p95": 298.16682499999996,
                    "p99": 298.16682499999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 269.29583099999996,
                    "min": 183.043907,
                    "p50": 217.764378,
                    "p95": 269.29583099999996,
                    "p99": 269.29583099999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.73891299999997,
                    "min": 230.17578699999999,
                    "p50": 253.742863,
                    "p95": 276.73891299999997,
                    "p99": 276.73891299999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 245.26913199999998,
                    "min": 200.94758199999998,
                    "p50": 207.767116,
                    "p95": 245.26913199999998,
                    "p99": 245.26913199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 306.940967,
                    "min": 269.232603,
                    "p50": 277.491177,
                    "p95": 306.940967,
                    "p99": 306.940967,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 345.080654,
                    "min": 278.40061099999997,
                    "p50": 296.457333,
                    "p95": 345.080654,
                    "p99": 345.080654,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 421.349489,
                    "min": 358.313562,
                    "p50": 400.83734599999997,
                    "p95": 421.349489,
                    "p99": 421.349489,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 348.043133,
                    "min": 313.70710399999996,
                    "p50": 332.475729,
                    "p95": 348.043133,
                    "p99": 348.043133,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 379.58034899999996,
                    "min": 306.932468,
                    "p50": 335.261548,
                    "p95": 379.58034899999996,
                    "p99": 379.58034899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 418.796987,
                    "min": 344.152221,
                    "p50": 392.582296,
                    "p95": 418.796987,
                    "p99": 418.796987,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 433.954812,
                    "min": 384.528551,
                    "p50": 405.42015899999996,
                    "p95": 433.954812,
                    "p99": 433.954812,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 156.881363,
                    "min": 141.950647,
                    "p50": 147.97640099999998,
                    "p95": 156.881363,
                    "p99": 156.881363,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 181.28878799999998,
                    "min": 124.10175799999999,
                    "p50": 162.679611,
                    "p95": 181.28878799999998,
                    "p99": 181.28878799999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 278.244827,
                    "min": 174.687246,
                    "p50": 206.36838,
                    "p95": 278.244827,
                    "p99": 278.244827,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 231.71470499999998,
                    "min": 182.784503,
                    "p50": 196.34724599999998,
                    "p95": 231.71470499999998,
                    "p99": 231.71470499999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 339.127275,
                    "min": 280.920175,
                    "p50": 285.54132699999997,
                    "p95": 339.127275,
                    "p99": 339.127275,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 152.45434699999998,
                    "min": 113.51505499999999,
                    "p50": 127.74597899999999,
                    "p95": 152.45434699999998,
                    "p99": 152.45434699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 280.456817,
                    "min": 230.0822,
                    "p50": 241.454297,
                    "p95": 280.456817,
                    "p99": 280.456817,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 516.3619689999999,
                    "min": 408.403286,
                    "p50": 484.504707,
                    "p95": 516.3619689999999,
                    "p99": 516.3619689999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 604.142069,
                    "min": 511.620879,
                    "p50": 562.023544,
                    "p95": 604.142069,
                    "p99": 604.142069,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 445.00816599999996,
                    "min": 373.216575,
                    "p50": 389.13665699999996,
                    "p95": 445.00816599999996,
                    "p99": 445.00816599999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 323.920685,
                    "min": 260.426133,
                    "p50": 292.99481199999997,
                    "p95": 323.920685,
                    "p99": 323.920685,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 367.58684999999997,
                    "min": 309.436993,
                    "p50": 342.459567,
                    "p95": 367.58684999999997,
                    "p99": 367.58684999999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 423.190559,
                    "min": 383.737682,
                    "p50": 398.67033399999997,
                    "p95": 423.190559,
                    "p99": 423.190559,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 422.255131,
                    "min": 344.72997899999996,
                    "p50": 382.27543199999997,
                    "p95": 422.255131,
                    "p99": 422.255131,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 475.01390699999996,
                    "min": 390.57359399999996,
                    "p50": 423.818802,
                    "p95": 475.01390699999996,
                    "p99": 475.01390699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 532.230142,
                    "min": 462.495477,
                    "p50": 485.02710099999996,
                    "p95": 532.230142,
                    "p99": 532.230142,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 394.39584199999996,
                    "min": 307.93598199999997,
                    "p50": 356.93086999999997,
                    "p95": 394.39584199999996,
                    "p99": 394.39584199999996,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 352.281843,
                    "min": 280.109453,
                    "p50": 337.844839,
                    "p95": 352.281843,
                    "p99": 352.281843,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 146.724727,
                    "min": 109.888437,
                    "p50": 128.49900599999998,
                    "p95": 146.724727,
                    "p99": 146.724727,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 585.4203279999999,
                    "min": 531.7073409999999,
                    "p50": 565.452958,
                    "p95": 585.4203279999999,
                    "p99": 585.4203279999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 331.072276,
                    "min": 261.235217,
                    "p50": 281.84626,
                    "p95": 331.072276,
                    "p99": 331.072276,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 292.749612,
                    "min": 230.73407999999998,
                    "p50": 267.729015,
                    "p95": 292.749612,
                    "p99": 292.749612,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 232.19192099999998,
                    "min": 178.180701,
                    "p50": 223.466385,
                    "p95": 232.19192099999998,
                    "p99": 232.19192099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 271.16693,
                    "min": 226.35769599999998,
                    "p50": 263.88328,
                    "p95": 271.16693,
                    "p99": 271.16693,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 254.64636,
                    "min": 193.348398,
                    "p50": 229.346339,
                    "p95": 254.64636,
                    "p99": 254.64636,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.83587899999998,
                    "min": 138.169322,
                    "p50": 156.40951099999998,
                    "p95": 193.83587899999998,
                    "p99": 193.83587899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 204.17576699999998,
                    "min": 156.850675,
                    "p50": 162.467275,
                    "p95": 204.17576699999998,
                    "p99": 204.17576699999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 424.010066,
                    "min": 353.61902599999996,
                    "p50": 362.74110099999996,
                    "p95": 424.010066,
                    "p99": 424.010066,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 399.65460199999995,
                    "min": 374.190379,
                    "p50": 382.142006,
                    "p95": 399.65460199999995,
                    "p99": 399.65460199999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 352.884183,
                    "min": 306.214542,
                    "p50": 314.54792699999996,
                    "p95": 352.884183,
                    "p99": 352.884183,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 531.456416,
                    "min": 441.46302599999996,
                    "p50": 490.418048,
                    "p95": 531.456416,
                    "p99": 531.456416,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 174.335632,
                    "min": 131.661054,
                    "p50": 138.335301,
                    "p95": 174.335632,
                    "p99": 174.335632,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 333.262115,
                    "min": 289.336867,
                    "p50": 299.693803,
                    "p95": 333.262115,
                    "p99": 333.262115,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 553.915366,
                    "min": 500.23808699999995,
                    "p50": 537.737164,
                    "p95": 553.915366,
                    "p99": 553.915366,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 218.57424699999999,
                    "min": 176.190025,
                    "p50": 178.25678499999998,
                    "p95": 218.57424699999999,
                    "p99": 218.57424699999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 272.666302,
                    "min": 212.38776199999998,
                    "p50": 225.030894,
                    "p95": 272.666302,
                    "p99": 272.666302,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 249.591116,
                    "min": 195.25261,
                    "p50": 219.373243,
                    "p95": 249.591116,
                    "p99": 249.591116,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 196.099968,
                    "min": 142.77521199999998,
                    "p50": 159.470011,
                    "p95": 196.099968,
                    "p99": 196.099968,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 311.193936,
                    "min": 235.91039899999998,
                    "p50": 260.878642,
                    "p95": 311.193936,
                    "p99": 311.193936,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 310.07264599999996,
                    "min": 268.61346,
                    "p50": 286.007643,
                    "p95": 310.07264599999996,
                    "p99": 310.07264599999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 132.528947,
                    "min": 92.494436,
                    "p50": 115.52865299999999,
                    "p95": 132.528947,
                    "p99": 132.528947,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 390.53067699999997,
                    "min": 360.56529,
                    "p50": 383.504839,
                    "p95": 390.53067699999997,
                    "p99": 390.53067699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1880.6234769999999,
                    "min": 1838.353601,
                    "p50": 1855.2405279999998,
                    "p95": 1880.6234769999999,
                    "p99": 1880.6234769999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1155.8196,
                    "min": 1132.321467,
                    "p50": 1140.95,
                    "p95": 1155.8196,
                    "p99": 1155.8196,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1461.421304,
                    "min": 1369.5128869999999,
                    "p50": 1414.7485749999998,
                    "p95": 1461.421304,
                    "p99": 1461.421304,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 910.9482929999999,
                    "min": 880.9068129999999,
                    "p50": 899.711242,
                    "p95": 910.9482929999999,
                    "p99": 910.9482929999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 796.8313939999999,
                    "min": 764.526088,
                    "p50": 776.235336,
                    "p95": 796.8313939999999,
                    "p99": 796.8313939999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1295.583734,
                    "min": 1221.649563,
                    "p50": 1256.8669599999998,
                    "p95": 1295.583734,
                    "p99": 1295.583734,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 416.614374,
                    "min": 401.667257,
                    "p50": 407.350235,
                    "p95": 416.614374,
                    "p99": 416.614374,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 553.564932,
                    "min": 523.058097,
                    "p50": 538.631703,
                    "p95": 553.564932,
                    "p99": 553.564932,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1026.666064,
                    "min": 1012.1249359999999,
                    "p50": 1020.3076199999999,
                    "p95": 1026.666064,
                    "p99": 1026.666064,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 717.3684959999999,
                    "min": 650.994481,
                    "p50": 662.0719389999999,
                    "p95": 717.3684959999999,
                    "p99": 717.3684959999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2510.083601,
                    "min": 2429.016713,
                    "p50": 2492.65053,
                    "p95": 2510.083601,
                    "p99": 2510.083601,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1515.0728199999999,
                    "min": 1478.093923,
                    "p50": 1506.887532,
                    "p95": 1515.0728199999999,
                    "p99": 1515.0728199999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2217.430648,
                    "min": 2137.097982,
                    "p50": 2157.3077949999997,
                    "p95": 2217.430648,
                    "p99": 2217.430648,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1791.444838,
                    "min": 1699.480028,
                    "p50": 1746.7895489999999,
                    "p95": 1791.444838,
                    "p99": 1791.444838,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1719.294616,
                    "min": 1609.8344869999999,
                    "p50": 1652.987782,
                    "p95": 1719.294616,
                    "p99": 1719.294616,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4225.238474,
                    "min": 3613.98477,
                    "p50": 3696.6874359999997,
                    "p95": 4225.238474,
                    "p99": 4225.238474,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1006.1839689999999,
                    "min": 959.8939809999999,
                    "p50": 983.904149,
                    "p95": 1006.1839689999999,
                    "p99": 1006.1839689999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 792.6486,
                    "min": 719.048764,
                    "p50": 733.046613,
                    "p95": 792.6486,
                    "p99": 792.6486,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 870.7326069999999,
                    "min": 824.93331,
                    "p50": 856.5127799999999,
                    "p95": 870.7326069999999,
                    "p99": 870.7326069999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1284.3824299999999,
                    "min": 1251.32765,
                    "p50": 1278.7784589999999,
                    "p95": 1284.3824299999999,
                    "p99": 1284.3824299999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1139.8432719999998,
                    "min": 1100.914525,
                    "p50": 1120.644805,
                    "p95": 1139.8432719999998,
                    "p99": 1139.8432719999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 795.384828,
                    "min": 778.3054159999999,
                    "p50": 791.644334,
                    "p95": 795.384828,
                    "p99": 795.384828,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.921838,
                    "min": 232.47705399999998,
                    "p50": 237.07127,
                    "p95": 260.921838,
                    "p99": 260.921838,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 352.586565,
                    "min": 283.950386,
                    "p50": 297.741286,
                    "p95": 352.586565,
                    "p99": 352.586565,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 671.193895,
                    "min": 661.892748,
                    "p50": 666.690854,
                    "p95": 671.193895,
                    "p99": 671.193895,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 446.873792,
                    "min": 414.055756,
                    "p50": 427.842924,
                    "p95": 446.873792,
                    "p99": 446.873792,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 613.627895,
                    "min": 598.506069,
                    "p50": 611.171072,
                    "p95": 613.627895,
                    "p99": 613.627895,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 387.541188,
                    "min": 351.600197,
                    "p50": 368.366148,
                    "p95": 387.541188,
                    "p99": 387.541188,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 918.846049,
                    "min": 899.972045,
                    "p50": 907.658092,
                    "p95": 918.846049,
                    "p99": 918.846049,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 598.110985,
                    "min": 538.871892,
                    "p50": 547.9767519999999,
                    "p95": 598.110985,
                    "p99": 598.110985,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 545.81056,
                    "min": 464.130856,
                    "p50": 479.24191199999996,
                    "p95": 545.81056,
                    "p99": 545.81056,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 750.940974,
                    "min": 676.9711239999999,
                    "p50": 707.495316,
                    "p95": 750.940974,
                    "p99": 750.940974,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 323.462269,
                    "min": 305.66232299999996,
                    "p50": 315.11168399999997,
                    "p95": 323.462269,
                    "p99": 323.462269,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 618.080595,
                    "min": 563.787095,
                    "p50": 571.448407,
                    "p95": 618.080595,
                    "p99": 618.080595,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 523.7765449999999,
                    "min": 491.95631699999996,
                    "p50": 507.28268299999996,
                    "p95": 523.7765449999999,
                    "p99": 523.7765449999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 455.693792,
                    "min": 430.57651599999997,
                    "p50": 441.44372599999997,
                    "p95": 455.693792,
                    "p99": 455.693792,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1068.449398,
                    "min": 1012.3571519999999,
                    "p50": 1026.016396,
                    "p95": 1068.449398,
                    "p99": 1068.449398,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 940.105512,
                    "min": 872.439885,
                    "p50": 892.3311749999999,
                    "p95": 940.105512,
                    "p99": 940.105512,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1345.4145449999999,
                    "min": 1324.72482,
                    "p50": 1342.927533,
                    "p95": 1345.4145449999999,
                    "p99": 1345.4145449999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2069.5875849999998,
                    "min": 1960.413627,
                    "p50": 1976.120954,
                    "p95": 2069.5875849999998,
                    "p99": 2069.5875849999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 868.760413,
                    "min": 816.7414699999999,
                    "p50": 834.167026,
                    "p95": 868.760413,
                    "p99": 868.760413,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 398.43177099999997,
                    "min": 337.766736,
                    "p50": 373.473407,
                    "p95": 398.43177099999997,
                    "p99": 398.43177099999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 769.381172,
                    "min": 745.673597,
                    "p50": 759.204138,
                    "p95": 769.381172,
                    "p99": 769.381172,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 295.071172,
                    "min": 241.532884,
                    "p50": 252.198817,
                    "p95": 295.071172,
                    "p99": 295.071172,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 980.0841449999999,
                    "min": 947.24565,
                    "p50": 960.072368,
                    "p95": 980.0841449999999,
                    "p99": 980.0841449999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1185.398301,
                    "min": 1163.020336,
                    "p50": 1178.9152,
                    "p95": 1185.398301,
                    "p99": 1185.398301,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 661.3690339999999,
                    "min": 619.997525,
                    "p50": 634.915338,
                    "p95": 661.3690339999999,
                    "p99": 661.3690339999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3112.806268,
                    "min": 2346.09173,
                    "p50": 2360.825599,
                    "p95": 3112.806268,
                    "p99": 3112.806268,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 608.874855,
                    "min": 547.44528,
                    "p50": 571.531758,
                    "p95": 608.874855,
                    "p99": 608.874855,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 507.96592999999996,
                    "min": 390.575566,
                    "p50": 400.580723,
                    "p95": 507.96592999999996,
                    "p99": 507.96592999999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 754.046289,
                    "min": 736.1343939999999,
                    "p50": 744.320654,
                    "p95": 754.046289,
                    "p99": 754.046289,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 284.97866799999997,
                    "min": 245.233227,
                    "p50": 280.985339,
                    "p95": 284.97866799999997,
                    "p99": 284.97866799999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1280.2919219999999,
                    "min": 1189.789663,
                    "p50": 1217.208201,
                    "p95": 1280.2919219999999,
                    "p99": 1280.2919219999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 979.4558549999999,
                    "min": 893.5145729999999,
                    "p50": 939.184085,
                    "p95": 979.4558549999999,
                    "p99": 979.4558549999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 867.5501019999999,
                    "min": 849.315892,
                    "p50": 863.346417,
                    "p95": 867.5501019999999,
                    "p99": 867.5501019999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.478936,
                    "min": 223.164268,
                    "p50": 226.11335599999998,
                    "p95": 257.478936,
                    "p99": 257.478936,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 388.72263799999996,
                    "min": 326.51424299999996,
                    "p50": 339.603798,
                    "p95": 388.72263799999996,
                    "p99": 388.72263799999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1075.593463,
                    "min": 1047.144425,
                    "p50": 1059.761114,
                    "p95": 1075.593463,
                    "p99": 1075.593463,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 525.053591,
                    "min": 498.43623199999996,
                    "p50": 517.608959,
                    "p95": 525.053591,
                    "p99": 525.053591,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 746.4621569999999,
                    "min": 668.5305149999999,
                    "p50": 690.389052,
                    "p95": 746.4621569999999,
                    "p99": 746.4621569999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 460.774157,
                    "min": 447.20356799999996,
                    "p50": 453.192996,
                    "p95": 460.774157,
                    "p99": 460.774157,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 821.29138,
                    "min": 784.869949,
                    "p50": 805.853205,
                    "p95": 821.29138,
                    "p99": 821.29138,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2360.677353,
                    "min": 1765.613191,
                    "p50": 1817.222438,
                    "p95": 2360.677353,
                    "p99": 2360.677353,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3868.257345,
                    "min": 2918.162434,
                    "p50": 2943.3411459999998,
                    "p95": 3868.257345,
                    "p99": 3868.257345,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 660.2427329999999,
                    "min": 588.2417379999999,
                    "p50": 631.574452,
                    "p95": 660.2427329999999,
                    "p99": 660.2427329999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 354.065819,
                    "min": 336.06373099999996,
                    "p50": 346.967419,
                    "p95": 354.065819,
                    "p99": 354.065819,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 903.1535309999999,
                    "min": 883.4925549999999,
                    "p50": 893.421071,
                    "p95": 903.1535309999999,
                    "p99": 903.1535309999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1332.825235,
                    "min": 1298.660921,
                    "p50": 1315.869508,
                    "p95": 1332.825235,
                    "p99": 1332.825235,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2189.102402,
                    "min": 2132.737499,
                    "p50": 2157.697891,
                    "p95": 2189.102402,
                    "p99": 2189.102402,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1835.713687,
                    "min": 1698.243023,
                    "p50": 1735.8338019999999,
                    "p95": 1835.713687,
                    "p99": 1835.713687,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 399.754995,
                    "min": 380.55643499999996,
                    "p50": 389.327991,
                    "p95": 399.754995,
                    "p99": 399.754995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 797.9600479999999,
                    "min": 784.052296,
                    "p50": 788.049256,
                    "p95": 797.9600479999999,
                    "p99": 797.9600479999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.76712399999997,
                    "min": 299.103344,
                    "p50": 302.54560399999997,
                    "p95": 318.76712399999997,
                    "p99": 318.76712399999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.7895,
                    "min": 638.083027,
                    "p50": 648.405449,
                    "p95": 705.7895,
                    "p99": 705.7895,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 694.32465,
                    "min": 680.3972259999999,
                    "p50": 688.9215039999999,
                    "p95": 694.32465,
                    "p99": 694.32465,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 244.31303699999998,
                    "min": 219.392069,
                    "p50": 224.839527,
                    "p95": 244.31303699999998,
                    "p99": 244.31303699999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 573.648591,
                    "min": 509.53351,
                    "p50": 521.057475,
                    "p95": 573.648591,
                    "p99": 573.648591,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 590.358897,
                    "min": 556.270387,
                    "p50": 562.092903,
                    "p95": 590.358897,
                    "p99": 590.358897,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.437777,
                    "min": 257.286838,
                    "p50": 264.06977,
                    "p95": 273.437777,
                    "p99": 273.437777,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 204.12390299999998,
                    "min": 176.39559699999998,
                    "p50": 180.718334,
                    "p95": 204.12390299999998,
                    "p99": 204.12390299999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 677.520374,
                    "min": 599.680026,
                    "p50": 606.62509,
                    "p95": 677.520374,
                    "p99": 677.520374,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 497.55499399999997,
                    "min": 467.872511,
                    "p50": 473.41835499999996,
                    "p95": 497.55499399999997,
                    "p99": 497.55499399999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 485.18731299999996,
                    "min": 422.920847,
                    "p50": 431.22583799999995,
                    "p95": 485.18731299999996,
                    "p99": 485.18731299999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 756.740421,
                    "min": 668.373701,
                    "p50": 709.661157,
                    "p95": 756.740421,
                    "p99": 756.740421,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1066.191351,
                    "min": 1002.5537449999999,
                    "p50": 1023.695074,
                    "p95": 1066.191351,
                    "p99": 1066.191351,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 879.774773,
                    "min": 868.176518,
                    "p50": 870.721051,
                    "p95": 879.774773,
                    "p99": 879.774773,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.48051399999997,
                    "min": 244.813345,
                    "p50": 252.23199799999998,
                    "p95": 261.48051399999997,
                    "p99": 261.48051399999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1501.987471,
                    "min": 1411.359972,
                    "p50": 1427.8633539999998,
                    "p95": 1501.987471,
                    "p99": 1501.987471,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 612.6831559999999,
                    "min": 595.602719,
                    "p50": 601.672639,
                    "p95": 612.6831559999999,
                    "p99": 612.6831559999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 465.27034299999997,
                    "min": 355.654947,
                    "p50": 394.67105899999996,
                    "p95": 465.27034299999997,
                    "p99": 465.27034299999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 880.68351,
                    "min": 802.124163,
                    "p50": 809.575576,
                    "p95": 880.68351,
                    "p99": 880.68351,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 531.122035,
                    "min": 449.890567,
                    "p50": 462.695233,
                    "p95": 531.122035,
                    "p99": 531.122035,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1290.023937,
                    "min": 1233.158795,
                    "p50": 1248.994103,
                    "p95": 1290.023937,
                    "p99": 1290.023937,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 337.553907,
                    "min": 308.347018,
                    "p50": 324.41808699999996,
                    "p95": 337.553907,
                    "p99": 337.553907,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1120.267648,
                    "min": 1071.454352,
                    "p50": 1078.858057,
                    "p95": 1120.267648,
                    "p99": 1120.267648,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 577.3822279999999,
                    "min": 519.908596,
                    "p50": 535.57638,
                    "p95": 577.3822279999999,
                    "p99": 577.3822279999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1001.306827,
                    "min": 940.131003,
                    "p50": 982.432634,
                    "p95": 1001.306827,
                    "p99": 1001.306827,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 771.218096,
                    "min": 730.7159909999999,
                    "p50": 737.788963,
                    "p95": 771.218096,
                    "p99": 771.218096,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 355.90286499999996,
                    "min": 285.988399,
                    "p50": 293.42522099999996,
                    "p95": 355.90286499999996,
                    "p99": 355.90286499999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 817.303058,
                    "min": 763.4881449999999,
                    "p50": 790.8668279999999,
                    "p95": 817.303058,
                    "p99": 817.303058,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 540.552546,
                    "min": 475.162248,
                    "p50": 493.07113499999997,
                    "p95": 540.552546,
                    "p99": 540.552546,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 686.9375749999999,
                    "min": 670.5074,
                    "p50": 683.39851,
                    "p95": 686.9375749999999,
                    "p99": 686.9375749999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1068.516204,
                    "min": 1012.3724569999999,
                    "p50": 1025.174841,
                    "p95": 1068.516204,
                    "p99": 1068.516204,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 595.5482589999999,
                    "min": 582.706095,
                    "p50": 586.5718039999999,
                    "p95": 595.5482589999999,
                    "p99": 595.5482589999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 799.477863,
                    "min": 720.0170059999999,
                    "p50": 731.217771,
                    "p95": 799.477863,
                    "p99": 799.477863,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1597.976943,
                    "min": 1475.250254,
                    "p50": 1509.6405579999998,
                    "p95": 1597.976943,
                    "p99": 1597.976943,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 427.76872699999996,
                    "min": 383.50496799999996,
                    "p50": 388.390604,
                    "p95": 427.76872699999996,
                    "p99": 427.76872699999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.43649,
                    "min": 186.35909099999998,
                    "p50": 198.46563999999998,
                    "p95": 213.43649,
                    "p99": 213.43649,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 576.697802,
                    "min": 525.674282,
                    "p50": 540.6090839999999,
                    "p95": 576.697802,
                    "p99": 576.697802,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 356.852379,
                    "min": 333.25033099999996,
                    "p50": 349.977001,
                    "p95": 356.852379,
                    "p99": 356.852379,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 259.6103,
                    "min": 223.29578999999998,
                    "p50": 248.52708299999998,
                    "p95": 259.6103,
                    "p99": 259.6103,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 488.05947299999997,
                    "min": 417.729397,
                    "p50": 441.809283,
                    "p95": 488.05947299999997,
                    "p99": 488.05947299999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 972.619959,
                    "min": 890.242454,
                    "p50": 909.299596,
                    "p95": 972.619959,
                    "p99": 972.619959,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 683.666192,
                    "min": 626.196257,
                    "p50": 644.374027,
                    "p95": 683.666192,
                    "p99": 683.666192,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 838.547556,
                    "min": 773.50601,
                    "p50": 783.9096999999999,
                    "p95": 838.547556,
                    "p99": 838.547556,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 949.963616,
                    "min": 902.221808,
                    "p50": 910.603003,
                    "p95": 949.963616,
                    "p99": 949.963616,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 976.4066889999999,
                    "min": 960.0024099999999,
                    "p50": 968.640376,
                    "p95": 976.4066889999999,
                    "p99": 976.4066889999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 606.8995679999999,
                    "min": 585.750507,
                    "p50": 602.070732,
                    "p95": 606.8995679999999,
                    "p99": 606.8995679999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 493.94449099999997,
                    "min": 406.00118299999997,
                    "p50": 419.831367,
                    "p95": 493.94449099999997,
                    "p99": 493.94449099999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 613.507571,
                    "min": 538.55533,
                    "p50": 552.690686,
                    "p95": 613.507571,
                    "p99": 613.507571,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 317.47306699999996,
                    "min": 291.944217,
                    "p50": 298.54871199999997,
                    "p95": 317.47306699999996,
                    "p99": 317.47306699999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 394.340853,
                    "min": 352.513076,
                    "p50": 357.818217,
                    "p95": 394.340853,
                    "p99": 394.340853,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 670.6871639999999,
                    "min": 657.752245,
                    "p50": 664.078046,
                    "p95": 670.6871639999999,
                    "p99": 670.6871639999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 527.2756899999999,
                    "min": 472.484713,
                    "p50": 481.664556,
                    "p95": 527.2756899999999,
                    "p99": 527.2756899999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1316.550875,
                    "min": 1255.885254,
                    "p50": 1268.017601,
                    "p95": 1316.550875,
                    "p99": 1316.550875,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 771.133665,
                    "min": 720.60674,
                    "p50": 737.775142,
                    "p95": 771.133665,
                    "p99": 771.133665,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1166.753604,
                    "min": 1110.556041,
                    "p50": 1123.524359,
                    "p95": 1166.753604,
                    "p99": 1166.753604,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 272.739316,
                    "min": 219.71353399999998,
                    "p50": 234.13682799999998,
                    "p95": 272.739316,
                    "p99": 272.739316,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 875.248918,
                    "min": 842.534873,
                    "p50": 859.243434,
                    "p95": 875.248918,
                    "p99": 875.248918,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 583.463042,
                    "min": 554.923545,
                    "p50": 571.688571,
                    "p95": 583.463042,
                    "p99": 583.463042,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 350.88883699999997,
                    "min": 300.57455699999997,
                    "p50": 310.21133499999996,
                    "p95": 350.88883699999997,
                    "p99": 350.88883699999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 283.63968,
                    "min": 221.14028499999998,
                    "p50": 223.54929299999998,
                    "p95": 283.63968,
                    "p99": 283.63968,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.22800099999998,
                    "min": 171.938529,
                    "p50": 180.266776,
                    "p95": 185.22800099999998,
                    "p99": 185.22800099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 649.011476,
                    "min": 598.408523,
                    "p50": 616.1953659999999,
                    "p95": 649.011476,
                    "p99": 649.011476,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 710.047286,
                    "min": 690.323572,
                    "p50": 694.0288979999999,
                    "p95": 710.047286,
                    "p99": 710.047286,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 443.49465,
                    "min": 430.770489,
                    "p50": 432.899831,
                    "p95": 443.49465,
                    "p99": 443.49465,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1156.916391,
                    "min": 902.8510739999999,
                    "p50": 922.74384,
                    "p95": 1156.916391,
                    "p99": 1156.916391,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 642.7783119999999,
                    "min": 469.662673,
                    "p50": 482.16420999999997,
                    "p95": 642.7783119999999,
                    "p99": 642.7783119999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 388.793685,
                    "min": 338.66175599999997,
                    "p50": 347.527059,
                    "p95": 388.793685,
                    "p99": 388.793685,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 853.2428719999999,
                    "min": 791.9373999999999,
                    "p50": 801.590525,
                    "p95": 853.2428719999999,
                    "p99": 853.2428719999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 699.182315,
                    "min": 642.937321,
                    "p50": 660.6433139999999,
                    "p95": 699.182315,
                    "p99": 699.182315,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 298.819015,
                    "min": 224.743352,
                    "p50": 264.225146,
                    "p95": 298.819015,
                    "p99": 298.819015,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 429.69413799999995,
                    "min": 384.260788,
                    "p50": 391.50432,
                    "p95": 429.69413799999995,
                    "p99": 429.69413799999995,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1345.17294,
                    "min": 1313.9830749999999,
                    "p50": 1332.299392,
                    "p95": 1345.17294,
                    "p99": 1345.17294,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 580.261089,
                    "min": 505.498092,
                    "p50": 523.694437,
                    "p95": 580.261089,
                    "p99": 580.261089,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2253.371651,
                    "min": 1749.3104079999998,
                    "p50": 1855.4980489999998,
                    "p95": 2253.371651,
                    "p99": 2253.371651,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1002.883426,
                    "min": 980.9504599999999,
                    "p50": 989.6494409999999,
                    "p95": 1002.883426,
                    "p99": 1002.883426,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 552.273162,
                    "min": 514.101496,
                    "p50": 519.857127,
                    "p95": 552.273162,
                    "p99": 552.273162,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2002.288229,
                    "min": 1901.7708229999998,
                    "p50": 1914.767318,
                    "p95": 2002.288229,
                    "p99": 2002.288229,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1396.3292159999999,
                    "min": 1338.707132,
                    "p50": 1360.8365959999999,
                    "p95": 1396.3292159999999,
                    "p99": 1396.3292159999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 619.003249,
                    "min": 598.577947,
                    "p50": 612.320985,
                    "p95": 619.003249,
                    "p99": 619.003249,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1463.632368,
                    "min": 1419.191069,
                    "p50": 1451.025204,
                    "p95": 1463.632368,
                    "p99": 1463.632368,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 762.746823,
                    "min": 697.747709,
                    "p50": 706.3349489999999,
                    "p95": 762.746823,
                    "p99": 762.746823,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1183.988647,
                    "min": 1148.2177159999999,
                    "p50": 1172.6758439999999,
                    "p95": 1183.988647,
                    "p99": 1183.988647,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 930.9154199999999,
                    "min": 879.848385,
                    "p50": 890.440849,
                    "p95": 930.9154199999999,
                    "p99": 930.9154199999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1314.2116099999998,
                    "min": 1243.408111,
                    "p50": 1279.6472649999998,
                    "p95": 1314.2116099999998,
                    "p99": 1314.2116099999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1735.9086149999998,
                    "min": 1643.712462,
                    "p50": 1694.2146269999998,
                    "p95": 1735.9086149999998,
                    "p99": 1735.9086149999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 848.054134,
                    "min": 791.669771,
                    "p50": 805.130084,
                    "p95": 848.054134,
                    "p99": 848.054134,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1112.767504,
                    "min": 1067.1188769999999,
                    "p50": 1081.263951,
                    "p95": 1112.767504,
                    "p99": 1112.767504,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 377.135611,
                    "min": 320.351163,
                    "p50": 336.51345499999996,
                    "p95": 377.135611,
                    "p99": 377.135611,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 473.249353,
                    "min": 415.587559,
                    "p50": 424.22236,
                    "p95": 473.249353,
                    "p99": 473.249353,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 602.9621,
                    "min": 544.711001,
                    "p50": 554.336999,
                    "p95": 602.9621,
                    "p99": 602.9621,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 300.123701,
                    "min": 240.220723,
                    "p50": 253.72237299999998,
                    "p95": 300.123701,
                    "p99": 300.123701,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 714.7688969999999,
                    "min": 649.609325,
                    "p50": 658.642687,
                    "p95": 714.7688969999999,
                    "p99": 714.7688969999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 757.811961,
                    "min": 737.713772,
                    "p50": 752.680073,
                    "p95": 757.811961,
                    "p99": 757.811961,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 387.603586,
                    "min": 297.664046,
                    "p50": 302.331367,
                    "p95": 387.603586,
                    "p99": 387.603586,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 522.375372,
                    "min": 496.48950099999996,
                    "p50": 505.72648599999997,
                    "p95": 522.375372,
                    "p99": 522.375372,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 474.41965899999997,
                    "min": 439.427194,
                    "p50": 452.524142,
                    "p95": 474.41965899999997,
                    "p99": 474.41965899999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 352.779975,
                    "min": 347.60911799999997,
                    "p50": 351.23824099999996,
                    "p95": 352.779975,
                    "p99": 352.779975,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 203.717367,
                    "min": 200.29285399999998,
                    "p50": 201.27157499999998,
                    "p95": 203.717367,
                    "p99": 203.717367,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1029.3986069999999,
                    "min": 913.4772409999999,
                    "p50": 960.3934089999999,
                    "p95": 1029.3986069999999,
                    "p99": 1029.3986069999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 650.915589,
                    "min": 591.849188,
                    "p50": 605.088225,
                    "p95": 650.915589,
                    "p99": 650.915589,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 745.4201009999999,
                    "min": 693.91552,
                    "p50": 709.679756,
                    "p95": 745.4201009999999,
                    "p99": 745.4201009999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1061.2327249999998,
                    "min": 1043.718692,
                    "p50": 1050.966223,
                    "p95": 1061.2327249999998,
                    "p99": 1061.2327249999998,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 858.735732,
                    "min": 796.01121,
                    "p50": 812.0870209999999,
                    "p95": 858.735732,
                    "p99": 858.735732,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 411.685752,
                    "min": 395.250009,
                    "p50": 402.115281,
                    "p95": 411.685752,
                    "p99": 411.685752,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1160.803913,
                    "min": 1113.783077,
                    "p50": 1150.936937,
                    "p95": 1160.803913,
                    "p99": 1160.803913,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 727.728037,
                    "min": 660.894129,
                    "p50": 670.266261,
                    "p95": 727.728037,
                    "p99": 727.728037,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1013.6922629999999,
                    "min": 903.0472579999999,
                    "p50": 911.5874319999999,
                    "p95": 1013.6922629999999,
                    "p99": 1013.6922629999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1024.263025,
                    "min": 954.922469,
                    "p50": 964.925714,
                    "p95": 1024.263025,
                    "p99": 1024.263025,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1315.3751989999998,
                    "min": 1254.261697,
                    "p50": 1284.516695,
                    "p95": 1315.3751989999998,
                    "p99": 1315.3751989999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 771.680255,
                    "min": 708.5915249999999,
                    "p50": 723.3332929999999,
                    "p95": 771.680255,
                    "p99": 771.680255,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 466.70495999999997,
                    "min": 404.112458,
                    "p50": 418.60204799999997,
                    "p95": 466.70495999999997,
                    "p99": 466.70495999999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 582.973982,
                    "min": 536.936747,
                    "p50": 544.503335,
                    "p95": 582.973982,
                    "p99": 582.973982,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 910.2286419999999,
                    "min": 808.681934,
                    "p50": 851.885178,
                    "p95": 910.2286419999999,
                    "p99": 910.2286419999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 791.26078,
                    "min": 778.4805739999999,
                    "p50": 784.660454,
                    "p95": 791.26078,
                    "p99": 791.26078,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1930.064005,
                    "min": 1857.2121789999999,
                    "p50": 1920.0008349999998,
                    "p95": 1930.064005,
                    "p99": 1930.064005,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 515.17071,
                    "min": 472.054675,
                    "p50": 479.94203699999997,
                    "p95": 515.17071,
                    "p99": 515.17071,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 287.396294,
                    "min": 233.463215,
                    "p50": 239.17044199999998,
                    "p95": 287.396294,
                    "p99": 287.396294,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 438.652876,
                    "min": 351.624176,
                    "p50": 364.768571,
                    "p95": 438.652876,
                    "p99": 438.652876,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 645.147023,
                    "min": 593.370233,
                    "p50": 618.6153509999999,
                    "p95": 645.147023,
                    "p99": 645.147023,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 300.913346,
                    "min": 286.92266,
                    "p50": 294.634577,
                    "p95": 300.913346,
                    "p99": 300.913346,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1116.631598,
                    "min": 1087.594466,
                    "p50": 1107.485037,
                    "p95": 1116.631598,
                    "p99": 1116.631598,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 558.503302,
                    "min": 537.964286,
                    "p50": 544.038263,
                    "p95": 558.503302,
                    "p99": 558.503302,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 275.697432,
                    "min": 258.36418199999997,
                    "p50": 262.110496,
                    "p95": 275.697432,
                    "p99": 275.697432,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 374.38534799999996,
                    "min": 324.939935,
                    "p50": 333.30715299999997,
                    "p95": 374.38534799999996,
                    "p99": 374.38534799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 780.766448,
                    "min": 745.41855,
                    "p50": 760.280714,
                    "p95": 780.766448,
                    "p99": 780.766448,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 531.500815,
                    "min": 436.87039699999997,
                    "p50": 473.29033,
                    "p95": 531.500815,
                    "p99": 531.500815,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1502.50108,
                    "min": 1437.718077,
                    "p50": 1466.205597,
                    "p95": 1502.50108,
                    "p99": 1502.50108,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 421.41326999999995,
                    "min": 394.29625899999996,
                    "p50": 404.10663,
                    "p95": 421.41326999999995,
                    "p99": 421.41326999999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 834.523794,
                    "min": 815.446654,
                    "p50": 820.4150999999999,
                    "p95": 834.523794,
                    "p99": 834.523794,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 658.3326599999999,
                    "min": 606.201102,
                    "p50": 618.6165159999999,
                    "p95": 658.3326599999999,
                    "p99": 658.3326599999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 905.405324,
                    "min": 883.1330909999999,
                    "p50": 893.137153,
                    "p95": 905.405324,
                    "p99": 905.405324,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 972.011636,
                    "min": 947.725796,
                    "p50": 958.493627,
                    "p95": 972.011636,
                    "p99": 972.011636,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1321.785674,
                    "min": 1272.135889,
                    "p50": 1311.637538,
                    "p95": 1321.785674,
                    "p99": 1321.785674,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1191.235673,
                    "min": 1030.357698,
                    "p50": 1044.472986,
                    "p95": 1191.235673,
                    "p99": 1191.235673,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 717.7037899999999,
                    "min": 680.28543,
                    "p50": 686.028407,
                    "p95": 717.7037899999999,
                    "p99": 717.7037899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 290.68010699999996,
                    "min": 248.28408399999998,
                    "p50": 254.402761,
                    "p95": 290.68010699999996,
                    "p99": 290.68010699999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 840.2709169999999,
                    "min": 797.615245,
                    "p50": 817.660613,
                    "p95": 840.2709169999999,
                    "p99": 840.2709169999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 694.028235,
                    "min": 603.1744259999999,
                    "p50": 613.328574,
                    "p95": 694.028235,
                    "p99": 694.028235,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 516.569356,
                    "min": 498.84306699999996,
                    "p50": 506.22360599999996,
                    "p95": 516.569356,
                    "p99": 516.569356,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 459.85770299999996,
                    "min": 348.906053,
                    "p50": 355.310134,
                    "p95": 459.85770299999996,
                    "p99": 459.85770299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 232.956974,
                    "min": 201.992461,
                    "p50": 204.60698299999999,
                    "p95": 232.956974,
                    "p99": 232.956974,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 337.50658599999997,
                    "min": 291.081736,
                    "p50": 311.94451599999996,
                    "p95": 337.50658599999997,
                    "p99": 337.50658599999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 813.670088,
                    "min": 753.809358,
                    "p50": 769.7902849999999,
                    "p95": 813.670088,
                    "p99": 813.670088,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 961.873831,
                    "min": 932.460606,
                    "p50": 939.5898689999999,
                    "p95": 961.873831,
                    "p99": 961.873831,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 422.162911,
                    "min": 396.610546,
                    "p50": 406.250774,
                    "p95": 422.162911,
                    "p99": 422.162911,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 676.974168,
                    "min": 553.325571,
                    "p50": 559.172929,
                    "p95": 676.974168,
                    "p99": 676.974168,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1119.29108,
                    "min": 1062.507674,
                    "p50": 1072.136405,
                    "p95": 1119.29108,
                    "p99": 1119.29108,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 697.1186289999999,
                    "min": 651.490945,
                    "p50": 666.2344019999999,
                    "p95": 697.1186289999999,
                    "p99": 697.1186289999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 535.343547,
                    "min": 454.65813499999996,
                    "p50": 460.094023,
                    "p95": 535.343547,
                    "p99": 535.343547,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 749.522012,
                    "min": 706.890012,
                    "p50": 714.6016589999999,
                    "p95": 749.522012,
                    "p99": 749.522012,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2198.153902,
                    "min": 2163.371278,
                    "p50": 2176.343097,
                    "p95": 2198.153902,
                    "p99": 2198.153902,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1214.1822909999999,
                    "min": 1178.0814189999999,
                    "p50": 1189.615042,
                    "p95": 1214.1822909999999,
                    "p99": 1214.1822909999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1479.286932,
                    "min": 1463.184476,
                    "p50": 1467.815816,
                    "p95": 1479.286932,
                    "p99": 1479.286932,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1638.074071,
                    "min": 1587.130772,
                    "p50": 1614.052348,
                    "p95": 1638.074071,
                    "p99": 1638.074071,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2076.4282709999998,
                    "min": 2014.454288,
                    "p50": 2036.8209889999998,
                    "p95": 2076.4282709999998,
                    "p99": 2076.4282709999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1917.8668389999998,
                    "min": 1865.370835,
                    "p50": 1891.7723019999999,
                    "p95": 1917.8668389999998,
                    "p99": 1917.8668389999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 639.83722,
                    "min": 617.055133,
                    "p50": 626.4567569999999,
                    "p95": 639.83722,
                    "p99": 639.83722,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1360.0078039999999,
                    "min": 1323.451509,
                    "p50": 1340.2924819999998,
                    "p95": 1360.0078039999999,
                    "p99": 1360.0078039999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1790.381251,
                    "min": 1744.961793,
                    "p50": 1779.626305,
                    "p95": 1790.381251,
                    "p99": 1790.381251,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2557.513055,
                    "min": 2498.114755,
                    "p50": 2543.169852,
                    "p95": 2557.513055,
                    "p99": 2557.513055,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 805.1207959999999,
                    "min": 757.207873,
                    "p50": 768.6385839999999,
                    "p95": 805.1207959999999,
                    "p99": 805.1207959999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1067.99806,
                    "min": 1040.922943,
                    "p50": 1053.4427699999999,
                    "p95": 1067.99806,
                    "p99": 1067.99806,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 487.645269,
                    "min": 465.124054,
                    "p50": 480.039339,
                    "p95": 487.645269,
                    "p99": 487.645269,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 960.379641,
                    "min": 896.625369,
                    "p50": 916.605995,
                    "p95": 960.379641,
                    "p99": 960.379641,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2978.8802189999997,
                    "min": 2882.236758,
                    "p50": 2931.006531,
                    "p95": 2978.8802189999997,
                    "p99": 2978.8802189999997,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2919.411065,
                    "min": 2809.540522,
                    "p50": 2860.363301,
                    "p95": 2919.411065,
                    "p99": 2919.411065,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2047.0703369999999,
                    "min": 1978.840254,
                    "p50": 2002.419025,
                    "p95": 2047.0703369999999,
                    "p99": 2047.0703369999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1774.211609,
                    "min": 1685.166014,
                    "p50": 1724.172718,
                    "p95": 1774.211609,
                    "p99": 1774.211609,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1328.708566,
                    "min": 1292.299168,
                    "p50": 1307.425628,
                    "p95": 1328.708566,
                    "p99": 1328.708566,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1172.394667,
                    "min": 1149.523394,
                    "p50": 1169.605083,
                    "p95": 1172.394667,
                    "p99": 1172.394667,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 904.9801689999999,
                    "min": 877.782665,
                    "p50": 896.4076269999999,
                    "p95": 904.9801689999999,
                    "p99": 904.9801689999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1888.911052,
                    "min": 1855.258994,
                    "p50": 1868.204421,
                    "p95": 1888.911052,
                    "p99": 1888.911052,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 616.058039,
                    "min": 597.921504,
                    "p50": 612.5744559999999,
                    "p95": 616.058039,
                    "p99": 616.058039,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1627.374586,
                    "min": 1581.277985,
                    "p50": 1601.4036859999999,
                    "p95": 1627.374586,
                    "p99": 1627.374586,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 798.8700729999999,
                    "min": 749.90589,
                    "p50": 757.867832,
                    "p95": 798.8700729999999,
                    "p99": 798.8700729999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2514.8226529999997,
                    "min": 2468.963483,
                    "p50": 2510.9824049999997,
                    "p95": 2514.8226529999997,
                    "p99": 2514.8226529999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 484.25017099999997,
                    "min": 425.469906,
                    "p50": 470.607264,
                    "p95": 484.25017099999997,
                    "p99": 484.25017099999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1052.981345,
                    "min": 1009.5767539999999,
                    "p50": 1031.771583,
                    "p95": 1052.981345,
                    "p99": 1052.981345,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2170.979398,
                    "min": 2127.410937,
                    "p50": 2138.604061,
                    "p95": 2170.979398,
                    "p99": 2170.979398,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1489.099315,
                    "min": 1428.23275,
                    "p50": 1443.023812,
                    "p95": 1489.099315,
                    "p99": 1489.099315,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1552.292412,
                    "min": 1463.483753,
                    "p50": 1496.242841,
                    "p95": 1552.292412,
                    "p99": 1552.292412,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 870.7841579999999,
                    "min": 832.047322,
                    "p50": 839.668695,
                    "p95": 870.7841579999999,
                    "p99": 870.7841579999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 740.293949,
                    "min": 705.1235369999999,
                    "p50": 714.4980979999999,
                    "p95": 740.293949,
                    "p99": 740.293949,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1450.721529,
                    "min": 1355.2574299999999,
                    "p50": 1381.342457,
                    "p95": 1450.721529,
                    "p99": 1450.721529,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2693.95684,
                    "min": 2664.46341,
                    "p50": 2673.000471,
                    "p95": 2693.95684,
                    "p99": 2693.95684,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 600.6577609999999,
                    "min": 572.61284,
                    "p50": 585.106372,
                    "p95": 600.6577609999999,
                    "p99": 600.6577609999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1046.994721,
                    "min": 964.415946,
                    "p50": 983.722799,
                    "p95": 1046.994721,
                    "p99": 1046.994721,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 493.70820599999996,
                    "min": 444.472012,
                    "p50": 453.504755,
                    "p95": 493.70820599999996,
                    "p99": 493.70820599999996,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2082.251248,
                    "min": 1999.576134,
                    "p50": 2036.658581,
                    "p95": 2082.251248,
                    "p99": 2082.251248,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1938.8460289999998,
                    "min": 1869.1795049999998,
                    "p50": 1895.088579,
                    "p95": 1938.8460289999998,
                    "p99": 1938.8460289999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1652.466244,
                    "min": 1609.014187,
                    "p50": 1632.6669279999999,
                    "p95": 1652.466244,
                    "p99": 1652.466244,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1791.5031239999998,
                    "min": 1745.476958,
                    "p50": 1767.932492,
                    "p95": 1791.5031239999998,
                    "p99": 1791.5031239999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1250.390432,
                    "min": 1199.728756,
                    "p50": 1234.432613,
                    "p95": 1250.390432,
                    "p99": 1250.390432,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2371.598032,
                    "min": 2330.973549,
                    "p50": 2357.7988179999998,
                    "p95": 2371.598032,
                    "p99": 2371.598032,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1128.323578,
                    "min": 1094.855922,
                    "p50": 1100.266512,
                    "p95": 1128.323578,
                    "p99": 1128.323578,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 822.828664,
                    "min": 802.009882,
                    "p50": 814.3963339999999,
                    "p95": 822.828664,
                    "p99": 822.828664,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 494.03815599999996,
                    "min": 452.086999,
                    "p50": 459.346214,
                    "p95": 494.03815599999996,
                    "p99": 494.03815599999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 972.0400689999999,
                    "min": 920.5417689999999,
                    "p50": 927.8922289999999,
                    "p95": 972.0400689999999,
                    "p99": 972.0400689999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1130.467756,
                    "min": 1057.001628,
                    "p50": 1072.2896819999999,
                    "p95": 1130.467756,
                    "p99": 1130.467756,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 291.260181,
                    "min": 209.686238,
                    "p50": 226.617157,
                    "p95": 291.260181,
                    "p99": 291.260181,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 775.2168939999999,
                    "min": 743.139149,
                    "p50": 756.83727,
                    "p95": 775.2168939999999,
                    "p99": 775.2168939999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 443.854361,
                    "min": 393.512026,
                    "p50": 403.646658,
                    "p95": 443.854361,
                    "p99": 443.854361,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 298.805904,
                    "min": 280.20503199999996,
                    "p50": 284.306696,
                    "p95": 298.805904,
                    "p99": 298.805904,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1838.2704629999998,
                    "min": 1774.692411,
                    "p50": 1790.9639069999998,
                    "p95": 1838.2704629999998,
                    "p99": 1838.2704629999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 638.791619,
                    "min": 576.6983809999999,
                    "p50": 578.7815439999999,
                    "p95": 638.791619,
                    "p99": 638.791619,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 706.970543,
                    "min": 687.147084,
                    "p50": 695.560075,
                    "p95": 706.970543,
                    "p99": 706.970543,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 914.081503,
                    "min": 849.6463729999999,
                    "p50": 864.463898,
                    "p95": 914.081503,
                    "p99": 914.081503,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 444.744557,
                    "min": 338.990711,
                    "p50": 345.683224,
                    "p95": 444.744557,
                    "p99": 444.744557,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3035.3984229999996,
                    "min": 2935.329104,
                    "p50": 2968.3498139999997,
                    "p95": 3035.3984229999996,
                    "p99": 3035.3984229999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1474.514056,
                    "min": 1201.2717539999999,
                    "p50": 1211.476528,
                    "p95": 1474.514056,
                    "p99": 1474.514056,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 660.387296,
                    "min": 593.105782,
                    "p50": 632.911757,
                    "p95": 660.387296,
                    "p99": 660.387296,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 530.898143,
                    "min": 515.8327899999999,
                    "p50": 522.20323,
                    "p95": 530.898143,
                    "p99": 530.898143,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2397.173355,
                    "min": 2358.7165959999998,
                    "p50": 2369.751143,
                    "p95": 2397.173355,
                    "p99": 2397.173355,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1121.526513,
                    "min": 1048.631478,
                    "p50": 1063.694534,
                    "p95": 1121.526513,
                    "p99": 1121.526513,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 394.031641,
                    "min": 348.394817,
                    "p50": 368.221258,
                    "p95": 394.031641,
                    "p99": 394.031641,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 759.3189679999999,
                    "min": 702.2967739999999,
                    "p50": 713.711224,
                    "p95": 759.3189679999999,
                    "p99": 759.3189679999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 549.288624,
                    "min": 497.713666,
                    "p50": 508.850938,
                    "p95": 549.288624,
                    "p99": 549.288624,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 631.357723,
                    "min": 542.7123379999999,
                    "p50": 554.631673,
                    "p95": 631.357723,
                    "p99": 631.357723,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.84198999999998,
                    "min": 192.821127,
                    "p50": 204.06077499999998,
                    "p95": 210.84198999999998,
                    "p99": 210.84198999999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 649.4190619999999,
                    "min": 607.457282,
                    "p50": 619.879389,
                    "p95": 649.4190619999999,
                    "p99": 649.4190619999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 307.74015099999997,
                    "min": 294.624549,
                    "p50": 303.168187,
                    "p95": 307.74015099999997,
                    "p99": 307.74015099999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 796.7110859999999,
                    "min": 746.181486,
                    "p50": 761.288959,
                    "p95": 796.7110859999999,
                    "p99": 796.7110859999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 462.76471499999997,
                    "min": 443.829002,
                    "p50": 447.305977,
                    "p95": 462.76471499999997,
                    "p99": 462.76471499999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 970.6167449999999,
                    "min": 923.7947519999999,
                    "p50": 935.775677,
                    "p95": 970.6167449999999,
                    "p99": 970.6167449999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 693.956343,
                    "min": 652.9629739999999,
                    "p50": 664.283953,
                    "p95": 693.956343,
                    "p99": 693.956343,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 442.575952,
                    "min": 398.158961,
                    "p50": 402.330791,
                    "p95": 442.575952,
                    "p99": 442.575952,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 276.415486,
                    "min": 248.89028399999998,
                    "p50": 257.12460599999997,
                    "p95": 276.415486,
                    "p99": 276.415486,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 869.8909689999999,
                    "min": 796.661712,
                    "p50": 823.430749,
                    "p95": 869.8909689999999,
                    "p99": 869.8909689999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1628.754818,
                    "min": 1541.749144,
                    "p50": 1587.738085,
                    "p95": 1628.754818,
                    "p99": 1628.754818,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 519.885671,
                    "min": 486.57068499999997,
                    "p50": 501.48157799999996,
                    "p95": 519.885671,
                    "p99": 519.885671,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 635.718613,
                    "min": 529.104562,
                    "p50": 547.059608,
                    "p95": 635.718613,
                    "p99": 635.718613,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 300.99546399999997,
                    "min": 291.742596,
                    "p50": 299.743384,
                    "p95": 300.99546399999997,
                    "p99": 300.99546399999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 455.723308,
                    "min": 433.60600999999997,
                    "p50": 444.40187,
                    "p95": 455.723308,
                    "p99": 455.723308,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 749.826073,
                    "min": 735.006134,
                    "p50": 740.913138,
                    "p95": 749.826073,
                    "p99": 749.826073,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 252.79161599999998,
                    "min": 194.75250799999998,
                    "p50": 200.143487,
                    "p95": 252.79161599999998,
                    "p99": 252.79161599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1578.6652319999998,
                    "min": 1523.950204,
                    "p50": 1561.749486,
                    "p95": 1578.6652319999998,
                    "p99": 1578.6652319999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 604.6015,
                    "min": 563.1649689999999,
                    "p50": 595.5549629999999,
                    "p95": 604.6015,
                    "p99": 604.6015,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 705.41224,
                    "min": 687.470182,
                    "p50": 692.450377,
                    "p95": 705.41224,
                    "p99": 705.41224,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 392.291594,
                    "min": 336.908632,
                    "p50": 346.495027,
                    "p95": 392.291594,
                    "p99": 392.291594,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 961.384364,
                    "min": 907.597042,
                    "p50": 917.1067879999999,
                    "p95": 961.384364,
                    "p99": 961.384364,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 701.882535,
                    "min": 628.371631,
                    "p50": 641.597004,
                    "p95": 701.882535,
                    "p99": 701.882535,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 469.631618,
                    "min": 394.049423,
                    "p50": 399.504795,
                    "p95": 469.631618,
                    "p99": 469.631618,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2061.979974,
                    "min": 2000.6912679999998,
                    "p50": 2050.5230819999997,
                    "p95": 2061.979974,
                    "p99": 2061.979974,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 259.516754,
                    "min": 246.32142299999998,
                    "p50": 250.46228299999999,
                    "p95": 259.516754,
                    "p99": 259.516754,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 830.773705,
                    "min": 786.4546349999999,
                    "p50": 794.682726,
                    "p95": 830.773705,
                    "p99": 830.773705,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1052.3732969999999,
                    "min": 1027.3705559999999,
                    "p50": 1042.8656819999999,
                    "p95": 1052.3732969999999,
                    "p99": 1052.3732969999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 410.394277,
                    "min": 353.952859,
                    "p50": 357.743189,
                    "p95": 410.394277,
                    "p99": 410.394277,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 307.421445,
                    "min": 290.656994,
                    "p50": 305.508666,
                    "p95": 307.421445,
                    "p99": 307.421445,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 480.41130799999996,
                    "min": 444.339053,
                    "p50": 477.300011,
                    "p95": 480.41130799999996,
                    "p99": 480.41130799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 491.287807,
                    "min": 405.963258,
                    "p50": 422.550553,
                    "p95": 491.287807,
                    "p99": 491.287807,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 384.311576,
                    "min": 294.128982,
                    "p50": 331.789103,
                    "p95": 384.311576,
                    "p99": 384.311576,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 391.590302,
                    "min": 352.864284,
                    "p50": 389.60432199999997,
                    "p95": 391.590302,
                    "p99": 391.590302,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 524.431327,
                    "min": 446.97598899999997,
                    "p50": 451.881079,
                    "p95": 524.431327,
                    "p99": 524.431327,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 142.140015,
                    "min": 125.63780299999999,
                    "p50": 127.170867,
                    "p95": 142.140015,
                    "p99": 142.140015,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 179.40573799999999,
                    "min": 137.112327,
                    "p50": 157.3585,
                    "p95": 179.40573799999999,
                    "p99": 179.40573799999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 212.29142299999998,
                    "min": 185.504653,
                    "p50": 188.05669,
                    "p95": 212.29142299999998,
                    "p99": 212.29142299999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 735.899397,
                    "min": 627.4132579999999,
                    "p50": 632.714879,
                    "p95": 735.899397,
                    "p99": 735.899397,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 218.79443899999998,
                    "min": 208.571147,
                    "p50": 215.28378999999998,
                    "p95": 218.79443899999998,
                    "p99": 218.79443899999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 559.081967,
                    "min": 547.005271,
                    "p50": 554.619289,
                    "p95": 559.081967,
                    "p99": 559.081967,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.250729,
                    "min": 267.614345,
                    "p50": 275.158078,
                    "p95": 276.250729,
                    "p99": 276.250729,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 283.70217299999996,
                    "min": 238.74461599999998,
                    "p50": 243.72014299999998,
                    "p95": 283.70217299999996,
                    "p99": 283.70217299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 97.899774,
                    "min": 72.882402,
                    "p50": 88.356787,
                    "p95": 97.899774,
                    "p99": 97.899774,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 159.854129,
                    "min": 137.049727,
                    "p50": 152.392518,
                    "p95": 159.854129,
                    "p99": 159.854129,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 188.43833899999998,
                    "min": 156.67385,
                    "p50": 161.11342399999998,
                    "p95": 188.43833899999998,
                    "p99": 188.43833899999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 51.762812,
                    "min": 31.011989,
                    "p50": 32.041188,
                    "p95": 51.762812,
                    "p99": 51.762812,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 99.61988199999999,
                    "min": 94.119537,
                    "p50": 98.136866,
                    "p95": 99.61988199999999,
                    "p99": 99.61988199999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 183.07955199999998,
                    "min": 138.519104,
                    "p50": 173.58237699999998,
                    "p95": 183.07955199999998,
                    "p99": 183.07955199999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 43.54529,
                    "min": 38.711318,
                    "p50": 40.289065,
                    "p95": 43.54529,
                    "p99": 43.54529,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 71.228512,
                    "min": 63.371907,
                    "p50": 69.32149199999999,
                    "p95": 71.228512,
                    "p99": 71.228512,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 85.72197,
                    "min": 73.659577,
                    "p50": 79.09756399999999,
                    "p95": 85.72197,
                    "p99": 85.72197,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 250.70284199999998,
                    "min": 202.39582199999998,
                    "p50": 226.994476,
                    "p95": 250.70284199999998,
                    "p99": 250.70284199999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 283.62634199999997,
                    "min": 246.03247499999998,
                    "p50": 260.76935399999996,
                    "p95": 283.62634199999997,
                    "p99": 283.62634199999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 89.24274199999999,
                    "min": 66.45549299999999,
                    "p50": 79.823041,
                    "p95": 89.24274199999999,
                    "p99": 89.24274199999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 650.3514329999999,
                    "min": 645.213793,
                    "p50": 649.314392,
                    "p95": 650.3514329999999,
                    "p99": 650.3514329999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.002464999999997,
                    "min": 24.526874,
                    "p50": 24.625534,
                    "p95": 28.002464999999997,
                    "p99": 28.002464999999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 61.380845,
                    "min": 55.750097999999994,
                    "p50": 59.524611,
                    "p95": 61.380845,
                    "p99": 61.380845,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 368.777501,
                    "min": 345.250544,
                    "p50": 351.63712499999997,
                    "p95": 368.777501,
                    "p99": 368.777501,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 331.94705899999997,
                    "min": 264.557868,
                    "p50": 301.422028,
                    "p95": 331.94705899999997,
                    "p99": 331.94705899999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 292.269861,
                    "min": 210.22079599999998,
                    "p50": 262.449364,
                    "p95": 292.269861,
                    "p99": 292.269861,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 314.324931,
                    "min": 256.619112,
                    "p50": 287.590627,
                    "p95": 314.324931,
                    "p99": 314.324931,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 182.20233199999998,
                    "min": 141.783291,
                    "p50": 164.15426599999998,
                    "p95": 182.20233199999998,
                    "p99": 182.20233199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 830.487091,
                    "min": 732.0122719999999,
                    "p50": 799.540048,
                    "p95": 830.487091,
                    "p99": 830.487091,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 519.8152249999999,
                    "min": 408.097181,
                    "p50": 478.98918499999996,
                    "p95": 519.8152249999999,
                    "p99": 519.8152249999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 378.53774899999996,
                    "min": 352.535893,
                    "p50": 360.76086699999996,
                    "p95": 378.53774899999996,
                    "p99": 378.53774899999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 367.24896,
                    "min": 314.14713,
                    "p50": 340.178289,
                    "p95": 367.24896,
                    "p99": 367.24896,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 231.66487899999998,
                    "min": 191.356155,
                    "p50": 207.239533,
                    "p95": 231.66487899999998,
                    "p99": 231.66487899999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 591.924449,
                    "min": 476.84461,
                    "p50": 523.524762,
                    "p95": 591.924449,
                    "p99": 591.924449,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 125.80375699999999,
                    "min": 90.70389999999999,
                    "p50": 110.73441899999999,
                    "p95": 125.80375699999999,
                    "p99": 125.80375699999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 448.365318,
                    "min": 345.250573,
                    "p50": 397.322325,
                    "p95": 448.365318,
                    "p99": 448.365318,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 258.24717799999996,
                    "min": 202.40117999999998,
                    "p50": 227.81187799999998,
                    "p95": 258.24717799999996,
                    "p99": 258.24717799999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 204.627694,
                    "min": 154.331451,
                    "p50": 177.58423499999998,
                    "p95": 204.627694,
                    "p99": 204.627694,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 148.993708,
                    "min": 110.732141,
                    "p50": 133.760248,
                    "p95": 148.993708,
                    "p99": 148.993708,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 388.54709099999997,
                    "min": 354.514959,
                    "p50": 380.523031,
                    "p95": 388.54709099999997,
                    "p99": 388.54709099999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 562.024826,
                    "min": 536.588412,
                    "p50": 556.706131,
                    "p95": 562.024826,
                    "p99": 562.024826,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.99500999999998,
                    "min": 111.90544899999999,
                    "p50": 126.698112,
                    "p95": 145.99500999999998,
                    "p99": 145.99500999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 398.494707,
                    "min": 379.35357899999997,
                    "p50": 393.699007,
                    "p95": 398.494707,
                    "p99": 398.494707,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 492.175622,
                    "min": 417.783858,
                    "p50": 423.002502,
                    "p95": 492.175622,
                    "p99": 492.175622,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 179.765379,
                    "min": 155.83723,
                    "p50": 157.323293,
                    "p95": 179.765379,
                    "p99": 179.765379,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 423.971565,
                    "min": 327.417175,
                    "p50": 363.000966,
                    "p95": 423.971565,
                    "p99": 423.971565,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 486.64329299999997,
                    "min": 476.991262,
                    "p50": 483.89496599999995,
                    "p95": 486.64329299999997,
                    "p99": 486.64329299999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 216.929612,
                    "min": 178.117782,
                    "p50": 215.13772899999998,
                    "p95": 216.929612,
                    "p99": 216.929612,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 356.364896,
                    "min": 299.356855,
                    "p50": 304.741989,
                    "p95": 356.364896,
                    "p99": 356.364896,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 316.691874,
                    "min": 236.79511,
                    "p50": 276.196672,
                    "p95": 316.691874,
                    "p99": 316.691874,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 737.218222,
                    "min": 592.715889,
                    "p50": 628.397036,
                    "p95": 737.218222,
                    "p99": 737.218222,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 385.7058,
                    "min": 320.934403,
                    "p50": 335.327877,
                    "p95": 385.7058,
                    "p99": 385.7058,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 279.1217,
                    "min": 242.10661199999998,
                    "p50": 244.090961,
                    "p95": 279.1217,
                    "p99": 279.1217,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.006351,
                    "min": 183.754436,
                    "p50": 185.62490499999998,
                    "p95": 214.006351,
                    "p99": 214.006351,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 453.591123,
                    "min": 441.96689999999995,
                    "p50": 451.2765,
                    "p95": 453.591123,
                    "p99": 453.591123,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 32.061603,
                    "min": 24.580821999999998,
                    "p50": 30.460987,
                    "p95": 32.061603,
                    "p99": 32.061603,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.819048,
                    "min": 24.127713999999997,
                    "p50": 24.628629,
                    "p95": 24.819048,
                    "p99": 24.819048,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 76.36466899999999,
                    "min": 69.50510899999999,
                    "p50": 75.210099,
                    "p95": 76.36466899999999,
                    "p99": 76.36466899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 153.453066,
                    "min": 125.616084,
                    "p50": 144.445532,
                    "p95": 153.453066,
                    "p99": 153.453066,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.10773,
                    "min": 22.840289,
                    "p50": 24.455175999999998,
                    "p95": 26.10773,
                    "p99": 26.10773,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.690016999999997,
                    "min": 24.281032999999997,
                    "p50": 24.546512999999997,
                    "p95": 24.690016999999997,
                    "p99": 24.690016999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 62.730194999999995,
                    "min": 57.771525,
                    "p50": 60.129087999999996,
                    "p95": 62.730194999999995,
                    "p99": 62.730194999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 25.135226,
                    "min": 22.653959,
                    "p50": 24.477802,
                    "p95": 25.135226,
                    "p99": 25.135226,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 61.350946,
                    "min": 32.294171,
                    "p50": 57.964341999999995,
                    "p95": 61.350946,
                    "p99": 61.350946,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.587028,
                    "min": 24.513658,
                    "p50": 26.426731,
                    "p95": 27.587028,
                    "p99": 27.587028,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 45.959933,
                    "min": 42.657506999999995,
                    "p50": 43.658871999999995,
                    "p95": 45.959933,
                    "p99": 45.959933,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.750145,
                    "min": 18.614791999999998,
                    "p50": 24.696219,
                    "p95": 24.750145,
                    "p99": 24.750145,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.911901,
                    "min": 24.113097999999997,
                    "p50": 24.383626,
                    "p95": 24.911901,
                    "p99": 24.911901,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 25.116898,
                    "min": 23.063278,
                    "p50": 24.490624999999998,
                    "p95": 25.116898,
                    "p99": 25.116898,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.881294999999998,
                    "min": 23.246316999999998,
                    "p50": 24.377577,
                    "p95": 24.881294999999998,
                    "p99": 24.881294999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 25.388424,
                    "min": 23.973308,
                    "p50": 24.549284,
                    "p95": 25.388424,
                    "p99": 25.388424,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.067197,
                    "min": 24.341637,
                    "p50": 24.605642,
                    "p95": 27.067197,
                    "p99": 27.067197,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.96068,
                    "min": 23.845133,
                    "p50": 24.252019999999998,
                    "p95": 24.96068,
                    "p99": 24.96068,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 25.805031,
                    "min": 20.432629,
                    "p50": 24.222462999999998,
                    "p95": 25.805031,
                    "p99": 25.805031,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 141.00725699999998,
                    "min": 106.905478,
                    "p50": 139.21123799999998,
                    "p95": 141.00725699999998,
                    "p99": 141.00725699999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 99.009802,
                    "min": 97.15312399999999,
                    "p50": 98.010697,
                    "p95": 99.009802,
                    "p99": 99.009802,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 206.162207,
                    "min": 202.55696899999998,
                    "p50": 203.380774,
                    "p95": 206.162207,
                    "p99": 206.162207,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 111.589975,
                    "min": 71.89108999999999,
                    "p50": 110.389029,
                    "p95": 111.589975,
                    "p99": 111.589975,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 170.149349,
                    "min": 156.342141,
                    "p50": 168.589733,
                    "p95": 170.149349,
                    "p99": 170.149349,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 626.535221,
                    "min": 607.340469,
                    "p50": 621.36054,
                    "p95": 626.535221,
                    "p99": 626.535221,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 158.171146,
                    "min": 142.19481299999998,
                    "p50": 156.860623,
                    "p95": 158.171146,
                    "p99": 158.171146,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.95940099999999,
                    "min": 181.63946299999998,
                    "p50": 192.12337,
                    "p95": 194.95940099999999,
                    "p99": 194.95940099999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 250.51869399999998,
                    "min": 240.452418,
                    "p50": 245.569561,
                    "p95": 250.51869399999998,
                    "p99": 250.51869399999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 133.155059,
                    "min": 95.74073399999999,
                    "p50": 132.488025,
                    "p95": 133.155059,
                    "p99": 133.155059,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 512.165575,
                    "min": 468.78789,
                    "p50": 507.805914,
                    "p95": 512.165575,
                    "p99": 512.165575,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 125.569959,
                    "min": 85.33520899999999,
                    "p50": 121.18858499999999,
                    "p95": 125.569959,
                    "p99": 125.569959,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.792701,
                    "min": 171.957604,
                    "p50": 179.81443299999998,
                    "p95": 183.792701,
                    "p99": 183.792701,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 397.067839,
                    "min": 358.236287,
                    "p50": 395.104806,
                    "p95": 397.067839,
                    "p99": 397.067839,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 88.138993,
                    "min": 69.461351,
                    "p50": 86.77367,
                    "p95": 88.138993,
                    "p99": 88.138993,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1251.545185,
                    "min": 1170.803367,
                    "p50": 1202.211761,
                    "p95": 1251.545185,
                    "p99": 1251.545185,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 71.14877899999999,
                    "min": 36.016698,
                    "p50": 70.142023,
                    "p95": 71.14877899999999,
                    "p99": 71.14877899999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 219.674373,
                    "min": 185.842263,
                    "p50": 216.107719,
                    "p95": 219.674373,
                    "p99": 219.674373,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 281.832018,
                    "min": 266.919483,
                    "p50": 273.936446,
                    "p95": 281.832018,
                    "p99": 281.832018,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.871544999999998,
                    "min": 24.118133,
                    "p50": 24.476433999999998,
                    "p95": 24.871544999999998,
                    "p99": 24.871544999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.708287,
                    "min": 18.349470999999998,
                    "p50": 24.343252,
                    "p95": 24.708287,
                    "p99": 24.708287,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.808023,
                    "min": 24.238535,
                    "p50": 24.558262,
                    "p95": 24.808023,
                    "p99": 24.808023,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.904576,
                    "min": 23.940310999999998,
                    "p50": 24.591718999999998,
                    "p95": 26.904576,
                    "p99": 26.904576,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 25.03558,
                    "min": 23.88347,
                    "p50": 24.619719,
                    "p95": 25.03558,
                    "p99": 25.03558,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.199579999999997,
                    "min": 24.350486999999998,
                    "p50": 26.856973,
                    "p95": 27.199579999999997,
                    "p99": 27.199579999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.525472,
                    "min": 24.184226,
                    "p50": 24.397705,
                    "p95": 24.525472,
                    "p99": 24.525472,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 25.534816,
                    "min": 24.333208,
                    "p50": 24.513955,
                    "p95": 25.534816,
                    "p99": 25.534816,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 44.862155,
                    "min": 38.252725999999996,
                    "p50": 44.110479999999995,
                    "p95": 44.862155,
                    "p99": 44.862155,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.734417999999998,
                    "min": 22.819584,
                    "p50": 24.25609,
                    "p95": 24.734417999999998,
                    "p99": 24.734417999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.652131999999998,
                    "min": 23.990759,
                    "p50": 24.440116999999997,
                    "p95": 26.652131999999998,
                    "p99": 26.652131999999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.559934,
                    "min": 24.155013,
                    "p50": 24.303857999999998,
                    "p95": 24.559934,
                    "p99": 24.559934,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.490938999999997,
                    "min": 23.996071,
                    "p50": 24.551803,
                    "p95": 26.490938999999997,
                    "p99": 26.490938999999997,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 26.649856,
                    "min": 20.42373,
                    "p50": 24.614541,
                    "p95": 26.649856,
                    "p99": 26.649856,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 91.55869299999999,
                    "min": 78.00219899999999,
                    "p50": 87.829092,
                    "p95": 91.55869299999999,
                    "p99": 91.55869299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 28.160365,
                    "min": 24.139885,
                    "p50": 24.389004999999997,
                    "p95": 28.160365,
                    "p99": 28.160365,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 35.404364,
                    "min": 25.683183,
                    "p50": 33.358658999999996,
                    "p95": 35.404364,
                    "p99": 35.404364,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.20619,
                    "min": 24.402946999999998,
                    "p50": 24.965529999999998,
                    "p95": 27.20619,
                    "p99": 27.20619,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.706162,
                    "min": 23.139181,
                    "p50": 24.576421999999997,
                    "p95": 26.706162,
                    "p99": 26.706162,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 31.407421,
                    "min": 23.491180999999997,
                    "p50": 24.292787999999998,
                    "p95": 31.407421,
                    "p99": 31.407421,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 25.196336,
                    "min": 24.211904999999998,
                    "p50": 24.509282,
                    "p95": 25.196336,
                    "p99": 25.196336,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.830561,
                    "min": 24.344603,
                    "p50": 24.429575999999997,
                    "p95": 24.830561,
                    "p99": 24.830561,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 24.916166,
                    "min": 24.182873999999998,
                    "p50": 24.590591999999997,
                    "p95": 24.916166,
                    "p99": 24.916166,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.732008,
                    "min": 23.984628999999998,
                    "p50": 24.378318,
                    "p95": 24.732008,
                    "p99": 24.732008,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 28.118285,
                    "min": 21.981274,
                    "p50": 24.30907,
                    "p95": 28.118285,
                    "p99": 28.118285,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.091165,
                    "min": 22.380442,
                    "p50": 24.306113,
                    "p95": 27.091165,
                    "p99": 27.091165,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 26.445231999999997,
                    "min": 23.744374,
                    "p50": 24.497877,
                    "p95": 26.445231999999997,
                    "p99": 26.445231999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.94308,
                    "min": 24.062374,
                    "p50": 24.709118,
                    "p95": 24.94308,
                    "p99": 24.94308,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 24.673453,
                    "min": 24.273339,
                    "p50": 24.517954,
                    "p95": 24.673453,
                    "p99": 24.673453,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.833790999999998,
                    "min": 24.283281,
                    "p50": 24.478765,
                    "p95": 26.833790999999998,
                    "p99": 26.833790999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 24.728257,
                    "min": 24.345809,
                    "p50": 24.630789,
                    "p95": 24.728257,
                    "p99": 24.728257,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 25.070587,
                    "min": 23.978877999999998,
                    "p50": 24.276571,
                    "p95": 25.070587,
                    "p99": 25.070587,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 24.926941,
                    "min": 24.345008999999997,
                    "p50": 24.538283999999997,
                    "p95": 24.926941,
                    "p99": 24.926941,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.283516,
                    "min": 23.936730999999998,
                    "p50": 24.696877999999998,
                    "p95": 27.283516,
                    "p99": 27.283516,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 47.634873999999996,
                    "min": 24.389315,
                    "p50": 45.315838,
                    "p95": 47.634873999999996,
                    "p99": 47.634873999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.413584,
                    "min": 23.849003,
                    "p50": 24.601979999999998,
                    "p95": 27.413584,
                    "p99": 27.413584,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 26.442760999999997,
                    "min": 18.285715,
                    "p50": 24.526414,
                    "p95": 26.442760999999997,
                    "p99": 26.442760999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 26.592387,
                    "min": 24.273981,
                    "p50": 24.718847,
                    "p95": 26.592387,
                    "p99": 26.592387,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 154.459716,
                    "min": 119.112307,
                    "p50": 148.183194,
                    "p95": 154.459716,
                    "p99": 154.459716,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 73.76448599999999,
                    "min": 69.832537,
                    "p50": 70.615853,
                    "p95": 73.76448599999999,
                    "p99": 73.76448599999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1246.813717,
                    "min": 1169.75259,
                    "p50": 1208.717019,
                    "p95": 1246.813717,
                    "p99": 1246.813717,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 278.590727,
                    "min": 249.717367,
                    "p50": 274.760622,
                    "p95": 278.590727,
                    "p99": 278.590727,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 125.438434,
                    "min": 83.10280999999999,
                    "p50": 122.00105599999999,
                    "p95": 125.438434,
                    "p99": 125.438434,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.56456899999999,
                    "min": 47.984587999999995,
                    "p50": 82.76482899999999,
                    "p95": 86.56456899999999,
                    "p99": 86.56456899999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 113.043578,
                    "min": 71.70376499999999,
                    "p50": 109.65207699999999,
                    "p95": 113.043578,
                    "p99": 113.043578,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 394.134212,
                    "min": 385.33421799999996,
                    "p50": 390.124219,
                    "p95": 394.134212,
                    "p99": 394.134212,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 194.532142,
                    "min": 190.947996,
                    "p50": 194.051685,
                    "p95": 194.532142,
                    "p99": 194.532142,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 172.042488,
                    "min": 129.424732,
                    "p50": 168.496007,
                    "p95": 172.042488,
                    "p99": 172.042488,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 518.3897,
                    "min": 499.33185499999996,
                    "p50": 505.48891,
                    "p95": 518.3897,
                    "p99": 518.3897,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 639.885198,
                    "min": 621.28337,
                    "p50": 624.1874429999999,
                    "p95": 639.885198,
                    "p99": 639.885198,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 209.092265,
                    "min": 199.38352799999998,
                    "p50": 204.776122,
                    "p95": 209.092265,
                    "p99": 209.092265,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 101.126364,
                    "min": 60.08877,
                    "p50": 98.900021,
                    "p95": 101.126364,
                    "p99": 101.126364,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 262.873994,
                    "min": 231.382703,
                    "p50": 246.73672,
                    "p95": 262.873994,
                    "p99": 262.873994,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 149.06859,
                    "min": 128.605339,
                    "p50": 145.608699,
                    "p95": 149.06859,
                    "p99": 149.06859,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.723762,
                    "min": 141.739046,
                    "p50": 180.79342,
                    "p95": 183.723762,
                    "p99": 183.723762,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 222.472493,
                    "min": 176.627975,
                    "p50": 217.06392599999998,
                    "p95": 222.472493,
                    "p99": 222.472493,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 138.472711,
                    "min": 132.694121,
                    "p50": 134.556364,
                    "p95": 138.472711,
                    "p99": 138.472711,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 778.552386,
                    "min": 769.0981409999999,
                    "p50": 775.5752269999999,
                    "p95": 778.552386,
                    "p99": 778.552386,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.856419,
                    "min": 125.655076,
                    "p50": 131.14594,
                    "p95": 137.856419,
                    "p99": 137.856419,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 255.24745199999998,
                    "min": 229.642719,
                    "p50": 249.00622399999997,
                    "p95": 255.24745199999998,
                    "p99": 255.24745199999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 387.68287799999996,
                    "min": 378.868317,
                    "p50": 383.59718,
                    "p95": 387.68287799999996,
                    "p99": 387.68287799999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 152.669109,
                    "min": 114.03401,
                    "p50": 151.384663,
                    "p95": 152.669109,
                    "p99": 152.669109,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 406.918749,
                    "min": 366.589365,
                    "p50": 403.183108,
                    "p95": 406.918749,
                    "p99": 406.918749,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 234.630713,
                    "min": 195.643656,
                    "p50": 229.421232,
                    "p95": 234.630713,
                    "p99": 234.630713,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 453.95633,
                    "min": 425.497794,
                    "p50": 449.078808,
                    "p95": 453.95633,
                    "p99": 453.95633,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 191.24594299999998,
                    "min": 187.929038,
                    "p50": 188.73313199999998,
                    "p95": 191.24594299999998,
                    "p99": 191.24594299999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 269.944418,
                    "min": 256.985612,
                    "p50": 268.142115,
                    "p95": 269.944418,
                    "p99": 269.944418,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 979.5653289999999,
                    "min": 963.301119,
                    "p50": 968.571975,
                    "p95": 979.5653289999999,
                    "p99": 979.5653289999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 296.410525,
                    "min": 251.0718,
                    "p50": 289.14813599999997,
                    "p95": 296.410525,
                    "p99": 296.410525,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 210.806359,
                    "min": 190.40804799999998,
                    "p50": 209.542937,
                    "p95": 210.806359,
                    "p99": 210.806359,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 347.872014,
                    "min": 336.16654,
                    "p50": 343.354765,
                    "p95": 347.872014,
                    "p99": 347.872014,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.17486,
                    "min": 104.191138,
                    "p50": 108.95669799999999,
                    "p95": 112.17486,
                    "p99": 112.17486,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 366.08901199999997,
                    "min": 361.13053199999996,
                    "p50": 364.096593,
                    "p95": 366.08901199999997,
                    "p99": 366.08901199999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 506.125799,
                    "min": 493.09820299999996,
                    "p50": 503.81125899999995,
                    "p95": 506.125799,
                    "p99": 506.125799,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1315.9896059999999,
                    "min": 1280.240631,
                    "p50": 1306.875174,
                    "p95": 1315.9896059999999,
                    "p99": 1315.9896059999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.92691,
                    "min": 201.868133,
                    "p50": 212.08110499999998,
                    "p95": 213.92691,
                    "p99": 213.92691,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 390.591619,
                    "min": 350.635894,
                    "p50": 387.488475,
                    "p95": 390.591619,
                    "p99": 390.591619,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 331.168404,
                    "min": 291.670462,
                    "p50": 328.85979699999996,
                    "p95": 331.168404,
                    "p99": 331.168404,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 626.790675,
                    "min": 580.8020359999999,
                    "p50": 617.108741,
                    "p95": 626.790675,
                    "p99": 626.790675,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 561.616536,
                    "min": 550.621895,
                    "p50": 557.576374,
                    "p95": 561.616536,
                    "p99": 561.616536,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 735.794676,
                    "min": 698.4974129999999,
                    "p50": 728.224202,
                    "p95": 735.794676,
                    "p99": 735.794676,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 915.9071319999999,
                    "min": 883.098519,
                    "p50": 904.460166,
                    "p95": 915.9071319999999,
                    "p99": 915.9071319999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 797.429848,
                    "min": 770.270278,
                    "p50": 788.05039,
                    "p95": 797.429848,
                    "p99": 797.429848,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 679.393281,
                    "min": 663.948757,
                    "p50": 677.51582,
                    "p95": 679.393281,
                    "p99": 679.393281,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1201.4202659999999,
                    "min": 1178.122175,
                    "p50": 1197.4801,
                    "p95": 1201.4202659999999,
                    "p99": 1201.4202659999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 447.234038,
                    "min": 399.987324,
                    "p50": 442.885315,
                    "p95": 447.234038,
                    "p99": 447.234038,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.69878,
                    "min": 228.71060599999998,
                    "p50": 270.018573,
                    "p95": 271.69878,
                    "p99": 271.69878,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1053.708959,
                    "min": 1021.521624,
                    "p50": 1052.031511,
                    "p95": 1053.708959,
                    "p99": 1053.708959,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 505.063449,
                    "min": 484.7484,
                    "p50": 501.77426399999996,
                    "p95": 505.063449,
                    "p99": 505.063449,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 852.529424,
                    "min": 800.761801,
                    "p50": 841.440431,
                    "p95": 852.529424,
                    "p99": 852.529424,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 945.6279639999999,
                    "min": 919.682071,
                    "p50": 934.6075659999999,
                    "p95": 945.6279639999999,
                    "p99": 945.6279639999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2038.090193,
                    "min": 1968.792947,
                    "p50": 2005.514956,
                    "p95": 2038.090193,
                    "p99": 2038.090193,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2889.869275,
                    "min": 2841.2576569999997,
                    "p50": 2852.6321749999997,
                    "p95": 2889.869275,
                    "p99": 2889.869275,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5755.069818999999,
                    "min": 5660.252174,
                    "p50": 5697.879647,
                    "p95": 5755.069818999999,
                    "p99": 5755.069818999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1604.61339,
                    "min": 1581.929498,
                    "p50": 1596.616057,
                    "p95": 1604.61339,
                    "p99": 1604.61339,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 752.021618,
                    "min": 731.2633109999999,
                    "p50": 746.7744,
                    "p95": 752.021618,
                    "p99": 752.021618,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 609.956059,
                    "min": 595.355315,
                    "p50": 606.11032,
                    "p95": 609.956059,
                    "p99": 609.956059,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1751.040739,
                    "min": 1703.121308,
                    "p50": 1735.87567,
                    "p95": 1751.040739,
                    "p99": 1751.040739,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4317.256307,
                    "min": 4233.591641999999,
                    "p50": 4272.436931,
                    "p95": 4317.256307,
                    "p99": 4317.256307,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2517.5039589999997,
                    "min": 2461.095135,
                    "p50": 2493.475447,
                    "p95": 2517.5039589999997,
                    "p99": 2517.5039589999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2177.4397329999997,
                    "min": 2125.9977599999997,
                    "p50": 2148.106503,
                    "p95": 2177.4397329999997,
                    "p99": 2177.4397329999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1179.629933,
                    "min": 1132.926541,
                    "p50": 1163.818565,
                    "p95": 1179.629933,
                    "p99": 1179.629933,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1464.034103,
                    "min": 1408.568022,
                    "p50": 1453.018003,
                    "p95": 1464.034103,
                    "p99": 1464.034103,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1037.7737849999999,
                    "min": 1018.2595699999999,
                    "p50": 1027.3932089999998,
                    "p95": 1037.7737849999999,
                    "p99": 1037.7737849999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 468.02112999999997,
                    "min": 427.0857,
                    "p50": 462.737776,
                    "p95": 468.02112999999997,
                    "p99": 468.02112999999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1893.3387,
                    "min": 1851.2838439999998,
                    "p50": 1877.586143,
                    "p95": 1893.3387,
                    "p99": 1893.3387,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1324.1654409999999,
                    "min": 1306.441866,
                    "p50": 1314.8070249999998,
                    "p95": 1324.1654409999999,
                    "p99": 1324.1654409999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 432.75418199999996,
                    "min": 387.56629899999996,
                    "p50": 427.196221,
                    "p95": 432.75418199999996,
                    "p99": 432.75418199999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1314.032898,
                    "min": 1288.274134,
                    "p50": 1295.861836,
                    "p95": 1314.032898,
                    "p99": 1314.032898,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2641.149208,
                    "min": 2601.8894609999998,
                    "p50": 2609.3068089999997,
                    "p95": 2641.149208,
                    "p99": 2641.149208,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1457.881909,
                    "min": 1400.888449,
                    "p50": 1444.437907,
                    "p95": 1457.881909,
                    "p99": 1457.881909,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3802.3212,
                    "min": 3755.3669379999997,
                    "p50": 3784.6505119999997,
                    "p95": 3802.3212,
                    "p99": 3802.3212,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 813.30948,
                    "min": 762.618037,
                    "p50": 806.2244499999999,
                    "p95": 813.30948,
                    "p99": 813.30948,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1219.417017,
                    "min": 1176.168817,
                    "p50": 1203.636845,
                    "p95": 1219.417017,
                    "p99": 1219.417017,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5011.195514999999,
                    "min": 4936.919862,
                    "p50": 4973.999471,
                    "p95": 5011.195514999999,
                    "p99": 5011.195514999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 692.077469,
                    "min": 651.957933,
                    "p50": 686.359654,
                    "p95": 692.077469,
                    "p99": 692.077469,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1737.515193,
                    "min": 1679.98095,
                    "p50": 1714.762487,
                    "p95": 1737.515193,
                    "p99": 1737.515193,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 915.2207599999999,
                    "min": 879.106555,
                    "p50": 910.9187069999999,
                    "p95": 915.2207599999999,
                    "p99": 915.2207599999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 550.033267,
                    "min": 513.239613,
                    "p50": 544.33412,
                    "p95": 550.033267,
                    "p99": 550.033267,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1971.6661459999998,
                    "min": 1916.80191,
                    "p50": 1955.5662599999998,
                    "p95": 1971.6661459999998,
                    "p99": 1971.6661459999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1847.4540029999998,
                    "min": 1831.217248,
                    "p50": 1839.270654,
                    "p95": 1847.4540029999998,
                    "p99": 1847.4540029999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2275.2836509999997,
                    "min": 2177.137979,
                    "p50": 2226.503817,
                    "p95": 2275.2836509999997,
                    "p99": 2275.2836509999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1056.139215,
                    "min": 1003.524147,
                    "p50": 1039.205147,
                    "p95": 1056.139215,
                    "p99": 1056.139215,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1580.4332299999999,
                    "min": 1518.5173829999999,
                    "p50": 1559.4227389999999,
                    "p95": 1580.4332299999999,
                    "p99": 1580.4332299999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 911.409784,
                    "min": 878.962455,
                    "p50": 890.346048,
                    "p95": 911.409784,
                    "p99": 911.409784,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 655.938412,
                    "min": 631.141815,
                    "p50": 651.488893,
                    "p95": 655.938412,
                    "p99": 655.938412,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1272.93973,
                    "min": 1254.158666,
                    "p50": 1261.287306,
                    "p95": 1272.93973,
                    "p99": 1272.93973,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1889.5200499999999,
                    "min": 1865.414616,
                    "p50": 1880.953217,
                    "p95": 1889.5200499999999,
                    "p99": 1889.5200499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 6217.343917,
                    "min": 6101.344233,
                    "p50": 6137.002863,
                    "p95": 6217.343917,
                    "p99": 6217.343917,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2507.196188,
                    "min": 2447.86526,
                    "p50": 2466.0269359999998,
                    "p95": 2507.196188,
                    "p99": 2507.196188,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 718.2982129999999,
                    "min": 671.863219,
                    "p50": 711.49714,
                    "p95": 718.2982129999999,
                    "p99": 718.2982129999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.827305,
                    "min": 219.89307699999998,
                    "p50": 222.733376,
                    "p95": 224.827305,
                    "p99": 224.827305,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3146.3697389999998,
                    "min": 3067.514341,
                    "p50": 3106.914711,
                    "p95": 3146.3697389999998,
                    "p99": 3146.3697389999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.776098,
                    "min": 445.43377999999996,
                    "p50": 466.80400399999996,
                    "p95": 474.776098,
                    "p99": 474.776098,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 532.6097169999999,
                    "min": 523.708903,
                    "p50": 526.898294,
                    "p95": 532.6097169999999,
                    "p99": 532.6097169999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 594.74043,
                    "min": 577.765711,
                    "p50": 588.636831,
                    "p95": 594.74043,
                    "p99": 594.74043,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1119.28967,
                    "min": 1069.796997,
                    "p50": 1104.818341,
                    "p95": 1119.28967,
                    "p99": 1119.28967,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.107467,
                    "min": 330.98560699999996,
                    "p50": 344.495539,
                    "p95": 350.107467,
                    "p99": 350.107467,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 410.87806,
                    "min": 398.975601,
                    "p50": 407.28396399999997,
                    "p95": 410.87806,
                    "p99": 410.87806,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 963.029424,
                    "min": 931.388548,
                    "p50": 950.7835399999999,
                    "p95": 963.029424,
                    "p99": 963.029424,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 777.0876099999999,
                    "min": 748.609622,
                    "p50": 768.0295269999999,
                    "p95": 777.0876099999999,
                    "p99": 777.0876099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 287.43844,
                    "min": 283.380108,
                    "p50": 286.010869,
                    "p95": 287.43844,
                    "p99": 287.43844,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 846.05674,
                    "min": 822.96678,
                    "p50": 837.790129,
                    "p95": 846.05674,
                    "p99": 846.05674,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3397.712223,
                    "min": 3335.873552,
                    "p50": 3355.46604,
                    "p95": 3397.712223,
                    "p99": 3397.712223,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1388.877411,
                    "min": 1360.515813,
                    "p50": 1376.349409,
                    "p95": 1388.877411,
                    "p99": 1388.877411,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1005.702905,
                    "min": 981.170405,
                    "p50": 986.4414959999999,
                    "p95": 1005.702905,
                    "p99": 1005.702905,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2352.607447,
                    "min": 2310.309187,
                    "p50": 2325.988342,
                    "p95": 2352.607447,
                    "p99": 2352.607447,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1585.299606,
                    "min": 1548.661721,
                    "p50": 1568.671917,
                    "p95": 1585.299606,
                    "p99": 1585.299606,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7696.970396,
                    "min": 7594.368173,
                    "p50": 7628.278429999999,
                    "p95": 7696.970396,
                    "p99": 7696.970396,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2161.70266,
                    "min": 2097.78348,
                    "p50": 2134.510346,
                    "p95": 2161.70266,
                    "p99": 2161.70266,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1193.952577,
                    "min": 1163.452055,
                    "p50": 1180.119442,
                    "p95": 1193.952577,
                    "p99": 1193.952577,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2526.32996,
                    "min": 2457.913915,
                    "p50": 2500.25476,
                    "p95": 2526.32996,
                    "p99": 2526.32996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5842.735315999999,
                    "min": 5698.987641,
                    "p50": 5728.117517,
                    "p95": 5842.735315999999,
                    "p99": 5842.735315999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2912.908555,
                    "min": 2851.966216,
                    "p50": 2884.657428,
                    "p95": 2912.908555,
                    "p99": 2912.908555,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3837.12057,
                    "min": 3794.969409,
                    "p50": 3826.2623839999997,
                    "p95": 3837.12057,
                    "p99": 3837.12057,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 614.854377,
                    "min": 602.530341,
                    "p50": 610.581524,
                    "p95": 614.854377,
                    "p99": 614.854377,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2733.9374949999997,
                    "min": 2666.587876,
                    "p50": 2685.988147,
                    "p95": 2733.9374949999997,
                    "p99": 2733.9374949999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 814.5099879999999,
                    "min": 795.2644379999999,
                    "p50": 804.4459539999999,
                    "p95": 814.5099879999999,
                    "p99": 814.5099879999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1947.156699,
                    "min": 1929.056928,
                    "p50": 1934.0954809999998,
                    "p95": 1947.156699,
                    "p99": 1947.156699,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1759.71618,
                    "min": 1741.1010749999998,
                    "p50": 1749.935358,
                    "p95": 1759.71618,
                    "p99": 1759.71618,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2909.0528059999997,
                    "min": 2852.5067999999997,
                    "p50": 2879.1803889999996,
                    "p95": 2909.0528059999997,
                    "p99": 2909.0528059999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 804.604879,
                    "min": 789.9840439999999,
                    "p50": 797.672012,
                    "p95": 804.604879,
                    "p99": 804.604879,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1777.887059,
                    "min": 1730.0894079999998,
                    "p50": 1747.062647,
                    "p95": 1777.887059,
                    "p99": 1777.887059,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2524.5619589999997,
                    "min": 2479.6210539999997,
                    "p50": 2508.1133259999997,
                    "p95": 2524.5619589999997,
                    "p99": 2524.5619589999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1950.06809,
                    "min": 1923.467878,
                    "p50": 1942.906516,
                    "p95": 1950.06809,
                    "p99": 1950.06809,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2150.014171,
                    "min": 2103.13177,
                    "p50": 2119.762812,
                    "p95": 2150.014171,
                    "p99": 2150.014171,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3886.9234739999997,
                    "min": 3787.179401,
                    "p50": 3812.3765439999997,
                    "p95": 3886.9234739999997,
                    "p99": 3886.9234739999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5775.454097,
                    "min": 5683.995268,
                    "p50": 5710.627879,
                    "p95": 5775.454097,
                    "p99": 5775.454097,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2336.982845,
                    "min": 2281.575162,
                    "p50": 2314.375688,
                    "p95": 2336.982845,
                    "p99": 2336.982845,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1003.3446839999999,
                    "min": 953.346787,
                    "p50": 984.271857,
                    "p95": 1003.3446839999999,
                    "p99": 1003.3446839999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 619.7983429999999,
                    "min": 587.582498,
                    "p50": 610.740871,
                    "p95": 619.7983429999999,
                    "p99": 619.7983429999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1187.908076,
                    "min": 1163.0322859999999,
                    "p50": 1173.006237,
                    "p95": 1187.908076,
                    "p99": 1187.908076,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3396.7401929999996,
                    "min": 3312.897321,
                    "p50": 3358.9850629999996,
                    "p95": 3396.7401929999996,
                    "p99": 3396.7401929999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1374.314944,
                    "min": 1336.889675,
                    "p50": 1365.619592,
                    "p95": 1374.314944,
                    "p99": 1374.314944,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2716.269777,
                    "min": 2678.1714979999997,
                    "p50": 2696.314031,
                    "p95": 2716.269777,
                    "p99": 2716.269777,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1566.271131,
                    "min": 1539.275105,
                    "p50": 1552.330109,
                    "p95": 1566.271131,
                    "p99": 1566.271131,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 931.290184,
                    "min": 889.151667,
                    "p50": 917.693995,
                    "p95": 931.290184,
                    "p99": 931.290184,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 162.629639,
                    "min": 145.37158,
                    "p50": 161.664297,
                    "p95": 162.629639,
                    "p99": 162.629639,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 488.74780699999997,
                    "min": 436.96824499999997,
                    "p50": 481.469606,
                    "p95": 488.74780699999997,
                    "p99": 488.74780699999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 103.44755699999999,
                    "min": 62.201895,
                    "p50": 101.034514,
                    "p95": 103.44755699999999,
                    "p99": 103.44755699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.867368,
                    "min": 36.070575999999996,
                    "p50": 70.432098,
                    "p95": 74.867368,
                    "p99": 74.867368,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 145.672495,
                    "min": 138.69593899999998,
                    "p50": 144.59471499999998,
                    "p95": 145.672495,
                    "p99": 145.672495,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 395.842452,
                    "min": 381.40878399999997,
                    "p50": 389.208328,
                    "p95": 395.842452,
                    "p99": 395.842452,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 175.015319,
                    "min": 166.49058399999998,
                    "p50": 169.982979,
                    "p95": 175.015319,
                    "p99": 175.015319,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 156.63143399999998,
                    "min": 135.35583499999998,
                    "p50": 152.920811,
                    "p95": 156.63143399999998,
                    "p99": 156.63143399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 192.74387299999998,
                    "min": 154.211039,
                    "p50": 191.077376,
                    "p95": 192.74387299999998,
                    "p99": 192.74387299999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 85.076381,
                    "min": 45.314032,
                    "p50": 82.984984,
                    "p95": 85.076381,
                    "p99": 85.076381,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 136.79176999999999,
                    "min": 119.90307399999999,
                    "p50": 135.89234,
                    "p95": 136.79176999999999,
                    "p99": 136.79176999999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.045168,
                    "min": 52.837664,
                    "p50": 54.061980999999996,
                    "p95": 57.045168,
                    "p99": 57.045168,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 109.449795,
                    "min": 101.44760099999999,
                    "p50": 108.931297,
                    "p95": 109.449795,
                    "p99": 109.449795,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 97.17428799999999,
                    "min": 52.874365,
                    "p50": 92.513894,
                    "p95": 97.17428799999999,
                    "p99": 97.17428799999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 125.47910399999999,
                    "min": 79.171297,
                    "p50": 118.242063,
                    "p95": 125.47910399999999,
                    "p99": 125.47910399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 131.220914,
                    "min": 89.192893,
                    "p50": 126.811861,
                    "p95": 131.220914,
                    "p99": 131.220914,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 309.499393,
                    "min": 298.041674,
                    "p50": 306.317425,
                    "p95": 309.499393,
                    "p99": 309.499393,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 217.102095,
                    "min": 177.573052,
                    "p50": 215.096734,
                    "p95": 217.102095,
                    "p99": 217.102095,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.228402,
                    "min": 24.224064,
                    "p50": 27.507489999999997,
                    "p95": 28.228402,
                    "p99": 28.228402,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 131.389455,
                    "min": 88.165213,
                    "p50": 127.828063,
                    "p95": 131.389455,
                    "p99": 131.389455,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 108.42738299999999,
                    "min": 92.880704,
                    "p50": 102.74726799999999,
                    "p95": 108.42738299999999,
                    "p99": 108.42738299999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 85.856184,
                    "min": 44.574090999999996,
                    "p50": 82.97170899999999,
                    "p95": 85.856184,
                    "p99": 85.856184,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 45.206649999999996,
                    "min": 34.07947,
                    "p50": 44.232057999999995,
                    "p95": 45.206649999999996,
                    "p99": 45.206649999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 266.729342,
                    "min": 251.08969199999999,
                    "p50": 262.919219,
                    "p95": 266.729342,
                    "p99": 266.729342,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 153.065033,
                    "min": 125.350776,
                    "p50": 148.99925299999998,
                    "p95": 153.065033,
                    "p99": 153.065033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 54.810123999999995,
                    "min": 26.607387,
                    "p50": 52.538962999999995,
                    "p95": 54.810123999999995,
                    "p99": 54.810123999999995,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 66.091888,
                    "min": 59.551404999999995,
                    "p50": 60.181509999999996,
                    "p95": 66.091888,
                    "p99": 66.091888,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 36.964591,
                    "min": 24.103275,
                    "p50": 34.942124,
                    "p95": 36.964591,
                    "p99": 36.964591,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 44.748326999999996,
                    "min": 24.459985999999997,
                    "p50": 38.968717999999996,
                    "p95": 44.748326999999996,
                    "p99": 44.748326999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.56033,
                    "min": 24.474915,
                    "p50": 24.672019,
                    "p95": 26.56033,
                    "p99": 26.56033,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 75.228622,
                    "min": 37.925495,
                    "p50": 72.1096,
                    "p95": 75.228622,
                    "p99": 75.228622,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 57.726949,
                    "min": 25.598969,
                    "p50": 49.227864,
                    "p95": 57.726949,
                    "p99": 57.726949,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 69.33673499999999,
                    "min": 55.385343,
                    "p50": 65.135645,
                    "p95": 69.33673499999999,
                    "p99": 69.33673499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 32.369445999999996,
                    "min": 24.392632,
                    "p50": 30.842879999999997,
                    "p95": 32.369445999999996,
                    "p99": 32.369445999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 59.067428,
                    "min": 36.307798999999996,
                    "p50": 56.648239,
                    "p95": 59.067428,
                    "p99": 59.067428,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.040675999999998,
                    "min": 23.301707,
                    "p50": 24.294349,
                    "p95": 27.040675999999998,
                    "p99": 27.040675999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.908178,
                    "min": 18.412053,
                    "p50": 24.560751999999997,
                    "p95": 26.908178,
                    "p99": 26.908178,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 217.771063,
                    "min": 200.773914,
                    "p50": 215.619422,
                    "p95": 217.771063,
                    "p99": 217.771063,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 123.636985,
                    "min": 81.178342,
                    "p50": 119.656764,
                    "p95": 123.636985,
                    "p99": 123.636985,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 246.772226,
                    "min": 223.783169,
                    "p50": 239.833033,
                    "p95": 246.772226,
                    "p99": 246.772226,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 112.234089,
                    "min": 94.161233,
                    "p50": 110.18488699999999,
                    "p95": 112.234089,
                    "p99": 112.234089,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.92551499999999,
                    "min": 61.109564999999996,
                    "p50": 99.284995,
                    "p95": 103.92551499999999,
                    "p99": 103.92551499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.143884,
                    "min": 41.757087999999996,
                    "p50": 79.858238,
                    "p95": 81.143884,
                    "p99": 81.143884,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 182.21346699999998,
                    "min": 141.46367,
                    "p50": 180.24141799999998,
                    "p95": 182.21346699999998,
                    "p99": 182.21346699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 154.21404099999998,
                    "min": 137.51576,
                    "p50": 150.409279,
                    "p95": 154.21404099999998,
                    "p99": 154.21404099999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 345.600253,
                    "min": 335.937703,
                    "p50": 340.730797,
                    "p95": 345.600253,
                    "p99": 345.600253,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 131.066703,
                    "min": 91.217985,
                    "p50": 129.872573,
                    "p95": 131.066703,
                    "p99": 131.066703,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1062.817902,
                    "min": 1021.2193259999999,
                    "p50": 1056.9665439999999,
                    "p95": 1062.817902,
                    "p99": 1062.817902,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 90.331972,
                    "min": 56.665077999999994,
                    "p50": 89.736459,
                    "p95": 90.331972,
                    "p99": 90.331972,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 170.343075,
                    "min": 134.699409,
                    "p50": 169.43107899999998,
                    "p95": 170.343075,
                    "p99": 170.343075,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 161.702106,
                    "min": 132.760716,
                    "p50": 160.100191,
                    "p95": 161.702106,
                    "p99": 161.702106,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 448.299633,
                    "min": 400.32798299999996,
                    "p50": 440.02773199999996,
                    "p95": 448.299633,
                    "p99": 448.299633,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.512671,
                    "min": 31.049965999999998,
                    "p50": 61.574372999999994,
                    "p95": 64.512671,
                    "p99": 64.512671,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 194.196866,
                    "min": 151.14060899999998,
                    "p50": 189.23153299999998,
                    "p95": 194.196866,
                    "p99": 194.196866,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 144.404802,
                    "min": 102.33090399999999,
                    "p50": 140.675621,
                    "p95": 144.404802,
                    "p99": 144.404802,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 548.721486,
                    "min": 506.153694,
                    "p50": 544.477124,
                    "p95": 548.721486,
                    "p99": 548.721486,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1137.889706,
                    "min": 1099.835264,
                    "p50": 1130.969263,
                    "p95": 1137.889706,
                    "p99": 1137.889706,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 982.369871,
                    "min": 947.1489479999999,
                    "p50": 971.3923679999999,
                    "p95": 982.369871,
                    "p99": 982.369871,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1462.002506,
                    "min": 1434.920678,
                    "p50": 1447.5500499999998,
                    "p95": 1462.002506,
                    "p99": 1462.002506,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 502.366657,
                    "min": 490.038554,
                    "p50": 498.289131,
                    "p95": 502.366657,
                    "p99": 502.366657,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 672.829797,
                    "min": 622.5162819999999,
                    "p50": 649.572968,
                    "p95": 672.829797,
                    "p99": 672.829797,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1289.140478,
                    "min": 1262.434176,
                    "p50": 1283.467434,
                    "p95": 1289.140478,
                    "p99": 1289.140478,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 831.8053209999999,
                    "min": 778.095459,
                    "p50": 813.9369419999999,
                    "p95": 831.8053209999999,
                    "p99": 831.8053209999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1521.3216189999998,
                    "min": 1498.948521,
                    "p50": 1513.924027,
                    "p95": 1521.3216189999998,
                    "p99": 1521.3216189999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 485.20532399999996,
                    "min": 441.627294,
                    "p50": 478.995373,
                    "p95": 485.20532399999996,
                    "p99": 485.20532399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1230.453883,
                    "min": 1209.953876,
                    "p50": 1225.180599,
                    "p95": 1230.453883,
                    "p99": 1230.453883,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 929.201068,
                    "min": 879.560078,
                    "p50": 922.6003469999999,
                    "p95": 929.201068,
                    "p99": 929.201068,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1080.404845,
                    "min": 1061.542833,
                    "p50": 1068.614226,
                    "p95": 1080.404845,
                    "p99": 1080.404845,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1387.1120329999999,
                    "min": 1357.631971,
                    "p50": 1366.169021,
                    "p95": 1387.1120329999999,
                    "p99": 1387.1120329999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 636.5557699999999,
                    "min": 610.3788519999999,
                    "p50": 631.130364,
                    "p95": 636.5557699999999,
                    "p99": 636.5557699999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 783.8320699999999,
                    "min": 734.684185,
                    "p50": 776.6339419999999,
                    "p95": 783.8320699999999,
                    "p99": 783.8320699999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.78927699999997,
                    "min": 275.908049,
                    "p50": 285.50332399999996,
                    "p95": 286.78927699999997,
                    "p99": 286.78927699999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.759934,
                    "min": 436.63914,
                    "p50": 452.55884199999997,
                    "p95": 474.759934,
                    "p99": 474.759934,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 605.474288,
                    "min": 593.556426,
                    "p50": 600.935618,
                    "p95": 605.474288,
                    "p99": 605.474288,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 411.996272,
                    "min": 373.44505799999996,
                    "p50": 409.692701,
                    "p95": 411.996272,
                    "p99": 411.996272,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 784.2716389999999,
                    "min": 767.089555,
                    "p50": 781.593614,
                    "p95": 784.2716389999999,
                    "p99": 784.2716389999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 223.43057399999998,
                    "min": 203.25813599999998,
                    "p50": 222.292883,
                    "p95": 223.43057399999998,
                    "p99": 223.43057399999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 673.252069,
                    "min": 625.273562,
                    "p50": 665.2190019999999,
                    "p95": 673.252069,
                    "p99": 673.252069,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 537.3577349999999,
                    "min": 496.246466,
                    "p50": 532.196886,
                    "p95": 537.3577349999999,
                    "p99": 537.3577349999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 324.208382,
                    "min": 278.49334,
                    "p50": 317.705432,
                    "p95": 324.208382,
                    "p99": 324.208382,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 686.985015,
                    "min": 650.66872,
                    "p50": 667.725928,
                    "p95": 686.985015,
                    "p99": 686.985015,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1000.886816,
                    "min": 958.788589,
                    "p50": 990.9845799999999,
                    "p95": 1000.886816,
                    "p99": 1000.886816,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1313.633322,
                    "min": 1263.7968939999998,
                    "p50": 1292.115777,
                    "p95": 1313.633322,
                    "p99": 1313.633322,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 359.40619699999996,
                    "min": 315.909713,
                    "p50": 354.014166,
                    "p95": 359.40619699999996,
                    "p99": 359.40619699999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 683.173408,
                    "min": 643.13221,
                    "p50": 675.1384459999999,
                    "p95": 683.173408,
                    "p99": 683.173408,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1158.223838,
                    "min": 1135.493501,
                    "p50": 1143.862245,
                    "p95": 1158.223838,
                    "p99": 1158.223838,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 516.42917,
                    "min": 474.269542,
                    "p50": 511.33043599999996,
                    "p95": 516.42917,
                    "p99": 516.42917,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 846.477913,
                    "min": 823.03942,
                    "p50": 827.374815,
                    "p95": 846.477913,
                    "p99": 846.477913,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 628.22366,
                    "min": 604.258792,
                    "p50": 615.507947,
                    "p95": 628.22366,
                    "p99": 628.22366,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 327.522041,
                    "min": 269.888597,
                    "p50": 299.603751,
                    "p95": 327.522041,
                    "p99": 327.522041,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 205.41302299999998,
                    "min": 168.642791,
                    "p50": 199.035471,
                    "p95": 205.41302299999998,
                    "p99": 205.41302299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 575.184346,
                    "min": 530.965508,
                    "p50": 559.99398,
                    "p95": 575.184346,
                    "p99": 575.184346,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 455.72588099999996,
                    "min": 402.35625799999997,
                    "p50": 412.480285,
                    "p95": 455.72588099999996,
                    "p99": 455.72588099999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 365.90995399999997,
                    "min": 328.85382699999997,
                    "p50": 334.953783,
                    "p95": 365.90995399999997,
                    "p99": 365.90995399999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 533.242079,
                    "min": 486.83307099999996,
                    "p50": 509.15845199999995,
                    "p95": 533.242079,
                    "p99": 533.242079,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.928769,
                    "min": 217.76610699999998,
                    "p50": 229.61184599999999,
                    "p95": 233.928769,
                    "p99": 233.928769,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 159.801822,
                    "min": 112.49123999999999,
                    "p50": 155.13065699999999,
                    "p95": 159.801822,
                    "p99": 159.801822,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 766.01144,
                    "min": 712.072004,
                    "p50": 723.621899,
                    "p95": 766.01144,
                    "p99": 766.01144,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 655.2862769999999,
                    "min": 607.887466,
                    "p50": 617.183143,
                    "p95": 655.2862769999999,
                    "p99": 655.2862769999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 832.245135,
                    "min": 771.0891889999999,
                    "p50": 806.671329,
                    "p95": 832.245135,
                    "p99": 832.245135,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 410.071936,
                    "min": 363.75600399999996,
                    "p50": 381.146775,
                    "p95": 410.071936,
                    "p99": 410.071936,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 462.404279,
                    "min": 437.48883,
                    "p50": 454.913619,
                    "p95": 462.404279,
                    "p99": 462.404279,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 283.79014,
                    "min": 229.20072499999998,
                    "p50": 276.345395,
                    "p95": 283.79014,
                    "p99": 283.79014,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 527.785837,
                    "min": 468.670939,
                    "p50": 518.0856239999999,
                    "p95": 527.785837,
                    "p99": 527.785837,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 216.366009,
                    "min": 183.931241,
                    "p50": 208.30998499999998,
                    "p95": 216.366009,
                    "p99": 216.366009,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 581.42809,
                    "min": 531.77113,
                    "p50": 575.6850969999999,
                    "p95": 581.42809,
                    "p99": 581.42809,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 405.496762,
                    "min": 334.39687599999996,
                    "p50": 370.18634099999997,
                    "p95": 405.496762,
                    "p99": 405.496762,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.183608,
                    "min": 135.225326,
                    "p50": 173.870576,
                    "p95": 181.183608,
                    "p99": 181.183608,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 259.038277,
                    "min": 221.819236,
                    "p50": 241.432617,
                    "p95": 259.038277,
                    "p99": 259.038277,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 467.905022,
                    "min": 443.201191,
                    "p50": 457.765197,
                    "p95": 467.905022,
                    "p99": 467.905022,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 565.4274009999999,
                    "min": 505.177398,
                    "p50": 531.488217,
                    "p95": 565.4274009999999,
                    "p99": 565.4274009999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 767.2433679999999,
                    "min": 712.7660619999999,
                    "p50": 755.806532,
                    "p95": 767.2433679999999,
                    "p99": 767.2433679999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 271.79248,
                    "min": 235.735481,
                    "p50": 271.17097,
                    "p95": 271.79248,
                    "p99": 271.79248,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 693.729883,
                    "min": 614.001395,
                    "p50": 664.564969,
                    "p95": 693.729883,
                    "p99": 693.729883,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 334.97512,
                    "min": 272.176524,
                    "p50": 306.002055,
                    "p95": 334.97512,
                    "p99": 334.97512,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 443.44602799999996,
                    "min": 407.40085,
                    "p50": 422.176501,
                    "p95": 443.44602799999996,
                    "p99": 443.44602799999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 369.59707099999997,
                    "min": 331.003309,
                    "p50": 337.452715,
                    "p95": 369.59707099999997,
                    "p99": 369.59707099999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.37964399999998,
                    "min": 119.90723899999999,
                    "p50": 138.103493,
                    "p95": 145.37964399999998,
                    "p99": 145.37964399999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 222.98287299999998,
                    "min": 215.13516199999998,
                    "p50": 221.178282,
                    "p95": 222.98287299999998,
                    "p99": 222.98287299999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 332.551745,
                    "min": 324.694014,
                    "p50": 329.18647899999996,
                    "p95": 332.551745,
                    "p99": 332.551745,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 323.100493,
                    "min": 254.42453899999998,
                    "p50": 295.70338699999996,
                    "p95": 323.100493,
                    "p99": 323.100493,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 745.4152459999999,
                    "min": 688.8171689999999,
                    "p50": 703.403323,
                    "p95": 745.4152459999999,
                    "p99": 745.4152459999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 651.878825,
                    "min": 545.4213609999999,
                    "p50": 586.512618,
                    "p95": 651.878825,
                    "p99": 651.878825,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 161.111788,
                    "min": 142.140985,
                    "p50": 155.081637,
                    "p95": 161.111788,
                    "p99": 161.111788,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 484.671479,
                    "min": 419.099316,
                    "p50": 446.22819799999996,
                    "p95": 484.671479,
                    "p99": 484.671479,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 433.285126,
                    "min": 400.009307,
                    "p50": 405.170399,
                    "p95": 433.285126,
                    "p99": 433.285126,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 203.019593,
                    "min": 170.31131299999998,
                    "p50": 184.389209,
                    "p95": 203.019593,
                    "p99": 203.019593,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 525.351123,
                    "min": 470.581803,
                    "p50": 476.36612199999996,
                    "p95": 525.351123,
                    "p99": 525.351123,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 371.95016599999997,
                    "min": 332.32367899999997,
                    "p50": 365.618319,
                    "p95": 371.95016599999997,
                    "p99": 371.95016599999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 855.8234649999999,
                    "min": 783.9254179999999,
                    "p50": 808.655593,
                    "p95": 855.8234649999999,
                    "p99": 855.8234649999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 612.877306,
                    "min": 545.488714,
                    "p50": 599.123684,
                    "p95": 612.877306,
                    "p99": 612.877306,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 283.28957199999996,
                    "min": 244.440374,
                    "p50": 257.79238699999996,
                    "p95": 283.28957199999996,
                    "p99": 283.28957199999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 575.608304,
                    "min": 521.7399859999999,
                    "p50": 535.041041,
                    "p95": 575.608304,
                    "p99": 575.608304,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 866.798011,
                    "min": 784.272252,
                    "p50": 820.213488,
                    "p95": 866.798011,
                    "p99": 866.798011,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.456552,
                    "min": 179.93513199999998,
                    "p50": 190.564066,
                    "p95": 198.456552,
                    "p99": 198.456552,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 396.90191999999996,
                    "min": 352.05035,
                    "p50": 374.011604,
                    "p95": 396.90191999999996,
                    "p99": 396.90191999999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 445.05301599999996,
                    "min": 396.205229,
                    "p50": 405.670171,
                    "p95": 445.05301599999996,
                    "p99": 445.05301599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 482.267797,
                    "min": 421.724835,
                    "p50": 458.587922,
                    "p95": 482.267797,
                    "p99": 482.267797,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 752.678532,
                    "min": 705.0613609999999,
                    "p50": 710.224083,
                    "p95": 752.678532,
                    "p99": 752.678532,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 537.629044,
                    "min": 478.259084,
                    "p50": 532.476635,
                    "p95": 537.629044,
                    "p99": 537.629044,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 568.416028,
                    "min": 516.845795,
                    "p50": 557.282724,
                    "p95": 568.416028,
                    "p99": 568.416028,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 159.656027,
                    "min": 121.471583,
                    "p50": 153.265634,
                    "p95": 159.656027,
                    "p99": 159.656027,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 276.002554,
                    "min": 219.747523,
                    "p50": 274.332339,
                    "p95": 276.002554,
                    "p99": 276.002554,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 243.455916,
                    "min": 216.421515,
                    "p50": 232.943488,
                    "p95": 243.455916,
                    "p99": 243.455916,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 641.938197,
                    "min": 579.994655,
                    "p50": 602.086812,
                    "p95": 641.938197,
                    "p99": 641.938197,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 364.138335,
                    "min": 331.236072,
                    "p50": 339.661481,
                    "p95": 364.138335,
                    "p99": 364.138335,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 610.678214,
                    "min": 552.39008,
                    "p50": 559.031472,
                    "p95": 610.678214,
                    "p99": 610.678214,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 320.67626,
                    "min": 294.789296,
                    "p50": 301.621179,
                    "p95": 320.67626,
                    "p99": 320.67626,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 219.126972,
                    "min": 208.830931,
                    "p50": 216.1136,
                    "p95": 219.126972,
                    "p99": 219.126972,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.70945999999999,
                    "min": 51.86987,
                    "p50": 78.165735,
                    "p95": 81.70945999999999,
                    "p99": 81.70945999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1159.675787,
                    "min": 1102.129674,
                    "p50": 1140.616724,
                    "p95": 1159.675787,
                    "p99": 1159.675787,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 254.45574399999998,
                    "min": 202.63100599999999,
                    "p50": 239.486201,
                    "p95": 254.45574399999998,
                    "p99": 254.45574399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 365.85398499999997,
                    "min": 338.396573,
                    "p50": 362.12287,
                    "p95": 365.85398499999997,
                    "p99": 365.85398499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 140.683292,
                    "min": 119.528759,
                    "p50": 135.47423999999998,
                    "p95": 140.683292,
                    "p99": 140.683292,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 480.336678,
                    "min": 452.25690799999995,
                    "p50": 457.547596,
                    "p95": 480.336678,
                    "p99": 480.336678,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.162227,
                    "min": 90.656644,
                    "p50": 100.135595,
                    "p95": 101.162227,
                    "p99": 101.162227,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 120.640012,
                    "min": 85.21443099999999,
                    "p50": 119.863911,
                    "p95": 120.640012,
                    "p99": 120.640012,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 64.229019,
                    "min": 60.340336,
                    "p50": 60.632515,
                    "p95": 64.229019,
                    "p99": 64.229019,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 132.706646,
                    "min": 127.768024,
                    "p50": 130.464509,
                    "p95": 132.706646,
                    "p99": 132.706646,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 112.026783,
                    "min": 107.75551899999999,
                    "p50": 109.601395,
                    "p95": 112.026783,
                    "p99": 112.026783,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 151.267925,
                    "min": 137.028305,
                    "p50": 148.157066,
                    "p95": 151.267925,
                    "p99": 151.267925,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 172.021927,
                    "min": 132.197135,
                    "p50": 169.292613,
                    "p95": 172.021927,
                    "p99": 172.021927,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 169.657792,
                    "min": 121.127788,
                    "p50": 165.620837,
                    "p95": 169.657792,
                    "p99": 169.657792,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 596.000601,
                    "min": 579.122164,
                    "p50": 584.201679,
                    "p95": 596.000601,
                    "p99": 596.000601,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 92.322441,
                    "min": 83.069457,
                    "p50": 88.58357099999999,
                    "p95": 92.322441,
                    "p99": 92.322441,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 187.76888599999998,
                    "min": 176.397513,
                    "p50": 184.02902899999998,
                    "p95": 187.76888599999998,
                    "p99": 187.76888599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 191.21893,
                    "min": 151.93809199999998,
                    "p50": 188.866793,
                    "p95": 191.21893,
                    "p99": 191.21893,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 184.556922,
                    "min": 142.189451,
                    "p50": 171.284753,
                    "p95": 184.556922,
                    "p99": 184.556922,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1158.483127,
                    "min": 1136.287918,
                    "p50": 1154.5901649999998,
                    "p95": 1158.483127,
                    "p99": 1158.483127,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 194.183856,
                    "min": 183.03451199999998,
                    "p50": 185.983171,
                    "p95": 194.183856,
                    "p99": 194.183856,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 134.632163,
                    "min": 98.071637,
                    "p50": 129.188776,
                    "p95": 134.632163,
                    "p99": 134.632163,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 216.198152,
                    "min": 207.21254499999998,
                    "p50": 215.445053,
                    "p95": 216.198152,
                    "p99": 216.198152,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 254.26539,
                    "min": 202.376283,
                    "p50": 239.954284,
                    "p95": 254.26539,
                    "p99": 254.26539,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 93.546191,
                    "min": 73.17204,
                    "p50": 87.68939999999999,
                    "p95": 93.546191,
                    "p99": 93.546191,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 145.392716,
                    "min": 125.39273399999999,
                    "p50": 142.527591,
                    "p95": 145.392716,
                    "p99": 145.392716,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 116.91347999999999,
                    "min": 98.765548,
                    "p50": 110.340819,
                    "p95": 116.91347999999999,
                    "p99": 116.91347999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 204.098783,
                    "min": 183.815882,
                    "p50": 198.600177,
                    "p95": 204.098783,
                    "p99": 204.098783,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 168.95333599999998,
                    "min": 160.544734,
                    "p50": 165.730931,
                    "p95": 168.95333599999998,
                    "p99": 168.95333599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 488.880005,
                    "min": 476.794828,
                    "p50": 482.876328,
                    "p95": 488.880005,
                    "p99": 488.880005,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 371.991859,
                    "min": 339.061711,
                    "p50": 366.055044,
                    "p95": 371.991859,
                    "p99": 371.991859,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 152.25713299999998,
                    "min": 137.075952,
                    "p50": 149.08745199999998,
                    "p95": 152.25713299999998,
                    "p99": 152.25713299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 65.185847,
                    "min": 41.862978,
                    "p50": 60.92519,
                    "p95": 65.185847,
                    "p99": 65.185847,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 121.747833,
                    "min": 81.70231,
                    "p50": 119.14576699999999,
                    "p95": 121.747833,
                    "p99": 121.747833,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.425795,
                    "min": 41.220155,
                    "p50": 79.854259,
                    "p95": 81.425795,
                    "p99": 81.425795,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.08429199999999,
                    "min": 79.619429,
                    "p50": 99.695779,
                    "p95": 102.08429199999999,
                    "p99": 102.08429199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 602.359056,
                    "min": 531.778606,
                    "p50": 579.04661,
                    "p95": 602.359056,
                    "p99": 602.359056,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 109.092564,
                    "min": 106.782246,
                    "p50": 108.087666,
                    "p95": 109.092564,
                    "p99": 109.092564,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 170.597209,
                    "min": 151.138679,
                    "p50": 167.581479,
                    "p95": 170.597209,
                    "p99": 170.597209,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 156.485898,
                    "min": 143.609474,
                    "p50": 149.786579,
                    "p95": 156.485898,
                    "p99": 156.485898,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.704064,
                    "min": 65.60139099999999,
                    "p50": 98.830477,
                    "p95": 101.704064,
                    "p99": 101.704064,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 239.28340599999999,
                    "min": 198.37510999999998,
                    "p50": 237.25279899999998,
                    "p95": 239.28340599999999,
                    "p99": 239.28340599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 79.443929,
                    "min": 76.967713,
                    "p50": 78.280279,
                    "p95": 79.443929,
                    "p99": 79.443929,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 120.02480899999999,
                    "min": 86.926811,
                    "p50": 115.061748,
                    "p95": 120.02480899999999,
                    "p99": 120.02480899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 139.049317,
                    "min": 118.52729699999999,
                    "p50": 136.301133,
                    "p95": 139.049317,
                    "p99": 139.049317,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 194.54431,
                    "min": 156.239463,
                    "p50": 187.16991199999998,
                    "p95": 194.54431,
                    "p99": 194.54431,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 349.760243,
                    "min": 339.14664799999997,
                    "p50": 343.316889,
                    "p95": 349.760243,
                    "p99": 349.760243,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 162.379073,
                    "min": 122.86,
                    "p50": 159.881725,
                    "p95": 162.379073,
                    "p99": 162.379073,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 130.661493,
                    "min": 121.657991,
                    "p50": 128.231065,
                    "p95": 130.661493,
                    "p99": 130.661493,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 92.29355199999999,
                    "min": 83.465524,
                    "p50": 89.132142,
                    "p95": 92.29355199999999,
                    "p99": 92.29355199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 178.941872,
                    "min": 143.835908,
                    "p50": 175.99686,
                    "p95": 178.941872,
                    "p99": 178.941872,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 214.415198,
                    "min": 173.41045,
                    "p50": 213.27666299999999,
                    "p95": 214.415198,
                    "p99": 214.415198,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 461.04515999999995,
                    "min": 422.662767,
                    "p50": 442.725783,
                    "p95": 461.04515999999995,
                    "p99": 461.04515999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 551.063902,
                    "min": 527.458724,
                    "p50": 542.600647,
                    "p95": 551.063902,
                    "p99": 551.063902,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1090.177315,
                    "min": 1021.4213579999999,
                    "p50": 1067.165691,
                    "p95": 1090.177315,
                    "p99": 1090.177315,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.175169999999994,
                    "min": 45.503363,
                    "p50": 59.569679,
                    "p95": 63.175169999999994,
                    "p99": 63.175169999999994,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 600.654764,
                    "min": 572.357896,
                    "p50": 585.297101,
                    "p95": 600.654764,
                    "p99": 600.654764,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 180.59653799999998,
                    "min": 164.44413699999998,
                    "p50": 176.790255,
                    "p95": 180.59653799999998,
                    "p99": 180.59653799999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 145.581477,
                    "min": 123.90964,
                    "p50": 141.060743,
                    "p95": 145.581477,
                    "p99": 145.581477,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 205.662176,
                    "min": 168.834586,
                    "p50": 194.88385699999998,
                    "p95": 205.662176,
                    "p99": 205.662176,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 110.462043,
                    "min": 72.614751,
                    "p50": 108.637641,
                    "p95": 110.462043,
                    "p99": 110.462043,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 91.430531,
                    "min": 52.680620999999995,
                    "p50": 90.16418,
                    "p95": 91.430531,
                    "p99": 91.430531,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.222984,
                    "min": 32.012358,
                    "p50": 61.209748999999995,
                    "p95": 62.222984,
                    "p99": 62.222984,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 151.274701,
                    "min": 142.94391299999998,
                    "p50": 150.610364,
                    "p95": 151.274701,
                    "p99": 151.274701,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 227.10029999999998,
                    "min": 192.347042,
                    "p50": 222.52112599999998,
                    "p95": 227.10029999999998,
                    "p99": 227.10029999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 101.653103,
                    "min": 61.801339,
                    "p50": 99.46228699999999,
                    "p95": 101.653103,
                    "p99": 101.653103,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 121.576954,
                    "min": 117.024712,
                    "p50": 121.193151,
                    "p95": 121.576954,
                    "p99": 121.576954,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 190.767893,
                    "min": 180.750713,
                    "p50": 188.114624,
                    "p95": 190.767893,
                    "p99": 190.767893,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 484.404885,
                    "min": 442.743404,
                    "p50": 449.674897,
                    "p95": 484.404885,
                    "p99": 484.404885,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1144.557822,
                    "min": 1077.762156,
                    "p50": 1127.282837,
                    "p95": 1144.557822,
                    "p99": 1144.557822,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 133.822451,
                    "min": 94.78340299999999,
                    "p50": 129.179191,
                    "p95": 133.822451,
                    "p99": 133.822451,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 252.371672,
                    "min": 207.965711,
                    "p50": 250.95418099999998,
                    "p95": 252.371672,
                    "p99": 252.371672,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 166.50618599999999,
                    "min": 149.97896699999998,
                    "p50": 160.515877,
                    "p95": 166.50618599999999,
                    "p99": 166.50618599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 82.50770299999999,
                    "min": 63.87076,
                    "p50": 78.585679,
                    "p95": 82.50770299999999,
                    "p99": 82.50770299999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 370.930639,
                    "min": 330.68593999999996,
                    "p50": 362.369584,
                    "p95": 370.930639,
                    "p99": 370.930639,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 247.09945399999998,
                    "min": 183.18692099999998,
                    "p50": 224.707764,
                    "p95": 247.09945399999998,
                    "p99": 247.09945399999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 186.445259,
                    "min": 137.709119,
                    "p50": 173.463269,
                    "p95": 186.445259,
                    "p99": 186.445259,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 290.927973,
                    "min": 228.339374,
                    "p50": 267.947593,
                    "p95": 290.927973,
                    "p99": 290.927973,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1072.73004,
                    "min": 956.6274999999999,
                    "p50": 1009.6930169999999,
                    "p95": 1072.73004,
                    "p99": 1072.73004,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 711.522084,
                    "min": 597.992086,
                    "p50": 649.9128119999999,
                    "p95": 711.522084,
                    "p99": 711.522084,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 806.7476049999999,
                    "min": 755.109596,
                    "p50": 781.8347219999999,
                    "p95": 806.7476049999999,
                    "p99": 806.7476049999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 951.063082,
                    "min": 810.140529,
                    "p50": 842.265709,
                    "p95": 951.063082,
                    "p99": 951.063082,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 505.66103699999996,
                    "min": 412.22567699999996,
                    "p50": 495.863324,
                    "p95": 505.66103699999996,
                    "p99": 505.66103699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 348.32658,
                    "min": 296.961633,
                    "p50": 313.526498,
                    "p95": 348.32658,
                    "p99": 348.32658,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 408.55125599999997,
                    "min": 368.851967,
                    "p50": 401.019768,
                    "p95": 408.55125599999997,
                    "p99": 408.55125599999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 404.667617,
                    "min": 348.251124,
                    "p50": 397.36904999999996,
                    "p95": 404.667617,
                    "p99": 404.667617,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 550.3688569999999,
                    "min": 505.701957,
                    "p50": 518.502611,
                    "p95": 550.3688569999999,
                    "p99": 550.3688569999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 597.7605659999999,
                    "min": 535.790678,
                    "p50": 541.038234,
                    "p95": 597.7605659999999,
                    "p99": 597.7605659999999,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 755.849171,
                    "min": 692.9048829999999,
                    "p50": 743.611129,
                    "p95": 755.849171,
                    "p99": 755.849171,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 647.353253,
                    "min": 543.823953,
                    "p50": 586.2424589999999,
                    "p95": 647.353253,
                    "p99": 647.353253,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 588.4965639999999,
                    "min": 525.325817,
                    "p50": 566.724103,
                    "p95": 588.4965639999999,
                    "p99": 588.4965639999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 699.4179849999999,
                    "min": 605.769723,
                    "p50": 646.160816,
                    "p95": 699.4179849999999,
                    "p99": 699.4179849999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 755.0063849999999,
                    "min": 646.0461329999999,
                    "p50": 680.006345,
                    "p95": 755.0063849999999,
                    "p99": 755.0063849999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 240.801741,
                    "min": 205.559729,
                    "p50": 222.97454399999998,
                    "p95": 240.801741,
                    "p99": 240.801741,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 286.912751,
                    "min": 256.513736,
                    "p50": 267.23965499999997,
                    "p95": 286.912751,
                    "p99": 286.912751,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 387.755793,
                    "min": 347.161313,
                    "p50": 361.958147,
                    "p95": 387.755793,
                    "p99": 387.755793,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 333.661751,
                    "min": 272.31118299999997,
                    "p50": 319.178864,
                    "p95": 333.661751,
                    "p99": 333.661751,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 528.505617,
                    "min": 465.661385,
                    "p50": 503.551511,
                    "p95": 528.505617,
                    "p99": 528.505617,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 182.291548,
                    "min": 136.254523,
                    "p50": 175.033017,
                    "p95": 182.291548,
                    "p99": 182.291548,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 450.16687299999995,
                    "min": 384.39190099999996,
                    "p50": 420.864019,
                    "p95": 450.16687299999995,
                    "p99": 450.16687299999995,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 946.5349269999999,
                    "min": 881.795249,
                    "p50": 895.7485009999999,
                    "p95": 946.5349269999999,
                    "p99": 946.5349269999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1083.417238,
                    "min": 984.560742,
                    "p50": 1020.386995,
                    "p95": 1083.417238,
                    "p99": 1083.417238,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 825.5379499999999,
                    "min": 731.028547,
                    "p50": 763.071204,
                    "p95": 825.5379499999999,
                    "p99": 825.5379499999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 496.01246899999995,
                    "min": 412.94379299999997,
                    "p50": 451.630544,
                    "p95": 496.01246899999995,
                    "p99": 496.01246899999995,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 665.645372,
                    "min": 573.5544659999999,
                    "p50": 587.0135819999999,
                    "p95": 665.645372,
                    "p99": 665.645372,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 713.904238,
                    "min": 606.081057,
                    "p50": 647.7151329999999,
                    "p95": 713.904238,
                    "p99": 713.904238,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 601.171536,
                    "min": 563.244271,
                    "p50": 595.318139,
                    "p95": 601.171536,
                    "p99": 601.171536,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 762.514898,
                    "min": 630.691026,
                    "p50": 685.002585,
                    "p95": 762.514898,
                    "p99": 762.514898,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 918.860568,
                    "min": 774.045358,
                    "p50": 886.2763749999999,
                    "p95": 918.860568,
                    "p99": 918.860568,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 569.221854,
                    "min": 517.365744,
                    "p50": 551.438857,
                    "p95": 569.221854,
                    "p99": 569.221854,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 577.104122,
                    "min": 505.16085999999996,
                    "p50": 519.346532,
                    "p95": 577.104122,
                    "p99": 577.104122,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 174.050905,
                    "min": 158.529392,
                    "p50": 166.10481099999998,
                    "p95": 174.050905,
                    "p99": 174.050905,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 934.4148369999999,
                    "min": 883.922321,
                    "p50": 925.821009,
                    "p95": 934.4148369999999,
                    "p99": 934.4148369999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 510.63553399999995,
                    "min": 449.238921,
                    "p50": 475.199097,
                    "p95": 510.63553399999995,
                    "p99": 510.63553399999995,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 439.900784,
                    "min": 393.545706,
                    "p50": 431.237827,
                    "p95": 439.900784,
                    "p99": 439.900784,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.858358,
                    "min": 257.904713,
                    "p50": 298.5337,
                    "p95": 323.858358,
                    "p99": 323.858358,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 387.844457,
                    "min": 381.084674,
                    "p50": 385.05817199999996,
                    "p95": 387.844457,
                    "p99": 387.844457,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.84025099999997,
                    "min": 328.202884,
                    "p50": 335.286066,
                    "p95": 341.84025099999997,
                    "p99": 341.84025099999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 224.66063599999998,
                    "min": 174.001818,
                    "p50": 215.185013,
                    "p95": 224.66063599999998,
                    "p99": 224.66063599999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 275.244718,
                    "min": 228.083804,
                    "p50": 254.609334,
                    "p95": 275.244718,
                    "p99": 275.244718,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 742.9192459999999,
                    "min": 644.281566,
                    "p50": 678.487938,
                    "p95": 742.9192459999999,
                    "p99": 742.9192459999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 836.0179019999999,
                    "min": 699.6802399999999,
                    "p50": 750.45218,
                    "p95": 836.0179019999999,
                    "p99": 836.0179019999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 651.502086,
                    "min": 553.784033,
                    "p50": 642.5205619999999,
                    "p95": 651.502086,
                    "p99": 651.502086,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 955.6384899999999,
                    "min": 838.5638289999999,
                    "p50": 865.34708,
                    "p95": 955.6384899999999,
                    "p99": 955.6384899999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 230.38586999999998,
                    "min": 184.545985,
                    "p50": 213.70163499999998,
                    "p95": 230.38586999999998,
                    "p99": 230.38586999999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 607.041731,
                    "min": 532.725,
                    "p50": 576.77528,
                    "p95": 607.041731,
                    "p99": 607.041731,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1090.3046769999999,
                    "min": 989.949124,
                    "p50": 1026.563966,
                    "p95": 1090.3046769999999,
                    "p99": 1090.3046769999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 341.16880699999996,
                    "min": 277.88679099999996,
                    "p50": 313.209775,
                    "p95": 341.16880699999996,
                    "p99": 341.16880699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 452.75845599999997,
                    "min": 368.823892,
                    "p50": 438.12749399999996,
                    "p95": 452.75845599999997,
                    "p99": 452.75845599999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 400.899232,
                    "min": 350.74624,
                    "p50": 358.967677,
                    "p95": 400.899232,
                    "p99": 400.899232,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 296.811337,
                    "min": 261.942888,
                    "p50": 268.778867,
                    "p95": 296.811337,
                    "p99": 296.811337,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 498.472674,
                    "min": 441.10840299999995,
                    "p50": 454.52887799999996,
                    "p95": 498.472674,
                    "p99": 498.472674,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 556.963021,
                    "min": 463.227874,
                    "p50": 499.81708499999996,
                    "p95": 556.963021,
                    "p99": 556.963021,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 185.18101299999998,
                    "min": 138.130663,
                    "p50": 171.74017899999998,
                    "p95": 185.18101299999998,
                    "p99": 185.18101299999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 704.75605,
                    "min": 597.65021,
                    "p50": 640.400097,
                    "p95": 704.75605,
                    "p99": 704.75605,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 843.6298899999999,
                    "min": 811.8209469999999,
                    "p50": 829.090732,
                    "p95": 843.6298899999999,
                    "p99": 843.6298899999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 518.828083,
                    "min": 495.059864,
                    "p50": 510.248613,
                    "p95": 518.828083,
                    "p99": 518.828083,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 623.305847,
                    "min": 574.837841,
                    "p50": 619.5794579999999,
                    "p95": 623.305847,
                    "p99": 623.305847,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 411.923882,
                    "min": 365.524725,
                    "p50": 405.177559,
                    "p95": 411.923882,
                    "p99": 411.923882,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 353.637005,
                    "min": 321.793566,
                    "p50": 349.497504,
                    "p95": 353.637005,
                    "p99": 353.637005,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 575.306655,
                    "min": 520.959076,
                    "p50": 563.318035,
                    "p95": 575.306655,
                    "p99": 575.306655,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 202.42135499999998,
                    "min": 157.483734,
                    "p50": 197.878669,
                    "p95": 202.42135499999998,
                    "p99": 202.42135499999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 258.012246,
                    "min": 247.77329999999998,
                    "p50": 252.74969199999998,
                    "p95": 258.012246,
                    "p99": 258.012246,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 465.02554999999995,
                    "min": 455.572519,
                    "p50": 459.638427,
                    "p95": 465.02554999999995,
                    "p99": 465.02554999999995,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 306.49625499999996,
                    "min": 293.658669,
                    "p50": 301.643615,
                    "p95": 306.49625499999996,
                    "p99": 306.49625499999996,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1108.1317139999999,
                    "min": 1044.4412029999999,
                    "p50": 1095.74019,
                    "p95": 1108.1317139999999,
                    "p99": 1108.1317139999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 687.319787,
                    "min": 626.371685,
                    "p50": 673.789223,
                    "p95": 687.319787,
                    "p99": 687.319787,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 984.883732,
                    "min": 909.235273,
                    "p50": 957.766089,
                    "p95": 984.883732,
                    "p99": 984.883732,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 786.2815469999999,
                    "min": 733.9786339999999,
                    "p50": 772.437207,
                    "p95": 786.2815469999999,
                    "p99": 786.2815469999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 731.638151,
                    "min": 689.5006999999999,
                    "p50": 717.355882,
                    "p95": 731.638151,
                    "p99": 731.638151,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1634.070925,
                    "min": 1601.43371,
                    "p50": 1623.170058,
                    "p95": 1634.070925,
                    "p99": 1634.070925,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 508.49242699999996,
                    "min": 382.639301,
                    "p50": 443.82458599999995,
                    "p95": 508.49242699999996,
                    "p99": 508.49242699999996,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 378.186286,
                    "min": 298.221883,
                    "p50": 324.58613299999996,
                    "p95": 378.186286,
                    "p99": 378.186286,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 446.224155,
                    "min": 357.10735999999997,
                    "p50": 410.498405,
                    "p95": 446.224155,
                    "p99": 446.224155,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 646.126083,
                    "min": 523.708122,
                    "p50": 554.1791969999999,
                    "p95": 646.126083,
                    "p99": 646.126083,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 514.601643,
                    "min": 462.702968,
                    "p50": 497.88588799999997,
                    "p95": 514.601643,
                    "p99": 514.601643,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 404.43224999999995,
                    "min": 300.31476599999996,
                    "p50": 359.70822599999997,
                    "p95": 404.43224999999995,
                    "p99": 404.43224999999995,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 125.46993599999999,
                    "min": 74.676512,
                    "p50": 117.50094,
                    "p95": 125.46993599999999,
                    "p99": 125.46993599999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 161.819905,
                    "min": 115.86339699999999,
                    "p50": 143.090455,
                    "p95": 161.819905,
                    "p99": 161.819905,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 345.097363,
                    "min": 273.91956,
                    "p50": 318.309426,
                    "p95": 345.097363,
                    "p99": 345.097363,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 202.91742499999998,
                    "min": 183.48127399999998,
                    "p50": 195.874987,
                    "p95": 202.91742499999998,
                    "p99": 202.91742499999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 314.87886199999997,
                    "min": 280.633836,
                    "p50": 289.582253,
                    "p95": 314.87886199999997,
                    "p99": 314.87886199999997,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 193.69452199999998,
                    "min": 160.994026,
                    "p50": 177.88664699999998,
                    "p95": 193.69452199999998,
                    "p99": 193.69452199999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 449.163123,
                    "min": 376.28317799999996,
                    "p50": 403.162642,
                    "p95": 449.163123,
                    "p99": 449.163123,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 301.125594,
                    "min": 235.01249099999998,
                    "p50": 251.07777,
                    "p95": 301.125594,
                    "p99": 301.125594,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 264.207744,
                    "min": 174.16956299999998,
                    "p50": 237.87706899999998,
                    "p95": 264.207744,
                    "p99": 264.207744,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 336.001167,
                    "min": 266.509317,
                    "p50": 323.951081,
                    "p95": 336.001167,
                    "p99": 336.001167,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 154.563029,
                    "min": 122.591507,
                    "p50": 130.772794,
                    "p95": 154.563029,
                    "p99": 154.563029,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 265.606067,
                    "min": 186.691758,
                    "p50": 229.43141599999998,
                    "p95": 265.606067,
                    "p99": 265.606067,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 208.058189,
                    "min": 200.29007,
                    "p50": 203.34449899999998,
                    "p95": 208.058189,
                    "p99": 208.058189,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 181.499471,
                    "min": 140.61789299999998,
                    "p50": 179.738091,
                    "p95": 181.499471,
                    "p99": 181.499471,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 397.670524,
                    "min": 348.100197,
                    "p50": 388.342216,
                    "p95": 397.670524,
                    "p99": 397.670524,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 345.75440399999997,
                    "min": 301.560551,
                    "p50": 342.458938,
                    "p95": 345.75440399999997,
                    "p99": 345.75440399999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 578.423412,
                    "min": 480.755884,
                    "p50": 504.04127,
                    "p95": 578.423412,
                    "p99": 578.423412,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 754.6017069999999,
                    "min": 700.7973049999999,
                    "p50": 735.710187,
                    "p95": 754.6017069999999,
                    "p99": 754.6017069999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 329.84691799999996,
                    "min": 280.617543,
                    "p50": 320.17774499999996,
                    "p95": 329.84691799999996,
                    "p99": 329.84691799999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 183.427563,
                    "min": 117.031033,
                    "p50": 157.286755,
                    "p95": 183.427563,
                    "p99": 183.427563,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 299.983945,
                    "min": 289.617778,
                    "p50": 296.199543,
                    "p95": 299.983945,
                    "p99": 299.983945,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 127.05148799999999,
                    "min": 82.87046199999999,
                    "p50": 108.96742599999999,
                    "p95": 127.05148799999999,
                    "p99": 127.05148799999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 447.726573,
                    "min": 363.145061,
                    "p50": 370.796611,
                    "p95": 447.726573,
                    "p99": 447.726573,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 552.393855,
                    "min": 440.380383,
                    "p50": 449.808345,
                    "p95": 552.393855,
                    "p99": 552.393855,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 299.578914,
                    "min": 243.034921,
                    "p50": 252.791263,
                    "p95": 299.578914,
                    "p99": 299.578914,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2213.788418,
                    "min": 2114.850543,
                    "p50": 2166.998779,
                    "p95": 2213.788418,
                    "p99": 2213.788418,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 531.1578529999999,
                    "min": 476.698463,
                    "p50": 519.388005,
                    "p95": 531.1578529999999,
                    "p99": 531.1578529999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 362.141279,
                    "min": 317.405152,
                    "p50": 359.305115,
                    "p95": 362.141279,
                    "p99": 362.141279,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 689.482624,
                    "min": 658.079703,
                    "p50": 677.217299,
                    "p95": 689.482624,
                    "p99": 689.482624,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 257.947844,
                    "min": 214.39252199999999,
                    "p50": 253.24547099999998,
                    "p95": 257.947844,
                    "p99": 257.947844,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1114.798936,
                    "min": 1067.164055,
                    "p50": 1105.0894449999998,
                    "p95": 1114.798936,
                    "p99": 1114.798936,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 845.827324,
                    "min": 826.4564449999999,
                    "p50": 837.492225,
                    "p95": 845.827324,
                    "p99": 845.827324,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 791.9174469999999,
                    "min": 771.138838,
                    "p50": 779.8504869999999,
                    "p95": 791.9174469999999,
                    "p99": 791.9174469999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.24005599999998,
                    "min": 189.41381099999998,
                    "p50": 200.39843499999998,
                    "p95": 201.24005599999998,
                    "p99": 201.24005599999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 309.747556,
                    "min": 267.296473,
                    "p50": 305.26131399999997,
                    "p95": 309.747556,
                    "p99": 309.747556,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 980.376186,
                    "min": 960.5856369999999,
                    "p50": 971.403161,
                    "p95": 980.376186,
                    "p99": 980.376186,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 471.332478,
                    "min": 427.60401099999996,
                    "p50": 468.29341999999997,
                    "p95": 471.332478,
                    "p99": 471.332478,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 635.046967,
                    "min": 582.233973,
                    "p50": 626.2048219999999,
                    "p95": 635.046967,
                    "p99": 635.046967,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 414.393149,
                    "min": 385.89318599999996,
                    "p50": 407.97405599999996,
                    "p95": 414.393149,
                    "p99": 414.393149,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 748.752566,
                    "min": 687.92895,
                    "p50": 731.1371919999999,
                    "p95": 748.752566,
                    "p99": 748.752566,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1648.131641,
                    "min": 1584.49958,
                    "p50": 1624.451486,
                    "p95": 1648.131641,
                    "p99": 1648.131641,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2717.7537319999997,
                    "min": 2654.5312599999997,
                    "p50": 2682.4400379999997,
                    "p95": 2717.7537319999997,
                    "p99": 2717.7537319999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 578.4079399999999,
                    "min": 531.341336,
                    "p50": 576.326477,
                    "p95": 578.4079399999999,
                    "p99": 578.4079399999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 250.998124,
                    "min": 198.80095799999998,
                    "p50": 228.916014,
                    "p95": 250.998124,
                    "p99": 250.998124,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 637.152709,
                    "min": 539.476261,
                    "p50": 588.723477,
                    "p95": 637.152709,
                    "p99": 637.152709,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 946.7082889999999,
                    "min": 824.0170009999999,
                    "p50": 860.040727,
                    "p95": 946.7082889999999,
                    "p99": 946.7082889999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1561.692742,
                    "min": 1367.245635,
                    "p50": 1425.751656,
                    "p95": 1561.692742,
                    "p99": 1561.692742,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1194.3141369999998,
                    "min": 1105.9942079999998,
                    "p50": 1136.332472,
                    "p95": 1194.3141369999998,
                    "p99": 1194.3141369999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 282.811065,
                    "min": 220.490691,
                    "p50": 259.599093,
                    "p95": 282.811065,
                    "p99": 282.811065,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 540.28487,
                    "min": 496.554125,
                    "p50": 516.271397,
                    "p95": 540.28487,
                    "p99": 540.28487,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 226.631112,
                    "min": 185.427688,
                    "p50": 202.625069,
                    "p95": 226.631112,
                    "p99": 226.631112,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 456.516576,
                    "min": 405.548072,
                    "p50": 427.93517199999997,
                    "p95": 456.516576,
                    "p99": 456.516576,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 501.405651,
                    "min": 413.150475,
                    "p50": 447.381784,
                    "p95": 501.405651,
                    "p99": 501.405651,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 149.44343999999998,
                    "min": 128.905178,
                    "p50": 147.457484,
                    "p95": 149.44343999999998,
                    "p99": 149.44343999999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 378.958063,
                    "min": 329.031899,
                    "p50": 335.677849,
                    "p95": 378.958063,
                    "p99": 378.958063,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 402.15426199999996,
                    "min": 325.596164,
                    "p50": 363.667488,
                    "p95": 402.15426199999996,
                    "p99": 402.15426199999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 191.495072,
                    "min": 155.418578,
                    "p50": 176.075242,
                    "p95": 191.495072,
                    "p99": 191.495072,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.28046899999998,
                    "min": 115.74413299999999,
                    "p50": 121.159954,
                    "p95": 129.28046899999998,
                    "p99": 129.28046899999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 439.81344199999995,
                    "min": 372.792427,
                    "p50": 391.837047,
                    "p95": 439.81344199999995,
                    "p99": 439.81344199999995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 345.767908,
                    "min": 307.27412699999996,
                    "p50": 326.642139,
                    "p95": 345.767908,
                    "p99": 345.767908,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 311.849892,
                    "min": 266.244662,
                    "p50": 283.906157,
                    "p95": 311.849892,
                    "p99": 311.849892,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 355.482777,
                    "min": 309.22009399999996,
                    "p50": 347.207627,
                    "p95": 355.482777,
                    "p99": 355.482777,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 525.995198,
                    "min": 490.364194,
                    "p50": 515.559621,
                    "p95": 525.995198,
                    "p99": 525.995198,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 451.694804,
                    "min": 411.54766,
                    "p50": 445.349154,
                    "p95": 451.694804,
                    "p99": 451.694804,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.120995,
                    "min": 132.164739,
                    "p50": 140.69741299999998,
                    "p95": 143.120995,
                    "p99": 143.120995,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 747.946325,
                    "min": 678.651662,
                    "p50": 721.235277,
                    "p95": 747.946325,
                    "p99": 747.946325,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 313.079365,
                    "min": 284.84754699999996,
                    "p50": 308.752342,
                    "p95": 313.079365,
                    "p99": 313.079365,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 208.644856,
                    "min": 169.84991399999998,
                    "p50": 207.964023,
                    "p95": 208.644856,
                    "p99": 208.644856,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 417.70061999999996,
                    "min": 372.45102599999996,
                    "p50": 413.914871,
                    "p95": 417.70061999999996,
                    "p99": 417.70061999999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 247.470316,
                    "min": 220.882511,
                    "p50": 243.869879,
                    "p95": 247.470316,
                    "p99": 247.470316,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 663.372476,
                    "min": 632.338232,
                    "p50": 635.205527,
                    "p95": 663.372476,
                    "p99": 663.372476,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 180.568759,
                    "min": 135.822938,
                    "p50": 177.037397,
                    "p95": 180.568759,
                    "p99": 180.568759,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 570.834343,
                    "min": 508.92096799999996,
                    "p50": 547.0816199999999,
                    "p95": 570.834343,
                    "p99": 570.834343,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 282.84216399999997,
                    "min": 260.311528,
                    "p50": 278.104742,
                    "p95": 282.84216399999997,
                    "p99": 282.84216399999997,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 498.737354,
                    "min": 442.940528,
                    "p50": 483.938117,
                    "p95": 498.737354,
                    "p99": 498.737354,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 381.593218,
                    "min": 372.482347,
                    "p50": 377.58691,
                    "p95": 381.593218,
                    "p99": 381.593218,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 159.866367,
                    "min": 124.881869,
                    "p50": 141.126292,
                    "p95": 159.866367,
                    "p99": 159.866367,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 369.44221899999997,
                    "min": 333.09194199999996,
                    "p50": 350.024027,
                    "p95": 369.44221899999997,
                    "p99": 369.44221899999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 225.60384,
                    "min": 209.923993,
                    "p50": 218.86302899999998,
                    "p95": 225.60384,
                    "p99": 225.60384,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 358.659363,
                    "min": 286.613882,
                    "p50": 306.117413,
                    "p95": 358.659363,
                    "p99": 358.659363,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 522.9601759999999,
                    "min": 431.489314,
                    "p50": 455.031953,
                    "p95": 522.9601759999999,
                    "p99": 522.9601759999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 308.00917799999996,
                    "min": 228.63820099999998,
                    "p50": 260.805165,
                    "p95": 308.00917799999996,
                    "p99": 308.00917799999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 332.321378,
                    "min": 293.12656699999997,
                    "p50": 318.439799,
                    "p95": 332.321378,
                    "p99": 332.321378,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 708.6999569999999,
                    "min": 593.67185,
                    "p50": 643.799269,
                    "p95": 708.6999569999999,
                    "p99": 708.6999569999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 199.718165,
                    "min": 174.372153,
                    "p50": 180.025758,
                    "p95": 199.718165,
                    "p99": 199.718165,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 106.74161699999999,
                    "min": 90.17743,
                    "p50": 99.024997,
                    "p95": 106.74161699999999,
                    "p99": 106.74161699999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 285.916624,
                    "min": 227.21719099999999,
                    "p50": 254.268712,
                    "p95": 285.916624,
                    "p99": 285.916624,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 169.153786,
                    "min": 138.58431199999998,
                    "p50": 161.732451,
                    "p95": 169.153786,
                    "p99": 169.153786,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 135.86629399999998,
                    "min": 111.67750099999999,
                    "p50": 120.89114699999999,
                    "p95": 135.86629399999998,
                    "p99": 135.86629399999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 230.293523,
                    "min": 164.860771,
                    "p50": 203.665899,
                    "p95": 230.293523,
                    "p99": 230.293523,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 410.877677,
                    "min": 372.51764499999996,
                    "p50": 388.894461,
                    "p95": 410.877677,
                    "p99": 410.877677,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 330.673683,
                    "min": 256.763536,
                    "p50": 281.59702,
                    "p95": 330.673683,
                    "p99": 330.673683,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 419.04344299999997,
                    "min": 358.620078,
                    "p50": 398.93859,
                    "p95": 419.04344299999997,
                    "p99": 419.04344299999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 532.780732,
                    "min": 414.02365499999996,
                    "p50": 453.77743499999997,
                    "p95": 532.780732,
                    "p99": 532.780732,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 564.898054,
                    "min": 439.516532,
                    "p50": 484.04473199999995,
                    "p95": 564.898054,
                    "p99": 564.898054,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 352.76892499999997,
                    "min": 269.505411,
                    "p50": 305.39946299999997,
                    "p95": 352.76892499999997,
                    "p99": 352.76892499999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.009916,
                    "min": 197.049829,
                    "p50": 215.868408,
                    "p95": 220.009916,
                    "p99": 220.009916,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 317.56062299999996,
                    "min": 239.595454,
                    "p50": 273.896725,
                    "p95": 317.56062299999996,
                    "p99": 317.56062299999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.20376,
                    "min": 148.346715,
                    "p50": 156.131842,
                    "p95": 159.20376,
                    "p99": 159.20376,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 188.870721,
                    "min": 178.845021,
                    "p50": 187.11067,
                    "p95": 188.870721,
                    "p99": 188.870721,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 393.90616,
                    "min": 296.08770899999996,
                    "p50": 337.575647,
                    "p95": 393.90616,
                    "p99": 393.90616,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 282.055096,
                    "min": 208.406204,
                    "p50": 245.83648699999998,
                    "p95": 282.055096,
                    "p99": 282.055096,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 643.6427669999999,
                    "min": 625.750139,
                    "p50": 633.381948,
                    "p95": 643.6427669999999,
                    "p99": 643.6427669999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 426.79391799999996,
                    "min": 350.733345,
                    "p50": 367.967746,
                    "p95": 426.79391799999996,
                    "p99": 426.79391799999996,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 568.484823,
                    "min": 550.444837,
                    "p50": 556.797689,
                    "p95": 568.484823,
                    "p99": 568.484823,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.684875,
                    "min": 109.364874,
                    "p50": 126.54565299999999,
                    "p95": 131.684875,
                    "p99": 131.684875,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 427.372892,
                    "min": 416.765744,
                    "p50": 420.753291,
                    "p95": 427.372892,
                    "p99": 427.372892,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 365.793405,
                    "min": 356.46702799999997,
                    "p50": 363.22288599999996,
                    "p95": 365.793405,
                    "p99": 365.793405,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 204.637669,
                    "min": 163.019645,
                    "p50": 200.163379,
                    "p95": 204.637669,
                    "p99": 204.637669,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.02879199999998,
                    "min": 131.568134,
                    "p50": 147.19522,
                    "p95": 162.02879199999998,
                    "p99": 162.02879199999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.443692,
                    "min": 103.597735,
                    "p50": 120.457916,
                    "p95": 131.443692,
                    "p99": 131.443692,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 436.964926,
                    "min": 354.898395,
                    "p50": 390.64874599999996,
                    "p95": 436.964926,
                    "p99": 436.964926,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 445.892951,
                    "min": 429.72700199999997,
                    "p50": 441.708846,
                    "p95": 445.892951,
                    "p99": 445.892951,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 315.998802,
                    "min": 241.504291,
                    "p50": 282.516506,
                    "p95": 315.998802,
                    "p99": 315.998802,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 657.860553,
                    "min": 560.99321,
                    "p50": 580.379594,
                    "p95": 657.860553,
                    "p99": 657.860553,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 347.294248,
                    "min": 292.475636,
                    "p50": 309.961073,
                    "p95": 347.294248,
                    "p99": 347.294248,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 235.53997999999999,
                    "min": 227.64226599999998,
                    "p50": 228.98859199999998,
                    "p95": 235.53997999999999,
                    "p99": 235.53997999999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 517.841401,
                    "min": 487.114938,
                    "p50": 507.97387999999995,
                    "p95": 517.841401,
                    "p99": 517.841401,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 449.833758,
                    "min": 399.21588399999996,
                    "p50": 416.77349999999996,
                    "p95": 449.833758,
                    "p99": 449.833758,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 179.33087799999998,
                    "min": 173.41275299999998,
                    "p50": 175.522335,
                    "p95": 179.33087799999998,
                    "p99": 179.33087799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 282.547576,
                    "min": 251.81051599999998,
                    "p50": 255.13643,
                    "p95": 282.547576,
                    "p99": 282.547576,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 856.589385,
                    "min": 807.304622,
                    "p50": 845.744744,
                    "p95": 856.589385,
                    "p99": 856.589385,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 375.199619,
                    "min": 332.00183499999997,
                    "p50": 337.165707,
                    "p95": 375.199619,
                    "p99": 375.199619,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1254.665795,
                    "min": 1073.340618,
                    "p50": 1114.678463,
                    "p95": 1254.665795,
                    "p99": 1254.665795,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 583.449673,
                    "min": 557.55386,
                    "p50": 567.09224,
                    "p95": 583.449673,
                    "p99": 583.449673,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 304.937419,
                    "min": 290.60945399999997,
                    "p50": 300.635231,
                    "p95": 304.937419,
                    "p99": 304.937419,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1098.617319,
                    "min": 1084.149,
                    "p50": 1090.70144,
                    "p95": 1098.617319,
                    "p99": 1098.617319,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 779.568807,
                    "min": 759.5761329999999,
                    "p50": 769.6974349999999,
                    "p95": 779.568807,
                    "p99": 779.568807,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 356.2914,
                    "min": 341.33122,
                    "p50": 354.022499,
                    "p95": 356.2914,
                    "p99": 356.2914,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 839.93209,
                    "min": 812.054036,
                    "p50": 821.129915,
                    "p95": 839.93209,
                    "p99": 839.93209,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 407.69611299999997,
                    "min": 392.43622999999997,
                    "p50": 405.28130799999997,
                    "p95": 407.69611299999997,
                    "p99": 407.69611299999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 668.6582629999999,
                    "min": 625.529058,
                    "p50": 664.76749,
                    "p95": 668.6582629999999,
                    "p99": 668.6582629999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 514.899693,
                    "min": 504.93377699999996,
                    "p50": 509.22567499999997,
                    "p95": 514.899693,
                    "p99": 514.899693,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 730.141432,
                    "min": 712.8990289999999,
                    "p50": 722.051529,
                    "p95": 730.141432,
                    "p99": 730.141432,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 966.509543,
                    "min": 947.2366619999999,
                    "p50": 954.913227,
                    "p95": 966.509543,
                    "p99": 966.509543,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 457.432423,
                    "min": 440.592025,
                    "p50": 456.56907099999995,
                    "p95": 457.432423,
                    "p99": 457.432423,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 615.410848,
                    "min": 609.976326,
                    "p50": 612.940801,
                    "p95": 615.410848,
                    "p99": 615.410848,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 202.354571,
                    "min": 188.846383,
                    "p50": 195.636572,
                    "p95": 202.354571,
                    "p99": 202.354571,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 251.49076599999998,
                    "min": 233.161522,
                    "p50": 248.004606,
                    "p95": 251.49076599999998,
                    "p99": 251.49076599999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 338.393313,
                    "min": 330.467439,
                    "p50": 332.725036,
                    "p95": 338.393313,
                    "p99": 338.393313,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 171.627907,
                    "min": 118.8278,
                    "p50": 156.11127399999998,
                    "p95": 171.627907,
                    "p99": 171.627907,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 398.27631299999996,
                    "min": 379.454519,
                    "p50": 392.092851,
                    "p95": 398.27631299999996,
                    "p99": 398.27631299999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 531.912772,
                    "min": 427.603541,
                    "p50": 455.83982599999996,
                    "p95": 531.912772,
                    "p99": 531.912772,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 214.35348199999999,
                    "min": 149.534058,
                    "p50": 186.383951,
                    "p95": 214.35348199999999,
                    "p99": 214.35348199999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 306.628062,
                    "min": 293.426985,
                    "p50": 305.92841699999997,
                    "p95": 306.628062,
                    "p99": 306.628062,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 278.799593,
                    "min": 266.999998,
                    "p50": 274.08151699999996,
                    "p95": 278.799593,
                    "p99": 278.799593,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.087382,
                    "min": 195.518111,
                    "p50": 217.832045,
                    "p95": 220.087382,
                    "p99": 220.087382,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.516629,
                    "min": 127.06683299999999,
                    "p50": 130.899161,
                    "p95": 143.516629,
                    "p99": 143.516629,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 565.357583,
                    "min": 547.078616,
                    "p50": 561.958495,
                    "p95": 565.357583,
                    "p99": 565.357583,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 423.154752,
                    "min": 329.92593999999997,
                    "p50": 363.24454199999997,
                    "p95": 423.154752,
                    "p99": 423.154752,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 425.45282699999996,
                    "min": 418.030596,
                    "p50": 421.75404599999996,
                    "p95": 425.45282699999996,
                    "p99": 425.45282699999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 749.696286,
                    "min": 624.644851,
                    "p50": 633.912169,
                    "p95": 749.696286,
                    "p99": 749.696286,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 486.45403799999997,
                    "min": 462.58982499999996,
                    "p50": 481.373861,
                    "p95": 486.45403799999997,
                    "p99": 486.45403799999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 287.247936,
                    "min": 207.71713499999998,
                    "p50": 245.118103,
                    "p95": 287.247936,
                    "p99": 287.247936,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 606.5652309999999,
                    "min": 541.1123769999999,
                    "p50": 554.221721,
                    "p95": 606.5652309999999,
                    "p99": 606.5652309999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 335.04037,
                    "min": 294.437794,
                    "p50": 331.68019599999997,
                    "p95": 335.04037,
                    "p99": 335.04037,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 530.701023,
                    "min": 414.065808,
                    "p50": 459.547374,
                    "p95": 530.701023,
                    "p99": 530.701023,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 487.73625,
                    "min": 456.681003,
                    "p50": 480.023601,
                    "p95": 487.73625,
                    "p99": 487.73625,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 638.106351,
                    "min": 587.911762,
                    "p50": 626.6852319999999,
                    "p95": 638.106351,
                    "p99": 638.106351,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 366.349838,
                    "min": 345.371971,
                    "p50": 363.044128,
                    "p95": 366.349838,
                    "p99": 366.349838,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 248.09523099999998,
                    "min": 197.028119,
                    "p50": 218.23987499999998,
                    "p95": 248.09523099999998,
                    "p99": 248.09523099999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 279.22594799999996,
                    "min": 236.719088,
                    "p50": 276.31354799999997,
                    "p95": 279.22594799999996,
                    "p99": 279.22594799999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 498.058004,
                    "min": 405.445164,
                    "p50": 423.665914,
                    "p95": 498.058004,
                    "p99": 498.058004,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 399.60335599999996,
                    "min": 355.873046,
                    "p50": 394.79817199999997,
                    "p95": 399.60335599999996,
                    "p99": 399.60335599999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1091.451249,
                    "min": 926.082491,
                    "p50": 932.718536,
                    "p95": 1091.451249,
                    "p99": 1091.451249,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.381417,
                    "min": 243.699502,
                    "p50": 245.80794,
                    "p95": 286.381417,
                    "p99": 286.381417,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.633426,
                    "min": 113.934545,
                    "p50": 127.812424,
                    "p95": 145.633426,
                    "p99": 145.633426,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 218.062479,
                    "min": 147.957598,
                    "p50": 185.67818499999998,
                    "p95": 218.062479,
                    "p99": 218.062479,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 309.179688,
                    "min": 281.330398,
                    "p50": 303.723159,
                    "p95": 309.179688,
                    "p99": 309.179688,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.02039,
                    "min": 155.674536,
                    "p50": 156.903696,
                    "p95": 160.02039,
                    "p99": 160.02039,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 892.836551,
                    "min": 873.0015659999999,
                    "p50": 880.46867,
                    "p95": 892.836551,
                    "p99": 892.836551,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 438.307868,
                    "min": 416.583596,
                    "p50": 434.84212499999995,
                    "p95": 438.307868,
                    "p99": 438.307868,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.413679,
                    "min": 207.726833,
                    "p50": 209.792384,
                    "p95": 213.413679,
                    "p99": 213.413679,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 269.416855,
                    "min": 254.343155,
                    "p50": 265.539851,
                    "p95": 269.416855,
                    "p99": 269.416855,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 610.0453769999999,
                    "min": 598.955038,
                    "p50": 603.439973,
                    "p95": 610.0453769999999,
                    "p99": 610.0453769999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 384.70520799999997,
                    "min": 365.003555,
                    "p50": 380.27086299999996,
                    "p95": 384.70520799999997,
                    "p99": 384.70520799999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1190.620165,
                    "min": 1133.556605,
                    "p50": 1173.244387,
                    "p95": 1190.620165,
                    "p99": 1190.620165,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 326.611025,
                    "min": 284.007904,
                    "p50": 322.285748,
                    "p95": 326.611025,
                    "p99": 326.611025,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 669.47466,
                    "min": 638.1428539999999,
                    "p50": 664.1511429999999,
                    "p95": 669.47466,
                    "p99": 669.47466,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 492.964634,
                    "min": 485.276015,
                    "p50": 490.74298999999996,
                    "p95": 492.964634,
                    "p99": 492.964634,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 727.004721,
                    "min": 709.0426739999999,
                    "p50": 714.314493,
                    "p95": 727.004721,
                    "p99": 727.004721,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 783.205212,
                    "min": 727.11826,
                    "p50": 771.201658,
                    "p95": 783.205212,
                    "p99": 783.205212,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1039.5546299999999,
                    "min": 1019.388463,
                    "p50": 1027.831214,
                    "p95": 1039.5546299999999,
                    "p99": 1039.5546299999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 838.259723,
                    "min": 821.617862,
                    "p50": 832.654445,
                    "p95": 838.259723,
                    "p99": 838.259723,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 553.027727,
                    "min": 539.0493369999999,
                    "p50": 545.0398,
                    "p95": 553.027727,
                    "p99": 553.027727,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 178.16348,
                    "min": 145.482606,
                    "p50": 156.684403,
                    "p95": 178.16348,
                    "p99": 178.16348,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 556.442834,
                    "min": 476.71662399999997,
                    "p50": 481.240388,
                    "p95": 556.442834,
                    "p99": 556.442834,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 417.34601799999996,
                    "min": 352.40676199999996,
                    "p50": 363.182081,
                    "p95": 417.34601799999996,
                    "p99": 417.34601799999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 354.27554499999997,
                    "min": 283.786591,
                    "p50": 303.783625,
                    "p95": 354.27554499999997,
                    "p99": 354.27554499999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 250.493047,
                    "min": 204.619475,
                    "p50": 216.812873,
                    "p95": 250.493047,
                    "p99": 250.493047,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 128.81190999999998,
                    "min": 116.038252,
                    "p50": 127.014412,
                    "p95": 128.81190999999998,
                    "p99": 128.81190999999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 211.925234,
                    "min": 179.047133,
                    "p50": 186.708633,
                    "p95": 211.925234,
                    "p99": 211.925234,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 527.213303,
                    "min": 450.19199,
                    "p50": 452.440343,
                    "p95": 527.213303,
                    "p99": 527.213303,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 645.008732,
                    "min": 516.9923749999999,
                    "p50": 556.384949,
                    "p95": 645.008732,
                    "p99": 645.008732,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 247.385349,
                    "min": 224.675332,
                    "p50": 245.28081799999998,
                    "p95": 247.385349,
                    "p99": 247.385349,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 338.4993,
                    "min": 315.793527,
                    "p50": 333.203135,
                    "p95": 338.4993,
                    "p99": 338.4993,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 642.893139,
                    "min": 621.1175559999999,
                    "p50": 630.011222,
                    "p95": 642.893139,
                    "p99": 642.893139,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 397.472445,
                    "min": 354.38273,
                    "p50": 389.038206,
                    "p95": 397.472445,
                    "p99": 397.472445,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 319.335881,
                    "min": 268.0655,
                    "p50": 277.421405,
                    "p95": 319.335881,
                    "p99": 319.335881,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 494.56985399999996,
                    "min": 388.230441,
                    "p50": 427.877887,
                    "p95": 494.56985399999996,
                    "p99": 494.56985399999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1109.125031,
                    "min": 1085.7282969999999,
                    "p50": 1102.1067189999999,
                    "p95": 1109.125031,
                    "p99": 1109.125031,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 613.55045,
                    "min": 567.429954,
                    "p50": 607.784802,
                    "p95": 613.55045,
                    "p99": 613.55045,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 759.826046,
                    "min": 738.930351,
                    "p50": 749.635578,
                    "p95": 759.826046,
                    "p99": 759.826046,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 830.9843099999999,
                    "min": 806.455483,
                    "p50": 819.0971079999999,
                    "p95": 830.9843099999999,
                    "p99": 830.9843099999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1050.553864,
                    "min": 1015.111907,
                    "p50": 1030.4759219999999,
                    "p95": 1050.553864,
                    "p99": 1050.553864,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 965.6995149999999,
                    "min": 911.3181669999999,
                    "p50": 957.9971869999999,
                    "p95": 965.6995149999999,
                    "p99": 965.6995149999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 326.22585699999996,
                    "min": 316.727332,
                    "p50": 320.916334,
                    "p95": 326.22585699999996,
                    "p99": 326.22585699999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 682.747835,
                    "min": 627.2794749999999,
                    "p50": 676.151116,
                    "p95": 682.747835,
                    "p99": 682.747835,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 893.4597369999999,
                    "min": 860.4922349999999,
                    "p50": 887.744366,
                    "p95": 893.4597369999999,
                    "p99": 893.4597369999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1305.428228,
                    "min": 1239.58988,
                    "p50": 1284.391224,
                    "p95": 1305.428228,
                    "p99": 1305.428228,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 407.75552,
                    "min": 386.949755,
                    "p50": 396.439237,
                    "p95": 407.75552,
                    "p99": 407.75552,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 555.982985,
                    "min": 505.677506,
                    "p50": 533.8479649999999,
                    "p95": 555.982985,
                    "p99": 555.982985,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.640296,
                    "min": 244.44816799999998,
                    "p50": 253.56355299999998,
                    "p95": 256.640296,
                    "p99": 256.640296,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 472.810435,
                    "min": 449.829123,
                    "p50": 467.85430399999996,
                    "p95": 472.810435,
                    "p99": 472.810435,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1461.078202,
                    "min": 1428.284357,
                    "p50": 1441.999613,
                    "p95": 1461.078202,
                    "p99": 1461.078202,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1458.689163,
                    "min": 1423.4253959999999,
                    "p50": 1446.07404,
                    "p95": 1458.689163,
                    "p99": 1458.689163,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1044.463654,
                    "min": 988.889063,
                    "p50": 1027.197512,
                    "p95": 1044.463654,
                    "p99": 1044.463654,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 891.2782199999999,
                    "min": 848.0817119999999,
                    "p50": 879.0561379999999,
                    "p95": 891.2782199999999,
                    "p99": 891.2782199999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 681.126908,
                    "min": 626.810493,
                    "p50": 674.1511429999999,
                    "p95": 681.126908,
                    "p99": 681.126908,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 612.096858,
                    "min": 556.843831,
                    "p50": 603.7050439999999,
                    "p95": 612.096858,
                    "p99": 612.096858,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 466.501961,
                    "min": 445.543748,
                    "p50": 460.799876,
                    "p95": 466.501961,
                    "p99": 466.501961,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 953.381099,
                    "min": 907.266753,
                    "p50": 945.930788,
                    "p95": 953.381099,
                    "p99": 953.381099,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 326.365775,
                    "min": 281.58088,
                    "p50": 319.871377,
                    "p95": 326.365775,
                    "p99": 326.365775,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 815.7990699999999,
                    "min": 761.103992,
                    "p50": 812.380458,
                    "p95": 815.7990699999999,
                    "p99": 815.7990699999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 401.112053,
                    "min": 373.946955,
                    "p50": 390.572887,
                    "p95": 401.112053,
                    "p99": 401.112053,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1295.354654,
                    "min": 1257.560323,
                    "p50": 1271.431087,
                    "p95": 1295.354654,
                    "p99": 1295.354654,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.881899,
                    "min": 235.78156099999998,
                    "p50": 250.15222999999997,
                    "p95": 256.881899,
                    "p99": 256.881899,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 539.726697,
                    "min": 515.474922,
                    "p50": 530.980647,
                    "p95": 539.726697,
                    "p99": 539.726697,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1113.765789,
                    "min": 1074.3761769999999,
                    "p50": 1094.041492,
                    "p95": 1113.765789,
                    "p99": 1113.765789,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 750.4096539999999,
                    "min": 731.253624,
                    "p50": 736.4177129999999,
                    "p95": 750.4096539999999,
                    "p99": 750.4096539999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 819.714829,
                    "min": 797.771221,
                    "p50": 808.346043,
                    "p95": 819.714829,
                    "p99": 819.714829,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 470.17462,
                    "min": 452.710806,
                    "p50": 458.305214,
                    "p95": 470.17462,
                    "p99": 470.17462,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 396.515036,
                    "min": 374.441734,
                    "p50": 390.254669,
                    "p95": 396.515036,
                    "p99": 396.515036,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 759.608493,
                    "min": 688.979467,
                    "p50": 739.409355,
                    "p95": 759.608493,
                    "p99": 759.608493,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1458.7582169999998,
                    "min": 1381.8102039999999,
                    "p50": 1437.169977,
                    "p95": 1458.7582169999998,
                    "p99": 1458.7582169999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 328.741022,
                    "min": 279.130028,
                    "p50": 319.384586,
                    "p95": 328.741022,
                    "p99": 328.741022,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 546.514472,
                    "min": 489.87760699999995,
                    "p50": 533.1745629999999,
                    "p95": 546.514472,
                    "p99": 546.514472,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 253.74418599999998,
                    "min": 241.45702,
                    "p50": 249.43155499999997,
                    "p95": 253.74418599999998,
                    "p99": 253.74418599999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1111.525208,
                    "min": 1070.852191,
                    "p50": 1088.1334379999998,
                    "p95": 1111.525208,
                    "p99": 1111.525208,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1028.260618,
                    "min": 975.630777,
                    "p50": 1019.0459109999999,
                    "p95": 1028.260618,
                    "p99": 1028.260618,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 899.127758,
                    "min": 837.197859,
                    "p50": 873.820752,
                    "p95": 899.127758,
                    "p99": 899.127758,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 972.9963869999999,
                    "min": 912.714444,
                    "p50": 956.16586,
                    "p95": 972.9963869999999,
                    "p99": 972.9963869999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 679.7944779999999,
                    "min": 654.04243,
                    "p50": 669.8290539999999,
                    "p95": 679.7944779999999,
                    "p99": 679.7944779999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1269.143331,
                    "min": 1214.081843,
                    "p50": 1262.5037889999999,
                    "p95": 1269.143331,
                    "p99": 1269.143331,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 605.770463,
                    "min": 593.228916,
                    "p50": 594.274136,
                    "p95": 605.770463,
                    "p99": 605.770463,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 529.923413,
                    "min": 502.48189199999996,
                    "p50": 523.490693,
                    "p95": 529.923413,
                    "p99": 529.923413,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 304.50368499999996,
                    "min": 293.558739,
                    "p50": 300.6909,
                    "p95": 304.50368499999996,
                    "p99": 304.50368499999996,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 610.084606,
                    "min": 562.2504779999999,
                    "p50": 597.952468,
                    "p95": 610.084606,
                    "p99": 610.084606,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 707.097365,
                    "min": 670.6424049999999,
                    "p50": 694.23628,
                    "p95": 707.097365,
                    "p99": 707.097365,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.112966,
                    "min": 142.600149,
                    "p50": 151.700084,
                    "p95": 157.112966,
                    "p99": 157.112966,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 490.930857,
                    "min": 445.848297,
                    "p50": 486.841837,
                    "p95": 490.930857,
                    "p99": 490.930857,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 267.855506,
                    "min": 261.906891,
                    "p50": 264.831487,
                    "p95": 267.855506,
                    "p99": 267.855506,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 191.08164,
                    "min": 187.038075,
                    "p50": 189.432607,
                    "p95": 191.08164,
                    "p99": 191.08164,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1173.493516,
                    "min": 1152.55338,
                    "p50": 1158.152787,
                    "p95": 1173.493516,
                    "p99": 1173.493516,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 376.969717,
                    "min": 352.144112,
                    "p50": 374.812712,
                    "p95": 376.969717,
                    "p99": 376.969717,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 453.685884,
                    "min": 407.46953399999995,
                    "p50": 450.70867,
                    "p95": 453.685884,
                    "p99": 453.685884,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 571.598875,
                    "min": 556.3759259999999,
                    "p50": 559.7349009999999,
                    "p95": 571.598875,
                    "p99": 571.598875,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 228.983568,
                    "min": 186.11587699999998,
                    "p50": 226.311185,
                    "p95": 228.983568,
                    "p99": 228.983568,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1932.287007,
                    "min": 1877.512282,
                    "p50": 1898.3546609999999,
                    "p95": 1932.287007,
                    "p99": 1932.287007,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 804.963313,
                    "min": 770.490589,
                    "p50": 785.722541,
                    "p95": 804.963313,
                    "p99": 804.963313,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 421.403121,
                    "min": 411.853892,
                    "p50": 414.95419699999997,
                    "p95": 421.403121,
                    "p99": 421.403121,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 344.69703,
                    "min": 334.01892899999996,
                    "p50": 336.685768,
                    "p95": 344.69703,
                    "p99": 344.69703,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1538.252918,
                    "min": 1513.47633,
                    "p50": 1527.259395,
                    "p95": 1538.252918,
                    "p99": 1538.252918,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 723.464664,
                    "min": 624.147698,
                    "p50": 638.265459,
                    "p95": 723.464664,
                    "p99": 723.464664,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 247.13154799999998,
                    "min": 209.27602399999998,
                    "p50": 216.64466199999998,
                    "p95": 247.13154799999998,
                    "p99": 247.13154799999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 491.519069,
                    "min": 418.599266,
                    "p50": 423.145309,
                    "p95": 491.519069,
                    "p99": 491.519069,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 352.966213,
                    "min": 295.158075,
                    "p50": 304.392741,
                    "p95": 352.966213,
                    "p99": 352.966213,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 386.22387399999997,
                    "min": 327.933727,
                    "p50": 333.957996,
                    "p95": 386.22387399999997,
                    "p99": 386.22387399999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.648221,
                    "min": 118.611409,
                    "p50": 127.92904499999999,
                    "p95": 145.648221,
                    "p99": 145.648221,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 421.633363,
                    "min": 360.756436,
                    "p50": 363.096495,
                    "p95": 421.633363,
                    "p99": 421.633363,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 212.77689099999998,
                    "min": 184.37673999999998,
                    "p50": 186.572062,
                    "p95": 212.77689099999998,
                    "p99": 212.77689099999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 531.969447,
                    "min": 450.59270999999995,
                    "p50": 453.519792,
                    "p95": 531.969447,
                    "p99": 531.969447,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 319.704887,
                    "min": 271.294271,
                    "p50": 277.23353,
                    "p95": 319.704887,
                    "p99": 319.704887,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 660.2561569999999,
                    "min": 557.137163,
                    "p50": 561.751889,
                    "p95": 660.2561569999999,
                    "p99": 660.2561569999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 398.65950599999996,
                    "min": 355.80276299999997,
                    "p50": 392.788234,
                    "p95": 398.65950599999996,
                    "p99": 398.65950599999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.030086,
                    "min": 207.944111,
                    "p50": 244.70078999999998,
                    "p95": 286.030086,
                    "p99": 286.030086,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.001564,
                    "min": 133.77686699999998,
                    "p50": 157.502668,
                    "p95": 159.001564,
                    "p99": 159.001564,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 488.003455,
                    "min": 444.347468,
                    "p50": 485.500185,
                    "p95": 488.003455,
                    "p99": 488.003455,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1061.3490279999999,
                    "min": 890.919914,
                    "p50": 937.297014,
                    "p95": 1061.3490279999999,
                    "p99": 1061.3490279999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 310.053999,
                    "min": 294.896053,
                    "p50": 309.202945,
                    "p95": 310.053999,
                    "p99": 310.053999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 391.997095,
                    "min": 332.910682,
                    "p50": 341.41466299999996,
                    "p95": 391.997095,
                    "p99": 391.997095,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.87427,
                    "min": 176.847095,
                    "p50": 188.69535399999998,
                    "p95": 233.87427,
                    "p99": 233.87427,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 302.937004,
                    "min": 265.399258,
                    "p50": 277.252319,
                    "p95": 302.937004,
                    "p99": 302.937004,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 535.919313,
                    "min": 446.11787,
                    "p50": 453.67891499999996,
                    "p95": 535.919313,
                    "p99": 535.919313,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.729028,
                    "min": 116.87581,
                    "p50": 129.199369,
                    "p95": 153.729028,
                    "p99": 153.729028,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1094.415298,
                    "min": 921.91247,
                    "p50": 938.170614,
                    "p95": 1094.415298,
                    "p99": 1094.415298,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 421.823047,
                    "min": 332.758642,
                    "p50": 364.832451,
                    "p95": 421.823047,
                    "p99": 421.823047,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 425.201307,
                    "min": 403.03668,
                    "p50": 422.969806,
                    "p95": 425.201307,
                    "p99": 425.201307,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 233.91813599999998,
                    "min": 180.05687799999998,
                    "p50": 218.08438099999998,
                    "p95": 233.91813599999998,
                    "p99": 233.91813599999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 564.5476239999999,
                    "min": 523.265207,
                    "p50": 557.5769329999999,
                    "p95": 564.5476239999999,
                    "p99": 564.5476239999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 457.08153699999997,
                    "min": 367.193847,
                    "p50": 392.09423599999997,
                    "p95": 457.08153699999997,
                    "p99": 457.08153699999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 283.691584,
                    "min": 231.234434,
                    "p50": 249.38061,
                    "p95": 283.691584,
                    "p99": 283.691584,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1265.477918,
                    "min": 1222.9755089999999,
                    "p50": 1236.7569079999998,
                    "p95": 1265.477918,
                    "p99": 1265.477918,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 161.574667,
                    "min": 149.79414599999998,
                    "p50": 157.71556999999999,
                    "p95": 161.574667,
                    "p99": 161.574667,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 581.116869,
                    "min": 449.60599199999996,
                    "p50": 484.190495,
                    "p95": 581.116869,
                    "p99": 581.116869,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 643.5243459999999,
                    "min": 595.211192,
                    "p50": 636.149891,
                    "p95": 643.5243459999999,
                    "p99": 643.5243459999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "erigon": {
            "name": "erigon",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 631.965338,
                    "min": 583.197867,
                    "p50": 594.7208069999999,
                    "p95": 631.965338,
                    "p99": 631.965338,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1004.183413,
                    "min": 958.5973009999999,
                    "p50": 975.3284749999999,
                    "p95": 1004.183413,
                    "p99": 1004.183413,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 855.5164159999999,
                    "min": 830.2654819999999,
                    "p50": 837.508779,
                    "p95": 855.5164159999999,
                    "p99": 855.5164159999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 664.666523,
                    "min": 645.5561299999999,
                    "p50": 657.812267,
                    "p95": 664.666523,
                    "p99": 664.666523,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 788.8460329999999,
                    "min": 767.030523,
                    "p50": 774.9514889999999,
                    "p95": 788.8460329999999,
                    "p99": 788.8460329999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 938.787751,
                    "min": 897.867095,
                    "p50": 908.566337,
                    "p95": 938.787751,
                    "p99": 938.787751,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 247.24768899999998,
                    "min": 206.031467,
                    "p50": 218.10541899999998,
                    "p95": 247.24768899999998,
                    "p99": 247.24768899999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.923236,
                    "min": 268.887546,
                    "p50": 271.879505,
                    "p95": 291.923236,
                    "p99": 291.923236,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 355.16205299999996,
                    "min": 330.797978,
                    "p50": 344.47454899999997,
                    "p95": 355.16205299999996,
                    "p99": 355.16205299999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1310.171173,
                    "min": 1268.084876,
                    "p50": 1285.7793219999999,
                    "p95": 1310.171173,
                    "p99": 1310.171173,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 431.143549,
                    "min": 393.941602,
                    "p50": 400.82422099999997,
                    "p95": 431.143549,
                    "p99": 431.143549,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1210.5495779999999,
                    "min": 1120.253616,
                    "p50": 1122.209096,
                    "p95": 1210.5495779999999,
                    "p99": 1210.5495779999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 568.158594,
                    "min": 520.81957,
                    "p50": 525.430477,
                    "p95": 568.158594,
                    "p99": 568.158594,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 472.035593,
                    "min": 453.89683399999996,
                    "p50": 459.973645,
                    "p95": 472.035593,
                    "p99": 472.035593,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 542.584614,
                    "min": 474.886914,
                    "p50": 502.887393,
                    "p95": 542.584614,
                    "p99": 542.584614,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 825.7497199999999,
                    "min": 741.703551,
                    "p50": 775.265011,
                    "p95": 825.7497199999999,
                    "p99": 825.7497199999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1017.0333579999999,
                    "min": 939.7281539999999,
                    "p50": 1001.0891939999999,
                    "p95": 1017.0333579999999,
                    "p99": 1017.0333579999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 330.51645199999996,
                    "min": 299.39311399999997,
                    "p50": 320.948158,
                    "p95": 330.51645199999996,
                    "p99": 330.51645199999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 573.340965,
                    "min": 544.401422,
                    "p50": 554.306023,
                    "p95": 573.340965,
                    "p99": 573.340965,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 928.452996,
                    "min": 871.398513,
                    "p50": 892.2887539999999,
                    "p95": 928.452996,
                    "p99": 928.452996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.94820799999997,
                    "min": 257.842645,
                    "p50": 272.145112,
                    "p95": 286.94820799999997,
                    "p99": 286.94820799999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 427.88176899999996,
                    "min": 397.796074,
                    "p50": 420.783084,
                    "p95": 427.88176899999996,
                    "p99": 427.88176899999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 473.16858099999996,
                    "min": 384.500403,
                    "p50": 464.25820999999996,
                    "p95": 473.16858099999996,
                    "p99": 473.16858099999996,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 0,
                    "min": 0,
                    "p50": 0,
                    "p95": 0,
                    "p99": 0,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 287.26137,
                    "min": 0,
                    "p50": 267.696033,
                    "p95": 287.26137,
                    "p99": 287.26137,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1523.262738,
                    "min": 1473.662409,
                    "p50": 1491.2686919999999,
                    "p95": 1523.262738,
                    "p99": 1523.262738,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 928.938371,
                    "min": 873.838806,
                    "p50": 898.8029359999999,
                    "p95": 928.938371,
                    "p99": 928.938371,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 678.915113,
                    "min": 647.9022309999999,
                    "p50": 671.728408,
                    "p95": 678.915113,
                    "p99": 678.915113,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 630.331695,
                    "min": 605.191294,
                    "p50": 616.049657,
                    "p95": 630.331695,
                    "p99": 630.331695,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 386.485303,
                    "min": 360.33679,
                    "p50": 377.462839,
                    "p95": 386.485303,
                    "p99": 386.485303,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1013.325795,
                    "min": 991.804405,
                    "p50": 1005.964133,
                    "p95": 1013.325795,
                    "p99": 1013.325795,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 198.39261299999998,
                    "min": 163.600059,
                    "p50": 171.014847,
                    "p95": 198.39261299999998,
                    "p99": 198.39261299999998,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 777.668964,
                    "min": 749.4532849999999,
                    "p50": 765.3098289999999,
                    "p95": 777.668964,
                    "p99": 777.668964,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 451.90698599999996,
                    "min": 412.964097,
                    "p50": 433.0807,
                    "p95": 451.90698599999996,
                    "p99": 451.90698599999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 342.837853,
                    "min": 310.65353999999996,
                    "p50": 321.197879,
                    "p95": 342.837853,
                    "p99": 342.837853,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 241.538116,
                    "min": 212.557661,
                    "p50": 225.811736,
                    "p95": 241.538116,
                    "p99": 241.538116,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 735.9244279999999,
                    "min": 707.825884,
                    "p50": 710.517175,
                    "p95": 735.9244279999999,
                    "p99": 735.9244279999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1150.398042,
                    "min": 1115.96058,
                    "p50": 1126.5032079999999,
                    "p95": 1150.398042,
                    "p99": 1150.398042,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.089563,
                    "min": 205.24223999999998,
                    "p50": 213.696713,
                    "p95": 227.089563,
                    "p99": 227.089563,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 804.925248,
                    "min": 771.481057,
                    "p50": 790.441232,
                    "p95": 804.925248,
                    "p99": 804.925248,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 854.406706,
                    "min": 830.021439,
                    "p50": 842.981313,
                    "p95": 854.406706,
                    "p99": 854.406706,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 279.092196,
                    "min": 268.203915,
                    "p50": 274.740838,
                    "p95": 279.092196,
                    "p99": 279.092196,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 728.287479,
                    "min": 704.2987479999999,
                    "p50": 718.048417,
                    "p95": 728.287479,
                    "p99": 728.287479,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 992.178826,
                    "min": 958.751751,
                    "p50": 970.8640519999999,
                    "p95": 992.178826,
                    "p99": 992.178826,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 416.18395599999997,
                    "min": 394.116632,
                    "p50": 400.30782899999997,
                    "p95": 416.18395599999997,
                    "p99": 416.18395599999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 611.588386,
                    "min": 579.450344,
                    "p50": 593.32479,
                    "p95": 611.588386,
                    "p99": 611.588386,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 551.542419,
                    "min": 515.3322479999999,
                    "p50": 536.6343949999999,
                    "p95": 551.542419,
                    "p99": 551.542419,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1288.762403,
                    "min": 1272.136194,
                    "p50": 1277.8518569999999,
                    "p95": 1288.762403,
                    "p99": 1288.762403,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 663.206289,
                    "min": 642.83147,
                    "p50": 655.8914589999999,
                    "p95": 663.206289,
                    "p99": 663.206289,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 507.730643,
                    "min": 455.067069,
                    "p50": 470.444467,
                    "p95": 507.730643,
                    "p99": 507.730643,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 358.636079,
                    "min": 329.69239699999997,
                    "p50": 343.341663,
                    "p95": 358.636079,
                    "p99": 358.636079,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 932.134235,
                    "min": 905.521481,
                    "p50": 911.182052,
                    "p95": 932.134235,
                    "p99": 932.134235,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 135.72432899999998,
                    "min": 90.517639,
                    "p50": 129.234238,
                    "p95": 135.72432899999998,
                    "p99": 135.72432899999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 63.312816999999995,
                    "min": 43.419748,
                    "p50": 47.05274,
                    "p95": 63.312816999999995,
                    "p99": 63.312816999999995,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 302.463915,
                    "min": 236.372607,
                    "p50": 285.71529699999996,
                    "p95": 302.463915,
                    "p99": 302.463915,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 515.812992,
                    "min": 402.00453699999997,
                    "p50": 482.41301599999997,
                    "p95": 515.812992,
                    "p99": 515.812992,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 108.110001,
                    "min": 88.475836,
                    "p50": 92.592688,
                    "p95": 108.110001,
                    "p99": 108.110001,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 90.889291,
                    "min": 67.310418,
                    "p50": 71.098655,
                    "p95": 90.889291,
                    "p99": 90.889291,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 251.57467599999998,
                    "min": 196.493514,
                    "p50": 217.706177,
                    "p95": 251.57467599999998,
                    "p99": 251.57467599999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.291857,
                    "min": 50.279185999999996,
                    "p50": 52.240735,
                    "p95": 84.291857,
                    "p99": 84.291857,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 89.76517899999999,
                    "min": 73.92862699999999,
                    "p50": 83.377727,
                    "p95": 89.76517899999999,
                    "p99": 89.76517899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 124.494339,
                    "min": 105.494151,
                    "p50": 114.256227,
                    "p95": 124.494339,
                    "p99": 124.494339,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 207.051237,
                    "min": 163.488189,
                    "p50": 178.294397,
                    "p95": 207.051237,
                    "p99": 207.051237,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 47.454009,
                    "min": 36.549403999999996,
                    "p50": 38.995872,
                    "p95": 47.454009,
                    "p99": 47.454009,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 87.12659099999999,
                    "min": 80.507455,
                    "p50": 82.805928,
                    "p95": 87.12659099999999,
                    "p99": 87.12659099999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 99.154862,
                    "min": 74.251677,
                    "p50": 95.520258,
                    "p95": 99.154862,
                    "p99": 99.154862,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 66.661183,
                    "min": 59.670435,
                    "p50": 62.685795,
                    "p95": 66.661183,
                    "p99": 66.661183,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 70.355004,
                    "min": 50.141647999999996,
                    "p50": 66.114218,
                    "p95": 70.355004,
                    "p99": 70.355004,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 97.270541,
                    "min": 79.99884399999999,
                    "p50": 93.035038,
                    "p95": 97.270541,
                    "p99": 97.270541,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 72.203149,
                    "min": 56.997944,
                    "p50": 68.66143,
                    "p95": 72.203149,
                    "p99": 72.203149,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 77.802308,
                    "min": 71.53482199999999,
                    "p50": 73.986049,
                    "p95": 77.802308,
                    "p99": 77.802308,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 314.356902,
                    "min": 283.882913,
                    "p50": 293.141658,
                    "p95": 314.356902,
                    "p99": 314.356902,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 185.130205,
                    "min": 163.48887299999998,
                    "p50": 169.00474499999999,
                    "p95": 185.130205,
                    "p99": 185.130205,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 458.119718,
                    "min": 422.41230199999995,
                    "p50": 436.537282,
                    "p95": 458.119718,
                    "p99": 458.119718,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.184451,
                    "min": 194.543343,
                    "p50": 206.631453,
                    "p95": 220.184451,
                    "p99": 220.184451,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 375.081183,
                    "min": 335.903749,
                    "p50": 351.171089,
                    "p95": 375.081183,
                    "p99": 375.081183,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1547.151146,
                    "min": 1487.78939,
                    "p50": 1500.855194,
                    "p95": 1547.151146,
                    "p99": 1547.151146,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 357.07629,
                    "min": 308.571694,
                    "p50": 318.308927,
                    "p95": 357.07629,
                    "p99": 357.07629,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 415.94411399999996,
                    "min": 396.034969,
                    "p50": 410.31766899999997,
                    "p95": 415.94411399999996,
                    "p99": 415.94411399999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 566.196855,
                    "min": 530.681696,
                    "p50": 540.9609909999999,
                    "p95": 566.196855,
                    "p99": 566.196855,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 278.377138,
                    "min": 252.078194,
                    "p50": 263.098633,
                    "p95": 278.377138,
                    "p99": 278.377138,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1255.075234,
                    "min": 1187.132905,
                    "p50": 1238.612318,
                    "p95": 1255.075234,
                    "p99": 1255.075234,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 255.61711499999998,
                    "min": 221.28054899999998,
                    "p50": 229.95327,
                    "p95": 255.61711499999998,
                    "p99": 255.61711499999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 422.69690699999995,
                    "min": 372.921727,
                    "p50": 388.487313,
                    "p95": 422.69690699999995,
                    "p99": 422.69690699999995,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 932.330022,
                    "min": 887.780454,
                    "p50": 897.278907,
                    "p95": 932.330022,
                    "p99": 932.330022,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.566562,
                    "min": 135.50023,
                    "p50": 146.15371,
                    "p95": 160.566562,
                    "p99": 160.566562,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3154.201841,
                    "min": 2952.247997,
                    "p50": 2973.2333869999998,
                    "p95": 3154.201841,
                    "p99": 3154.201841,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 129.528524,
                    "min": 106.829039,
                    "p50": 111.612242,
                    "p95": 129.528524,
                    "p99": 129.528524,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 480.860396,
                    "min": 456.68010799999996,
                    "p50": 475.796526,
                    "p95": 480.860396,
                    "p99": 480.860396,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 640.921551,
                    "min": 600.563138,
                    "p50": 638.0349279999999,
                    "p95": 640.921551,
                    "p99": 640.921551,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 45.735521999999996,
                    "min": 30.922884,
                    "p50": 39.836453,
                    "p95": 45.735521999999996,
                    "p99": 45.735521999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 59.418873,
                    "min": 49.969725,
                    "p50": 53.845420999999995,
                    "p95": 59.418873,
                    "p99": 59.418873,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 41.830118,
                    "min": 35.016217999999995,
                    "p50": 37.951907999999996,
                    "p95": 41.830118,
                    "p99": 41.830118,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 53.118787,
                    "min": 42.730169,
                    "p50": 49.685649,
                    "p95": 53.118787,
                    "p99": 53.118787,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 69.717212,
                    "min": 43.307468,
                    "p50": 57.339853999999995,
                    "p95": 69.717212,
                    "p99": 69.717212,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 128.30349999999999,
                    "min": 105.36806999999999,
                    "p50": 115.59152999999999,
                    "p95": 128.30349999999999,
                    "p99": 128.30349999999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 70.881616,
                    "min": 59.258623,
                    "p50": 64.529909,
                    "p95": 70.881616,
                    "p99": 70.881616,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 46.275036,
                    "min": 41.177152,
                    "p50": 44.493209,
                    "p95": 46.275036,
                    "p99": 46.275036,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 180.89022,
                    "min": 159.14943,
                    "p50": 175.823983,
                    "p95": 180.89022,
                    "p99": 180.89022,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 64.003849,
                    "min": 40.268823999999995,
                    "p50": 51.931200999999994,
                    "p95": 64.003849,
                    "p99": 64.003849,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 49.620508,
                    "min": 43.89563,
                    "p50": 46.837371,
                    "p95": 49.620508,
                    "p99": 49.620508,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 69.94045299999999,
                    "min": 52.845026,
                    "p50": 63.513732999999995,
                    "p95": 69.94045299999999,
                    "p99": 69.94045299999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 56.713331,
                    "min": 51.02242,
                    "p50": 52.779146999999995,
                    "p95": 56.713331,
                    "p99": 56.713331,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 82.309214,
                    "min": 65.928525,
                    "p50": 74.283858,
                    "p95": 82.309214,
                    "p99": 82.309214,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 333.116397,
                    "min": 252.691454,
                    "p50": 300.852583,
                    "p95": 333.116397,
                    "p99": 333.116397,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 87.966348,
                    "min": 69.594865,
                    "p50": 74.379944,
                    "p95": 87.966348,
                    "p99": 87.966348,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 157.453398,
                    "min": 115.479171,
                    "p50": 146.051279,
                    "p95": 157.453398,
                    "p99": 157.453398,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 85.327916,
                    "min": 61.355751999999995,
                    "p50": 81.722571,
                    "p95": 85.327916,
                    "p99": 85.327916,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 71.297404,
                    "min": 54.547249,
                    "p50": 58.429877999999995,
                    "p95": 71.297404,
                    "p99": 71.297404,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 67.166172,
                    "min": 51.260838,
                    "p50": 53.979841,
                    "p95": 67.166172,
                    "p99": 67.166172,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 32.820311,
                    "min": 23.524621999999997,
                    "p50": 26.829407,
                    "p95": 32.820311,
                    "p99": 32.820311,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 41.986554999999996,
                    "min": 26.160352999999997,
                    "p50": 27.081488999999998,
                    "p95": 41.986554999999996,
                    "p99": 41.986554999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 30.727974999999997,
                    "min": 26.939899,
                    "p50": 27.56412,
                    "p95": 30.727974999999997,
                    "p99": 30.727974999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 46.972826999999995,
                    "min": 26.530202,
                    "p50": 31.686059999999998,
                    "p95": 46.972826999999995,
                    "p99": 46.972826999999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 31.557767,
                    "min": 25.208959,
                    "p50": 26.949036999999997,
                    "p95": 31.557767,
                    "p99": 31.557767,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 33.457025,
                    "min": 26.627900999999998,
                    "p50": 27.209491,
                    "p95": 33.457025,
                    "p99": 33.457025,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 35.099775,
                    "min": 26.776308,
                    "p50": 27.58297,
                    "p95": 35.099775,
                    "p99": 35.099775,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 43.806483,
                    "min": 26.312013,
                    "p50": 28.870279999999998,
                    "p95": 43.806483,
                    "p99": 43.806483,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 70.17045,
                    "min": 45.534037,
                    "p50": 58.365992999999996,
                    "p95": 70.17045,
                    "p99": 70.17045,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 30.077355999999998,
                    "min": 26.924298999999998,
                    "p50": 29.263154,
                    "p95": 30.077355999999998,
                    "p99": 30.077355999999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 46.123179,
                    "min": 36.635866,
                    "p50": 40.983148,
                    "p95": 46.123179,
                    "p99": 46.123179,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 50.126691,
                    "min": 30.043066999999997,
                    "p50": 31.924348,
                    "p95": 50.126691,
                    "p99": 50.126691,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 32.755015,
                    "min": 28.021722999999998,
                    "p50": 28.499747,
                    "p95": 32.755015,
                    "p99": 32.755015,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.79386,
                    "min": 24.187585,
                    "p50": 26.931496,
                    "p95": 28.79386,
                    "p99": 28.79386,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 114.08035199999999,
                    "min": 86.932707,
                    "p50": 98.944205,
                    "p95": 114.08035199999999,
                    "p99": 114.08035199999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 87.65104699999999,
                    "min": 58.864109,
                    "p50": 62.829485999999996,
                    "p95": 87.65104699999999,
                    "p99": 87.65104699999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 31.279358,
                    "min": 27.925431999999997,
                    "p50": 29.155562,
                    "p95": 31.279358,
                    "p99": 31.279358,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 39.688548,
                    "min": 26.090487,
                    "p50": 29.150267,
                    "p95": 39.688548,
                    "p99": 39.688548,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 342.808545,
                    "min": 320.00696,
                    "p50": 332.360933,
                    "p95": 342.808545,
                    "p99": 342.808545,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 110.42567199999999,
                    "min": 105.96405299999999,
                    "p50": 108.14365099999999,
                    "p95": 110.42567199999999,
                    "p99": 110.42567199999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3140.635035,
                    "min": 2995.45746,
                    "p50": 3030.4564649999998,
                    "p95": 3140.635035,
                    "p99": 3140.635035,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 666.0350149999999,
                    "min": 615.586927,
                    "p50": 626.309439,
                    "p95": 666.0350149999999,
                    "p99": 666.0350149999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 240.865554,
                    "min": 227.02836599999998,
                    "p50": 236.498683,
                    "p95": 240.865554,
                    "p99": 240.865554,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 193.087958,
                    "min": 138.28795399999998,
                    "p50": 150.922881,
                    "p95": 193.087958,
                    "p99": 193.087958,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 225.103975,
                    "min": 198.002453,
                    "p50": 202.121793,
                    "p95": 225.103975,
                    "p99": 225.103975,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 955.155492,
                    "min": 912.062287,
                    "p50": 949.3477009999999,
                    "p95": 955.155492,
                    "p99": 955.155492,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 449.064556,
                    "min": 407.306563,
                    "p50": 424.205383,
                    "p95": 449.064556,
                    "p99": 449.064556,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 378.17387099999996,
                    "min": 345.01865899999996,
                    "p50": 357.286611,
                    "p95": 378.17387099999996,
                    "p99": 378.17387099999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1299.762595,
                    "min": 1211.622672,
                    "p50": 1236.195601,
                    "p95": 1299.762595,
                    "p99": 1299.762595,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1525.788715,
                    "min": 1502.884815,
                    "p50": 1515.7881499999999,
                    "p95": 1525.788715,
                    "p99": 1525.788715,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 472.535442,
                    "min": 435.36233799999997,
                    "p50": 448.680149,
                    "p95": 472.535442,
                    "p99": 472.535442,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 219.94607399999998,
                    "min": 165.069111,
                    "p50": 187.358903,
                    "p95": 219.94607399999998,
                    "p99": 219.94607399999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 589.3737169999999,
                    "min": 537.378027,
                    "p50": 559.1628069999999,
                    "p95": 589.3737169999999,
                    "p99": 589.3737169999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 305.504377,
                    "min": 286.08074,
                    "p50": 298.569361,
                    "p95": 305.504377,
                    "p99": 305.504377,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 415.963447,
                    "min": 372.56155,
                    "p50": 381.528018,
                    "p95": 415.963447,
                    "p99": 415.963447,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 500.65452799999997,
                    "min": 466.010318,
                    "p50": 474.44089399999996,
                    "p95": 500.65452799999997,
                    "p99": 500.65452799999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 284.192712,
                    "min": 257.34126499999996,
                    "p50": 266.026473,
                    "p95": 284.192712,
                    "p99": 284.192712,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1921.3966409999998,
                    "min": 1870.8005859999998,
                    "p50": 1906.874343,
                    "p95": 1921.3966409999998,
                    "p99": 1921.3966409999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 291.640082,
                    "min": 263.91146499999996,
                    "p50": 281.17019899999997,
                    "p95": 291.640082,
                    "p99": 291.640082,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 626.7295409999999,
                    "min": 567.8811519999999,
                    "p50": 598.873287,
                    "p95": 626.7295409999999,
                    "p99": 626.7295409999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 940.737118,
                    "min": 873.146386,
                    "p50": 913.783914,
                    "p95": 940.737118,
                    "p99": 940.737118,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.366645,
                    "min": 325.95335,
                    "p50": 333.110113,
                    "p95": 350.366645,
                    "p99": 350.366645,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1018.327987,
                    "min": 959.546523,
                    "p50": 990.762072,
                    "p95": 1018.327987,
                    "p99": 1018.327987,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 566.825373,
                    "min": 516.926489,
                    "p50": 532.9268999999999,
                    "p95": 566.825373,
                    "p99": 566.825373,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1156.01749,
                    "min": 1098.116902,
                    "p50": 1117.531735,
                    "p95": 1156.01749,
                    "p99": 1156.01749,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 430.180949,
                    "min": 377.417022,
                    "p50": 394.191985,
                    "p95": 430.180949,
                    "p99": 430.180949,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 684.243387,
                    "min": 640.191408,
                    "p50": 666.322878,
                    "p95": 684.243387,
                    "p99": 684.243387,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2614.61245,
                    "min": 2512.601827,
                    "p50": 2550.972807,
                    "p95": 2614.61245,
                    "p99": 2614.61245,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 722.329491,
                    "min": 696.864607,
                    "p50": 707.748889,
                    "p95": 722.329491,
                    "p99": 722.329491,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 493.76241799999997,
                    "min": 455.499423,
                    "p50": 475.186311,
                    "p95": 493.76241799999997,
                    "p99": 493.76241799999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 808.65522,
                    "min": 761.989815,
                    "p50": 771.577869,
                    "p95": 808.65522,
                    "p99": 808.65522,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.16846199999998,
                    "min": 200.584592,
                    "p50": 228.356807,
                    "p95": 244.16846199999998,
                    "p99": 244.16846199999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 879.7815489999999,
                    "min": 827.2036559999999,
                    "p50": 844.523959,
                    "p95": 879.7815489999999,
                    "p99": 879.7815489999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1306.775738,
                    "min": 1249.618282,
                    "p50": 1265.093396,
                    "p95": 1306.775738,
                    "p99": 1306.775738,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3174.7174069999996,
                    "min": 3075.936409,
                    "p50": 3110.045389,
                    "p95": 3174.7174069999996,
                    "p99": 3174.7174069999996,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 300.690856,
                    "min": 264.89849,
                    "p50": 273.816494,
                    "p95": 300.690856,
                    "p99": 300.690856,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 550.506116,
                    "min": 515.185607,
                    "p50": 520.042788,
                    "p95": 550.506116,
                    "p99": 550.506116,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 439.467723,
                    "min": 424.994196,
                    "p50": 433.053356,
                    "p95": 439.467723,
                    "p99": 439.467723,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 874.2227429999999,
                    "min": 843.74623,
                    "p50": 847.869844,
                    "p95": 874.2227429999999,
                    "p99": 874.2227429999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 783.940125,
                    "min": 758.777382,
                    "p50": 770.61473,
                    "p95": 783.940125,
                    "p99": 783.940125,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1040.400723,
                    "min": 1005.7910529999999,
                    "p50": 1024.646299,
                    "p95": 1040.400723,
                    "p99": 1040.400723,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1290.140007,
                    "min": 1255.19625,
                    "p50": 1272.224992,
                    "p95": 1290.140007,
                    "p99": 1290.140007,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1110.4106709999999,
                    "min": 1080.9976299999998,
                    "p50": 1100.39231,
                    "p95": 1110.4106709999999,
                    "p99": 1110.4106709999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 946.724243,
                    "min": 917.9566149999999,
                    "p50": 933.4954759999999,
                    "p95": 946.724243,
                    "p99": 946.724243,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1691.067965,
                    "min": 1670.466506,
                    "p50": 1679.227113,
                    "p95": 1691.067965,
                    "p99": 1691.067965,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 614.137968,
                    "min": 590.689029,
                    "p50": 606.1294389999999,
                    "p95": 614.137968,
                    "p99": 614.137968,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 371.711367,
                    "min": 346.224316,
                    "p50": 353.648172,
                    "p95": 371.711367,
                    "p99": 371.711367,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1512.248161,
                    "min": 1456.848368,
                    "p50": 1473.594915,
                    "p95": 1512.248161,
                    "p99": 1512.248161,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 718.111852,
                    "min": 675.197182,
                    "p50": 694.0319959999999,
                    "p95": 718.111852,
                    "p99": 718.111852,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1189.726467,
                    "min": 1166.0382049999998,
                    "p50": 1184.239515,
                    "p95": 1189.726467,
                    "p99": 1189.726467,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 322.548582,
                    "min": 287.31442899999996,
                    "p50": 298.393218,
                    "p95": 322.548582,
                    "p99": 322.548582,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 629.968623,
                    "min": 595.4015979999999,
                    "p50": 612.358116,
                    "p95": 629.968623,
                    "p99": 629.968623,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 898.572953,
                    "min": 861.3447749999999,
                    "p50": 879.830785,
                    "p95": 898.572953,
                    "p99": 898.572953,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1725.484051,
                    "min": 1686.563341,
                    "p50": 1697.662703,
                    "p95": 1725.484051,
                    "p99": 1725.484051,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 490.952567,
                    "min": 470.959162,
                    "p50": 477.457345,
                    "p95": 490.952567,
                    "p99": 490.952567,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.132343,
                    "min": 227.285643,
                    "p50": 240.152448,
                    "p95": 261.132343,
                    "p99": 261.132343,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 234.222723,
                    "min": 186.48333699999998,
                    "p50": 202.187378,
                    "p95": 234.222723,
                    "p99": 234.222723,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 557.378216,
                    "min": 521.339168,
                    "p50": 533.8863319999999,
                    "p95": 557.378216,
                    "p99": 557.378216,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1286.639222,
                    "min": 1263.347664,
                    "p50": 1278.905282,
                    "p95": 1286.639222,
                    "p99": 1286.639222,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 767.921082,
                    "min": 746.3751659999999,
                    "p50": 749.01224,
                    "p95": 767.921082,
                    "p99": 767.921082,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 676.644535,
                    "min": 641.089603,
                    "p50": 652.602027,
                    "p95": 676.644535,
                    "p99": 676.644535,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 366.88007999999996,
                    "min": 350.191959,
                    "p50": 356.48540299999996,
                    "p95": 366.88007999999996,
                    "p99": 366.88007999999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 476.550079,
                    "min": 433.690318,
                    "p50": 449.35808099999997,
                    "p95": 476.550079,
                    "p99": 476.550079,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 323.34220999999997,
                    "min": 305.271162,
                    "p50": 313.27116,
                    "p95": 323.34220999999997,
                    "p99": 323.34220999999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 157.417766,
                    "min": 142.745573,
                    "p50": 149.301693,
                    "p95": 157.417766,
                    "p99": 157.417766,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 576.018301,
                    "min": 557.0654069999999,
                    "p50": 566.362136,
                    "p95": 576.018301,
                    "p99": 576.018301,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 421.411833,
                    "min": 393.46015,
                    "p50": 398.03116,
                    "p95": 421.411833,
                    "p99": 421.411833,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 653.5704999999999,
                    "min": 613.7649779999999,
                    "p50": 623.389358,
                    "p95": 653.5704999999999,
                    "p99": 653.5704999999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1999.0358729999998,
                    "min": 1972.167925,
                    "p50": 1992.093179,
                    "p95": 1999.0358729999998,
                    "p99": 1999.0358729999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4083.718527,
                    "min": 3979.1559869999996,
                    "p50": 4015.832791,
                    "p95": 4083.718527,
                    "p99": 4083.718527,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2230.30404,
                    "min": 2186.544571,
                    "p50": 2206.852151,
                    "p95": 2230.30404,
                    "p99": 2230.30404,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5929.565807999999,
                    "min": 5866.208874999999,
                    "p50": 5894.958379,
                    "p95": 5929.565807999999,
                    "p99": 5929.565807999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1233.559566,
                    "min": 1211.5583649999999,
                    "p50": 1223.304512,
                    "p95": 1233.559566,
                    "p99": 1233.559566,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1833.3155829999998,
                    "min": 1793.500532,
                    "p50": 1824.185812,
                    "p95": 1833.3155829999998,
                    "p99": 1833.3155829999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7825.669891,
                    "min": 7702.431834,
                    "p50": 7762.93568,
                    "p95": 7825.669891,
                    "p99": 7825.669891,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1074.371455,
                    "min": 1024.5871849999999,
                    "p50": 1038.6831359999999,
                    "p95": 1074.371455,
                    "p99": 1074.371455,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2658.391133,
                    "min": 2614.5067489999997,
                    "p50": 2648.4807969999997,
                    "p95": 2658.391133,
                    "p99": 2658.391133,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1413.110733,
                    "min": 1387.8110359999998,
                    "p50": 1397.704978,
                    "p95": 1413.110733,
                    "p99": 1413.110733,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 847.7285489999999,
                    "min": 807.4699499999999,
                    "p50": 815.685713,
                    "p95": 847.7285489999999,
                    "p99": 847.7285489999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3041.9566,
                    "min": 2978.7766819999997,
                    "p50": 3011.092979,
                    "p95": 3041.9566,
                    "p99": 3041.9566,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2850.499718,
                    "min": 2786.74727,
                    "p50": 2829.6994219999997,
                    "p95": 2850.499718,
                    "p99": 2850.499718,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3502.5635389999998,
                    "min": 3429.9745639999996,
                    "p50": 3452.0934629999997,
                    "p95": 3502.5635389999998,
                    "p99": 3502.5635389999998,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1601.9416039999999,
                    "min": 1577.5363439999999,
                    "p50": 1594.5478269999999,
                    "p95": 1601.9416039999999,
                    "p99": 1601.9416039999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2418.766236,
                    "min": 2378.947984,
                    "p50": 2402.109066,
                    "p95": 2418.766236,
                    "p99": 2418.766236,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 728.778823,
                    "min": 689.957407,
                    "p50": 707.066602,
                    "p95": 728.778823,
                    "p99": 728.778823,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 547.8881349999999,
                    "min": 501.401214,
                    "p50": 515.859915,
                    "p95": 547.8881349999999,
                    "p99": 547.8881349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1015.4780079999999,
                    "min": 983.0304769999999,
                    "p50": 994.6101309999999,
                    "p95": 1015.4780079999999,
                    "p99": 1015.4780079999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1493.3742909999999,
                    "min": 1470.081111,
                    "p50": 1481.0573239999999,
                    "p95": 1493.3742909999999,
                    "p99": 1493.3742909999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4905.665563,
                    "min": 4814.799117,
                    "p50": 4879.060089,
                    "p95": 4905.665563,
                    "p99": 4905.665563,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1984.990274,
                    "min": 1943.957639,
                    "p50": 1976.6965109999999,
                    "p95": 1984.990274,
                    "p99": 1984.990274,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 572.8471549999999,
                    "min": 557.047611,
                    "p50": 564.457106,
                    "p95": 572.8471549999999,
                    "p99": 572.8471549999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 196.22519699999998,
                    "min": 164.507806,
                    "p50": 175.699984,
                    "p95": 196.22519699999998,
                    "p99": 196.22519699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2479.5785809999998,
                    "min": 2432.514256,
                    "p50": 2451.73659,
                    "p95": 2479.5785809999998,
                    "p99": 2479.5785809999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 397.696919,
                    "min": 354.39590599999997,
                    "p50": 365.353187,
                    "p95": 397.696919,
                    "p99": 397.696919,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 431.57939799999997,
                    "min": 407.02014599999995,
                    "p50": 416.92023,
                    "p95": 431.57939799999997,
                    "p99": 431.57939799999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 496.939977,
                    "min": 454.959573,
                    "p50": 464.800421,
                    "p95": 496.939977,
                    "p99": 496.939977,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 898.2834849999999,
                    "min": 859.1855089999999,
                    "p50": 876.2193639999999,
                    "p95": 898.2834849999999,
                    "p99": 898.2834849999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 293.043229,
                    "min": 258.584774,
                    "p50": 268.59954799999997,
                    "p95": 293.043229,
                    "p99": 293.043229,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 334.696411,
                    "min": 308.983861,
                    "p50": 315.726776,
                    "p95": 334.696411,
                    "p99": 334.696411,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 758.558196,
                    "min": 739.39222,
                    "p50": 756.864952,
                    "p95": 758.558196,
                    "p99": 758.558196,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 629.748798,
                    "min": 599.623423,
                    "p50": 606.5876049999999,
                    "p95": 629.748798,
                    "p99": 629.748798,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 237.19148199999998,
                    "min": 211.192874,
                    "p50": 219.972526,
                    "p95": 237.19148199999998,
                    "p99": 237.19148199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 670.118923,
                    "min": 644.128699,
                    "p50": 655.633304,
                    "p95": 670.118923,
                    "p99": 670.118923,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2077.4852069999997,
                    "min": 2039.23337,
                    "p50": 2051.7095409999997,
                    "p95": 2077.4852069999997,
                    "p99": 2077.4852069999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 852.660791,
                    "min": 831.933712,
                    "p50": 843.155274,
                    "p95": 852.660791,
                    "p99": 852.660791,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 611.3213519999999,
                    "min": 593.650176,
                    "p50": 602.413859,
                    "p95": 611.3213519999999,
                    "p99": 611.3213519999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1433.2188039999999,
                    "min": 1408.132546,
                    "p50": 1421.2898519999999,
                    "p95": 1433.2188039999999,
                    "p99": 1433.2188039999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 971.038966,
                    "min": 947.627943,
                    "p50": 963.483132,
                    "p95": 971.038966,
                    "p99": 971.038966,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4703.711945,
                    "min": 4623.385456999999,
                    "p50": 4672.216979,
                    "p95": 4703.711945,
                    "p99": 4703.711945,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1310.6250619999998,
                    "min": 1291.03016,
                    "p50": 1297.713118,
                    "p95": 1310.6250619999998,
                    "p99": 1310.6250619999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 752.26391,
                    "min": 713.876188,
                    "p50": 730.0476719999999,
                    "p95": 752.26391,
                    "p99": 752.26391,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1584.1061789999999,
                    "min": 1535.34347,
                    "p50": 1551.184143,
                    "p95": 1584.1061789999999,
                    "p99": 1584.1061789999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3530.236637,
                    "min": 3492.242831,
                    "p50": 3509.940043,
                    "p95": 3530.236637,
                    "p99": 3530.236637,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1786.081455,
                    "min": 1750.237494,
                    "p50": 1761.918127,
                    "p95": 1786.081455,
                    "p99": 1786.081455,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2379.718175,
                    "min": 2328.4406679999997,
                    "p50": 2357.369506,
                    "p95": 2379.718175,
                    "p99": 2379.718175,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 398.671384,
                    "min": 364.587923,
                    "p50": 378.651972,
                    "p95": 398.671384,
                    "p99": 398.671384,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1678.803236,
                    "min": 1631.8250719999999,
                    "p50": 1664.864598,
                    "p95": 1678.803236,
                    "p99": 1678.803236,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 517.271135,
                    "min": 482.710404,
                    "p50": 491.94332399999996,
                    "p95": 517.271135,
                    "p99": 517.271135,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1203.974762,
                    "min": 1178.77985,
                    "p50": 1193.073036,
                    "p95": 1203.974762,
                    "p99": 1203.974762,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1111.802993,
                    "min": 1061.6669729999999,
                    "p50": 1070.423426,
                    "p95": 1111.802993,
                    "p99": 1111.802993,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1780.0384569999999,
                    "min": 1757.17713,
                    "p50": 1777.1130919999998,
                    "p95": 1780.0384569999999,
                    "p99": 1780.0384569999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 521.822126,
                    "min": 492.16659899999996,
                    "p50": 504.269073,
                    "p95": 521.822126,
                    "p99": 521.822126,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1095.5398149999999,
                    "min": 1065.722248,
                    "p50": 1069.773863,
                    "p95": 1095.5398149999999,
                    "p99": 1095.5398149999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1553.943128,
                    "min": 1519.6146959999999,
                    "p50": 1538.8283569999999,
                    "p95": 1553.943128,
                    "p99": 1553.943128,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1215.393579,
                    "min": 1175.555499,
                    "p50": 1193.034958,
                    "p95": 1215.393579,
                    "p99": 1215.393579,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1328.382145,
                    "min": 1288.342876,
                    "p50": 1300.348687,
                    "p95": 1328.382145,
                    "p99": 1328.382145,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2385.264894,
                    "min": 2320.717218,
                    "p50": 2347.881372,
                    "p95": 2385.264894,
                    "p99": 2385.264894,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3550.1000879999997,
                    "min": 3483.8078149999997,
                    "p50": 3518.12606,
                    "p95": 3550.1000879999997,
                    "p99": 3550.1000879999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1437.339287,
                    "min": 1399.801328,
                    "p50": 1413.676503,
                    "p95": 1437.339287,
                    "p99": 1437.339287,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 638.605613,
                    "min": 599.687475,
                    "p50": 614.650545,
                    "p95": 638.605613,
                    "p99": 638.605613,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 393.395349,
                    "min": 370.440031,
                    "p50": 373.864041,
                    "p95": 393.395349,
                    "p99": 393.395349,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 734.2498099999999,
                    "min": 715.4067739999999,
                    "p50": 726.4998519999999,
                    "p95": 734.2498099999999,
                    "p99": 734.2498099999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2089.6501989999997,
                    "min": 2036.0833699999998,
                    "p50": 2059.000744,
                    "p95": 2089.6501989999997,
                    "p99": 2089.6501989999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 850.273119,
                    "min": 825.0764929999999,
                    "p50": 831.693758,
                    "p95": 850.273119,
                    "p99": 850.273119,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1677.5355889999998,
                    "min": 1633.212351,
                    "p50": 1648.9945,
                    "p95": 1677.5355889999998,
                    "p99": 1677.5355889999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 976.9524409999999,
                    "min": 953.0167319999999,
                    "p50": 962.268008,
                    "p95": 976.9524409999999,
                    "p99": 976.9524409999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10906.888928,
                    "min": 10740.673058999999,
                    "p50": 10830.930609,
                    "p95": 10906.888928,
                    "p99": 10906.888928,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1578.849168,
                    "min": 1521.9784519999998,
                    "p50": 1542.65077,
                    "p95": 1578.849168,
                    "p99": 1578.849168,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5496.620402,
                    "min": 5406.732075999999,
                    "p50": 5429.315877,
                    "p95": 5496.620402,
                    "p99": 5496.620402,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 822.2276989999999,
                    "min": 774.276169,
                    "p50": 783.089177,
                    "p95": 822.2276989999999,
                    "p99": 822.2276989999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 465.261123,
                    "min": 451.91707299999996,
                    "p50": 454.466023,
                    "p95": 465.261123,
                    "p99": 465.261123,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1341.526427,
                    "min": 1308.454149,
                    "p50": 1336.4482659999999,
                    "p95": 1341.526427,
                    "p99": 1341.526427,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4389.245932,
                    "min": 4319.395829,
                    "p50": 4354.675999,
                    "p95": 4389.245932,
                    "p99": 4389.245932,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1674.561966,
                    "min": 1634.1099219999999,
                    "p50": 1645.312585,
                    "p95": 1674.561966,
                    "p99": 1674.561966,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1460.5336889999999,
                    "min": 1417.298674,
                    "p50": 1445.1388,
                    "p95": 1460.5336889999999,
                    "p99": 1460.5336889999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1929.1681389999999,
                    "min": 1907.8758639999999,
                    "p50": 1917.0393849999998,
                    "p95": 1929.1681389999999,
                    "p99": 1929.1681389999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 583.880496,
                    "min": 557.2677229999999,
                    "p50": 566.2895629999999,
                    "p95": 583.880496,
                    "p99": 583.880496,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1241.6778239999999,
                    "min": 1202.747144,
                    "p50": 1216.744126,
                    "p95": 1241.6778239999999,
                    "p99": 1241.6778239999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 362.03309099999996,
                    "min": 338.79504499999996,
                    "p50": 345.691554,
                    "p95": 362.03309099999996,
                    "p99": 362.03309099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 904.059172,
                    "min": 878.939071,
                    "p50": 892.503065,
                    "p95": 904.059172,
                    "p99": 904.059172,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 679.492845,
                    "min": 664.33511,
                    "p50": 671.288782,
                    "p95": 679.492845,
                    "p99": 679.492845,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1024.171085,
                    "min": 994.147743,
                    "p50": 1011.557907,
                    "p95": 1024.171085,
                    "p99": 1024.171085,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1117.032919,
                    "min": 1102.928414,
                    "p50": 1109.6345,
                    "p95": 1117.032919,
                    "p99": 1117.032919,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3293.933517,
                    "min": 3261.391163,
                    "p50": 3281.096467,
                    "p95": 3293.933517,
                    "p99": 3293.933517,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2226.850501,
                    "min": 2177.114122,
                    "p50": 2193.0755919999997,
                    "p95": 2226.850501,
                    "p99": 2226.850501,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 317.93586,
                    "min": 301.402311,
                    "p50": 305.717544,
                    "p95": 317.93586,
                    "p99": 317.93586,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1931.0858349999999,
                    "min": 1891.895839,
                    "p50": 1909.007216,
                    "p95": 1931.0858349999999,
                    "p99": 1931.0858349999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1453.4259439999998,
                    "min": 1420.369992,
                    "p50": 1438.497267,
                    "p95": 1453.4259439999998,
                    "p99": 1453.4259439999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 982.5625269999999,
                    "min": 957.023298,
                    "p50": 978.2853839999999,
                    "p95": 982.5625269999999,
                    "p99": 982.5625269999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 513.3878109999999,
                    "min": 489.287447,
                    "p50": 495.33342,
                    "p95": 513.3878109999999,
                    "p99": 513.3878109999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4771.122899,
                    "min": 4725.603321,
                    "p50": 4735.677447,
                    "p95": 4771.122899,
                    "p99": 4771.122899,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2426.5854679999998,
                    "min": 2374.6547499999997,
                    "p50": 2384.595279,
                    "p95": 2426.5854679999998,
                    "p99": 2426.5854679999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 625.397619,
                    "min": 583.867609,
                    "p50": 595.669677,
                    "p95": 625.397619,
                    "p99": 625.397619,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.3092379999999,
                    "min": 682.7524189999999,
                    "p50": 696.0537449999999,
                    "p95": 705.3092379999999,
                    "p99": 705.3092379999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 439.04034099999996,
                    "min": 399.53880899999996,
                    "p50": 415.04233,
                    "p95": 439.04034099999996,
                    "p99": 439.04034099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 469.23195899999996,
                    "min": 446.55431999999996,
                    "p50": 456.131124,
                    "p95": 469.23195899999996,
                    "p99": 469.23195899999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 226.74705999999998,
                    "min": 204.361394,
                    "p50": 216.52461499999998,
                    "p95": 226.74705999999998,
                    "p99": 226.74705999999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 864.707772,
                    "min": 837.451371,
                    "p50": 844.899549,
                    "p95": 864.707772,
                    "p99": 864.707772,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 570.355496,
                    "min": 538.276297,
                    "p50": 553.2480879999999,
                    "p95": 570.355496,
                    "p99": 570.355496,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 757.926576,
                    "min": 725.520709,
                    "p50": 735.4454149999999,
                    "p95": 757.926576,
                    "p99": 757.926576,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 377.543978,
                    "min": 350.65014299999996,
                    "p50": 365.50306,
                    "p95": 377.543978,
                    "p99": 377.543978,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 653.573194,
                    "min": 625.2152179999999,
                    "p50": 638.175448,
                    "p95": 653.573194,
                    "p99": 653.573194,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 282.204611,
                    "min": 252.80551499999999,
                    "p50": 261.564821,
                    "p95": 282.204611,
                    "p99": 282.204611,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 178.80443,
                    "min": 158.382244,
                    "p50": 167.810195,
                    "p95": 178.80443,
                    "p99": 178.80443,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1927.0141609999998,
                    "min": 1897.699893,
                    "p50": 1920.240233,
                    "p95": 1927.0141609999998,
                    "p99": 1927.0141609999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 909.922968,
                    "min": 878.6823519999999,
                    "p50": 896.133532,
                    "p95": 909.922968,
                    "p99": 909.922968,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2212.627944,
                    "min": 2173.617393,
                    "p50": 2178.198164,
                    "p95": 2212.627944,
                    "p99": 2212.627944,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 796.2936659999999,
                    "min": 771.4605429999999,
                    "p50": 787.6465129999999,
                    "p95": 796.2936659999999,
                    "p99": 796.2936659999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 700.309576,
                    "min": 668.797727,
                    "p50": 675.022528,
                    "p95": 700.309576,
                    "p99": 700.309576,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 463.36860099999996,
                    "min": 449.828669,
                    "p50": 458.573175,
                    "p95": 463.36860099999996,
                    "p99": 463.36860099999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1560.2425309999999,
                    "min": 1521.0768409999998,
                    "p50": 1534.8666919999998,
                    "p95": 1560.2425309999999,
                    "p99": 1560.2425309999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1239.573913,
                    "min": 1205.462704,
                    "p50": 1221.325163,
                    "p95": 1239.573913,
                    "p99": 1239.573913,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3289.9475279999997,
                    "min": 3230.0980759999998,
                    "p50": 3265.204741,
                    "p95": 3289.9475279999997,
                    "p99": 3289.9475279999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1021.2927279999999,
                    "min": 997.777208,
                    "p50": 1005.9900889999999,
                    "p95": 1021.2927279999999,
                    "p99": 1021.2927279999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10937.206589,
                    "min": 10789.024562999999,
                    "p50": 10820.160431,
                    "p95": 10937.206589,
                    "p99": 10937.206589,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 608.180245,
                    "min": 557.241322,
                    "p50": 580.2925789999999,
                    "p95": 608.180245,
                    "p99": 608.180245,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1458.631058,
                    "min": 1419.938406,
                    "p50": 1439.269979,
                    "p95": 1458.631058,
                    "p99": 1458.631058,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1333.093967,
                    "min": 1318.508399,
                    "p50": 1324.88327,
                    "p95": 1333.093967,
                    "p99": 1333.093967,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4389.900831999999,
                    "min": 4304.5707219999995,
                    "p50": 4364.523658,
                    "p95": 4389.900831999999,
                    "p99": 4389.900831999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 362.85254499999996,
                    "min": 341.122414,
                    "p50": 352.420767,
                    "p95": 362.85254499999996,
                    "p99": 362.85254499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1673.641518,
                    "min": 1645.7464439999999,
                    "p50": 1657.7624919999998,
                    "p95": 1673.641518,
                    "p99": 1673.641518,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1108.551929,
                    "min": 1093.70946,
                    "p50": 1105.7745579999998,
                    "p95": 1108.551929,
                    "p99": 1108.551929,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5463.003946,
                    "min": 5382.291561,
                    "p50": 5420.634306999999,
                    "p95": 5463.003946,
                    "p99": 5463.003946,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 676.755921,
                    "min": 650.831067,
                    "p50": 661.3488649999999,
                    "p95": 676.755921,
                    "p99": 676.755921,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 601.645675,
                    "min": 550.376677,
                    "p50": 565.9021749999999,
                    "p95": 601.645675,
                    "p99": 601.645675,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 869.1873469999999,
                    "min": 832.7888889999999,
                    "p50": 844.180677,
                    "p95": 869.1873469999999,
                    "p99": 869.1873469999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 345.50654299999997,
                    "min": 291.924756,
                    "p50": 310.744105,
                    "p95": 345.50654299999997,
                    "p99": 345.50654299999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 393.883225,
                    "min": 372.876034,
                    "p50": 383.325516,
                    "p95": 393.883225,
                    "p99": 393.883225,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 763.660505,
                    "min": 729.4458089999999,
                    "p50": 744.6280029999999,
                    "p95": 763.660505,
                    "p99": 763.660505,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 491.932485,
                    "min": 463.802199,
                    "p50": 474.136963,
                    "p95": 491.932485,
                    "p99": 491.932485,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 932.209165,
                    "min": 892.5056159999999,
                    "p50": 904.565834,
                    "p95": 932.209165,
                    "p99": 932.209165,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 312.2989,
                    "min": 279.167447,
                    "p50": 301.655938,
                    "p95": 312.2989,
                    "p99": 312.2989,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 746.273243,
                    "min": 727.391484,
                    "p50": 738.788725,
                    "p95": 746.273243,
                    "p99": 746.273243,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 572.3219339999999,
                    "min": 544.367397,
                    "p50": 554.320143,
                    "p95": 572.3219339999999,
                    "p99": 572.3219339999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 650.460454,
                    "min": 626.733657,
                    "p50": 640.699269,
                    "p95": 650.460454,
                    "p99": 650.460454,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 834.3814219999999,
                    "min": 804.979212,
                    "p50": 824.87514,
                    "p95": 834.3814219999999,
                    "p99": 834.3814219999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 383.675128,
                    "min": 364.053047,
                    "p50": 372.041099,
                    "p95": 383.675128,
                    "p99": 383.675128,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 482.864529,
                    "min": 457.364687,
                    "p50": 472.184155,
                    "p95": 482.864529,
                    "p99": 482.864529,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 299.864282,
                    "min": 265.53833399999996,
                    "p50": 272.441423,
                    "p95": 299.864282,
                    "p99": 299.864282,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 486.782129,
                    "min": 455.844833,
                    "p50": 469.71421599999996,
                    "p95": 486.782129,
                    "p99": 486.782129,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 605.741627,
                    "min": 567.770763,
                    "p50": 597.210754,
                    "p95": 605.741627,
                    "p99": 605.741627,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 441.506212,
                    "min": 390.32284999999996,
                    "p50": 411.60297699999995,
                    "p95": 441.506212,
                    "p99": 441.506212,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 788.404685,
                    "min": 755.310944,
                    "p50": 783.001758,
                    "p95": 788.404685,
                    "p99": 788.404685,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 226.85458,
                    "min": 199.234423,
                    "p50": 206.870249,
                    "p95": 226.85458,
                    "p99": 226.85458,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 686.294906,
                    "min": 626.683919,
                    "p50": 661.101502,
                    "p95": 686.294906,
                    "p99": 686.294906,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 537.363701,
                    "min": 508.55353099999996,
                    "p50": 519.835562,
                    "p95": 537.363701,
                    "p99": 537.363701,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.24024199999997,
                    "min": 324.074229,
                    "p50": 330.884777,
                    "p95": 349.24024199999997,
                    "p99": 349.24024199999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 739.544359,
                    "min": 693.7368329999999,
                    "p50": 719.3301829999999,
                    "p95": 739.544359,
                    "p99": 739.544359,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 589.058094,
                    "min": 561.0528469999999,
                    "p50": 572.408361,
                    "p95": 589.058094,
                    "p99": 589.058094,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 763.7982099999999,
                    "min": 741.305701,
                    "p50": 752.977954,
                    "p95": 763.7982099999999,
                    "p99": 763.7982099999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.872896,
                    "min": 199.76083699999998,
                    "p50": 208.238844,
                    "p95": 210.872896,
                    "p99": 210.872896,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 424.945198,
                    "min": 377.136502,
                    "p50": 385.35787,
                    "p95": 424.945198,
                    "p99": 424.945198,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 668.212215,
                    "min": 651.246794,
                    "p50": 656.777346,
                    "p95": 668.212215,
                    "p99": 668.212215,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 338.524341,
                    "min": 289.421089,
                    "p50": 299.19246,
                    "p95": 338.524341,
                    "p99": 338.524341,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 490.59344699999997,
                    "min": 469.057802,
                    "p50": 482.226501,
                    "p95": 490.59344699999997,
                    "p99": 490.59344699999997,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 627.628394,
                    "min": 581.5961669999999,
                    "p50": 618.1346599999999,
                    "p95": 627.628394,
                    "p99": 627.628394,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 386.540747,
                    "min": 298.886375,
                    "p50": 311.017974,
                    "p95": 386.540747,
                    "p99": 386.540747,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 225.53871999999998,
                    "min": 179.080872,
                    "p50": 205.965387,
                    "p95": 225.53871999999998,
                    "p99": 225.53871999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 616.286346,
                    "min": 537.102499,
                    "p50": 568.8531409999999,
                    "p95": 616.286346,
                    "p99": 616.286346,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 494.09135899999995,
                    "min": 422.559575,
                    "p50": 454.566689,
                    "p95": 494.09135899999995,
                    "p99": 494.09135899999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 445.36810299999996,
                    "min": 342.314727,
                    "p50": 350.72380899999996,
                    "p95": 445.36810299999996,
                    "p99": 445.36810299999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 576.9378879999999,
                    "min": 524.493804,
                    "p50": 542.342895,
                    "p95": 576.9378879999999,
                    "p99": 576.9378879999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 234.027095,
                    "min": 213.578118,
                    "p50": 228.018197,
                    "p95": 234.027095,
                    "p99": 234.027095,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.52856799999998,
                    "min": 142.463064,
                    "p50": 152.410689,
                    "p95": 170.52856799999998,
                    "p99": 170.52856799999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 777.3327479999999,
                    "min": 714.78189,
                    "p50": 759.470644,
                    "p95": 777.3327479999999,
                    "p99": 777.3327479999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 704.756178,
                    "min": 621.187826,
                    "p50": 662.051285,
                    "p95": 704.756178,
                    "p99": 704.756178,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 865.260125,
                    "min": 811.629204,
                    "p50": 826.9348269999999,
                    "p95": 865.260125,
                    "p99": 865.260125,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 432.331281,
                    "min": 375.981501,
                    "p50": 411.477437,
                    "p95": 432.331281,
                    "p99": 432.331281,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 509.01164,
                    "min": 461.828963,
                    "p50": 487.31208599999997,
                    "p95": 509.01164,
                    "p99": 509.01164,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 333.70439799999997,
                    "min": 256.96581199999997,
                    "p50": 285.190414,
                    "p95": 333.70439799999997,
                    "p99": 333.70439799999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 535.565328,
                    "min": 499.038592,
                    "p50": 525.595866,
                    "p95": 535.565328,
                    "p99": 535.565328,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 264.818583,
                    "min": 204.52864,
                    "p50": 223.550561,
                    "p95": 264.818583,
                    "p99": 264.818583,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 636.0808539999999,
                    "min": 574.65481,
                    "p50": 614.029307,
                    "p95": 636.0808539999999,
                    "p99": 636.0808539999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 442.346724,
                    "min": 382.323123,
                    "p50": 405.00169999999997,
                    "p95": 442.346724,
                    "p99": 442.346724,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.40470499999998,
                    "min": 156.09045,
                    "p50": 183.516485,
                    "p95": 201.40470499999998,
                    "p99": 201.40470499999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 280.056111,
                    "min": 239.821214,
                    "p50": 260.747678,
                    "p95": 280.056111,
                    "p99": 280.056111,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 551.610328,
                    "min": 470.85224999999997,
                    "p50": 524.246805,
                    "p95": 551.610328,
                    "p99": 551.610328,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 605.427751,
                    "min": 525.62997,
                    "p50": 569.63122,
                    "p95": 605.427751,
                    "p99": 605.427751,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 845.744287,
                    "min": 754.976769,
                    "p50": 805.195061,
                    "p95": 845.744287,
                    "p99": 845.744287,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 306.752597,
                    "min": 275.893831,
                    "p50": 289.865481,
                    "p95": 306.752597,
                    "p99": 306.752597,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 734.763557,
                    "min": 643.5667639999999,
                    "p50": 693.891699,
                    "p95": 734.763557,
                    "p99": 734.763557,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 343.25215599999996,
                    "min": 297.107865,
                    "p50": 322.276867,
                    "p95": 343.25215599999996,
                    "p99": 343.25215599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 493.562215,
                    "min": 430.262008,
                    "p50": 461.287809,
                    "p95": 493.562215,
                    "p99": 493.562215,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.87381999999997,
                    "min": 351.55231799999996,
                    "p50": 396.868143,
                    "p95": 425.87381999999997,
                    "p99": 425.87381999999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 154.99029,
                    "min": 129.319867,
                    "p50": 141.349086,
                    "p95": 154.99029,
                    "p99": 154.99029,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 275.46269,
                    "min": 218.353116,
                    "p50": 244.88823,
                    "p95": 275.46269,
                    "p99": 275.46269,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 382.826459,
                    "min": 339.27842,
                    "p50": 356.098511,
                    "p95": 382.826459,
                    "p99": 382.826459,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 327.669676,
                    "min": 296.98215899999997,
                    "p50": 311.384374,
                    "p95": 327.669676,
                    "p99": 327.669676,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 817.257068,
                    "min": 733.5627509999999,
                    "p50": 767.749374,
                    "p95": 817.257068,
                    "p99": 817.257068,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 694.726819,
                    "min": 622.273231,
                    "p50": 659.613983,
                    "p95": 694.726819,
                    "p99": 694.726819,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 163.546022,
                    "min": 127.687643,
                    "p50": 148.600267,
                    "p95": 163.546022,
                    "p99": 163.546022,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.738505,
                    "min": 464.218692,
                    "p50": 483.724016,
                    "p95": 516.738505,
                    "p99": 516.738505,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 509.111512,
                    "min": 411.58764399999995,
                    "p50": 452.374894,
                    "p95": 509.111512,
                    "p99": 509.111512,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 207.89461699999998,
                    "min": 177.784727,
                    "p50": 195.96802399999999,
                    "p95": 207.89461699999998,
                    "p99": 207.89461699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 546.306826,
                    "min": 475.063359,
                    "p50": 501.96304399999997,
                    "p95": 546.306826,
                    "p99": 546.306826,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 417.76789399999996,
                    "min": 383.159521,
                    "p50": 405.163077,
                    "p95": 417.76789399999996,
                    "p99": 417.76789399999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 904.4165099999999,
                    "min": 824.6219669999999,
                    "p50": 848.041844,
                    "p95": 904.4165099999999,
                    "p99": 904.4165099999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 668.673787,
                    "min": 571.3715619999999,
                    "p50": 596.841718,
                    "p95": 668.673787,
                    "p99": 668.673787,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 293.273368,
                    "min": 257.795974,
                    "p50": 275.568268,
                    "p95": 293.273368,
                    "p99": 293.273368,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 598.8273019999999,
                    "min": 526.505592,
                    "p50": 565.2350769999999,
                    "p95": 598.8273019999999,
                    "p99": 598.8273019999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 920.7592169999999,
                    "min": 818.159895,
                    "p50": 844.9459079999999,
                    "p95": 920.7592169999999,
                    "p99": 920.7592169999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 220.00511699999998,
                    "min": 167.70282,
                    "p50": 192.376216,
                    "p95": 220.00511699999998,
                    "p99": 220.00511699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 448.97502699999995,
                    "min": 379.24681899999996,
                    "p50": 404.15610499999997,
                    "p95": 448.97502699999995,
                    "p99": 448.97502699999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 468.031002,
                    "min": 423.018088,
                    "p50": 444.112965,
                    "p95": 468.031002,
                    "p99": 468.031002,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 507.49270199999995,
                    "min": 455.060279,
                    "p50": 481.04081199999996,
                    "p95": 507.49270199999995,
                    "p99": 507.49270199999995,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 782.0998969999999,
                    "min": 719.899459,
                    "p50": 748.866797,
                    "p95": 782.0998969999999,
                    "p99": 782.0998969999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 555.639067,
                    "min": 498.231566,
                    "p50": 509.05967599999997,
                    "p95": 555.639067,
                    "p99": 555.639067,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 638.7800649999999,
                    "min": 547.94848,
                    "p50": 588.362085,
                    "p95": 638.7800649999999,
                    "p99": 638.7800649999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.33750999999998,
                    "min": 142.019778,
                    "p50": 153.198778,
                    "p95": 170.33750999999998,
                    "p99": 170.33750999999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.71096,
                    "min": 262.306914,
                    "p50": 297.72981799999997,
                    "p95": 303.71096,
                    "p99": 303.71096,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 262.74232,
                    "min": 215.008791,
                    "p50": 233.235742,
                    "p95": 262.74232,
                    "p99": 262.74232,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 712.0001159999999,
                    "min": 603.090543,
                    "p50": 628.7635819999999,
                    "p95": 712.0001159999999,
                    "p99": 712.0001159999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 421.205512,
                    "min": 317.124821,
                    "p50": 367.225666,
                    "p95": 421.205512,
                    "p99": 421.205512,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 671.3962369999999,
                    "min": 576.022653,
                    "p50": 613.9744979999999,
                    "p95": 671.3962369999999,
                    "p99": 671.3962369999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 368.23112599999996,
                    "min": 295.03680099999997,
                    "p50": 325.988806,
                    "p95": 368.23112599999996,
                    "p99": 368.23112599999996,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 254.592017,
                    "min": 219.09712499999998,
                    "p50": 228.927092,
                    "p95": 254.592017,
                    "p99": 254.592017,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 74.307982,
                    "min": 64.16951999999999,
                    "p50": 66.80977,
                    "p95": 74.307982,
                    "p99": 74.307982,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1187.588303,
                    "min": 1151.405709,
                    "p50": 1169.00477,
                    "p95": 1187.588303,
                    "p99": 1187.588303,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 275.370405,
                    "min": 249.459034,
                    "p50": 263.43381,
                    "p95": 275.370405,
                    "p99": 275.370405,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 408.89687499999997,
                    "min": 365.875292,
                    "p50": 375.274501,
                    "p95": 408.89687499999997,
                    "p99": 408.89687499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 184.853926,
                    "min": 132.41822399999998,
                    "p50": 141.49818299999998,
                    "p95": 184.853926,
                    "p99": 184.853926,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 499.356043,
                    "min": 476.084542,
                    "p50": 490.537916,
                    "p95": 499.356043,
                    "p99": 499.356043,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.92398699999998,
                    "min": 85.820596,
                    "p50": 89.722257,
                    "p95": 128.92398699999998,
                    "p99": 128.92398699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 132.03534199999999,
                    "min": 109.203644,
                    "p50": 112.815981,
                    "p95": 132.03534199999999,
                    "p99": 132.03534199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.73464,
                    "min": 51.692482999999996,
                    "p50": 53.922596999999996,
                    "p95": 57.73464,
                    "p99": 57.73464,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 159.658742,
                    "min": 121.400863,
                    "p50": 131.714891,
                    "p95": 159.658742,
                    "p99": 159.658742,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 124.87111999999999,
                    "min": 96.979626,
                    "p50": 99.258798,
                    "p95": 124.87111999999999,
                    "p99": 124.87111999999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 190.35460999999998,
                    "min": 143.888834,
                    "p50": 154.32273899999998,
                    "p95": 190.35460999999998,
                    "p99": 190.35460999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 219.28448999999998,
                    "min": 172.955606,
                    "p50": 184.542085,
                    "p95": 219.28448999999998,
                    "p99": 219.28448999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 198.050708,
                    "min": 155.103948,
                    "p50": 171.119623,
                    "p95": 198.050708,
                    "p99": 198.050708,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 628.128171,
                    "min": 593.030004,
                    "p50": 602.879226,
                    "p95": 628.128171,
                    "p99": 628.128171,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.794051,
                    "min": 77.656256,
                    "p50": 92.92703,
                    "p95": 112.794051,
                    "p99": 112.794051,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 199.838701,
                    "min": 177.216659,
                    "p50": 186.97836099999998,
                    "p95": 199.838701,
                    "p99": 199.838701,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 225.90965599999998,
                    "min": 190.10514899999998,
                    "p50": 199.543848,
                    "p95": 225.90965599999998,
                    "p99": 225.90965599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 225.872231,
                    "min": 177.898021,
                    "p50": 182.54619599999998,
                    "p95": 225.872231,
                    "p99": 225.872231,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1225.913117,
                    "min": 1202.7884259999998,
                    "p50": 1215.232057,
                    "p95": 1225.913117,
                    "p99": 1225.913117,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 212.006291,
                    "min": 193.448125,
                    "p50": 199.277482,
                    "p95": 212.006291,
                    "p99": 212.006291,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 156.690283,
                    "min": 124.819119,
                    "p50": 134.21900399999998,
                    "p95": 156.690283,
                    "p99": 156.690283,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 243.11063399999998,
                    "min": 231.247574,
                    "p50": 240.546844,
                    "p95": 243.11063399999998,
                    "p99": 243.11063399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 276.472363,
                    "min": 256.81084699999997,
                    "p50": 262.48929499999997,
                    "p95": 276.472363,
                    "p99": 276.472363,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 82.51802599999999,
                    "min": 76.75668,
                    "p50": 79.299795,
                    "p95": 82.51802599999999,
                    "p99": 82.51802599999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 152.894468,
                    "min": 136.913718,
                    "p50": 148.842847,
                    "p95": 152.894468,
                    "p99": 152.894468,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.968156,
                    "min": 101.283096,
                    "p50": 116.251345,
                    "p95": 140.968156,
                    "p99": 140.968156,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 212.982045,
                    "min": 193.509649,
                    "p50": 203.809819,
                    "p95": 212.982045,
                    "p99": 212.982045,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 194.192974,
                    "min": 161.21948799999998,
                    "p50": 168.25525299999998,
                    "p95": 194.192974,
                    "p99": 194.192974,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 544.616841,
                    "min": 495.347115,
                    "p50": 504.98629999999997,
                    "p95": 544.616841,
                    "p99": 544.616841,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 406.270879,
                    "min": 373.88849999999996,
                    "p50": 385.321459,
                    "p95": 406.270879,
                    "p99": 406.270879,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 196.807162,
                    "min": 150.588791,
                    "p50": 158.88866,
                    "p95": 196.807162,
                    "p99": 196.807162,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 67.12996,
                    "min": 53.316232,
                    "p50": 56.222660999999995,
                    "p95": 67.12996,
                    "p99": 67.12996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 147.40875699999998,
                    "min": 112.795216,
                    "p50": 126.45508699999999,
                    "p95": 147.40875699999998,
                    "p99": 147.40875699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 70.800516,
                    "min": 65.063947,
                    "p50": 66.805369,
                    "p95": 70.800516,
                    "p99": 70.800516,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 132.523033,
                    "min": 89.497823,
                    "p50": 105.52377899999999,
                    "p95": 132.523033,
                    "p99": 132.523033,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 669.4845799999999,
                    "min": 611.5662179999999,
                    "p50": 625.306569,
                    "p95": 669.4845799999999,
                    "p99": 669.4845799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.936003,
                    "min": 105.74885499999999,
                    "p50": 109.69282299999999,
                    "p95": 142.936003,
                    "p99": 142.936003,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 216.643126,
                    "min": 184.396165,
                    "p50": 204.003695,
                    "p95": 216.643126,
                    "p99": 216.643126,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 168.065972,
                    "min": 155.161203,
                    "p50": 162.92095999999998,
                    "p95": 168.065972,
                    "p99": 168.065972,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 97.80250199999999,
                    "min": 92.493454,
                    "p50": 95.01651299999999,
                    "p95": 97.80250199999999,
                    "p99": 97.80250199999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 280.708214,
                    "min": 268.83173899999997,
                    "p50": 277.745169,
                    "p95": 280.708214,
                    "p99": 280.708214,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 82.174511,
                    "min": 67.143067,
                    "p50": 69.238044,
                    "p95": 82.174511,
                    "p99": 82.174511,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.214471,
                    "min": 118.445197,
                    "p50": 133.705666,
                    "p95": 154.214471,
                    "p99": 154.214471,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 170.774966,
                    "min": 147.43597599999998,
                    "p50": 156.308302,
                    "p95": 170.774966,
                    "p99": 170.774966,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 255.288984,
                    "min": 208.15883,
                    "p50": 213.19889799999999,
                    "p95": 255.288984,
                    "p99": 255.288984,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 433.324814,
                    "min": 396.53061199999996,
                    "p50": 407.36623499999996,
                    "p95": 433.324814,
                    "p99": 433.324814,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 202.264076,
                    "min": 175.10476699999998,
                    "p50": 180.64020299999999,
                    "p95": 202.264076,
                    "p99": 202.264076,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 181.470382,
                    "min": 129.77723799999998,
                    "p50": 139.976925,
                    "p95": 181.470382,
                    "p99": 181.470382,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 107.631042,
                    "min": 80.063479,
                    "p50": 84.362398,
                    "p95": 107.631042,
                    "p99": 107.631042,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 225.82777299999998,
                    "min": 194.61131699999999,
                    "p50": 203.47931699999998,
                    "p95": 225.82777299999998,
                    "p99": 225.82777299999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 277.800664,
                    "min": 244.315858,
                    "p50": 259.665964,
                    "p95": 277.800664,
                    "p99": 277.800664,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 568.1655559999999,
                    "min": 526.325207,
                    "p50": 535.428318,
                    "p95": 568.1655559999999,
                    "p99": 568.1655559999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 670.59487,
                    "min": 646.0847679999999,
                    "p50": 659.22892,
                    "p95": 670.59487,
                    "p99": 670.59487,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1297.661099,
                    "min": 1274.761431,
                    "p50": 1287.6751749999999,
                    "p95": 1297.661099,
                    "p99": 1297.661099,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.346970999999996,
                    "min": 55.348786999999994,
                    "p50": 56.348628,
                    "p95": 61.346970999999996,
                    "p99": 61.346970999999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 659.143724,
                    "min": 618.579705,
                    "p50": 629.976758,
                    "p95": 659.143724,
                    "p99": 659.143724,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 216.287555,
                    "min": 175.409844,
                    "p50": 184.518017,
                    "p95": 216.287555,
                    "p99": 216.287555,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 171.455438,
                    "min": 137.27786899999998,
                    "p50": 149.70109399999998,
                    "p95": 171.455438,
                    "p99": 171.455438,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 233.30460399999998,
                    "min": 199.94419499999998,
                    "p50": 208.977261,
                    "p95": 233.30460399999998,
                    "p99": 233.30460399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 130.176525,
                    "min": 101.746884,
                    "p50": 105.19953799999999,
                    "p95": 130.176525,
                    "p99": 130.176525,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 106.191391,
                    "min": 80.24202199999999,
                    "p50": 91.988669,
                    "p95": 106.191391,
                    "p99": 106.191391,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 57.282571999999995,
                    "min": 53.356494,
                    "p50": 55.545445,
                    "p95": 57.282571999999995,
                    "p99": 57.282571999999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 182.770851,
                    "min": 152.81196,
                    "p50": 160.178877,
                    "p95": 182.770851,
                    "p99": 182.770851,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 251.17749799999999,
                    "min": 232.60605099999998,
                    "p50": 236.254272,
                    "p95": 251.17749799999999,
                    "p99": 251.17749799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 131.550514,
                    "min": 91.043431,
                    "p50": 104.05212499999999,
                    "p95": 131.550514,
                    "p99": 131.550514,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 148.744663,
                    "min": 113.99853999999999,
                    "p50": 122.83929499999999,
                    "p95": 148.744663,
                    "p99": 148.744663,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 225.60027399999998,
                    "min": 186.545065,
                    "p50": 204.221907,
                    "p95": 225.60027399999998,
                    "p99": 225.60027399999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 533.38072,
                    "min": 498.59932499999996,
                    "p50": 512.819351,
                    "p95": 533.38072,
                    "p99": 533.38072,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1257.01927,
                    "min": 1229.417053,
                    "p50": 1237.90715,
                    "p95": 1257.01927,
                    "p99": 1257.01927,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 148.746623,
                    "min": 127.765819,
                    "p50": 136.110122,
                    "p95": 148.746623,
                    "p99": 148.746623,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 274.954575,
                    "min": 261.068718,
                    "p50": 268.448858,
                    "p95": 274.954575,
                    "p99": 274.954575,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 201.32576999999998,
                    "min": 163.75922799999998,
                    "p50": 182.524,
                    "p95": 201.32576999999998,
                    "p99": 201.32576999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 73.701984,
                    "min": 65.325221,
                    "p50": 67.764884,
                    "p95": 73.701984,
                    "p99": 73.701984,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 402.75523499999997,
                    "min": 385.543857,
                    "p50": 391.084898,
                    "p95": 402.75523499999997,
                    "p99": 402.75523499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 249.384718,
                    "min": 210.596816,
                    "p50": 237.95604899999998,
                    "p95": 249.384718,
                    "p99": 249.384718,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 200.116299,
                    "min": 152.12246,
                    "p50": 165.986302,
                    "p95": 200.116299,
                    "p99": 200.116299,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 271.39779899999996,
                    "min": 247.50671799999998,
                    "p50": 259.17767699999996,
                    "p95": 271.39779899999996,
                    "p99": 271.39779899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1011.995327,
                    "min": 964.7248219999999,
                    "p50": 985.2276579999999,
                    "p95": 1011.995327,
                    "p99": 1011.995327,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 674.178277,
                    "min": 630.762798,
                    "p50": 646.153208,
                    "p95": 674.178277,
                    "p99": 674.178277,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 782.403059,
                    "min": 708.5913909999999,
                    "p50": 718.022393,
                    "p95": 782.403059,
                    "p99": 782.403059,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 876.565336,
                    "min": 814.635816,
                    "p50": 842.8152319999999,
                    "p95": 876.565336,
                    "p99": 876.565336,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 449.43699899999996,
                    "min": 427.47995699999996,
                    "p50": 436.139937,
                    "p95": 449.43699899999996,
                    "p99": 449.43699899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 334.585553,
                    "min": 293.45140299999997,
                    "p50": 307.31625299999996,
                    "p95": 334.585553,
                    "p99": 334.585553,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 433.43782,
                    "min": 391.200585,
                    "p50": 401.703357,
                    "p95": 433.43782,
                    "p99": 433.43782,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 372.34628899999996,
                    "min": 343.454675,
                    "p50": 363.542157,
                    "p95": 372.34628899999996,
                    "p99": 372.34628899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 517.429746,
                    "min": 465.809798,
                    "p50": 490.786638,
                    "p95": 517.429746,
                    "p99": 517.429746,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 544.017265,
                    "min": 520.39066,
                    "p50": 538.0223189999999,
                    "p95": 544.017265,
                    "p99": 544.017265,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 722.134788,
                    "min": 680.317236,
                    "p50": 696.5281749999999,
                    "p95": 722.134788,
                    "p99": 722.134788,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 613.329923,
                    "min": 571.7481789999999,
                    "p50": 596.704801,
                    "p95": 613.329923,
                    "p99": 613.329923,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 569.139368,
                    "min": 538.281749,
                    "p50": 547.150282,
                    "p95": 569.139368,
                    "p99": 569.139368,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 682.73036,
                    "min": 614.989453,
                    "p50": 643.555615,
                    "p95": 682.73036,
                    "p99": 682.73036,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 710.24131,
                    "min": 667.417034,
                    "p50": 695.2212589999999,
                    "p95": 710.24131,
                    "p99": 710.24131,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 235.305851,
                    "min": 193.684297,
                    "p50": 211.818105,
                    "p95": 235.305851,
                    "p99": 235.305851,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 272.90351799999996,
                    "min": 241.398865,
                    "p50": 258.629195,
                    "p95": 272.90351799999996,
                    "p99": 272.90351799999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.310338,
                    "min": 342.807164,
                    "p50": 352.124255,
                    "p95": 362.310338,
                    "p99": 362.310338,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.926741,
                    "min": 288.13388399999997,
                    "p50": 303.026462,
                    "p95": 313.926741,
                    "p99": 313.926741,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 518.73682,
                    "min": 484.824751,
                    "p50": 507.307555,
                    "p95": 518.73682,
                    "p99": 518.73682,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.370511,
                    "min": 158.692238,
                    "p50": 163.495186,
                    "p95": 169.370511,
                    "p99": 169.370511,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 416.421878,
                    "min": 382.026272,
                    "p50": 404.214684,
                    "p95": 416.421878,
                    "p99": 416.421878,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 874.199176,
                    "min": 835.230151,
                    "p50": 855.582004,
                    "p95": 874.199176,
                    "p99": 874.199176,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1021.4974279999999,
                    "min": 962.866666,
                    "p50": 988.773773,
                    "p95": 1021.4974279999999,
                    "p99": 1021.4974279999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 749.855695,
                    "min": 720.583254,
                    "p50": 740.218899,
                    "p95": 749.855695,
                    "p99": 749.855695,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 453.69469699999996,
                    "min": 435.13070899999997,
                    "p50": 448.670815,
                    "p95": 453.69469699999996,
                    "p99": 453.69469699999996,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 602.8668789999999,
                    "min": 567.849801,
                    "p50": 596.768185,
                    "p95": 602.8668789999999,
                    "p99": 602.8668789999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 716.646921,
                    "min": 642.803623,
                    "p50": 681.8298689999999,
                    "p95": 716.646921,
                    "p99": 716.646921,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 631.768687,
                    "min": 587.807821,
                    "p50": 620.8224789999999,
                    "p95": 631.768687,
                    "p99": 631.768687,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 739.247026,
                    "min": 699.6859939999999,
                    "p50": 716.739682,
                    "p95": 739.247026,
                    "p99": 739.247026,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 855.355871,
                    "min": 806.212488,
                    "p50": 830.691823,
                    "p95": 855.355871,
                    "p99": 855.355871,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 601.683049,
                    "min": 563.835871,
                    "p50": 575.0602279999999,
                    "p95": 601.683049,
                    "p99": 601.683049,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 569.190924,
                    "min": 523.560155,
                    "p50": 532.951341,
                    "p95": 569.190924,
                    "p99": 569.190924,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 176.77977199999998,
                    "min": 154.170664,
                    "p50": 163.561824,
                    "p95": 176.77977199999998,
                    "p99": 176.77977199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 988.6914119999999,
                    "min": 912.685568,
                    "p50": 944.7654329999999,
                    "p95": 988.6914119999999,
                    "p99": 988.6914119999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 499.85707499999995,
                    "min": 461.731678,
                    "p50": 485.739381,
                    "p95": 499.85707499999995,
                    "p99": 499.85707499999995,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 459.456795,
                    "min": 429.678519,
                    "p50": 441.48385299999995,
                    "p95": 459.456795,
                    "p99": 459.456795,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 308.19820699999997,
                    "min": 294.920737,
                    "p50": 297.55058199999996,
                    "p95": 308.19820699999997,
                    "p99": 308.19820699999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 407.462894,
                    "min": 373.161159,
                    "p50": 390.789702,
                    "p95": 407.462894,
                    "p99": 407.462894,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 381.330398,
                    "min": 335.553161,
                    "p50": 349.144531,
                    "p95": 381.330398,
                    "p99": 381.330398,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 243.049176,
                    "min": 204.274556,
                    "p50": 209.871531,
                    "p95": 243.049176,
                    "p99": 243.049176,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 280.535933,
                    "min": 241.225765,
                    "p50": 257.096273,
                    "p95": 280.535933,
                    "p99": 280.535933,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 680.992116,
                    "min": 659.543042,
                    "p50": 673.37802,
                    "p95": 680.992116,
                    "p99": 680.992116,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 729.588399,
                    "min": 697.494707,
                    "p50": 721.7422779999999,
                    "p95": 729.588399,
                    "p99": 729.588399,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 605.875678,
                    "min": 558.301983,
                    "p50": 584.802001,
                    "p95": 605.875678,
                    "p99": 605.875678,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 850.0610889999999,
                    "min": 798.5121809999999,
                    "p50": 830.6923069999999,
                    "p95": 850.0610889999999,
                    "p99": 850.0610889999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.73474199999998,
                    "min": 194.024337,
                    "p50": 202.034078,
                    "p95": 215.73474199999998,
                    "p99": 215.73474199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 578.023058,
                    "min": 523.466406,
                    "p50": 532.73129,
                    "p95": 578.023058,
                    "p99": 578.023058,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 981.712903,
                    "min": 929.877308,
                    "p50": 967.970115,
                    "p95": 981.712903,
                    "p99": 981.712903,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 313.58279,
                    "min": 279.960696,
                    "p50": 292.804213,
                    "p95": 313.58279,
                    "p99": 313.58279,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 430.20572899999996,
                    "min": 391.87438599999996,
                    "p50": 405.07624,
                    "p95": 430.20572899999996,
                    "p99": 430.20572899999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.488884,
                    "min": 333.752565,
                    "p50": 343.523552,
                    "p95": 362.488884,
                    "p99": 362.488884,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 270.52946299999996,
                    "min": 241.552065,
                    "p50": 257.57052999999996,
                    "p95": 270.52946299999996,
                    "p99": 270.52946299999996,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 463.505089,
                    "min": 424.917465,
                    "p50": 441.42420999999996,
                    "p95": 463.505089,
                    "p99": 463.505089,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 499.87778799999995,
                    "min": 477.71050599999995,
                    "p50": 485.626246,
                    "p95": 499.87778799999995,
                    "p99": 499.87778799999995,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.34510899999998,
                    "min": 152.300355,
                    "p50": 158.994868,
                    "p95": 180.34510899999998,
                    "p99": 180.34510899999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 666.431441,
                    "min": 609.30466,
                    "p50": 633.225472,
                    "p95": 666.431441,
                    "p99": 666.431441,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1699.9191509999998,
                    "min": 1650.1653959999999,
                    "p50": 1661.028873,
                    "p95": 1699.9191509999998,
                    "p99": 1699.9191509999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1017.6338509999999,
                    "min": 991.141434,
                    "p50": 1009.5243899999999,
                    "p95": 1017.6338509999999,
                    "p99": 1017.6338509999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1264.232215,
                    "min": 1211.3274649999998,
                    "p50": 1224.9059029999999,
                    "p95": 1264.232215,
                    "p99": 1264.232215,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 809.211811,
                    "min": 781.0939179999999,
                    "p50": 797.2318889999999,
                    "p95": 809.211811,
                    "p99": 809.211811,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 692.774532,
                    "min": 671.2194959999999,
                    "p50": 684.258239,
                    "p95": 692.774532,
                    "p99": 692.774532,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1160.485177,
                    "min": 1108.877383,
                    "p50": 1119.890262,
                    "p95": 1160.485177,
                    "p99": 1160.485177,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 368.662606,
                    "min": 343.147535,
                    "p50": 352.354339,
                    "p95": 368.662606,
                    "p99": 368.662606,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 500.285708,
                    "min": 454.38927099999995,
                    "p50": 468.17447999999996,
                    "p95": 500.285708,
                    "p99": 500.285708,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 936.480878,
                    "min": 887.588587,
                    "p50": 908.392874,
                    "p95": 936.480878,
                    "p99": 936.480878,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 585.8214849999999,
                    "min": 567.0280309999999,
                    "p50": 571.578948,
                    "p95": 585.8214849999999,
                    "p99": 585.8214849999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2238.644104,
                    "min": 2197.139306,
                    "p50": 2219.024469,
                    "p95": 2238.644104,
                    "p99": 2238.644104,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1378.8543909999999,
                    "min": 1320.711206,
                    "p50": 1349.356031,
                    "p95": 1378.8543909999999,
                    "p99": 1378.8543909999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1945.1741539999998,
                    "min": 1910.659715,
                    "p50": 1927.110281,
                    "p95": 1945.1741539999998,
                    "p99": 1945.1741539999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1582.867978,
                    "min": 1527.0113099999999,
                    "p50": 1560.226078,
                    "p95": 1582.867978,
                    "p99": 1582.867978,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1469.7098999999998,
                    "min": 1420.217308,
                    "p50": 1455.351122,
                    "p95": 1469.7098999999998,
                    "p99": 1469.7098999999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3353.1602399999997,
                    "min": 3253.16542,
                    "p50": 3290.3881859999997,
                    "p95": 3353.1602399999997,
                    "p99": 3353.1602399999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1855.807599,
                    "min": 1806.004506,
                    "p50": 1830.61737,
                    "p95": 1855.807599,
                    "p99": 1855.807599,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1380.119647,
                    "min": 1332.867107,
                    "p50": 1352.687792,
                    "p95": 1380.119647,
                    "p99": 1380.119647,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1602.594368,
                    "min": 1562.6028569999999,
                    "p50": 1585.4504259999999,
                    "p95": 1602.594368,
                    "p99": 1602.594368,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2456.856475,
                    "min": 2430.5542499999997,
                    "p50": 2440.5522619999997,
                    "p95": 2456.856475,
                    "p99": 2456.856475,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2148.801183,
                    "min": 2104.463915,
                    "p50": 2120.541371,
                    "p95": 2148.801183,
                    "p99": 2148.801183,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1484.166135,
                    "min": 1450.783489,
                    "p50": 1475.265725,
                    "p95": 1484.166135,
                    "p99": 1484.166135,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 396.327792,
                    "min": 380.09326,
                    "p50": 388.258316,
                    "p95": 396.327792,
                    "p99": 396.327792,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 549.8144589999999,
                    "min": 495.809868,
                    "p50": 512.843631,
                    "p95": 549.8144589999999,
                    "p99": 549.8144589999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1243.896421,
                    "min": 1201.629203,
                    "p50": 1226.685961,
                    "p95": 1243.896421,
                    "p99": 1243.896421,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 763.994697,
                    "min": 734.577134,
                    "p50": 754.3372099999999,
                    "p95": 763.994697,
                    "p99": 763.994697,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1181.194694,
                    "min": 1091.6013759999998,
                    "p50": 1101.220374,
                    "p95": 1181.194694,
                    "p99": 1181.194694,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 659.226604,
                    "min": 623.0899459999999,
                    "p50": 635.114113,
                    "p95": 659.226604,
                    "p99": 659.226604,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1713.211185,
                    "min": 1694.952307,
                    "p50": 1707.662689,
                    "p95": 1713.211185,
                    "p99": 1713.211185,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1002.506498,
                    "min": 972.311611,
                    "p50": 989.535049,
                    "p95": 1002.506498,
                    "p99": 1002.506498,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 916.565899,
                    "min": 850.1374619999999,
                    "p50": 870.461057,
                    "p95": 916.565899,
                    "p99": 916.565899,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1391.832893,
                    "min": 1318.427289,
                    "p50": 1351.7377199999999,
                    "p95": 1391.832893,
                    "p99": 1391.832893,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 555.080913,
                    "min": 541.095023,
                    "p50": 552.122859,
                    "p95": 555.080913,
                    "p99": 555.080913,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1122.663357,
                    "min": 1059.46954,
                    "p50": 1075.596851,
                    "p95": 1122.663357,
                    "p99": 1122.663357,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 972.9635609999999,
                    "min": 927.231137,
                    "p50": 943.216,
                    "p95": 972.9635609999999,
                    "p99": 972.9635609999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 829.2027099999999,
                    "min": 797.045432,
                    "p50": 819.836288,
                    "p95": 829.2027099999999,
                    "p99": 829.2027099999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2026.6638149999999,
                    "min": 1967.001421,
                    "p50": 1997.3957039999998,
                    "p95": 2026.6638149999999,
                    "p99": 2026.6638149999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1772.944964,
                    "min": 1708.694374,
                    "p50": 1744.7948749999998,
                    "p95": 1772.944964,
                    "p99": 1772.944964,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2649.283274,
                    "min": 2582.8300099999997,
                    "p50": 2638.65974,
                    "p95": 2649.283274,
                    "p99": 2649.283274,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3972.9913779999997,
                    "min": 3912.1712469999998,
                    "p50": 3938.81421,
                    "p95": 3972.9913779999997,
                    "p99": 3972.9913779999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1622.325996,
                    "min": 1566.332066,
                    "p50": 1596.6691959999998,
                    "p95": 1622.325996,
                    "p99": 1622.325996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 705.516442,
                    "min": 675.237944,
                    "p50": 691.2355269999999,
                    "p95": 705.516442,
                    "p99": 705.516442,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1510.806662,
                    "min": 1457.1600369999999,
                    "p50": 1469.541706,
                    "p95": 1510.806662,
                    "p99": 1510.806662,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 450.834387,
                    "min": 415.923274,
                    "p50": 425.642558,
                    "p95": 450.834387,
                    "p99": 450.834387,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1879.193569,
                    "min": 1834.22054,
                    "p50": 1855.997989,
                    "p95": 1879.193569,
                    "p99": 1879.193569,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2332.83861,
                    "min": 2296.683193,
                    "p50": 2322.733623,
                    "p95": 2332.83861,
                    "p99": 2332.83861,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1224.8797439999998,
                    "min": 1192.743195,
                    "p50": 1216.898107,
                    "p95": 1224.8797439999998,
                    "p99": 1224.8797439999998,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3397.673539,
                    "min": 3317.407624,
                    "p50": 3385.498573,
                    "p95": 3397.673539,
                    "p99": 3397.673539,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1195.320914,
                    "min": 763.8134,
                    "p50": 783.431331,
                    "p95": 1195.320914,
                    "p99": 1195.320914,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 591.079423,
                    "min": 520.006993,
                    "p50": 527.0065999999999,
                    "p95": 591.079423,
                    "p99": 591.079423,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1040.399971,
                    "min": 1011.505858,
                    "p50": 1029.057709,
                    "p95": 1040.399971,
                    "p99": 1040.399971,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 383.00780399999996,
                    "min": 363.144588,
                    "p50": 373.310887,
                    "p95": 383.00780399999996,
                    "p99": 383.00780399999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1720.63106,
                    "min": 1674.199117,
                    "p50": 1692.307732,
                    "p95": 1720.63106,
                    "p99": 1720.63106,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1302.390919,
                    "min": 1263.987136,
                    "p50": 1278.807125,
                    "p95": 1302.390919,
                    "p99": 1302.390919,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1236.1999019999998,
                    "min": 1185.228122,
                    "p50": 1195.981458,
                    "p95": 1236.1999019999998,
                    "p99": 1236.1999019999998,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 300.387595,
                    "min": 265.369664,
                    "p50": 287.044055,
                    "p95": 300.387595,
                    "p99": 300.387595,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 455.72135,
                    "min": 437.24571,
                    "p50": 445.89352499999995,
                    "p95": 455.72135,
                    "p99": 455.72135,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1525.814598,
                    "min": 1470.763528,
                    "p50": 1494.762823,
                    "p95": 1525.814598,
                    "p99": 1525.814598,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 726.7101759999999,
                    "min": 687.5319569999999,
                    "p50": 697.912706,
                    "p95": 726.7101759999999,
                    "p99": 726.7101759999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 973.045408,
                    "min": 933.460981,
                    "p50": 947.731059,
                    "p95": 973.045408,
                    "p99": 973.045408,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 638.184707,
                    "min": 605.7637139999999,
                    "p50": 610.501002,
                    "p95": 638.184707,
                    "p99": 638.184707,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1138.621796,
                    "min": 1094.4299899999999,
                    "p50": 1115.34918,
                    "p95": 1138.621796,
                    "p99": 1138.621796,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2793.7960089999997,
                    "min": 2515.657946,
                    "p50": 2539.493027,
                    "p95": 2793.7960089999997,
                    "p99": 2793.7960089999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 4243.364345,
                    "min": 4156.356197,
                    "p50": 4197.443798,
                    "p95": 4243.364345,
                    "p99": 4243.364345,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 892.568761,
                    "min": 846.371532,
                    "p50": 871.229338,
                    "p95": 892.568761,
                    "p99": 892.568761,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 432.691716,
                    "min": 402.241135,
                    "p50": 413.393713,
                    "p95": 432.691716,
                    "p99": 432.691716,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1155.3132719999999,
                    "min": 1125.682478,
                    "p50": 1133.7869739999999,
                    "p95": 1155.3132719999999,
                    "p99": 1155.3132719999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1736.704663,
                    "min": 1696.128017,
                    "p50": 1720.910987,
                    "p95": 1736.704663,
                    "p99": 1736.704663,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2826.151066,
                    "min": 2790.9873949999997,
                    "p50": 2808.857791,
                    "p95": 2826.151066,
                    "p99": 2826.151066,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2294.421097,
                    "min": 2225.897042,
                    "p50": 2262.700755,
                    "p95": 2294.421097,
                    "p99": 2294.421097,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 492.44767399999995,
                    "min": 464.038797,
                    "p50": 472.59148799999997,
                    "p95": 492.44767399999995,
                    "p99": 492.44767399999995,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1014.5917569999999,
                    "min": 994.481445,
                    "p50": 1006.838365,
                    "p95": 1014.5917569999999,
                    "p99": 1014.5917569999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 384.077289,
                    "min": 351.770564,
                    "p50": 368.525351,
                    "p95": 384.077289,
                    "p99": 384.077289,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 848.098697,
                    "min": 797.499011,
                    "p50": 816.187297,
                    "p95": 848.098697,
                    "p99": 848.098697,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 900.0867119999999,
                    "min": 848.7709289999999,
                    "p50": 860.131389,
                    "p95": 900.0867119999999,
                    "p99": 900.0867119999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 292.267084,
                    "min": 249.56874299999998,
                    "p50": 258.997349,
                    "p95": 292.267084,
                    "p99": 292.267084,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 646.7020309999999,
                    "min": 625.397711,
                    "p50": 639.3742189999999,
                    "p95": 646.7020309999999,
                    "p99": 646.7020309999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 708.02255,
                    "min": 692.243889,
                    "p50": 704.5171339999999,
                    "p95": 708.02255,
                    "p99": 708.02255,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 326.368363,
                    "min": 297.572118,
                    "p50": 302.620794,
                    "p95": 326.368363,
                    "p99": 326.368363,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 203.639098,
                    "min": 185.036387,
                    "p50": 196.565105,
                    "p95": 203.639098,
                    "p99": 203.639098,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 805.888156,
                    "min": 743.041764,
                    "p50": 756.0301469999999,
                    "p95": 805.888156,
                    "p99": 805.888156,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 602.178312,
                    "min": 572.319581,
                    "p50": 582.561075,
                    "p95": 602.178312,
                    "p99": 602.178312,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 542.943071,
                    "min": 517.416168,
                    "p50": 529.50632,
                    "p95": 542.943071,
                    "p99": 542.943071,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 789.0065069999999,
                    "min": 747.537825,
                    "p50": 762.2244959999999,
                    "p95": 789.0065069999999,
                    "p99": 789.0065069999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1202.4186419999999,
                    "min": 1151.4217589999998,
                    "p50": 1163.8551989999999,
                    "p95": 1202.4186419999999,
                    "p99": 1202.4186419999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1028.243686,
                    "min": 991.947065,
                    "p50": 1010.0660049999999,
                    "p95": 1028.243686,
                    "p99": 1028.243686,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 298.43412,
                    "min": 260.595804,
                    "p50": 270.359331,
                    "p95": 298.43412,
                    "p99": 298.43412,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1691.9447249999998,
                    "min": 1643.1614419999999,
                    "p50": 1664.202789,
                    "p95": 1691.9447249999998,
                    "p99": 1691.9447249999998,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 699.33839,
                    "min": 674.088318,
                    "p50": 678.284058,
                    "p95": 699.33839,
                    "p99": 699.33839,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 451.54124099999996,
                    "min": 424.297625,
                    "p50": 443.780628,
                    "p95": 451.54124099999996,
                    "p99": 451.54124099999996,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1283.643487,
                    "min": 915.224163,
                    "p50": 923.49789,
                    "p95": 1283.643487,
                    "p99": 1283.643487,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 549.9413949999999,
                    "min": 505.17389699999995,
                    "p50": 526.789127,
                    "p95": 549.9413949999999,
                    "p99": 549.9413949999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1454.464896,
                    "min": 1438.858058,
                    "p50": 1446.401338,
                    "p95": 1454.464896,
                    "p99": 1454.464896,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 414.423434,
                    "min": 346.304539,
                    "p50": 365.532947,
                    "p95": 414.423434,
                    "p99": 414.423434,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1254.5082069999999,
                    "min": 1224.92082,
                    "p50": 1247.8814559999998,
                    "p95": 1254.5082069999999,
                    "p99": 1254.5082069999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 611.6565909999999,
                    "min": 590.00991,
                    "p50": 603.997071,
                    "p95": 611.6565909999999,
                    "p99": 611.6565909999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1111.447551,
                    "min": 1071.080776,
                    "p50": 1098.17794,
                    "p95": 1111.447551,
                    "p99": 1111.447551,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 925.248843,
                    "min": 837.170668,
                    "p50": 849.5267329999999,
                    "p95": 925.248843,
                    "p99": 925.248843,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 320.179549,
                    "min": 298.09239299999996,
                    "p50": 310.086368,
                    "p95": 320.179549,
                    "p99": 320.179549,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 876.8547189999999,
                    "min": 852.2612029999999,
                    "p50": 871.36245,
                    "p95": 876.8547189999999,
                    "p99": 876.8547189999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 557.87691,
                    "min": 516.568359,
                    "p50": 538.1284489999999,
                    "p95": 557.87691,
                    "p99": 557.87691,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 843.749634,
                    "min": 748.704761,
                    "p50": 763.8033449999999,
                    "p95": 843.749634,
                    "p99": 843.749634,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1166.585984,
                    "min": 1126.447266,
                    "p50": 1140.657094,
                    "p95": 1166.585984,
                    "p99": 1166.585984,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 656.7704,
                    "min": 626.1035529999999,
                    "p50": 642.370382,
                    "p95": 656.7704,
                    "p99": 656.7704,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 827.060073,
                    "min": 794.924638,
                    "p50": 805.8782669999999,
                    "p95": 827.060073,
                    "p99": 827.060073,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1740.4072259999998,
                    "min": 1673.1461769999999,
                    "p50": 1708.503419,
                    "p95": 1740.4072259999998,
                    "p99": 1740.4072259999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 433.710924,
                    "min": 410.64259699999997,
                    "p50": 423.108187,
                    "p95": 433.710924,
                    "p99": 433.710924,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 235.322354,
                    "min": 185.01858199999998,
                    "p50": 196.554614,
                    "p95": 235.322354,
                    "p99": 235.322354,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 593.8695389999999,
                    "min": 574.728941,
                    "p50": 589.577897,
                    "p95": 593.8695389999999,
                    "p99": 593.8695389999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 388.54177,
                    "min": 350.422516,
                    "p50": 364.85461899999996,
                    "p95": 388.54177,
                    "p99": 388.54177,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 271.63074,
                    "min": 240.718628,
                    "p50": 247.946699,
                    "p95": 271.63074,
                    "p99": 271.63074,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 488.967607,
                    "min": 462.12540099999995,
                    "p50": 479.191337,
                    "p95": 488.967607,
                    "p99": 488.967607,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1062.5685349999999,
                    "min": 987.3438689999999,
                    "p50": 1009.776539,
                    "p95": 1062.5685349999999,
                    "p99": 1062.5685349999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 724.601316,
                    "min": 690.786625,
                    "p50": 711.590289,
                    "p95": 724.601316,
                    "p99": 724.601316,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 806.2452589999999,
                    "min": 764.383648,
                    "p50": 787.854055,
                    "p95": 806.2452589999999,
                    "p99": 806.2452589999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 923.9488289999999,
                    "min": 879.7909209999999,
                    "p50": 894.483786,
                    "p95": 923.9488289999999,
                    "p99": 923.9488289999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 972.7047329999999,
                    "min": 951.266393,
                    "p50": 967.9842,
                    "p95": 972.7047329999999,
                    "p99": 972.7047329999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 612.249315,
                    "min": 574.7578129999999,
                    "p50": 596.616827,
                    "p95": 612.249315,
                    "p99": 612.249315,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 410.71743999999995,
                    "min": 390.97824599999996,
                    "p50": 398.132412,
                    "p95": 410.71743999999995,
                    "p99": 410.71743999999995,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 546.67607,
                    "min": 517.655187,
                    "p50": 531.111535,
                    "p95": 546.67607,
                    "p99": 546.67607,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 304.70228099999997,
                    "min": 268.035127,
                    "p50": 280.625863,
                    "p95": 304.70228099999997,
                    "p99": 304.70228099999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 360.03936,
                    "min": 336.219187,
                    "p50": 347.923408,
                    "p95": 360.03936,
                    "p99": 360.03936,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 680.632123,
                    "min": 638.281857,
                    "p50": 652.5157429999999,
                    "p95": 680.632123,
                    "p99": 680.632123,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 488.75271399999997,
                    "min": 453.375403,
                    "p50": 463.91949,
                    "p95": 488.75271399999997,
                    "p99": 488.75271399999997,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1311.182202,
                    "min": 1255.421756,
                    "p50": 1265.953474,
                    "p95": 1311.182202,
                    "p99": 1311.182202,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 734.574476,
                    "min": 704.701299,
                    "p50": 715.1866729999999,
                    "p95": 734.574476,
                    "p99": 734.574476,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1154.2284909999998,
                    "min": 1105.621826,
                    "p50": 1124.313064,
                    "p95": 1154.2284909999998,
                    "p99": 1154.2284909999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.95288,
                    "min": 203.839595,
                    "p50": 213.651828,
                    "p95": 227.95288,
                    "p99": 227.95288,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 855.48784,
                    "min": 830.320916,
                    "p50": 839.31952,
                    "p95": 855.48784,
                    "p99": 855.48784,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 708.4059619999999,
                    "min": 694.500556,
                    "p50": 705.29437,
                    "p95": 708.4059619999999,
                    "p99": 708.4059619999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 396.826064,
                    "min": 363.241513,
                    "p50": 372.350075,
                    "p95": 396.826064,
                    "p99": 396.826064,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 285.900146,
                    "min": 242.19109699999998,
                    "p50": 251.01183899999998,
                    "p95": 285.900146,
                    "p99": 285.900146,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 215.539051,
                    "min": 187.211099,
                    "p50": 194.860652,
                    "p95": 215.539051,
                    "p99": 215.539051,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 782.659444,
                    "min": 743.1147229999999,
                    "p50": 759.740328,
                    "p95": 782.659444,
                    "p99": 782.659444,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 887.7494409999999,
                    "min": 856.636029,
                    "p50": 874.2484479999999,
                    "p95": 887.7494409999999,
                    "p99": 887.7494409999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 563.601142,
                    "min": 522.680205,
                    "p50": 534.389406,
                    "p95": 563.601142,
                    "p99": 563.601142,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1160.247895,
                    "min": 1125.9575029999999,
                    "p50": 1145.7938159999999,
                    "p95": 1160.247895,
                    "p99": 1160.247895,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 589.5694569999999,
                    "min": 578.4083939999999,
                    "p50": 585.091325,
                    "p95": 589.5694569999999,
                    "p99": 589.5694569999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 446.376495,
                    "min": 411.090359,
                    "p50": 418.7347,
                    "p95": 446.376495,
                    "p99": 446.376495,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1033.219032,
                    "min": 997.460305,
                    "p50": 1014.0976149999999,
                    "p95": 1033.219032,
                    "p99": 1033.219032,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 838.577,
                    "min": 797.106416,
                    "p50": 823.306469,
                    "p95": 838.577,
                    "p99": 838.577,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 334.845075,
                    "min": 297.40401499999996,
                    "p50": 307.257594,
                    "p95": 334.845075,
                    "p99": 334.845075,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 519.526466,
                    "min": 463.021845,
                    "p50": 474.957025,
                    "p95": 519.526466,
                    "p99": 519.526466,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1730.320796,
                    "min": 1689.1328589999998,
                    "p50": 1717.006901,
                    "p95": 1730.320796,
                    "p99": 1730.320796,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 656.884826,
                    "min": 642.080711,
                    "p50": 651.446292,
                    "p95": 656.884826,
                    "p99": 656.884826,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2317.956205,
                    "min": 2250.279947,
                    "p50": 2264.325125,
                    "p95": 2317.956205,
                    "p99": 2317.956205,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1147.2682889999999,
                    "min": 1094.915151,
                    "p50": 1116.954878,
                    "p95": 1147.2682889999999,
                    "p99": 1147.2682889999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 613.976089,
                    "min": 563.568015,
                    "p50": 586.0953,
                    "p95": 613.976089,
                    "p99": 613.976089,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2210.896843,
                    "min": 2182.946791,
                    "p50": 2203.719717,
                    "p95": 2210.896843,
                    "p99": 2210.896843,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1565.2691189999998,
                    "min": 1530.1119999999999,
                    "p50": 1560.7448689999999,
                    "p95": 1565.2691189999998,
                    "p99": 1565.2691189999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 689.3842169999999,
                    "min": 676.6110729999999,
                    "p50": 682.94426,
                    "p95": 689.3842169999999,
                    "p99": 689.3842169999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1683.693495,
                    "min": 1643.974957,
                    "p50": 1662.9445079999998,
                    "p95": 1683.693495,
                    "p99": 1683.693495,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 833.7540329999999,
                    "min": 776.572148,
                    "p50": 788.043223,
                    "p95": 833.7540329999999,
                    "p99": 833.7540329999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1349.423114,
                    "min": 1313.422126,
                    "p50": 1340.6516769999998,
                    "p95": 1349.423114,
                    "p99": 1349.423114,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1048.584101,
                    "min": 990.9678379999999,
                    "p50": 1017.6831609999999,
                    "p95": 1048.584101,
                    "p99": 1048.584101,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1474.5159919999999,
                    "min": 1424.0587679999999,
                    "p50": 1434.133675,
                    "p95": 1474.5159919999999,
                    "p99": 1474.5159919999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1974.382701,
                    "min": 1912.3726649999999,
                    "p50": 1934.673646,
                    "p95": 1974.382701,
                    "p99": 1974.382701,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 923.4717009999999,
                    "min": 890.822146,
                    "p50": 915.444044,
                    "p95": 923.4717009999999,
                    "p99": 923.4717009999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1260.5058099999999,
                    "min": 1200.386879,
                    "p50": 1229.2083659999998,
                    "p95": 1260.5058099999999,
                    "p99": 1260.5058099999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 398.10044899999997,
                    "min": 344.82932,
                    "p50": 359.779053,
                    "p95": 398.10044899999997,
                    "p99": 398.10044899999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 481.265155,
                    "min": 457.383173,
                    "p50": 474.99053799999996,
                    "p95": 481.265155,
                    "p99": 481.265155,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 682.932962,
                    "min": 651.973981,
                    "p50": 659.270999,
                    "p95": 682.932962,
                    "p99": 682.932962,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 287.74708699999996,
                    "min": 269.55114299999997,
                    "p50": 279.580372,
                    "p95": 287.74708699999996,
                    "p99": 287.74708699999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 803.771901,
                    "min": 770.074631,
                    "p50": 782.368383,
                    "p95": 803.771901,
                    "p99": 803.771901,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 927.678452,
                    "min": 896.716204,
                    "p50": 906.991129,
                    "p95": 927.678452,
                    "p99": 927.678452,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 369.38144,
                    "min": 343.152763,
                    "p50": 363.57615699999997,
                    "p95": 369.38144,
                    "p99": 369.38144,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 618.447362,
                    "min": 588.484725,
                    "p50": 604.635797,
                    "p95": 618.447362,
                    "p99": 618.447362,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 566.195965,
                    "min": 518.905433,
                    "p50": 542.026785,
                    "p95": 566.195965,
                    "p99": 566.195965,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 430.61571599999996,
                    "min": 401.6747,
                    "p50": 412.81089499999996,
                    "p95": 430.61571599999996,
                    "p99": 430.61571599999996,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.197532,
                    "min": 207.65909299999998,
                    "p50": 218.637644,
                    "p95": 243.197532,
                    "p99": 243.197532,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1174.351005,
                    "min": 1111.32358,
                    "p50": 1136.572506,
                    "p95": 1174.351005,
                    "p99": 1174.351005,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 739.463115,
                    "min": 712.017642,
                    "p50": 731.624841,
                    "p95": 739.463115,
                    "p99": 739.463115,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 851.534806,
                    "min": 826.0843179999999,
                    "p50": 843.354793,
                    "p95": 851.534806,
                    "p99": 851.534806,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1322.6085289999999,
                    "min": 1262.363625,
                    "p50": 1285.336773,
                    "p95": 1322.6085289999999,
                    "p99": 1322.6085289999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1004.17067,
                    "min": 962.096765,
                    "p50": 979.0057469999999,
                    "p95": 1004.17067,
                    "p99": 1004.17067,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 484.557118,
                    "min": 464.416767,
                    "p50": 469.03819999999996,
                    "p95": 484.557118,
                    "p99": 484.557118,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1383.7071839999999,
                    "min": 1339.2937259999999,
                    "p50": 1367.6905,
                    "p95": 1383.7071839999999,
                    "p99": 1383.7071839999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 813.6948739999999,
                    "min": 775.14681,
                    "p50": 783.485956,
                    "p95": 813.6948739999999,
                    "p99": 813.6948739999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1090.917743,
                    "min": 1071.77009,
                    "p50": 1088.651075,
                    "p95": 1090.917743,
                    "p99": 1090.917743,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1176.311859,
                    "min": 1140.861494,
                    "p50": 1166.342438,
                    "p95": 1176.311859,
                    "p99": 1176.311859,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1562.172538,
                    "min": 1517.662122,
                    "p50": 1536.140348,
                    "p95": 1562.172538,
                    "p99": 1562.172538,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 881.601682,
                    "min": 851.855299,
                    "p50": 860.1008009999999,
                    "p95": 881.601682,
                    "p99": 881.601682,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 495.41486499999996,
                    "min": 469.112897,
                    "p50": 474.487416,
                    "p95": 495.41486499999996,
                    "p99": 495.41486499999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 662.1601029999999,
                    "min": 630.155671,
                    "p50": 636.131939,
                    "p95": 662.1601029999999,
                    "p99": 662.1601029999999,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1030.860664,
                    "min": 1001.2996959999999,
                    "p50": 1011.5800889999999,
                    "p95": 1030.860664,
                    "p99": 1030.860664,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 960.188897,
                    "min": 933.6245319999999,
                    "p50": 942.07818,
                    "p95": 960.188897,
                    "p99": 960.188897,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2323.599855,
                    "min": 2270.630959,
                    "p50": 2290.890489,
                    "p95": 2323.599855,
                    "p99": 2323.599855,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 576.343668,
                    "min": 547.123083,
                    "p50": 559.313132,
                    "p95": 576.343668,
                    "p99": 576.343668,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.33203399999996,
                    "min": 249.993854,
                    "p50": 255.736429,
                    "p95": 257.33203399999996,
                    "p99": 257.33203399999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 425.061698,
                    "min": 398.468999,
                    "p50": 406.368633,
                    "p95": 425.061698,
                    "p99": 425.061698,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 727.128263,
                    "min": 699.5631649999999,
                    "p50": 711.140634,
                    "p95": 727.128263,
                    "p99": 727.128263,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 358.756106,
                    "min": 321.029947,
                    "p50": 329.48783199999997,
                    "p95": 358.756106,
                    "p99": 358.756106,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1278.4603399999999,
                    "min": 1255.014322,
                    "p50": 1265.224809,
                    "p95": 1278.4603399999999,
                    "p99": 1278.4603399999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 637.12405,
                    "min": 601.240381,
                    "p50": 614.537886,
                    "p95": 637.12405,
                    "p99": 637.12405,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 312.142404,
                    "min": 273.87026099999997,
                    "p50": 275.17114799999996,
                    "p95": 312.142404,
                    "p99": 312.142404,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 363.252484,
                    "min": 347.63944,
                    "p50": 352.21678299999996,
                    "p95": 363.252484,
                    "p99": 363.252484,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 874.9857139999999,
                    "min": 842.918318,
                    "p50": 856.5344759999999,
                    "p95": 874.9857139999999,
                    "p99": 874.9857139999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 568.2945109999999,
                    "min": 517.7699739999999,
                    "p50": 525.204176,
                    "p95": 568.2945109999999,
                    "p99": 568.2945109999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1713.833596,
                    "min": 1671.781937,
                    "p50": 1685.090633,
                    "p95": 1713.833596,
                    "p99": 1713.833596,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 472.895791,
                    "min": 428.52487199999996,
                    "p50": 444.431815,
                    "p95": 472.895791,
                    "p99": 472.895791,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 943.7443489999999,
                    "min": 921.1122799999999,
                    "p50": 933.55417,
                    "p95": 943.7443489999999,
                    "p99": 943.7443489999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 695.14694,
                    "min": 674.020853,
                    "p50": 688.822608,
                    "p95": 695.14694,
                    "p99": 695.14694,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1040.5891159999999,
                    "min": 1012.104333,
                    "p50": 1023.131394,
                    "p95": 1040.5891159999999,
                    "p99": 1040.5891159999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1127.0713309999999,
                    "min": 1092.146569,
                    "p50": 1100.658727,
                    "p95": 1127.0713309999999,
                    "p99": 1127.0713309999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1486.3447569999998,
                    "min": 1456.0543049999999,
                    "p50": 1480.6260579999998,
                    "p95": 1486.3447569999998,
                    "p99": 1486.3447569999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1191.303926,
                    "min": 1170.0566019999999,
                    "p50": 1185.385618,
                    "p95": 1191.303926,
                    "p99": 1191.303926,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 778.4656699999999,
                    "min": 758.473788,
                    "p50": 767.2382339999999,
                    "p95": 778.4656699999999,
                    "p99": 778.4656699999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 307.20241599999997,
                    "min": 273.64640299999996,
                    "p50": 292.067482,
                    "p95": 307.20241599999997,
                    "p99": 307.20241599999997,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1001.8994849999999,
                    "min": 968.600413,
                    "p50": 974.023056,
                    "p95": 1001.8994849999999,
                    "p99": 1001.8994849999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 739.448503,
                    "min": 709.687016,
                    "p50": 721.5177209999999,
                    "p95": 739.448503,
                    "p99": 739.448503,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 603.413725,
                    "min": 582.967626,
                    "p50": 596.367406,
                    "p95": 603.413725,
                    "p99": 603.413725,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 430.356672,
                    "min": 403.09617399999996,
                    "p50": 408.02396799999997,
                    "p95": 430.356672,
                    "p99": 430.356672,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 238.87231599999998,
                    "min": 209.93421999999998,
                    "p50": 216.199956,
                    "p95": 238.87231599999998,
                    "p99": 238.87231599999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 354.320907,
                    "min": 332.229103,
                    "p50": 345.33838299999996,
                    "p95": 354.320907,
                    "p99": 354.320907,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 928.7096369999999,
                    "min": 894.0410089999999,
                    "p50": 923.064036,
                    "p95": 928.7096369999999,
                    "p99": 928.7096369999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1348.299646,
                    "min": 1119.985656,
                    "p50": 1132.227614,
                    "p95": 1348.299646,
                    "p99": 1348.299646,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 483.447974,
                    "min": 458.05100899999996,
                    "p50": 468.88280599999996,
                    "p95": 483.447974,
                    "p99": 483.447974,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 687.04363,
                    "min": 650.936465,
                    "p50": 661.452727,
                    "p95": 687.04363,
                    "p99": 687.04363,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1293.283801,
                    "min": 1275.5876409999998,
                    "p50": 1282.475317,
                    "p95": 1293.283801,
                    "p99": 1293.283801,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 799.6056289999999,
                    "min": 770.542167,
                    "p50": 781.863601,
                    "p95": 799.6056289999999,
                    "p99": 799.6056289999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 550.0185809999999,
                    "min": 523.380876,
                    "p50": 530.585951,
                    "p95": 550.0185809999999,
                    "p99": 550.0185809999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 918.8144589999999,
                    "min": 839.8416259999999,
                    "p50": 845.3577769999999,
                    "p95": 918.8144589999999,
                    "p99": 918.8144589999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2373.468186,
                    "min": 2298.052905,
                    "p50": 2330.860243,
                    "p95": 2373.468186,
                    "p99": 2373.468186,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1267.5473339999999,
                    "min": 1243.524328,
                    "p50": 1262.1824769999998,
                    "p95": 1267.5473339999999,
                    "p99": 1267.5473339999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1583.621195,
                    "min": 1554.3027399999999,
                    "p50": 1562.129639,
                    "p95": 1583.621195,
                    "p99": 1583.621195,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1730.760681,
                    "min": 1687.163953,
                    "p50": 1713.694557,
                    "p95": 1730.760681,
                    "p99": 1730.760681,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2194.897944,
                    "min": 2155.398885,
                    "p50": 2173.62614,
                    "p95": 2194.897944,
                    "p99": 2194.897944,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2060.263227,
                    "min": 2008.049791,
                    "p50": 2021.484959,
                    "p95": 2060.263227,
                    "p99": 2060.263227,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 674.6611919999999,
                    "min": 628.3210779999999,
                    "p50": 651.45121,
                    "p95": 674.6611919999999,
                    "p99": 674.6611919999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1438.8255749999998,
                    "min": 1384.465221,
                    "p50": 1410.0632839999998,
                    "p95": 1438.8255749999998,
                    "p99": 1438.8255749999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1885.577126,
                    "min": 1851.275549,
                    "p50": 1875.971314,
                    "p95": 1885.577126,
                    "p99": 1885.577126,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2731.329817,
                    "min": 2701.627729,
                    "p50": 2715.6625919999997,
                    "p95": 2731.329817,
                    "p99": 2731.329817,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 806.2779489999999,
                    "min": 785.444576,
                    "p50": 792.111951,
                    "p95": 806.2779489999999,
                    "p99": 806.2779489999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1127.575357,
                    "min": 1088.299393,
                    "p50": 1106.5967229999999,
                    "p95": 1127.575357,
                    "p99": 1127.575357,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 506.17529099999996,
                    "min": 482.485569,
                    "p50": 491.40475499999997,
                    "p95": 506.17529099999996,
                    "p99": 506.17529099999996,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 960.507494,
                    "min": 944.802927,
                    "p50": 956.893435,
                    "p95": 960.507494,
                    "p99": 960.507494,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3145.670295,
                    "min": 3064.072671,
                    "p50": 3082.529749,
                    "p95": 3145.670295,
                    "p99": 3145.670295,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3059.23964,
                    "min": 3022.816825,
                    "p50": 3039.06054,
                    "p95": 3059.23964,
                    "p99": 3059.23964,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2154.7077529999997,
                    "min": 2121.427063,
                    "p50": 2134.859973,
                    "p95": 2154.7077529999997,
                    "p99": 2154.7077529999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1856.709371,
                    "min": 1810.38095,
                    "p50": 1832.1581489999999,
                    "p95": 1856.709371,
                    "p99": 1856.709371,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1415.0084709999999,
                    "min": 1366.722841,
                    "p50": 1394.007656,
                    "p95": 1415.0084709999999,
                    "p99": 1415.0084709999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1249.2974689999999,
                    "min": 1223.189441,
                    "p50": 1233.379756,
                    "p95": 1249.2974689999999,
                    "p99": 1249.2974689999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 951.195738,
                    "min": 923.404197,
                    "p50": 930.3768719999999,
                    "p95": 951.195738,
                    "p99": 951.195738,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1989.3108209999998,
                    "min": 1957.4184269999998,
                    "p50": 1983.5621429999999,
                    "p95": 1989.3108209999998,
                    "p99": 1989.3108209999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 651.0295659999999,
                    "min": 618.5770719999999,
                    "p50": 637.575982,
                    "p95": 651.0295659999999,
                    "p99": 651.0295659999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1699.9219739999999,
                    "min": 1670.2619579999998,
                    "p50": 1680.4061749999998,
                    "p95": 1699.9219739999999,
                    "p99": 1699.9219739999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 788.8477909999999,
                    "min": 767.52378,
                    "p50": 779.1029709999999,
                    "p95": 788.8477909999999,
                    "p99": 788.8477909999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2681.961496,
                    "min": 2622.785743,
                    "p50": 2658.2659639999997,
                    "p95": 2681.961496,
                    "p99": 2681.961496,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 491.467944,
                    "min": 472.63289499999996,
                    "p50": 476.209145,
                    "p95": 491.467944,
                    "p99": 491.467944,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1103.209544,
                    "min": 1065.018669,
                    "p50": 1087.726179,
                    "p95": 1103.209544,
                    "p99": 1103.209544,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2329.3090979999997,
                    "min": 2267.832212,
                    "p50": 2300.926989,
                    "p95": 2329.3090979999997,
                    "p99": 2329.3090979999997,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1580.038003,
                    "min": 1520.059462,
                    "p50": 1536.0766139999998,
                    "p95": 1580.038003,
                    "p99": 1580.038003,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1633.944346,
                    "min": 1598.8820409999998,
                    "p50": 1609.41384,
                    "p95": 1633.944346,
                    "p99": 1633.944346,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 912.435024,
                    "min": 876.717939,
                    "p50": 885.610913,
                    "p95": 912.435024,
                    "p99": 912.435024,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 770.7013539999999,
                    "min": 736.080508,
                    "p50": 748.700348,
                    "p95": 770.7013539999999,
                    "p99": 770.7013539999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1488.9337429999998,
                    "min": 1444.208075,
                    "p50": 1474.415972,
                    "p95": 1488.9337429999998,
                    "p99": 1488.9337429999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2924.16417,
                    "min": 2856.262328,
                    "p50": 2881.550667,
                    "p95": 2924.16417,
                    "p99": 2924.16417,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 629.457265,
                    "min": 597.039373,
                    "p50": 610.506255,
                    "p95": 629.457265,
                    "p99": 629.457265,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1045.28639,
                    "min": 1021.5216539999999,
                    "p50": 1038.753618,
                    "p95": 1045.28639,
                    "p99": 1045.28639,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 465.615416,
                    "min": 450.84265899999997,
                    "p50": 457.37073999999996,
                    "p95": 465.615416,
                    "p99": 465.615416,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2192.0570399999997,
                    "min": 2165.907511,
                    "p50": 2172.1609909999997,
                    "p95": 2192.0570399999997,
                    "p99": 2192.0570399999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2062.747086,
                    "min": 2005.135049,
                    "p50": 2041.101718,
                    "p95": 2062.747086,
                    "p99": 2062.747086,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1771.870496,
                    "min": 1726.533432,
                    "p50": 1756.926669,
                    "p95": 1771.870496,
                    "p99": 1771.870496,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1908.38935,
                    "min": 1862.368884,
                    "p50": 1890.270035,
                    "p95": 1908.38935,
                    "p99": 1908.38935,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1318.665383,
                    "min": 1304.771704,
                    "p50": 1316.6724179999999,
                    "p95": 1318.665383,
                    "p99": 1318.665383,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2567.261548,
                    "min": 2504.179468,
                    "p50": 2528.934819,
                    "p95": 2567.261548,
                    "p99": 2567.261548,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1178.301164,
                    "min": 1156.042126,
                    "p50": 1177.789391,
                    "p95": 1178.301164,
                    "p99": 1178.301164,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 999.9251569999999,
                    "min": 927.725545,
                    "p50": 953.9813839999999,
                    "p95": 999.9251569999999,
                    "p99": 999.9251569999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 744.544084,
                    "min": 513.637467,
                    "p50": 539.965753,
                    "p95": 744.544084,
                    "p99": 744.544084,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1103.786902,
                    "min": 1079.600944,
                    "p50": 1091.30812,
                    "p95": 1103.786902,
                    "p99": 1103.786902,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1304.3313899999998,
                    "min": 1254.418467,
                    "p50": 1281.712831,
                    "p95": 1304.3313899999998,
                    "p99": 1304.3313899999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 249.973064,
                    "min": 230.080292,
                    "p50": 237.85657799999998,
                    "p95": 249.973064,
                    "p99": 249.973064,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 898.250501,
                    "min": 871.768838,
                    "p50": 883.4047419999999,
                    "p95": 898.250501,
                    "p99": 898.250501,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 488.618906,
                    "min": 441.84878599999996,
                    "p50": 453.41429,
                    "p95": 488.618906,
                    "p99": 488.618906,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 325.420796,
                    "min": 300.767533,
                    "p50": 306.108438,
                    "p95": 325.420796,
                    "p99": 325.420796,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2403.9332,
                    "min": 2134.3582819999997,
                    "p50": 2153.925899,
                    "p95": 2403.9332,
                    "p99": 2403.9332,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 693.060395,
                    "min": 653.827805,
                    "p50": 677.115193,
                    "p95": 693.060395,
                    "p99": 693.060395,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 839.555919,
                    "min": 795.928181,
                    "p50": 808.902475,
                    "p95": 839.555919,
                    "p99": 839.555919,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1037.5581459999999,
                    "min": 1003.9723779999999,
                    "p50": 1017.313817,
                    "p95": 1037.5581459999999,
                    "p99": 1037.5581459999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 393.534421,
                    "min": 371.70874599999996,
                    "p50": 384.198112,
                    "p95": 393.534421,
                    "p99": 393.534421,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3625.3905999999997,
                    "min": 3532.3964659999997,
                    "p50": 3578.200857,
                    "p95": 3625.3905999999997,
                    "p99": 3625.3905999999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1469.158119,
                    "min": 1421.155127,
                    "p50": 1456.233732,
                    "p95": 1469.158119,
                    "p99": 1469.158119,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 780.536601,
                    "min": 725.490645,
                    "p50": 743.773319,
                    "p95": 780.536601,
                    "p99": 780.536601,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 612.78512,
                    "min": 587.709332,
                    "p50": 601.3697599999999,
                    "p95": 612.78512,
                    "p99": 612.78512,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3041.615524,
                    "min": 2827.1348559999997,
                    "p50": 2859.313713,
                    "p95": 3041.615524,
                    "p99": 3041.615524,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1305.15554,
                    "min": 1267.5129769999999,
                    "p50": 1284.4335099999998,
                    "p95": 1305.15554,
                    "p99": 1305.15554,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 445.11355699999996,
                    "min": 395.763584,
                    "p50": 405.774206,
                    "p95": 445.11355699999996,
                    "p99": 445.11355699999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 856.43084,
                    "min": 833.305429,
                    "p50": 846.948316,
                    "p95": 856.43084,
                    "p99": 856.43084,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 619.345415,
                    "min": 583.152621,
                    "p50": 610.574879,
                    "p95": 619.345415,
                    "p99": 619.345415,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 662.765455,
                    "min": 645.1178249999999,
                    "p50": 657.3108589999999,
                    "p95": 662.765455,
                    "p99": 662.765455,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 235.480157,
                    "min": 205.680092,
                    "p50": 222.264984,
                    "p95": 235.480157,
                    "p99": 235.480157,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 741.846669,
                    "min": 703.8704,
                    "p50": 715.0718109999999,
                    "p95": 741.846669,
                    "p99": 741.846669,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 358.618582,
                    "min": 332.877213,
                    "p50": 340.131709,
                    "p95": 358.618582,
                    "p99": 358.618582,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 931.397971,
                    "min": 893.498127,
                    "p50": 903.9463949999999,
                    "p95": 931.397971,
                    "p99": 931.397971,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 543.852755,
                    "min": 521.575422,
                    "p50": 528.420994,
                    "p95": 543.852755,
                    "p99": 543.852755,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1136.424381,
                    "min": 1111.268446,
                    "p50": 1119.476756,
                    "p95": 1136.424381,
                    "p99": 1136.424381,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 808.7362039999999,
                    "min": 764.504236,
                    "p50": 782.626163,
                    "p95": 808.7362039999999,
                    "p99": 808.7362039999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 482.195611,
                    "min": 457.39446699999996,
                    "p50": 468.71612899999997,
                    "p95": 482.195611,
                    "p99": 482.195611,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 303.602962,
                    "min": 268.662822,
                    "p50": 284.631367,
                    "p95": 303.602962,
                    "p99": 303.602962,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 994.3218919999999,
                    "min": 956.885451,
                    "p50": 969.2380989999999,
                    "p95": 994.3218919999999,
                    "p99": 994.3218919999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1924.5748549999998,
                    "min": 1883.620265,
                    "p50": 1902.808002,
                    "p95": 1924.5748549999998,
                    "p99": 1924.5748549999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 600.965827,
                    "min": 568.64729,
                    "p50": 585.870654,
                    "p95": 600.965827,
                    "p99": 600.965827,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 661.806793,
                    "min": 634.034896,
                    "p50": 645.01005,
                    "p95": 661.806793,
                    "p99": 661.806793,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 347.80886599999997,
                    "min": 325.722941,
                    "p50": 341.42893499999997,
                    "p95": 347.80886599999997,
                    "p99": 347.80886599999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 527.945651,
                    "min": 511.62152199999997,
                    "p50": 522.5767979999999,
                    "p95": 527.945651,
                    "p99": 527.945651,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 921.302817,
                    "min": 881.7420229999999,
                    "p50": 894.330423,
                    "p95": 921.302817,
                    "p99": 921.302817,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 215.845046,
                    "min": 204.37901399999998,
                    "p50": 212.92143299999998,
                    "p95": 215.845046,
                    "p99": 215.845046,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1903.0943909999999,
                    "min": 1848.64309,
                    "p50": 1882.553101,
                    "p95": 1903.0943909999999,
                    "p99": 1903.0943909999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 721.0920619999999,
                    "min": 703.318633,
                    "p50": 715.9410389999999,
                    "p95": 721.0920619999999,
                    "p99": 721.0920619999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 832.5795939999999,
                    "min": 821.2608749999999,
                    "p50": 826.990459,
                    "p95": 832.5795939999999,
                    "p99": 832.5795939999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 411.79177899999996,
                    "min": 390.591868,
                    "p50": 398.820084,
                    "p95": 411.79177899999996,
                    "p99": 411.79177899999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1132.814023,
                    "min": 1082.677802,
                    "p50": 1107.26272,
                    "p95": 1132.814023,
                    "p99": 1132.814023,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 784.868664,
                    "min": 757.465011,
                    "p50": 778.48052,
                    "p95": 784.868664,
                    "p99": 784.868664,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 477.72632999999996,
                    "min": 451.226674,
                    "p50": 466.450673,
                    "p95": 477.72632999999996,
                    "p99": 477.72632999999996,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2519.349721,
                    "min": 2475.373502,
                    "p50": 2494.2831349999997,
                    "p95": 2519.349721,
                    "p99": 2519.349721,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 293.991762,
                    "min": 263.330634,
                    "p50": 277.870051,
                    "p95": 293.991762,
                    "p99": 293.991762,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 967.327423,
                    "min": 937.698844,
                    "p50": 951.2009109999999,
                    "p95": 967.327423,
                    "p99": 967.327423,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1286.343263,
                    "min": 1247.075458,
                    "p50": 1263.247175,
                    "p95": 1286.343263,
                    "p99": 1286.343263,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "besu": {
            "name": "besu",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1818.128923,
                    "min": 1733.480159,
                    "p50": 1794.4942629999998,
                    "p95": 1818.128923,
                    "p99": 1818.128923,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1303.971177,
                    "min": 1163.053834,
                    "p50": 1296.5322449999999,
                    "p95": 1303.971177,
                    "p99": 1303.971177,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1863.496518,
                    "min": 1833.685315,
                    "p50": 1844.0711629999998,
                    "p95": 1863.496518,
                    "p99": 1863.496518,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1602.4122949999999,
                    "min": 1566.2125099999998,
                    "p50": 1583.347534,
                    "p95": 1602.4122949999999,
                    "p99": 1602.4122949999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1241.662235,
                    "min": 1208.409805,
                    "p50": 1225.227214,
                    "p95": 1241.662235,
                    "p99": 1241.662235,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1501.778795,
                    "min": 1443.217525,
                    "p50": 1474.579726,
                    "p95": 1501.778795,
                    "p99": 1501.778795,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1723.747158,
                    "min": 1676.7977409999999,
                    "p50": 1707.382287,
                    "p95": 1723.747158,
                    "p99": 1723.747158,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 400.05803699999996,
                    "min": 378.309284,
                    "p50": 397.262232,
                    "p95": 400.05803699999996,
                    "p99": 400.05803699999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 524.114478,
                    "min": 500.531073,
                    "p50": 511.121543,
                    "p95": 524.114478,
                    "p99": 524.114478,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 646.1603289999999,
                    "min": 624.6447549999999,
                    "p50": 638.279916,
                    "p95": 646.1603289999999,
                    "p99": 646.1603289999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2431.156355,
                    "min": 2370.6041769999997,
                    "p50": 2419.582488,
                    "p95": 2431.156355,
                    "p99": 2431.156355,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 756.262035,
                    "min": 730.363359,
                    "p50": 749.520975,
                    "p95": 756.262035,
                    "p99": 756.262035,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2365.467548,
                    "min": 2110.941851,
                    "p50": 2270.117417,
                    "p95": 2365.467548,
                    "p99": 2365.467548,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1077.53323,
                    "min": 980.6912659999999,
                    "p50": 1031.800006,
                    "p95": 1077.53323,
                    "p99": 1077.53323,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 928.4437899999999,
                    "min": 853.386851,
                    "p50": 872.765189,
                    "p95": 928.4437899999999,
                    "p99": 928.4437899999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 601.844382,
                    "min": 429.431044,
                    "p50": 450.447935,
                    "p95": 601.844382,
                    "p99": 601.844382,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 455.764789,
                    "min": 424.696708,
                    "p50": 453.205446,
                    "p95": 455.764789,
                    "p99": 455.764789,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 671.5214189999999,
                    "min": 492.175533,
                    "p50": 534.376354,
                    "p95": 671.5214189999999,
                    "p99": 671.5214189999999,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 142.781626,
                    "min": 108.46830899999999,
                    "p50": 122.132933,
                    "p95": 142.781626,
                    "p99": 142.781626,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 204.95519,
                    "min": 176.588132,
                    "p50": 196.58739699999998,
                    "p95": 204.95519,
                    "p99": 204.95519,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 331.163776,
                    "min": 312.848077,
                    "p50": 322.413914,
                    "p95": 331.163776,
                    "p99": 331.163776,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 107.749465,
                    "min": 85.949392,
                    "p50": 100.81613899999999,
                    "p95": 107.749465,
                    "p99": 107.749465,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 161.99937799999998,
                    "min": 138.808097,
                    "p50": 147.814158,
                    "p95": 161.99937799999998,
                    "p99": 161.99937799999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 176.382827,
                    "min": 153.877953,
                    "p50": 164.66045699999998,
                    "p95": 176.382827,
                    "p99": 176.382827,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 817.65922,
                    "min": 762.4655339999999,
                    "p50": 808.9690099999999,
                    "p95": 817.65922,
                    "p99": 817.65922,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1087.65885,
                    "min": 939.618988,
                    "p50": 958.707318,
                    "p95": 1087.65885,
                    "p99": 1087.65885,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 252.29102999999998,
                    "min": 208.407481,
                    "p50": 215.409688,
                    "p95": 252.29102999999998,
                    "p99": 252.29102999999998,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3537.1645009999997,
                    "min": 3351.70991,
                    "p50": 3396.037055,
                    "p95": 3537.1645009999997,
                    "p99": 3537.1645009999997,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 105.824007,
                    "min": 80.01858299999999,
                    "p50": 91.394121,
                    "p95": 105.824007,
                    "p99": 105.824007,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 162.083542,
                    "min": 138.296212,
                    "p50": 147.010761,
                    "p95": 162.083542,
                    "p99": 162.083542,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1034.525961,
                    "min": 948.322099,
                    "p50": 983.35839,
                    "p95": 1034.525961,
                    "p99": 1034.525961,
                    "n": 8,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 875.2547969999999,
                    "min": 822.089523,
                    "p50": 863.674769,
                    "p95": 875.2547969999999,
                    "p99": 875.2547969999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 742.995507,
                    "min": 678.783061,
                    "p50": 688.48847,
                    "p95": 742.995507,
                    "p99": 742.995507,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 809.7291839999999,
                    "min": 755.571813,
                    "p50": 760.3883079999999,
                    "p95": 809.7291839999999,
                    "p99": 809.7291839999999,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 407.54196099999996,
                    "min": 384.461395,
                    "p50": 400.77946099999997,
                    "p95": 407.54196099999996,
                    "p99": 407.54196099999996,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2388.597672,
                    "min": 2150.250788,
                    "p50": 2203.998933,
                    "p95": 2388.597672,
                    "p99": 2388.597672,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1382.360004,
                    "min": 1286.085609,
                    "p50": 1295.239365,
                    "p95": 1382.360004,
                    "p99": 1382.360004,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1036.970621,
                    "min": 953.1765909999999,
                    "p50": 973.6046739999999,
                    "p95": 1036.970621,
                    "p99": 1036.970621,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 960.170811,
                    "min": 895.739686,
                    "p50": 902.211105,
                    "p95": 960.170811,
                    "p99": 960.170811,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 562.775592,
                    "min": 505.79650699999996,
                    "p50": 543.318951,
                    "p95": 562.775592,
                    "p99": 562.775592,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1581.818427,
                    "min": 1437.575405,
                    "p50": 1476.886605,
                    "p95": 1581.818427,
                    "p99": 1581.818427,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 272.72983999999997,
                    "min": 242.42520299999998,
                    "p50": 252.455595,
                    "p95": 272.72983999999997,
                    "p99": 272.72983999999997,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1159.335282,
                    "min": 1102.753908,
                    "p50": 1115.347417,
                    "p95": 1159.335282,
                    "p99": 1159.335282,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 676.442374,
                    "min": 608.2294549999999,
                    "p50": 615.4373979999999,
                    "p95": 676.442374,
                    "p99": 676.442374,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 521.962359,
                    "min": 439.888609,
                    "p50": 470.84120099999996,
                    "p95": 521.962359,
                    "p99": 521.962359,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 377.065359,
                    "min": 316.86670699999996,
                    "p50": 327.85920999999996,
                    "p95": 377.065359,
                    "p99": 377.065359,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1076.983076,
                    "min": 1018.962011,
                    "p50": 1045.209203,
                    "p95": 1076.983076,
                    "p99": 1076.983076,
                    "n": 8,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2550.882596,
                    "min": 2023.512869,
                    "p50": 2497.436616,
                    "p95": 2550.882596,
                    "p99": 2550.882596,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 458.296522,
                    "min": 370.002903,
                    "p50": 445.800254,
                    "p95": 458.296522,
                    "p99": 458.296522,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1722.024657,
                    "min": 1396.948647,
                    "p50": 1697.769996,
                    "p95": 1722.024657,
                    "p99": 1722.024657,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1885.5403179999998,
                    "min": 1514.378451,
                    "p50": 1833.86602,
                    "p95": 1885.5403179999998,
                    "p99": 1885.5403179999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 612.7516069999999,
                    "min": 472.043621,
                    "p50": 597.561916,
                    "p95": 612.7516069999999,
                    "p99": 612.7516069999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1596.3011999999999,
                    "min": 1264.7270449999999,
                    "p50": 1562.052179,
                    "p95": 1596.3011999999999,
                    "p99": 1596.3011999999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2169.814853,
                    "min": 1721.682047,
                    "p50": 2118.910885,
                    "p95": 2169.814853,
                    "p99": 2169.814853,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 899.640685,
                    "min": 713.1845099999999,
                    "p50": 877.382041,
                    "p95": 899.640685,
                    "p99": 899.640685,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1298.9362159999998,
                    "min": 1047.220818,
                    "p50": 1284.4977629999998,
                    "p95": 1298.9362159999998,
                    "p99": 1298.9362159999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1169.402944,
                    "min": 940.2448919999999,
                    "p50": 1146.569053,
                    "p95": 1169.402944,
                    "p99": 1169.402944,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2871.5324269999996,
                    "min": 2297.51037,
                    "p50": 2815.1261839999997,
                    "p95": 2871.5324269999996,
                    "p99": 2871.5324269999996,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1458.962851,
                    "min": 1153.848164,
                    "p50": 1422.231558,
                    "p95": 1458.962851,
                    "p99": 1458.962851,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1024.5180169999999,
                    "min": 825.986536,
                    "p50": 1015.285181,
                    "p95": 1024.5180169999999,
                    "p99": 1024.5180169999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 743.248108,
                    "min": 603.810696,
                    "p50": 729.009186,
                    "p95": 743.248108,
                    "p99": 743.248108,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2011.9199219999998,
                    "min": 1623.4847599999998,
                    "p50": 1976.0946079999999,
                    "p95": 2011.9199219999998,
                    "p99": 2011.9199219999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 122.041478,
                    "min": 101.05662799999999,
                    "p50": 115.27698699999999,
                    "p95": 122.041478,
                    "p99": 122.041478,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 45.127112,
                    "min": 28.177509999999998,
                    "p50": 40.698882999999995,
                    "p95": 45.127112,
                    "p99": 45.127112,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 229.53510899999998,
                    "min": 198.931927,
                    "p50": 212.728792,
                    "p95": 229.53510899999998,
                    "p99": 229.53510899999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 493.972835,
                    "min": 467.16186799999997,
                    "p50": 474.692486,
                    "p95": 493.972835,
                    "p99": 493.972835,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 57.870444,
                    "min": 49.440334,
                    "p50": 53.801642,
                    "p95": 57.870444,
                    "p99": 57.870444,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 56.314282,
                    "min": 47.780967999999994,
                    "p50": 51.265336,
                    "p95": 56.314282,
                    "p99": 56.314282,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 220.10527,
                    "min": 164.60307,
                    "p50": 175.94511799999998,
                    "p95": 220.10527,
                    "p99": 220.10527,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 62.473721,
                    "min": 35.496639,
                    "p50": 43.269846,
                    "p95": 62.473721,
                    "p99": 62.473721,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 56.012184,
                    "min": 26.914935,
                    "p50": 29.870036,
                    "p95": 56.012184,
                    "p99": 56.012184,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 88.331071,
                    "min": 64.335131,
                    "p50": 76.765958,
                    "p95": 88.331071,
                    "p99": 88.331071,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 152.00779,
                    "min": 127.960999,
                    "p50": 128.732079,
                    "p95": 152.00779,
                    "p99": 152.00779,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.285397,
                    "min": 24.848494,
                    "p50": 27.054266,
                    "p95": 27.285397,
                    "p99": 27.285397,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 75.2834,
                    "min": 48.565774999999995,
                    "p50": 55.308066999999994,
                    "p95": 75.2834,
                    "p99": 75.2834,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 102.26872499999999,
                    "min": 62.779115999999995,
                    "p50": 66.126931,
                    "p95": 102.26872499999999,
                    "p99": 102.26872499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 53.699692,
                    "min": 41.304769,
                    "p50": 50.991588,
                    "p95": 53.699692,
                    "p99": 53.699692,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 76.31376399999999,
                    "min": 35.853598999999996,
                    "p50": 53.802707999999996,
                    "p95": 76.31376399999999,
                    "p99": 76.31376399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 124.51688899999999,
                    "min": 56.290946,
                    "p50": 58.333524999999995,
                    "p95": 124.51688899999999,
                    "p99": 124.51688899999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 57.489391,
                    "min": 43.895126,
                    "p50": 55.457446,
                    "p95": 57.489391,
                    "p99": 57.489391,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 60.122845999999996,
                    "min": 49.010098,
                    "p50": 55.404061999999996,
                    "p95": 60.122845999999996,
                    "p99": 60.122845999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 382.92168899999996,
                    "min": 354.19104999999996,
                    "p50": 367.219498,
                    "p95": 382.92168899999996,
                    "p99": 382.92168899999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 220.58218599999998,
                    "min": 166.232787,
                    "p50": 203.937804,
                    "p95": 220.58218599999998,
                    "p99": 220.58218599999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 606.4263209999999,
                    "min": 533.744476,
                    "p50": 560.623296,
                    "p95": 606.4263209999999,
                    "p99": 606.4263209999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 367.530983,
                    "min": 235.80932299999998,
                    "p50": 316.26572799999997,
                    "p95": 367.530983,
                    "p99": 367.530983,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 524.330933,
                    "min": 368.506217,
                    "p50": 459.084386,
                    "p95": 524.330933,
                    "p99": 524.330933,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2279.5017629999998,
                    "min": 1910.5728179999999,
                    "p50": 2057.1465789999997,
                    "p95": 2279.5017629999998,
                    "p99": 2279.5017629999998,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 472.490937,
                    "min": 374.79511099999996,
                    "p50": 440.76505299999997,
                    "p95": 472.490937,
                    "p99": 472.490937,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 622.447828,
                    "min": 444.84391999999997,
                    "p50": 551.183757,
                    "p95": 622.447828,
                    "p99": 622.447828,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 741.259417,
                    "min": 650.841985,
                    "p50": 691.4269889999999,
                    "p95": 741.259417,
                    "p99": 741.259417,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 373.57260099999996,
                    "min": 290.680245,
                    "p50": 363.29578799999996,
                    "p95": 373.57260099999996,
                    "p99": 373.57260099999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1662.260728,
                    "min": 1390.7431159999999,
                    "p50": 1612.788667,
                    "p95": 1662.260728,
                    "p99": 1662.260728,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 393.363064,
                    "min": 264.291925,
                    "p50": 285.32363799999996,
                    "p95": 393.363064,
                    "p99": 393.363064,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 501.15401599999996,
                    "min": 438.298234,
                    "p50": 466.478813,
                    "p95": 501.15401599999996,
                    "p99": 501.15401599999996,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1233.583642,
                    "min": 1057.015228,
                    "p50": 1149.16646,
                    "p95": 1233.583642,
                    "p99": 1233.583642,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 254.602013,
                    "min": 160.187819,
                    "p50": 176.81627899999998,
                    "p95": 254.602013,
                    "p99": 254.602013,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4208.829423,
                    "min": 3819.1747349999996,
                    "p50": 4052.6140459999997,
                    "p95": 4208.829423,
                    "p99": 4208.829423,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 186.379675,
                    "min": 135.680914,
                    "p50": 146.203652,
                    "p95": 186.379675,
                    "p99": 186.379675,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 653.1867659999999,
                    "min": 550.456742,
                    "p50": 621.54176,
                    "p95": 653.1867659999999,
                    "p99": 653.1867659999999,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 983.663947,
                    "min": 681.265264,
                    "p50": 791.1991089999999,
                    "p95": 983.663947,
                    "p99": 983.663947,
                    "n": 8,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 70.884445,
                    "min": 55.620905,
                    "p50": 66.825251,
                    "p95": 70.884445,
                    "p99": 70.884445,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 93.960167,
                    "min": 77.290167,
                    "p50": 81.032844,
                    "p95": 93.960167,
                    "p99": 93.960167,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 55.911227999999994,
                    "min": 42.793803,
                    "p50": 50.449867,
                    "p95": 55.911227999999994,
                    "p99": 55.911227999999994,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 83.73895,
                    "min": 60.783933999999995,
                    "p50": 68.832118,
                    "p95": 83.73895,
                    "p99": 83.73895,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 42.892922999999996,
                    "min": 31.806503,
                    "p50": 33.527345,
                    "p95": 42.892922999999996,
                    "p99": 42.892922999999996,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 210.136813,
                    "min": 185.69896,
                    "p50": 191.94214499999998,
                    "p95": 210.136813,
                    "p99": 210.136813,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 118.242876,
                    "min": 96.993845,
                    "p50": 106.234426,
                    "p95": 118.242876,
                    "p99": 118.242876,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 79.759318,
                    "min": 67.07536999999999,
                    "p50": 75.613948,
                    "p95": 79.759318,
                    "p99": 79.759318,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 298.377115,
                    "min": 250.078129,
                    "p50": 280.71242,
                    "p95": 298.377115,
                    "p99": 298.377115,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 62.129281,
                    "min": 55.511016999999995,
                    "p50": 59.1093,
                    "p95": 62.129281,
                    "p99": 62.129281,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 67.65061399999999,
                    "min": 39.354631,
                    "p50": 59.303238,
                    "p95": 67.65061399999999,
                    "p99": 67.65061399999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 137.33471799999998,
                    "min": 89.23914099999999,
                    "p50": 98.78974699999999,
                    "p95": 137.33471799999998,
                    "p99": 137.33471799999998,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 74.78543499999999,
                    "min": 63.318205,
                    "p50": 72.687264,
                    "p95": 74.78543499999999,
                    "p99": 74.78543499999999,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 125.547861,
                    "min": 109.870583,
                    "p50": 117.031943,
                    "p95": 125.547861,
                    "p99": 125.547861,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 535.109037,
                    "min": 489.6764,
                    "p50": 506.39403899999996,
                    "p95": 535.109037,
                    "p99": 535.109037,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 106.983719,
                    "min": 81.033352,
                    "p50": 88.629464,
                    "p95": 106.983719,
                    "p99": 106.983719,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 249.118767,
                    "min": 206.76156799999998,
                    "p50": 228.388464,
                    "p95": 249.118767,
                    "p99": 249.118767,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 185.734751,
                    "min": 105.305127,
                    "p50": 121.828105,
                    "p95": 185.734751,
                    "p99": 185.734751,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 95.69296,
                    "min": 78.45035,
                    "p50": 92.150522,
                    "p95": 95.69296,
                    "p99": 95.69296,
                    "n": 8,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 79.824711,
                    "min": 63.531625999999996,
                    "p50": 69.079734,
                    "p95": 79.824711,
                    "p99": 79.824711,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.421801,
                    "min": 24.400033,
                    "p50": 27.056903,
                    "p95": 27.421801,
                    "p99": 27.421801,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 36.90041,
                    "min": 26.4636,
                    "p50": 27.08653,
                    "p95": 36.90041,
                    "p99": 36.90041,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.535517,
                    "min": 24.87786,
                    "p50": 26.806569,
                    "p95": 27.535517,
                    "p99": 27.535517,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.026366999999997,
                    "min": 22.058231,
                    "p50": 26.650682999999997,
                    "p95": 29.026366999999997,
                    "p99": 29.026366999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 86.69550199999999,
                    "min": 25.618910999999997,
                    "p50": 27.42758,
                    "p95": 86.69550199999999,
                    "p99": 86.69550199999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.703975999999997,
                    "min": 23.009123,
                    "p50": 26.934413,
                    "p95": 27.703975999999997,
                    "p99": 27.703975999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.045164999999997,
                    "min": 19.603317,
                    "p50": 26.973022999999998,
                    "p95": 27.045164999999997,
                    "p99": 27.045164999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.4653,
                    "min": 23.328979999999998,
                    "p50": 26.718042,
                    "p95": 27.4653,
                    "p99": 27.4653,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 47.410551999999996,
                    "min": 27.306642999999998,
                    "p50": 41.908651,
                    "p95": 47.410551999999996,
                    "p99": 47.410551999999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.566449,
                    "min": 24.042904999999998,
                    "p50": 26.989611999999997,
                    "p95": 27.566449,
                    "p99": 27.566449,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 35.668734,
                    "min": 26.638733,
                    "p50": 32.468381,
                    "p95": 35.668734,
                    "p99": 35.668734,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.566927999999997,
                    "min": 25.583741999999997,
                    "p50": 26.647277,
                    "p95": 27.566927999999997,
                    "p99": 27.566927999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 27.684614,
                    "min": 25.122436,
                    "p50": 26.649874999999998,
                    "p95": 27.684614,
                    "p99": 27.684614,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.960258999999997,
                    "min": 25.677889,
                    "p50": 26.799028999999997,
                    "p95": 26.960258999999997,
                    "p99": 26.960258999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 87.90767199999999,
                    "min": 83.01388,
                    "p50": 85.26635399999999,
                    "p95": 87.90767199999999,
                    "p99": 87.90767199999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 32.153133,
                    "min": 19.457881,
                    "p50": 26.855216,
                    "p95": 32.153133,
                    "p99": 32.153133,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.232404,
                    "min": 17.795018,
                    "p50": 26.654135,
                    "p95": 27.232404,
                    "p99": 27.232404,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.333665999999997,
                    "min": 26.378241,
                    "p50": 26.906188999999998,
                    "p95": 27.333665999999997,
                    "p99": 27.333665999999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 361.61650499999996,
                    "min": 332.242888,
                    "p50": 353.745305,
                    "p95": 361.61650499999996,
                    "p99": 361.61650499999996,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 150.319559,
                    "min": 104.15861199999999,
                    "p50": 142.19017499999998,
                    "p95": 150.319559,
                    "p99": 150.319559,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4452.4580559999995,
                    "min": 4165.334425999999,
                    "p50": 4347.0406219999995,
                    "p95": 4452.4580559999995,
                    "p99": 4452.4580559999995,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 951.340959,
                    "min": 763.95272,
                    "p50": 822.8392829999999,
                    "p95": 951.340959,
                    "p99": 951.340959,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 327.112794,
                    "min": 256.58336199999997,
                    "p50": 285.15956,
                    "p95": 327.112794,
                    "p99": 327.112794,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 205.20653099999998,
                    "min": 148.98227699999998,
                    "p50": 167.163422,
                    "p95": 205.20653099999998,
                    "p99": 205.20653099999998,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 314.42375499999997,
                    "min": 243.483308,
                    "p50": 254.290474,
                    "p95": 314.42375499999997,
                    "p99": 314.42375499999997,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1328.008918,
                    "min": 1154.265097,
                    "p50": 1228.551811,
                    "p95": 1328.008918,
                    "p99": 1328.008918,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 683.4265409999999,
                    "min": 484.480781,
                    "p50": 577.973709,
                    "p95": 683.4265409999999,
                    "p99": 683.4265409999999,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 549.186302,
                    "min": 386.604284,
                    "p50": 451.579532,
                    "p95": 549.186302,
                    "p99": 549.186302,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1684.795179,
                    "min": 1519.469204,
                    "p50": 1581.55007,
                    "p95": 1684.795179,
                    "p99": 1684.795179,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2158.044312,
                    "min": 1894.288546,
                    "p50": 2089.177976,
                    "p95": 2158.044312,
                    "p99": 2158.044312,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 632.438771,
                    "min": 542.853334,
                    "p50": 575.781967,
                    "p95": 632.438771,
                    "p99": 632.438771,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 293.636401,
                    "min": 180.05335599999998,
                    "p50": 231.188507,
                    "p95": 293.636401,
                    "p99": 293.636401,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 845.050905,
                    "min": 660.699979,
                    "p50": 722.9997099999999,
                    "p95": 845.050905,
                    "p99": 845.050905,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 463.450547,
                    "min": 340.97301,
                    "p50": 375.277689,
                    "p95": 463.450547,
                    "p99": 463.450547,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 574.761895,
                    "min": 460.861089,
                    "p50": 503.86780799999997,
                    "p95": 574.761895,
                    "p99": 574.761895,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 709.046461,
                    "min": 544.586044,
                    "p50": 639.906469,
                    "p95": 709.046461,
                    "p99": 709.046461,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 397.290714,
                    "min": 297.654135,
                    "p50": 327.696777,
                    "p95": 397.290714,
                    "p99": 397.290714,
                    "n": 8,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1524.7484419999998,
                    "min": 1367.515637,
                    "p50": 1497.287463,
                    "p95": 1524.7484419999998,
                    "p99": 1524.7484419999998,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 344.800596,
                    "min": 183.71910699999998,
                    "p50": 208.559138,
                    "p95": 344.800596,
                    "p99": 344.800596,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 493.288577,
                    "min": 419.07131,
                    "p50": 481.45356799999996,
                    "p95": 493.288577,
                    "p99": 493.288577,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 838.2223839999999,
                    "min": 644.361363,
                    "p50": 679.1135499999999,
                    "p95": 838.2223839999999,
                    "p99": 838.2223839999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.327606,
                    "min": 244.208249,
                    "p50": 256.555911,
                    "p95": 261.327606,
                    "p99": 261.327606,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 832.812223,
                    "min": 659.837574,
                    "p50": 745.9740889999999,
                    "p95": 832.812223,
                    "p99": 832.812223,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 563.4772839999999,
                    "min": 369.442612,
                    "p50": 382.839311,
                    "p95": 563.4772839999999,
                    "p99": 563.4772839999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 947.358537,
                    "min": 801.335325,
                    "p50": 838.5399719999999,
                    "p95": 947.358537,
                    "p99": 947.358537,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 346.152985,
                    "min": 272.544539,
                    "p50": 315.325209,
                    "p95": 346.152985,
                    "p99": 346.152985,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 586.504342,
                    "min": 464.235725,
                    "p50": 504.34488699999997,
                    "p95": 586.504342,
                    "p99": 586.504342,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1976.0255319999999,
                    "min": 1820.381856,
                    "p50": 1896.6204989999999,
                    "p95": 1976.0255319999999,
                    "p99": 1976.0255319999999,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 642.289441,
                    "min": 494.66016399999995,
                    "p50": 522.6927999999999,
                    "p95": 642.289441,
                    "p99": 642.289441,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 447.734182,
                    "min": 319.377213,
                    "p50": 341.626833,
                    "p95": 447.734182,
                    "p99": 447.734182,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 628.347866,
                    "min": 529.4330649999999,
                    "p50": 585.9808009999999,
                    "p95": 628.347866,
                    "p99": 628.347866,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 239.884224,
                    "min": 160.068661,
                    "p50": 169.75421,
                    "p95": 239.884224,
                    "p99": 239.884224,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 714.542771,
                    "min": 573.685113,
                    "p50": 645.570866,
                    "p95": 714.542771,
                    "p99": 714.542771,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1311.486983,
                    "min": 875.885559,
                    "p50": 987.2567829999999,
                    "p95": 1311.486983,
                    "p99": 1311.486983,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2778.9833799999997,
                    "min": 2419.166161,
                    "p50": 2597.8203559999997,
                    "p95": 2778.9833799999997,
                    "p99": 2778.9833799999997,
                    "n": 8,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 548.11932,
                    "min": 337.391536,
                    "p50": 394.85819899999996,
                    "p95": 548.11932,
                    "p99": 548.11932,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 877.325869,
                    "min": 642.380988,
                    "p50": 723.193911,
                    "p95": 877.325869,
                    "p99": 877.325869,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 799.557549,
                    "min": 519.935695,
                    "p50": 573.515902,
                    "p95": 799.557549,
                    "p99": 799.557549,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1127.605887,
                    "min": 1047.188926,
                    "p50": 1071.961464,
                    "p95": 1127.605887,
                    "p99": 1127.605887,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1020.355604,
                    "min": 908.516086,
                    "p50": 954.057659,
                    "p95": 1020.355604,
                    "p99": 1020.355604,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1473.337299,
                    "min": 1230.736844,
                    "p50": 1277.485314,
                    "p95": 1473.337299,
                    "p99": 1473.337299,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2111.986805,
                    "min": 1564.4423239999999,
                    "p50": 1585.796719,
                    "p95": 2111.986805,
                    "p99": 2111.986805,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1407.873627,
                    "min": 1346.949312,
                    "p50": 1374.092526,
                    "p95": 1407.873627,
                    "p99": 1407.873627,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1197.429556,
                    "min": 1143.225168,
                    "p50": 1176.225535,
                    "p95": 1197.429556,
                    "p99": 1197.429556,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2154.228303,
                    "min": 2066.986884,
                    "p50": 2128.940976,
                    "p95": 2154.228303,
                    "p99": 2154.228303,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 801.59092,
                    "min": 735.921104,
                    "p50": 765.728453,
                    "p95": 801.59092,
                    "p99": 801.59092,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 479.120116,
                    "min": 436.33140199999997,
                    "p50": 463.645624,
                    "p95": 479.120116,
                    "p99": 479.120116,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1920.136176,
                    "min": 1813.227346,
                    "p50": 1897.218815,
                    "p95": 1920.136176,
                    "p99": 1920.136176,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 904.842733,
                    "min": 839.372816,
                    "p50": 887.146712,
                    "p95": 904.842733,
                    "p99": 904.842733,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1630.3476759999999,
                    "min": 1443.4416609999998,
                    "p50": 1562.336263,
                    "p95": 1630.3476759999999,
                    "p99": 1630.3476759999999,
                    "n": 8,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 907.4662109999999,
                    "min": 869.160481,
                    "p50": 891.8801679999999,
                    "p95": 907.4662109999999,
                    "p99": 907.4662109999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2054.661048,
                    "min": 2004.495248,
                    "p50": 2035.762084,
                    "p95": 2054.661048,
                    "p99": 2054.661048,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2913.831319,
                    "min": 2844.410985,
                    "p50": 2871.769892,
                    "p95": 2913.831319,
                    "p99": 2913.831319,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5731.84098,
                    "min": 5669.9919709999995,
                    "p50": 5686.178905,
                    "p95": 5731.84098,
                    "p99": 5731.84098,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1607.0095279999998,
                    "min": 1551.29425,
                    "p50": 1588.7464949999999,
                    "p95": 1607.0095279999998,
                    "p99": 1607.0095279999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 751.084221,
                    "min": 738.647389,
                    "p50": 741.847886,
                    "p95": 751.084221,
                    "p99": 751.084221,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 615.732609,
                    "min": 577.623008,
                    "p50": 600.707855,
                    "p95": 615.732609,
                    "p99": 615.732609,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1744.660744,
                    "min": 1714.171144,
                    "p50": 1719.260392,
                    "p95": 1744.660744,
                    "p99": 1744.660744,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4295.9523,
                    "min": 4240.801092,
                    "p50": 4270.632853,
                    "p95": 4295.9523,
                    "p99": 4295.9523,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2529.3726079999997,
                    "min": 2481.58549,
                    "p50": 2500.562967,
                    "p95": 2529.3726079999997,
                    "p99": 2529.3726079999997,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2174.165386,
                    "min": 2122.66188,
                    "p50": 2135.074516,
                    "p95": 2174.165386,
                    "p99": 2174.165386,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1181.0394489999999,
                    "min": 1163.403818,
                    "p50": 1172.057046,
                    "p95": 1181.0394489999999,
                    "p99": 1181.0394489999999,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1490.571894,
                    "min": 1416.5815969999999,
                    "p50": 1463.559761,
                    "p95": 1490.571894,
                    "p99": 1490.571894,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1034.508712,
                    "min": 997.07281,
                    "p50": 1018.128601,
                    "p95": 1034.508712,
                    "p99": 1034.508712,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 469.37204499999996,
                    "min": 422.981247,
                    "p50": 462.46619999999996,
                    "p95": 469.37204499999996,
                    "p99": 469.37204499999996,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1906.7329949999998,
                    "min": 1832.7528229999998,
                    "p50": 1886.6234869999998,
                    "p95": 1906.7329949999998,
                    "p99": 1906.7329949999998,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1318.385294,
                    "min": 1285.9952739999999,
                    "p50": 1310.843286,
                    "p95": 1318.385294,
                    "p99": 1318.385294,
                    "n": 8,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 634.178315,
                    "min": 597.52841,
                    "p50": 617.060419,
                    "p95": 634.178315,
                    "p99": 634.178315,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1904.784575,
                    "min": 1846.460648,
                    "p50": 1888.984501,
                    "p95": 1904.784575,
                    "p99": 1904.784575,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3841.5224369999996,
                    "min": 3739.956326,
                    "p50": 3812.02639,
                    "p95": 3841.5224369999996,
                    "p99": 3841.5224369999996,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2150.369803,
                    "min": 2078.014497,
                    "p50": 2101.972269,
                    "p95": 2150.369803,
                    "p99": 2150.369803,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5585.952375,
                    "min": 5495.926525,
                    "p50": 5575.3428189999995,
                    "p95": 5585.952375,
                    "p99": 5585.952375,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1200.392685,
                    "min": 1139.983924,
                    "p50": 1166.935285,
                    "p95": 1200.392685,
                    "p99": 1200.392685,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1765.986753,
                    "min": 1711.1822809999999,
                    "p50": 1735.3995479999999,
                    "p95": 1765.986753,
                    "p99": 1765.986753,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7448.970144999999,
                    "min": 7369.090762999999,
                    "p50": 7414.390114999999,
                    "p95": 7448.970144999999,
                    "p99": 7448.970144999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1007.850467,
                    "min": 965.1959509999999,
                    "p50": 982.6363839999999,
                    "p95": 1007.850467,
                    "p99": 1007.850467,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2554.305868,
                    "min": 2482.204491,
                    "p50": 2496.876014,
                    "p95": 2554.305868,
                    "p99": 2554.305868,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1346.789308,
                    "min": 1315.597104,
                    "p50": 1339.9256169999999,
                    "p95": 1346.789308,
                    "p99": 1346.789308,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 796.4179379999999,
                    "min": 753.630281,
                    "p50": 789.518191,
                    "p95": 796.4179379999999,
                    "p99": 796.4179379999999,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2871.8640499999997,
                    "min": 2824.544572,
                    "p50": 2847.989283,
                    "p95": 2871.8640499999997,
                    "p99": 2871.8640499999997,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2702.833824,
                    "min": 2653.762171,
                    "p50": 2666.33447,
                    "p95": 2702.833824,
                    "p99": 2702.833824,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3316.256689,
                    "min": 3264.3883739999997,
                    "p50": 3299.3758479999997,
                    "p95": 3316.256689,
                    "p99": 3316.256689,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1514.934221,
                    "min": 1484.032943,
                    "p50": 1495.880197,
                    "p95": 1514.934221,
                    "p99": 1514.934221,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2315.966551,
                    "min": 2242.754739,
                    "p50": 2289.988012,
                    "p95": 2315.966551,
                    "p99": 2315.966551,
                    "n": 8,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 228.15435699999998,
                    "min": 158.030777,
                    "p50": 185.35495699999998,
                    "p95": 228.15435699999998,
                    "p99": 228.15435699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 164.098978,
                    "min": 125.59109699999999,
                    "p50": 135.173681,
                    "p95": 164.098978,
                    "p99": 164.098978,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 313.81838899999997,
                    "min": 177.89229899999998,
                    "p50": 268.61870899999997,
                    "p95": 313.81838899999997,
                    "p99": 313.81838899999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 399.919583,
                    "min": 300.021331,
                    "p50": 353.681464,
                    "p95": 399.919583,
                    "p99": 399.919583,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1211.342872,
                    "min": 1006.0031389999999,
                    "p50": 1156.1038569999998,
                    "p95": 1211.342872,
                    "p99": 1211.342872,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 528.701045,
                    "min": 414.37804,
                    "p50": 468.293573,
                    "p95": 528.701045,
                    "p99": 528.701045,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 210.269857,
                    "min": 118.594589,
                    "p50": 138.75877699999998,
                    "p95": 210.269857,
                    "p99": 210.269857,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 103.417959,
                    "min": 44.945375999999996,
                    "p50": 55.663354,
                    "p95": 103.417959,
                    "p99": 103.417959,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 654.638794,
                    "min": 501.698452,
                    "p50": 575.64987,
                    "p95": 654.638794,
                    "p99": 654.638794,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.34304,
                    "min": 67.454599,
                    "p50": 98.29607,
                    "p95": 128.34304,
                    "p99": 128.34304,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 185.99200399999998,
                    "min": 105.524677,
                    "p50": 110.706598,
                    "p95": 185.99200399999998,
                    "p99": 185.99200399999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 160.182648,
                    "min": 107.213492,
                    "p50": 120.06981599999999,
                    "p95": 160.182648,
                    "p99": 160.182648,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 248.64735,
                    "min": 166.968157,
                    "p50": 196.57231,
                    "p95": 248.64735,
                    "p99": 248.64735,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 116.54679499999999,
                    "min": 45.368854999999996,
                    "p50": 83.24716699999999,
                    "p95": 116.54679499999999,
                    "p99": 116.54679499999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 105.051024,
                    "min": 80.07526399999999,
                    "p50": 95.820765,
                    "p95": 105.051024,
                    "p99": 105.051024,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 237.363709,
                    "min": 168.159788,
                    "p50": 177.83962599999998,
                    "p95": 237.363709,
                    "p99": 237.363709,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 229.246366,
                    "min": 136.764567,
                    "p50": 150.241472,
                    "p95": 229.246366,
                    "p99": 229.246366,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 122.5646,
                    "min": 55.651739,
                    "p50": 71.450495,
                    "p95": 122.5646,
                    "p99": 122.5646,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 187.087099,
                    "min": 125.073319,
                    "p50": 153.767322,
                    "p95": 187.087099,
                    "p99": 187.087099,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2749.4844679999997,
                    "min": 2664.269973,
                    "p50": 2715.14337,
                    "p95": 2749.4844679999997,
                    "p99": 2749.4844679999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1146.251872,
                    "min": 1081.1059619999999,
                    "p50": 1109.592243,
                    "p95": 1146.251872,
                    "p99": 1146.251872,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 808.881573,
                    "min": 782.103605,
                    "p50": 792.143139,
                    "p95": 808.881573,
                    "p99": 808.881573,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1881.210443,
                    "min": 1813.080772,
                    "p50": 1854.686768,
                    "p95": 1881.210443,
                    "p99": 1881.210443,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1249.5331019999999,
                    "min": 1221.005978,
                    "p50": 1236.708684,
                    "p95": 1249.5331019999999,
                    "p99": 1249.5331019999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 6158.391403,
                    "min": 6041.313883,
                    "p50": 6116.777121,
                    "p95": 6158.391403,
                    "p99": 6158.391403,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1755.481042,
                    "min": 1682.296034,
                    "p50": 1714.079822,
                    "p95": 1755.481042,
                    "p99": 1755.481042,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 975.3216719999999,
                    "min": 914.7215299999999,
                    "p50": 946.728211,
                    "p95": 975.3216719999999,
                    "p99": 975.3216719999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2020.295551,
                    "min": 1964.873382,
                    "p50": 1994.351514,
                    "p95": 2020.295551,
                    "p99": 2020.295551,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4594.221844,
                    "min": 4477.293414,
                    "p50": 4552.6661189999995,
                    "p95": 4594.221844,
                    "p99": 4594.221844,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2367.627535,
                    "min": 2255.7838739999997,
                    "p50": 2309.54562,
                    "p95": 2367.627535,
                    "p99": 2367.627535,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3123.903348,
                    "min": 3007.7539199999997,
                    "p50": 3039.2639099999997,
                    "p95": 3123.903348,
                    "p99": 3123.903348,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 524.574902,
                    "min": 482.477171,
                    "p50": 493.147947,
                    "p95": 524.574902,
                    "p99": 524.574902,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2211.6286729999997,
                    "min": 2100.8798349999997,
                    "p50": 2152.380141,
                    "p95": 2211.6286729999997,
                    "p99": 2211.6286729999997,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 658.440967,
                    "min": 629.4311,
                    "p50": 636.2964959999999,
                    "p95": 658.440967,
                    "p99": 658.440967,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1577.445839,
                    "min": 1505.9754209999999,
                    "p50": 1540.356076,
                    "p95": 1577.445839,
                    "p99": 1577.445839,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1492.575261,
                    "min": 1357.764526,
                    "p50": 1387.157802,
                    "p95": 1492.575261,
                    "p99": 1492.575261,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2376.845965,
                    "min": 2270.572008,
                    "p50": 2311.440118,
                    "p95": 2376.845965,
                    "p99": 2376.845965,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 694.60721,
                    "min": 639.924771,
                    "p50": 645.2433689999999,
                    "p95": 694.60721,
                    "p99": 694.60721,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1443.6004289999998,
                    "min": 1361.8882139999998,
                    "p50": 1389.6555059999998,
                    "p95": 1443.6004289999998,
                    "p99": 1443.6004289999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2068.079925,
                    "min": 1977.424634,
                    "p50": 2009.902817,
                    "p95": 2068.079925,
                    "p99": 2068.079925,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1558.796881,
                    "min": 1532.29056,
                    "p50": 1547.7462309999999,
                    "p95": 1558.796881,
                    "p99": 1558.796881,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1752.760761,
                    "min": 1682.0060569999998,
                    "p50": 1702.419802,
                    "p95": 1752.760761,
                    "p99": 1752.760761,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3134.428528,
                    "min": 3049.738237,
                    "p50": 3076.6755599999997,
                    "p95": 3134.428528,
                    "p99": 3134.428528,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4663.925453,
                    "min": 4532.691419,
                    "p50": 4586.798906,
                    "p95": 4663.925453,
                    "p99": 4663.925453,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1882.1166879999998,
                    "min": 1792.450466,
                    "p50": 1843.894629,
                    "p95": 1882.1166879999998,
                    "p99": 1882.1166879999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 843.858472,
                    "min": 784.5285759999999,
                    "p50": 793.961503,
                    "p95": 843.858472,
                    "p99": 843.858472,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 577.074166,
                    "min": 464.65205299999997,
                    "p50": 494.34286399999996,
                    "p95": 577.074166,
                    "p99": 577.074166,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 962.52278,
                    "min": 899.516853,
                    "p50": 937.4004289999999,
                    "p95": 962.52278,
                    "p99": 962.52278,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2778.30366,
                    "min": 2663.169396,
                    "p50": 2700.459969,
                    "p95": 2778.30366,
                    "p99": 2778.30366,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1154.138051,
                    "min": 1083.010497,
                    "p50": 1088.899342,
                    "p95": 1154.138051,
                    "p99": 1154.138051,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2203.118468,
                    "min": 2132.8910849999997,
                    "p50": 2159.779192,
                    "p95": 2203.118468,
                    "p99": 2203.118468,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1318.66241,
                    "min": 1215.256817,
                    "p50": 1233.15087,
                    "p95": 1318.66241,
                    "p99": 1318.66241,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1395.382643,
                    "min": 1319.307262,
                    "p50": 1357.678524,
                    "p95": 1395.382643,
                    "p99": 1395.382643,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 278.935472,
                    "min": 174.02655299999998,
                    "p50": 242.04994399999998,
                    "p95": 278.935472,
                    "p99": 278.935472,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 773.855154,
                    "min": 633.700528,
                    "p50": 680.0367319999999,
                    "p95": 773.855154,
                    "p99": 773.855154,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 124.09501399999999,
                    "min": 81.101536,
                    "p50": 116.66946999999999,
                    "p95": 124.09501399999999,
                    "p99": 124.09501399999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 88.536613,
                    "min": 71.475253,
                    "p50": 84.58164,
                    "p95": 88.536613,
                    "p99": 88.536613,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 265.87241,
                    "min": 144.55402999999998,
                    "p50": 174.048373,
                    "p95": 265.87241,
                    "p99": 265.87241,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 605.3331949999999,
                    "min": 522.741581,
                    "p50": 569.460305,
                    "p95": 605.3331949999999,
                    "p99": 605.3331949999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 256.187983,
                    "min": 209.43658599999998,
                    "p50": 230.84102,
                    "p95": 256.187983,
                    "p99": 256.187983,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 253.785079,
                    "min": 149.73613699999999,
                    "p50": 190.58212699999999,
                    "p95": 253.785079,
                    "p99": 253.785079,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 316.13620499999996,
                    "min": 234.06479399999998,
                    "p50": 290.05364499999996,
                    "p95": 316.13620499999996,
                    "p99": 316.13620499999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 130.421301,
                    "min": 86.259343,
                    "p50": 98.311709,
                    "p95": 130.421301,
                    "p99": 130.421301,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 238.297813,
                    "min": 135.192399,
                    "p50": 166.773674,
                    "p95": 238.297813,
                    "p99": 238.297813,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 109.918596,
                    "min": 67.914994,
                    "p50": 69.844563,
                    "p95": 109.918596,
                    "p99": 109.918596,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 173.762607,
                    "min": 93.843794,
                    "p50": 132.794194,
                    "p95": 173.762607,
                    "p99": 173.762607,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 116.811858,
                    "min": 99.83898699999999,
                    "p50": 107.564021,
                    "p95": 116.811858,
                    "p99": 116.811858,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 181.36653199999998,
                    "min": 135.571408,
                    "p50": 141.211737,
                    "p95": 181.36653199999998,
                    "p99": 181.36653199999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 229.20173699999998,
                    "min": 151.647517,
                    "p50": 156.88096,
                    "p95": 229.20173699999998,
                    "p99": 229.20173699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 437.615749,
                    "min": 381.58079899999996,
                    "p50": 405.39863299999996,
                    "p95": 437.615749,
                    "p99": 437.615749,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 333.712157,
                    "min": 257.460335,
                    "p50": 307.684268,
                    "p95": 333.712157,
                    "p99": 333.712157,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.814842,
                    "min": 56.082212999999996,
                    "p50": 90.141694,
                    "p95": 122.814842,
                    "p99": 122.814842,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 434.895134,
                    "min": 369.371083,
                    "p50": 400.983033,
                    "p95": 434.895134,
                    "p99": 434.895134,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 352.347202,
                    "min": 247.97126,
                    "p50": 330.928142,
                    "p95": 352.347202,
                    "p99": 352.347202,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 287.249816,
                    "min": 178.147171,
                    "p50": 217.44374499999998,
                    "p95": 287.249816,
                    "p99": 287.249816,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 189.514533,
                    "min": 110.714857,
                    "p50": 148.613149,
                    "p95": 189.514533,
                    "p99": 189.514533,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1102.471261,
                    "min": 922.663584,
                    "p50": 977.9190619999999,
                    "p95": 1102.471261,
                    "p99": 1102.471261,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 567.2639459999999,
                    "min": 409.567978,
                    "p50": 500.942114,
                    "p95": 567.2639459999999,
                    "p99": 567.2639459999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 212.359058,
                    "min": 111.94068299999999,
                    "p50": 128.806206,
                    "p95": 212.359058,
                    "p99": 212.359058,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 215.89471699999999,
                    "min": 128.461613,
                    "p50": 160.093211,
                    "p95": 215.89471699999999,
                    "p99": 215.89471699999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 164.162259,
                    "min": 78.79596599999999,
                    "p50": 108.589213,
                    "p95": 164.162259,
                    "p99": 164.162259,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 118.602637,
                    "min": 83.21737,
                    "p50": 107.01366499999999,
                    "p95": 118.602637,
                    "p99": 118.602637,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 111.87163199999999,
                    "min": 57.828415,
                    "p50": 63.075208999999994,
                    "p95": 111.87163199999999,
                    "p99": 111.87163199999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 234.80843,
                    "min": 141.898256,
                    "p50": 178.808663,
                    "p95": 234.80843,
                    "p99": 234.80843,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 151.372772,
                    "min": 116.36310999999999,
                    "p50": 124.06329699999999,
                    "p95": 151.372772,
                    "p99": 151.372772,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 204.189055,
                    "min": 147.517441,
                    "p50": 167.57670199999998,
                    "p95": 204.189055,
                    "p99": 204.189055,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 142.860379,
                    "min": 73.138699,
                    "p50": 93.265339,
                    "p95": 142.860379,
                    "p99": 142.860379,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 181.64614699999998,
                    "min": 118.12126099999999,
                    "p50": 136.107894,
                    "p95": 181.64614699999998,
                    "p99": 181.64614699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 129.777279,
                    "min": 71.450769,
                    "p50": 75.563259,
                    "p95": 129.777279,
                    "p99": 129.777279,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.981806999999996,
                    "min": 43.110887999999996,
                    "p50": 47.029035,
                    "p95": 60.981806999999996,
                    "p99": 60.981806999999996,
                    "n": 8,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 292.304427,
                    "min": 221.00067299999998,
                    "p50": 234.69581699999998,
                    "p95": 292.304427,
                    "p99": 292.304427,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 207.917361,
                    "min": 105.60462799999999,
                    "p50": 128.12910399999998,
                    "p95": 207.917361,
                    "p99": 207.917361,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 335.622253,
                    "min": 258.379144,
                    "p50": 294.549756,
                    "p95": 335.622253,
                    "p99": 335.622253,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 206.091184,
                    "min": 101.62908499999999,
                    "p50": 128.85172,
                    "p95": 206.091184,
                    "p99": 206.091184,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 144.46447,
                    "min": 88.093822,
                    "p50": 106.80284499999999,
                    "p95": 144.46447,
                    "p99": 144.46447,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 167.858878,
                    "min": 46.840422,
                    "p50": 76.588002,
                    "p95": 167.858878,
                    "p99": 167.858878,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 297.42402,
                    "min": 186.70807499999998,
                    "p50": 221.695282,
                    "p95": 297.42402,
                    "p99": 297.42402,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 202.292286,
                    "min": 157.047168,
                    "p50": 163.715822,
                    "p95": 202.292286,
                    "p99": 202.292286,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 489.579703,
                    "min": 361.755549,
                    "p50": 388.454928,
                    "p95": 489.579703,
                    "p99": 489.579703,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 193.752276,
                    "min": 129.53248299999998,
                    "p50": 141.204283,
                    "p95": 193.752276,
                    "p99": 193.752276,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1369.470585,
                    "min": 1265.301463,
                    "p50": 1348.506594,
                    "p95": 1369.470585,
                    "p99": 1369.470585,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 139.01153,
                    "min": 83.785817,
                    "p50": 92.902542,
                    "p95": 139.01153,
                    "p99": 139.01153,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 215.349223,
                    "min": 170.873324,
                    "p50": 179.40783399999998,
                    "p95": 215.349223,
                    "p99": 215.349223,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 223.114037,
                    "min": 169.673071,
                    "p50": 173.232531,
                    "p95": 223.114037,
                    "p99": 223.114037,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 604.541876,
                    "min": 512.252042,
                    "p50": 550.5378079999999,
                    "p95": 604.541876,
                    "p99": 604.541876,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.731613,
                    "min": 60.962773999999996,
                    "p50": 71.43383299999999,
                    "p95": 89.731613,
                    "p99": 89.731613,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 246.52989699999998,
                    "min": 206.064887,
                    "p50": 224.81566099999998,
                    "p95": 246.52989699999998,
                    "p99": 246.52989699999998,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 205.259826,
                    "min": 129.246185,
                    "p50": 156.063871,
                    "p95": 205.259826,
                    "p99": 205.259826,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 726.6859089999999,
                    "min": 628.774085,
                    "p50": 660.48028,
                    "p95": 726.6859089999999,
                    "p99": 726.6859089999999,
                    "n": 8,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 949.910894,
                    "min": 932.501144,
                    "p50": 940.1114699999999,
                    "p95": 949.910894,
                    "p99": 949.910894,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 815.5099869999999,
                    "min": 802.846093,
                    "p50": 811.3444949999999,
                    "p95": 815.5099869999999,
                    "p99": 815.5099869999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1213.2723059999998,
                    "min": 1191.3038179999999,
                    "p50": 1201.4345469999998,
                    "p95": 1213.2723059999998,
                    "p99": 1213.2723059999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 422.854126,
                    "min": 401.920388,
                    "p50": 417.803812,
                    "p95": 422.854126,
                    "p99": 422.854126,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 554.259721,
                    "min": 533.1252959999999,
                    "p50": 549.884415,
                    "p95": 554.259721,
                    "p99": 554.259721,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1089.2464579999998,
                    "min": 1066.010424,
                    "p50": 1076.4442239999998,
                    "p95": 1089.2464579999998,
                    "p99": 1089.2464579999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 693.127165,
                    "min": 638.696814,
                    "p50": 679.270039,
                    "p95": 693.127165,
                    "p99": 693.127165,
                    "n": 8,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1572.753978,
                    "min": 1472.243428,
                    "p50": 1505.609368,
                    "p95": 1572.753978,
                    "p99": 1572.753978,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 475.02871,
                    "min": 435.99014999999997,
                    "p50": 464.91126499999996,
                    "p95": 475.02871,
                    "p99": 475.02871,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1213.510039,
                    "min": 1176.986213,
                    "p50": 1194.644711,
                    "p95": 1213.510039,
                    "p99": 1213.510039,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 913.8316289999999,
                    "min": 895.955885,
                    "p50": 903.7760099999999,
                    "p95": 913.8316289999999,
                    "p99": 913.8316289999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1089.5666469999999,
                    "min": 1031.176115,
                    "p50": 1055.438973,
                    "p95": 1089.5666469999999,
                    "p99": 1089.5666469999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1374.06889,
                    "min": 1321.642242,
                    "p50": 1333.406334,
                    "p95": 1374.06889,
                    "p99": 1374.06889,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 624.990992,
                    "min": 593.657025,
                    "p50": 614.936839,
                    "p95": 624.990992,
                    "p99": 624.990992,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 776.897977,
                    "min": 750.979656,
                    "p50": 769.9369389999999,
                    "p95": 776.897977,
                    "p99": 776.897977,
                    "n": 8,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 1149.505436,
                    "min": 1008.426393,
                    "p50": 1097.250175,
                    "p95": 1149.505436,
                    "p99": 1149.505436,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1980.207041,
                    "min": 1759.3923989999998,
                    "p50": 1803.172192,
                    "p95": 1980.207041,
                    "p99": 1980.207041,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 2516.6343859999997,
                    "min": 2242.670341,
                    "p50": 2315.044461,
                    "p95": 2516.6343859999997,
                    "p99": 2516.6343859999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1727.1792739999999,
                    "min": 1523.3996459999998,
                    "p50": 1591.378461,
                    "p95": 1727.1792739999999,
                    "p99": 1727.1792739999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 3418.3582619999997,
                    "min": 3007.004861,
                    "p50": 3106.670979,
                    "p95": 3418.3582619999997,
                    "p99": 3418.3582619999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 881.452605,
                    "min": 780.2758289999999,
                    "p50": 791.838842,
                    "p95": 881.452605,
                    "p99": 881.452605,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2813.1749139999997,
                    "min": 2451.083538,
                    "p50": 2580.772226,
                    "p95": 2813.1749139999997,
                    "p99": 2813.1749139999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 2251.5136039999998,
                    "min": 1972.5270369999998,
                    "p50": 2091.550964,
                    "p95": 2251.5136039999998,
                    "p99": 2251.5136039999998,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1442.7844029999999,
                    "min": 1258.772659,
                    "p50": 1277.287568,
                    "p95": 1442.7844029999999,
                    "p99": 1442.7844029999999,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 3144.3302759999997,
                    "min": 2699.4234349999997,
                    "p50": 2796.496655,
                    "p95": 3144.3302759999997,
                    "p99": 3144.3302759999997,
                    "n": 8,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 829.8483299999999,
                    "min": 807.519451,
                    "p50": 821.851331,
                    "p95": 829.8483299999999,
                    "p99": 829.8483299999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1103.761013,
                    "min": 1048.401147,
                    "p50": 1083.7421649999999,
                    "p95": 1103.761013,
                    "p99": 1103.761013,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 302.83066299999996,
                    "min": 289.971719,
                    "p50": 300.095326,
                    "p95": 302.83066299999996,
                    "p99": 302.83066299999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 567.989886,
                    "min": 557.6352079999999,
                    "p50": 563.656386,
                    "p95": 567.989886,
                    "p99": 567.989886,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 965.2161679999999,
                    "min": 951.435164,
                    "p50": 956.9337009999999,
                    "p95": 965.2161679999999,
                    "p99": 965.2161679999999,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 435.76798399999996,
                    "min": 424.33142799999996,
                    "p50": 429.34824699999996,
                    "p95": 435.76798399999996,
                    "p99": 435.76798399999996,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 714.172739,
                    "min": 656.722043,
                    "p50": 696.350553,
                    "p95": 714.172739,
                    "p99": 714.172739,
                    "n": 8,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2345.818113,
                    "min": 2104.8519619999997,
                    "p50": 2168.133158,
                    "p95": 2345.818113,
                    "p99": 2345.818113,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1175.610658,
                    "min": 1077.60293,
                    "p50": 1127.62787,
                    "p95": 1175.610658,
                    "p99": 1175.610658,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 702.258935,
                    "min": 609.278053,
                    "p50": 643.733887,
                    "p95": 702.258935,
                    "p99": 702.258935,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2143.650228,
                    "min": 1918.840178,
                    "p50": 2001.5954029999998,
                    "p95": 2143.650228,
                    "p99": 2143.650228,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1677.49828,
                    "min": 1499.323011,
                    "p50": 1547.9872329999998,
                    "p95": 1677.49828,
                    "p99": 1677.49828,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1335.563831,
                    "min": 1208.3849229999998,
                    "p50": 1262.5393299999998,
                    "p95": 1335.563831,
                    "p99": 1335.563831,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1984.79658,
                    "min": 1783.967389,
                    "p50": 1838.536766,
                    "p95": 1984.79658,
                    "p99": 1984.79658,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 854.724961,
                    "min": 771.5487989999999,
                    "p50": 794.620965,
                    "p95": 854.724961,
                    "p99": 854.724961,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 526.125065,
                    "min": 480.292241,
                    "p50": 492.47999,
                    "p95": 526.125065,
                    "p99": 526.125065,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2883.183643,
                    "min": 2602.5004799999997,
                    "p50": 2686.390337,
                    "p95": 2883.183643,
                    "p99": 2883.183643,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2485.277213,
                    "min": 2231.609071,
                    "p50": 2301.4212079999998,
                    "p95": 2485.277213,
                    "p99": 2485.277213,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3290.809187,
                    "min": 2968.070163,
                    "p50": 3055.016973,
                    "p95": 3290.809187,
                    "p99": 3290.809187,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1491.707712,
                    "min": 1356.257818,
                    "p50": 1388.950627,
                    "p95": 1491.707712,
                    "p99": 1491.707712,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1847.403883,
                    "min": 1643.960279,
                    "p50": 1689.787676,
                    "p95": 1847.403883,
                    "p99": 1847.403883,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1010.8114449999999,
                    "min": 917.8957969999999,
                    "p50": 936.135716,
                    "p95": 1010.8114449999999,
                    "p99": 1010.8114449999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2238.2583409999997,
                    "min": 2050.019966,
                    "p50": 2120.2652949999997,
                    "p95": 2238.2583409999997,
                    "p99": 2238.2583409999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 876.775663,
                    "min": 806.764413,
                    "p50": 844.4450939999999,
                    "p95": 876.775663,
                    "p99": 876.775663,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2581.006419,
                    "min": 2371.948259,
                    "p50": 2450.311067,
                    "p95": 2581.006419,
                    "p99": 2581.006419,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1698.279618,
                    "min": 1568.876955,
                    "p50": 1613.155609,
                    "p95": 1698.279618,
                    "p99": 1698.279618,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 714.1896839999999,
                    "min": 652.016611,
                    "p50": 663.595074,
                    "p95": 714.1896839999999,
                    "p99": 714.1896839999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1042.95011,
                    "min": 964.51703,
                    "p50": 981.487266,
                    "p95": 1042.95011,
                    "p99": 1042.95011,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2043.4923319999998,
                    "min": 1864.6084389999999,
                    "p50": 1927.236502,
                    "p95": 2043.4923319999998,
                    "p99": 2043.4923319999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2395.430458,
                    "min": 2181.0237309999998,
                    "p50": 2247.008613,
                    "p95": 2395.430458,
                    "p99": 2395.430458,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3399.196873,
                    "min": 3102.235827,
                    "p50": 3190.2883269999998,
                    "p95": 3399.196873,
                    "p99": 3399.196873,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1212.179962,
                    "min": 1090.661423,
                    "p50": 1129.859313,
                    "p95": 1212.179962,
                    "p99": 1212.179962,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2954.266771,
                    "min": 2706.705637,
                    "p50": 2777.532186,
                    "p95": 2954.266771,
                    "p99": 2954.266771,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1373.462805,
                    "min": 1244.4446779999998,
                    "p50": 1293.418547,
                    "p95": 1373.462805,
                    "p99": 1373.462805,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1870.705399,
                    "min": 1707.834013,
                    "p50": 1754.246811,
                    "p95": 1870.705399,
                    "p99": 1870.705399,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1554.2982769999999,
                    "min": 1411.760835,
                    "p50": 1443.657536,
                    "p95": 1554.2982769999999,
                    "p99": 1554.2982769999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 541.874593,
                    "min": 472.81066,
                    "p50": 507.78763499999997,
                    "p95": 541.874593,
                    "p99": 541.874593,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 853.712769,
                    "min": 780.771353,
                    "p50": 818.168458,
                    "p95": 853.712769,
                    "p99": 853.712769,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1350.305296,
                    "min": 1230.231484,
                    "p50": 1251.829068,
                    "p95": 1350.305296,
                    "p99": 1350.305296,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1206.48602,
                    "min": 1070.23193,
                    "p50": 1105.3963569999999,
                    "p95": 1206.48602,
                    "p99": 1206.48602,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2894.821744,
                    "min": 2622.998388,
                    "p50": 2681.436174,
                    "p95": 2894.821744,
                    "p99": 2894.821744,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2460.743827,
                    "min": 2257.072672,
                    "p50": 2309.065055,
                    "p95": 2460.743827,
                    "p99": 2460.743827,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 527.125988,
                    "min": 469.402746,
                    "p50": 495.940276,
                    "p95": 527.125988,
                    "p99": 527.125988,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1841.8207699999998,
                    "min": 1674.5644069999998,
                    "p50": 1710.9302249999998,
                    "p95": 1841.8207699999998,
                    "p99": 1841.8207699999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1681.9595929999998,
                    "min": 1523.717848,
                    "p50": 1553.5615779999998,
                    "p95": 1681.9595929999998,
                    "p99": 1681.9595929999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 695.289916,
                    "min": 626.411565,
                    "p50": 643.946735,
                    "p95": 695.289916,
                    "p99": 695.289916,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2020.800522,
                    "min": 1821.1859479999998,
                    "p50": 1876.540583,
                    "p95": 2020.800522,
                    "p99": 2020.800522,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1519.7371329999999,
                    "min": 1379.948754,
                    "p50": 1390.91375,
                    "p95": 1519.7371329999999,
                    "p99": 1519.7371329999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3289.6531569999997,
                    "min": 2991.6841299999996,
                    "p50": 3064.028191,
                    "p95": 3289.6531569999997,
                    "p99": 3289.6531569999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2320.308604,
                    "min": 2105.507168,
                    "p50": 2147.705497,
                    "p95": 2320.308604,
                    "p99": 2320.308604,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1022.8139339999999,
                    "min": 921.415888,
                    "p50": 942.536261,
                    "p95": 1022.8139339999999,
                    "p99": 1022.8139339999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2174.514374,
                    "min": 1962.6016909999998,
                    "p50": 2014.02873,
                    "p95": 2174.514374,
                    "p99": 2174.514374,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3296.6953,
                    "min": 3006.603056,
                    "p50": 3126.041956,
                    "p95": 3296.6953,
                    "p99": 3296.6953,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 699.301557,
                    "min": 630.111366,
                    "p50": 658.165032,
                    "p95": 699.301557,
                    "p99": 699.301557,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1515.8957289999998,
                    "min": 1338.3720799999999,
                    "p50": 1395.303696,
                    "p95": 1515.8957289999998,
                    "p99": 1515.8957289999998,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1700.467559,
                    "min": 1481.029345,
                    "p50": 1539.487203,
                    "p95": 1700.467559,
                    "p99": 1700.467559,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1831.478746,
                    "min": 1664.6677579999998,
                    "p50": 1702.1110079999999,
                    "p95": 1831.478746,
                    "p99": 1831.478746,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2885.3005479999997,
                    "min": 2618.7184119999997,
                    "p50": 2683.902256,
                    "p95": 2885.3005479999997,
                    "p99": 2885.3005479999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1993.488069,
                    "min": 1794.5616189999998,
                    "p50": 1842.329227,
                    "p95": 1993.488069,
                    "p99": 1993.488069,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2157.7970379999997,
                    "min": 1958.4329859999998,
                    "p50": 2008.0501049999998,
                    "p95": 2157.7970379999997,
                    "p99": 2157.7970379999997,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 533.21377,
                    "min": 472.59007499999996,
                    "p50": 488.33921399999997,
                    "p95": 533.21377,
                    "p99": 533.21377,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1014.919673,
                    "min": 922.166742,
                    "p50": 950.2000989999999,
                    "p95": 1014.919673,
                    "p99": 1014.919673,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 857.2222479999999,
                    "min": 753.94949,
                    "p50": 792.9221719999999,
                    "p95": 857.2222479999999,
                    "p99": 857.2222479999999,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2466.840255,
                    "min": 2250.48865,
                    "p50": 2304.537845,
                    "p95": 2466.840255,
                    "p99": 2466.840255,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1333.461155,
                    "min": 1208.575233,
                    "p50": 1241.8501999999999,
                    "p95": 1333.461155,
                    "p99": 1333.461155,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2314.145843,
                    "min": 2079.179299,
                    "p50": 2145.526914,
                    "p95": 2314.145843,
                    "p99": 2314.145843,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1175.491133,
                    "min": 1070.363413,
                    "p50": 1088.924823,
                    "p95": 1175.491133,
                    "p99": 1175.491133,
                    "n": 8,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 839.288197,
                    "min": 762.783767,
                    "p50": 776.272289,
                    "p95": 839.288197,
                    "p99": 839.288197,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 215.27318599999998,
                    "min": 183.312708,
                    "p50": 208.36120599999998,
                    "p95": 215.27318599999998,
                    "p99": 215.27318599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4429.383639,
                    "min": 4046.244115,
                    "p50": 4101.659052999999,
                    "p95": 4429.383639,
                    "p99": 4429.383639,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 915.974039,
                    "min": 834.4631039999999,
                    "p50": 847.162693,
                    "p95": 915.974039,
                    "p99": 915.974039,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1346.3777559999999,
                    "min": 1247.3327219999999,
                    "p50": 1257.3671239999999,
                    "p95": 1346.3777559999999,
                    "p99": 1346.3777559999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.993003,
                    "min": 423.244805,
                    "p50": 447.469455,
                    "p95": 478.993003,
                    "p99": 478.993003,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1779.828507,
                    "min": 1646.1219979999998,
                    "p50": 1671.72802,
                    "p95": 1779.828507,
                    "p99": 1779.828507,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 301.261932,
                    "min": 278.79027199999996,
                    "p50": 291.379851,
                    "p95": 301.261932,
                    "p99": 301.261932,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 392.173724,
                    "min": 345.45437,
                    "p50": 367.342577,
                    "p95": 392.173724,
                    "p99": 392.173724,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.97397899999999,
                    "min": 158.281924,
                    "p50": 159.89089099999998,
                    "p95": 169.97397899999999,
                    "p99": 169.97397899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 429.60801499999997,
                    "min": 382.82147499999996,
                    "p50": 408.175887,
                    "p95": 429.60801499999997,
                    "p99": 429.60801499999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.734588,
                    "min": 314.085265,
                    "p50": 327.054018,
                    "p95": 346.734588,
                    "p99": 346.734588,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 529.5020569999999,
                    "min": 478.64897499999995,
                    "p50": 491.20716,
                    "p95": 529.5020569999999,
                    "p99": 529.5020569999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 607.988132,
                    "min": 563.439026,
                    "p50": 575.274374,
                    "p95": 607.988132,
                    "p99": 607.988132,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 567.1185899999999,
                    "min": 517.789097,
                    "p50": 529.717211,
                    "p95": 567.1185899999999,
                    "p99": 567.1185899999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2221.3509489999997,
                    "min": 2055.663054,
                    "p50": 2103.4419869999997,
                    "p95": 2221.3509489999997,
                    "p99": 2221.3509489999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 259.284089,
                    "min": 234.400082,
                    "p50": 250.730864,
                    "p95": 259.284089,
                    "p99": 259.284089,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.236043,
                    "min": 593.624524,
                    "p50": 609.266111,
                    "p95": 656.236043,
                    "p99": 656.236043,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 694.131076,
                    "min": 644.347546,
                    "p50": 651.704047,
                    "p95": 694.131076,
                    "p99": 694.131076,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 604.691844,
                    "min": 554.4102369999999,
                    "p50": 564.434975,
                    "p95": 604.691844,
                    "p99": 604.691844,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4416.834656,
                    "min": 4037.8223749999997,
                    "p50": 4064.0568869999997,
                    "p95": 4416.834656,
                    "p99": 4416.834656,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.301431,
                    "min": 594.97273,
                    "p50": 602.401623,
                    "p95": 656.301431,
                    "p99": 656.301431,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 435.78802299999995,
                    "min": 364.511389,
                    "p50": 401.194031,
                    "p95": 435.78802299999995,
                    "p99": 435.78802299999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 794.221715,
                    "min": 705.077983,
                    "p50": 743.5101099999999,
                    "p95": 794.221715,
                    "p99": 794.221715,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 916.7527779999999,
                    "min": 830.430446,
                    "p50": 847.187903,
                    "p95": 916.7527779999999,
                    "p99": 916.7527779999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 257.59700599999996,
                    "min": 219.74696699999998,
                    "p50": 238.735234,
                    "p95": 257.59700599999996,
                    "p99": 257.59700599999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 480.94626,
                    "min": 431.677197,
                    "p50": 446.23344,
                    "p95": 480.94626,
                    "p99": 480.94626,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 341.21858,
                    "min": 315.394121,
                    "p50": 327.180347,
                    "p95": 341.21858,
                    "p99": 341.21858,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 689.1211059999999,
                    "min": 631.378728,
                    "p50": 652.354781,
                    "p95": 689.1211059999999,
                    "p99": 689.1211059999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 560.207392,
                    "min": 497.46448599999997,
                    "p50": 526.8362139999999,
                    "p95": 560.207392,
                    "p99": 560.207392,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1785.2864109999998,
                    "min": 1643.71526,
                    "p50": 1671.7196059999999,
                    "p95": 1785.2864109999998,
                    "p99": 1785.2864109999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1344.830941,
                    "min": 1242.291996,
                    "p50": 1258.64376,
                    "p95": 1344.830941,
                    "p99": 1344.830941,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 519.851604,
                    "min": 447.50778099999997,
                    "p50": 488.863415,
                    "p95": 519.851604,
                    "p99": 519.851604,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.053138,
                    "min": 123.25931999999999,
                    "p50": 150.460635,
                    "p95": 169.053138,
                    "p99": 169.053138,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 387.348818,
                    "min": 346.010265,
                    "p50": 360.03544999999997,
                    "p95": 387.348818,
                    "p99": 387.348818,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.619541,
                    "min": 163.058358,
                    "p50": 201.576699,
                    "p95": 214.619541,
                    "p99": 214.619541,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 301.860665,
                    "min": 263.71473399999996,
                    "p50": 289.58993799999996,
                    "p95": 301.860665,
                    "p99": 301.860665,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2224.377504,
                    "min": 2033.516158,
                    "p50": 2120.461976,
                    "p95": 2224.377504,
                    "p99": 2224.377504,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 352.866218,
                    "min": 317.680607,
                    "p50": 331.547755,
                    "p95": 352.866218,
                    "p99": 352.866218,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 619.862796,
                    "min": 567.829567,
                    "p50": 589.336916,
                    "p95": 619.862796,
                    "p99": 619.862796,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 526.0873799999999,
                    "min": 460.260568,
                    "p50": 498.072562,
                    "p95": 526.0873799999999,
                    "p99": 526.0873799999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.96504699999997,
                    "min": 254.191857,
                    "p50": 290.56559699999997,
                    "p95": 303.96504699999997,
                    "p99": 303.96504699999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 917.416488,
                    "min": 865.986958,
                    "p50": 878.598081,
                    "p95": 917.416488,
                    "p99": 917.416488,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 214.53287699999998,
                    "min": 197.083373,
                    "p50": 207.428044,
                    "p95": 214.53287699999998,
                    "p99": 214.53287699999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 389.32609299999996,
                    "min": 359.898932,
                    "p50": 374.961529,
                    "p95": 389.32609299999996,
                    "p99": 389.32609299999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.950855,
                    "min": 452.461478,
                    "p50": 463.789808,
                    "p95": 478.950855,
                    "p99": 478.950855,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 706.481512,
                    "min": 640.265404,
                    "p50": 670.0681,
                    "p95": 706.481512,
                    "p99": 706.481512,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1354.6184429999998,
                    "min": 1261.423811,
                    "p50": 1306.7419969999999,
                    "p95": 1354.6184429999998,
                    "p99": 1354.6184429999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 572.420213,
                    "min": 526.7971679999999,
                    "p50": 544.514906,
                    "p95": 572.420213,
                    "p99": 572.420213,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 439.041652,
                    "min": 412.21736899999996,
                    "p50": 419.427174,
                    "p95": 439.041652,
                    "p99": 439.041652,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 261.11235899999997,
                    "min": 235.676338,
                    "p50": 250.68602399999997,
                    "p95": 261.11235899999997,
                    "p99": 261.11235899999997,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 656.022309,
                    "min": 604.520284,
                    "p50": 642.248711,
                    "p95": 656.022309,
                    "p99": 656.022309,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 813.1834339999999,
                    "min": 750.972254,
                    "p50": 768.735474,
                    "p95": 813.1834339999999,
                    "p99": 813.1834339999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1798.938518,
                    "min": 1687.6500099999998,
                    "p50": 1713.687189,
                    "p95": 1798.938518,
                    "p99": 1798.938518,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2242.178515,
                    "min": 2094.269219,
                    "p50": 2133.508794,
                    "p95": 2242.178515,
                    "p99": 2242.178515,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4469.5750069999995,
                    "min": 4173.846251,
                    "p50": 4238.9689339999995,
                    "p95": 4469.5750069999995,
                    "p99": 4469.5750069999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 170.54771599999998,
                    "min": 145.70805099999998,
                    "p50": 164.599956,
                    "p95": 170.54771599999998,
                    "p99": 170.54771599999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2208.714431,
                    "min": 2018.4424099999999,
                    "p50": 2062.8489999999997,
                    "p95": 2208.714431,
                    "p99": 2208.714431,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 600.667546,
                    "min": 544.600977,
                    "p50": 558.74171,
                    "p95": 600.667546,
                    "p99": 600.667546,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 478.049106,
                    "min": 403.305765,
                    "p50": 439.150294,
                    "p95": 478.049106,
                    "p99": 478.049106,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 686.672929,
                    "min": 637.222403,
                    "p50": 641.487721,
                    "p95": 686.672929,
                    "p99": 686.672929,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 344.18245099999996,
                    "min": 311.382793,
                    "p50": 322.25436099999996,
                    "p95": 344.18245099999996,
                    "p99": 344.18245099999996,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.059381,
                    "min": 225.24821899999998,
                    "p50": 239.011859,
                    "p95": 253.059381,
                    "p99": 253.059381,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 169.70381999999998,
                    "min": 133.194951,
                    "p50": 159.23467399999998,
                    "p95": 169.70381999999998,
                    "p99": 169.70381999999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 516.00806,
                    "min": 443.54099399999996,
                    "p50": 490.12528899999995,
                    "p95": 516.00806,
                    "p99": 516.00806,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 803.644047,
                    "min": 712.663374,
                    "p50": 758.232928,
                    "p95": 803.644047,
                    "p99": 803.644047,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 297.0041,
                    "min": 261.574834,
                    "p50": 280.189599,
                    "p95": 297.0041,
                    "p99": 297.0041,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 390.198379,
                    "min": 323.696333,
                    "p50": 364.35796,
                    "p95": 390.198379,
                    "p99": 390.198379,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 635.033412,
                    "min": 590.074442,
                    "p50": 614.377833,
                    "p95": 635.033412,
                    "p99": 635.033412,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1777.7175539999998,
                    "min": 1632.496338,
                    "p50": 1661.925661,
                    "p95": 1777.7175539999998,
                    "p99": 1777.7175539999998,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4392.4245089999995,
                    "min": 4021.8092269999997,
                    "p50": 4103.507463,
                    "p95": 4392.4245089999995,
                    "p99": 4392.4245089999995,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 430.373421,
                    "min": 386.623924,
                    "p50": 401.082356,
                    "p95": 430.373421,
                    "p99": 430.373421,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 915.990459,
                    "min": 805.869748,
                    "p50": 852.5571339999999,
                    "p95": 915.990459,
                    "p99": 915.990459,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 560.4400539999999,
                    "min": 504.474541,
                    "p50": 521.6045389999999,
                    "p95": 560.4400539999999,
                    "p99": 560.4400539999999,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 218.486234,
                    "min": 184.621803,
                    "p50": 208.40770999999998,
                    "p95": 218.486234,
                    "p99": 218.486234,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1341.981071,
                    "min": 1217.431386,
                    "p50": 1243.2582439999999,
                    "p95": 1341.981071,
                    "p99": 1341.981071,
                    "n": 8,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 814.885488,
                    "min": 714.575299,
                    "p50": 740.380606,
                    "p95": 814.885488,
                    "p99": 814.885488,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 628.711475,
                    "min": 524.7940219999999,
                    "p50": 565.6778059999999,
                    "p95": 628.711475,
                    "p99": 628.711475,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1016.634412,
                    "min": 885.735855,
                    "p50": 917.592948,
                    "p95": 1016.634412,
                    "p99": 1016.634412,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3883.341762,
                    "min": 3468.2030379999997,
                    "p50": 3583.635409,
                    "p95": 3883.341762,
                    "p99": 3883.341762,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2554.135769,
                    "min": 2255.17042,
                    "p50": 2346.6608579999997,
                    "p95": 2554.135769,
                    "p99": 2554.135769,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2974.66423,
                    "min": 2627.9047769999997,
                    "p50": 2684.106527,
                    "p95": 2974.66423,
                    "p99": 2974.66423,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3442.513167,
                    "min": 3065.060728,
                    "p50": 3123.9989969999997,
                    "p95": 3442.513167,
                    "p99": 3442.513167,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1792.424795,
                    "min": 1591.893548,
                    "p50": 1612.117448,
                    "p95": 1792.424795,
                    "p99": 1792.424795,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1205.177402,
                    "min": 1069.7811769999998,
                    "p50": 1097.537388,
                    "p95": 1205.177402,
                    "p99": 1205.177402,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1590.3121099999998,
                    "min": 1410.0453029999999,
                    "p50": 1446.520331,
                    "p95": 1590.3121099999998,
                    "p99": 1590.3121099999998,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1403.055374,
                    "min": 1227.258633,
                    "p50": 1279.185365,
                    "p95": 1403.055374,
                    "p99": 1403.055374,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1984.346722,
                    "min": 1749.577717,
                    "p50": 1805.2926679999998,
                    "p95": 1984.346722,
                    "p99": 1984.346722,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2178.4948369999997,
                    "min": 1939.077764,
                    "p50": 1981.872889,
                    "p95": 2178.4948369999997,
                    "p99": 2178.4948369999997,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2758.629756,
                    "min": 2465.431858,
                    "p50": 2502.789049,
                    "p95": 2758.629756,
                    "p99": 2758.629756,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2380.607192,
                    "min": 2117.163929,
                    "p50": 2169.6490989999998,
                    "p95": 2380.607192,
                    "p99": 2380.607192,
                    "n": 8,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2194.071023,
                    "min": 1947.150645,
                    "p50": 1983.4464059999998,
                    "p95": 2194.071023,
                    "p99": 2194.071023,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2567.630894,
                    "min": 2291.63785,
                    "p50": 2333.70216,
                    "p95": 2567.630894,
                    "p99": 2567.630894,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2749.57613,
                    "min": 2432.293965,
                    "p50": 2498.841727,
                    "p95": 2749.57613,
                    "p99": 2749.57613,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 819.964927,
                    "min": 693.1526759999999,
                    "p50": 749.889061,
                    "p95": 819.964927,
                    "p99": 819.964927,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1013.046711,
                    "min": 890.5184509999999,
                    "p50": 923.1481279999999,
                    "p95": 1013.046711,
                    "p99": 1013.046711,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1409.830688,
                    "min": 1243.810612,
                    "p50": 1281.408655,
                    "p95": 1409.830688,
                    "p99": 1409.830688,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1202.6186519999999,
                    "min": 1072.192927,
                    "p50": 1102.345822,
                    "p95": 1202.6186519999999,
                    "p99": 1202.6186519999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1995.29822,
                    "min": 1750.2050889999998,
                    "p50": 1817.927553,
                    "p95": 1995.29822,
                    "p99": 1995.29822,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 623.6768589999999,
                    "min": 535.695716,
                    "p50": 580.159536,
                    "p95": 623.6768589999999,
                    "p99": 623.6768589999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1616.336352,
                    "min": 1413.9885789999998,
                    "p50": 1484.402967,
                    "p95": 1616.336352,
                    "p99": 1616.336352,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3479.490346,
                    "min": 3071.5624789999997,
                    "p50": 3139.170703,
                    "p95": 3479.490346,
                    "p99": 3479.490346,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3907.221278,
                    "min": 3504.397818,
                    "p50": 3590.232383,
                    "p95": 3907.221278,
                    "p99": 3907.221278,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2965.1357709999997,
                    "min": 2626.6945419999997,
                    "p50": 2708.2398519999997,
                    "p95": 2965.1357709999997,
                    "p99": 2965.1357709999997,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1791.4907799999999,
                    "min": 1595.820589,
                    "p50": 1620.673693,
                    "p95": 1791.4907799999999,
                    "p99": 1791.4907799999999,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2396.462475,
                    "min": 2102.828275,
                    "p50": 2166.027156,
                    "p95": 2396.462475,
                    "p99": 2396.462475,
                    "n": 8,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2633.093485,
                    "min": 2337.361893,
                    "p50": 2377.7269579999997,
                    "p95": 2633.093485,
                    "p99": 2633.093485,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2422.447752,
                    "min": 2153.761727,
                    "p50": 2220.049736,
                    "p95": 2422.447752,
                    "p99": 2422.447752,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2792.5386209999997,
                    "min": 2472.987952,
                    "p50": 2538.646625,
                    "p95": 2792.5386209999997,
                    "p99": 2792.5386209999997,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3317.991673,
                    "min": 2903.116516,
                    "p50": 2972.1817619999997,
                    "p95": 3317.991673,
                    "p99": 3317.991673,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2253.926618,
                    "min": 1997.951005,
                    "p50": 2043.5546829999998,
                    "p95": 2253.926618,
                    "p99": 2253.926618,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2076.384075,
                    "min": 1834.7666439999998,
                    "p50": 1898.4269239999999,
                    "p95": 2076.384075,
                    "p99": 2076.384075,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 592.7511529999999,
                    "min": 513.631131,
                    "p50": 544.185609,
                    "p95": 592.7511529999999,
                    "p99": 592.7511529999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3741.074432,
                    "min": 3315.52155,
                    "p50": 3409.290371,
                    "p95": 3741.074432,
                    "p99": 3741.074432,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1891.127693,
                    "min": 1673.9089299999998,
                    "p50": 1721.022117,
                    "p95": 1891.127693,
                    "p99": 1891.127693,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1704.115411,
                    "min": 1508.687442,
                    "p50": 1549.978781,
                    "p95": 1704.115411,
                    "p99": 1704.115411,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1149.663372,
                    "min": 1016.0537519999999,
                    "p50": 1041.0856529999999,
                    "p95": 1149.663372,
                    "p99": 1149.663372,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1539.2646869999999,
                    "min": 1362.32564,
                    "p50": 1397.437537,
                    "p95": 1539.2646869999999,
                    "p99": 1539.2646869999999,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1345.572764,
                    "min": 1174.0200399999999,
                    "p50": 1212.9658,
                    "p95": 1345.572764,
                    "p99": 1345.572764,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 783.55842,
                    "min": 682.4939479999999,
                    "p50": 707.09458,
                    "p95": 783.55842,
                    "p99": 783.55842,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 958.685039,
                    "min": 859.5600999999999,
                    "p50": 878.72345,
                    "p95": 958.685039,
                    "p99": 958.685039,
                    "n": 8,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2741.313938,
                    "min": 2468.442541,
                    "p50": 2499.4119069999997,
                    "p95": 2741.313938,
                    "p99": 2741.313938,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2924.0357679999997,
                    "min": 2621.485975,
                    "p50": 2669.645767,
                    "p95": 2924.0357679999997,
                    "p99": 2924.0357679999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2350.272571,
                    "min": 2084.44017,
                    "p50": 2162.823888,
                    "p95": 2350.272571,
                    "p99": 2350.272571,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3429.376151,
                    "min": 3037.715753,
                    "p50": 3114.431413,
                    "p95": 3429.376151,
                    "p99": 3429.376151,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 812.984188,
                    "min": 701.6804129999999,
                    "p50": 756.878524,
                    "p95": 812.984188,
                    "p99": 812.984188,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2178.3228329999997,
                    "min": 1908.303529,
                    "p50": 1970.9139499999999,
                    "p95": 2178.3228329999997,
                    "p99": 2178.3228329999997,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3937.084767,
                    "min": 3496.3453919999997,
                    "p50": 3554.361509,
                    "p95": 3937.084767,
                    "p99": 3937.084767,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1202.481636,
                    "min": 1044.0850249999999,
                    "p50": 1095.8886499999999,
                    "p95": 1202.481636,
                    "p99": 1202.481636,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1594.5766019999999,
                    "min": 1409.324023,
                    "p50": 1461.148958,
                    "p95": 1594.5766019999999,
                    "p99": 1594.5766019999999,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1401.472347,
                    "min": 1235.693523,
                    "p50": 1265.0822409999998,
                    "p95": 1401.472347,
                    "p99": 1401.472347,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1009.238345,
                    "min": 903.373154,
                    "p50": 918.546513,
                    "p95": 1009.238345,
                    "p99": 1009.238345,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1788.9895789999998,
                    "min": 1587.146771,
                    "p50": 1626.501767,
                    "p95": 1788.9895789999998,
                    "p99": 1788.9895789999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1982.9343199999998,
                    "min": 1745.2944149999998,
                    "p50": 1817.5003439999998,
                    "p95": 1982.9343199999998,
                    "p99": 1982.9343199999998,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 619.537526,
                    "min": 546.1365589999999,
                    "p50": 564.6426289999999,
                    "p95": 619.537526,
                    "p99": 619.537526,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2536.394285,
                    "min": 2289.009616,
                    "p50": 2350.7923189999997,
                    "p95": 2536.394285,
                    "p99": 2536.394285,
                    "n": 8,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1622.6315989999998,
                    "min": 1526.871651,
                    "p50": 1592.907878,
                    "p95": 1622.6315989999998,
                    "p99": 1622.6315989999998,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 990.002296,
                    "min": 931.262307,
                    "p50": 946.714358,
                    "p95": 990.002296,
                    "p99": 990.002296,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1177.489304,
                    "min": 1126.427009,
                    "p50": 1141.926461,
                    "p95": 1177.489304,
                    "p99": 1177.489304,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 765.999189,
                    "min": 712.4609489999999,
                    "p50": 745.152099,
                    "p95": 765.999189,
                    "p99": 765.999189,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 653.864346,
                    "min": 614.936958,
                    "p50": 637.026166,
                    "p95": 653.864346,
                    "p99": 653.864346,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1066.970472,
                    "min": 1016.254515,
                    "p50": 1042.891742,
                    "p95": 1066.970472,
                    "p99": 1066.970472,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 344.49388799999997,
                    "min": 306.348363,
                    "p50": 333.227718,
                    "p95": 344.49388799999997,
                    "p99": 344.49388799999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 445.09772399999997,
                    "min": 430.65117999999995,
                    "p50": 437.32887999999997,
                    "p95": 445.09772399999997,
                    "p99": 445.09772399999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 844.742533,
                    "min": 806.7698389999999,
                    "p50": 823.894159,
                    "p95": 844.742533,
                    "p99": 844.742533,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 544.400205,
                    "min": 508.679697,
                    "p50": 542.35396,
                    "p95": 544.400205,
                    "p99": 544.400205,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2116.7176999999997,
                    "min": 2007.87529,
                    "p50": 2047.3318439999998,
                    "p95": 2116.7176999999997,
                    "p99": 2116.7176999999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1275.6598159999999,
                    "min": 1213.617581,
                    "p50": 1243.320532,
                    "p95": 1275.6598159999999,
                    "p99": 1275.6598159999999,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1853.807388,
                    "min": 1754.223812,
                    "p50": 1797.420257,
                    "p95": 1853.807388,
                    "p99": 1853.807388,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1464.722473,
                    "min": 1412.4244159999998,
                    "p50": 1433.598643,
                    "p95": 1464.722473,
                    "p99": 1464.722473,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1362.309847,
                    "min": 1299.2730119999999,
                    "p50": 1349.200414,
                    "p95": 1362.309847,
                    "p99": 1362.309847,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3089.7473769999997,
                    "min": 3013.112098,
                    "p50": 3050.2310079999997,
                    "p95": 3089.7473769999997,
                    "p99": 3089.7473769999997,
                    "n": 8,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2126.3688819999998,
                    "min": 1865.087799,
                    "p50": 2066.602868,
                    "p95": 2126.3688819999998,
                    "p99": 2126.3688819999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1776.968519,
                    "min": 1378.87189,
                    "p50": 1535.987646,
                    "p95": 1776.968519,
                    "p99": 1776.968519,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2122.698315,
                    "min": 1647.217619,
                    "p50": 1835.003146,
                    "p95": 2122.698315,
                    "p99": 2122.698315,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3248.508329,
                    "min": 2540.702276,
                    "p50": 2824.907707,
                    "p95": 3248.508329,
                    "p99": 3248.508329,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2848.646621,
                    "min": 2231.728146,
                    "p50": 2454.212173,
                    "p95": 2848.646621,
                    "p99": 2848.646621,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1955.52053,
                    "min": 1536.480353,
                    "p50": 1699.636761,
                    "p95": 1955.52053,
                    "p99": 1955.52053,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 518.566144,
                    "min": 419.140045,
                    "p50": 454.576008,
                    "p95": 518.566144,
                    "p99": 518.566144,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 674.628346,
                    "min": 537.584313,
                    "p50": 591.563181,
                    "p95": 674.628346,
                    "p99": 674.628346,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1614.302089,
                    "min": 1290.5716149999998,
                    "p50": 1411.931552,
                    "p95": 1614.302089,
                    "p99": 1614.302089,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 987.355204,
                    "min": 787.47389,
                    "p50": 860.245992,
                    "p95": 987.355204,
                    "p99": 987.355204,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1455.1903109999998,
                    "min": 1160.252659,
                    "p50": 1280.284833,
                    "p95": 1455.1903109999998,
                    "p99": 1455.1903109999998,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 828.2015379999999,
                    "min": 658.3127099999999,
                    "p50": 724.7868149999999,
                    "p95": 828.2015379999999,
                    "p99": 828.2015379999999,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2243.447104,
                    "min": 1784.0198639999999,
                    "p50": 1967.166958,
                    "p95": 2243.447104,
                    "p99": 2243.447104,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1300.333216,
                    "min": 1014.7852499999999,
                    "p50": 1125.705913,
                    "p95": 1300.333216,
                    "p99": 1300.333216,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1136.503728,
                    "min": 910.944905,
                    "p50": 995.304988,
                    "p95": 1136.503728,
                    "p99": 1136.503728,
                    "n": 8,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1397.012338,
                    "min": 1179.019051,
                    "p50": 1259.449503,
                    "p95": 1397.012338,
                    "p99": 1397.012338,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 582.751255,
                    "min": 469.452609,
                    "p50": 530.410811,
                    "p95": 582.751255,
                    "p99": 582.751255,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1121.462865,
                    "min": 956.0670259999999,
                    "p50": 1017.8612069999999,
                    "p95": 1121.462865,
                    "p99": 1121.462865,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 987.223295,
                    "min": 841.7486799999999,
                    "p50": 897.7910009999999,
                    "p95": 987.223295,
                    "p99": 987.223295,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 850.61393,
                    "min": 725.7101,
                    "p50": 776.927146,
                    "p95": 850.61393,
                    "p99": 850.61393,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2068.450477,
                    "min": 1737.987083,
                    "p50": 1862.888642,
                    "p95": 2068.450477,
                    "p99": 2068.450477,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1799.163261,
                    "min": 1523.598403,
                    "p50": 1606.6133419999999,
                    "p95": 1799.163261,
                    "p99": 1799.163261,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2744.9733859999997,
                    "min": 2319.967599,
                    "p50": 2447.877308,
                    "p95": 2744.9733859999997,
                    "p99": 2744.9733859999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4110.534337,
                    "min": 3451.0540699999997,
                    "p50": 3692.319481,
                    "p95": 4110.534337,
                    "p99": 4110.534337,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1666.34793,
                    "min": 1407.199954,
                    "p50": 1483.9354959999998,
                    "p95": 1666.34793,
                    "p99": 1666.34793,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 720.604113,
                    "min": 610.797973,
                    "p50": 645.769685,
                    "p95": 720.604113,
                    "p99": 720.604113,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1518.2650019999999,
                    "min": 1288.866448,
                    "p50": 1358.125448,
                    "p95": 1518.2650019999999,
                    "p99": 1518.2650019999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 453.49724699999996,
                    "min": 372.635726,
                    "p50": 404.253446,
                    "p95": 453.49724699999996,
                    "p99": 453.49724699999996,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1963.493508,
                    "min": 1636.33449,
                    "p50": 1728.5568289999999,
                    "p95": 1963.493508,
                    "p99": 1963.493508,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2450.1172309999997,
                    "min": 2039.4852939999998,
                    "p50": 2173.578067,
                    "p95": 2450.1172309999997,
                    "p99": 2450.1172309999997,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1261.3546939999999,
                    "min": 1035.305102,
                    "p50": 1126.894544,
                    "p95": 1261.3546939999999,
                    "p99": 1261.3546939999999,
                    "n": 8,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2341.8125849999997,
                    "min": 2280.105722,
                    "p50": 2309.901797,
                    "p95": 2341.8125849999997,
                    "p99": 2341.8125849999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 580.601618,
                    "min": 546.606261,
                    "p50": 553.9182529999999,
                    "p95": 580.601618,
                    "p99": 580.601618,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 387.26739399999997,
                    "min": 374.615366,
                    "p50": 380.01372599999996,
                    "p95": 387.26739399999997,
                    "p99": 387.26739399999997,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 737.809978,
                    "min": 713.205007,
                    "p50": 720.7043209999999,
                    "p95": 737.809978,
                    "p99": 737.809978,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 274.594948,
                    "min": 232.04177299999998,
                    "p50": 266.017359,
                    "p95": 274.594948,
                    "p99": 274.594948,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1185.853319,
                    "min": 1139.414028,
                    "p50": 1174.711261,
                    "p95": 1185.853319,
                    "p99": 1185.853319,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 910.162014,
                    "min": 872.4786859999999,
                    "p50": 894.0600989999999,
                    "p95": 910.162014,
                    "p99": 910.162014,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 844.6801519999999,
                    "min": 817.931687,
                    "p50": 834.037926,
                    "p95": 844.6801519999999,
                    "p99": 844.6801519999999,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 211.130976,
                    "min": 177.58785,
                    "p50": 207.7034,
                    "p95": 211.130976,
                    "p99": 211.130976,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 332.88348099999996,
                    "min": 285.89947,
                    "p50": 322.24186499999996,
                    "p95": 332.88348099999996,
                    "p99": 332.88348099999996,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1081.806871,
                    "min": 1011.8124929999999,
                    "p50": 1033.528444,
                    "p95": 1081.806871,
                    "p99": 1081.806871,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 585.987653,
                    "min": 461.888694,
                    "p50": 491.77327499999996,
                    "p95": 585.987653,
                    "p99": 585.987653,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 671.615043,
                    "min": 652.442947,
                    "p50": 666.483537,
                    "p95": 671.615043,
                    "p99": 671.615043,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 448.083216,
                    "min": 430.475502,
                    "p50": 437.865035,
                    "p95": 448.083216,
                    "p99": 448.083216,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 796.437161,
                    "min": 765.485722,
                    "p50": 778.615319,
                    "p95": 796.437161,
                    "p99": 796.437161,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1773.890801,
                    "min": 1731.854846,
                    "p50": 1749.647252,
                    "p95": 1773.890801,
                    "p99": 1773.890801,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2907.535523,
                    "min": 2846.108598,
                    "p50": 2900.532976,
                    "p95": 2907.535523,
                    "p99": 2907.535523,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 618.546438,
                    "min": 597.49234,
                    "p50": 606.5188069999999,
                    "p95": 618.546438,
                    "p99": 618.546438,
                    "n": 8,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 468.43805399999997,
                    "min": 422.155313,
                    "p50": 464.233927,
                    "p95": 468.43805399999997,
                    "p99": 468.43805399999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1426.4977549999999,
                    "min": 1206.681959,
                    "p50": 1247.021096,
                    "p95": 1426.4977549999999,
                    "p99": 1426.4977549999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1880.607027,
                    "min": 1798.690009,
                    "p50": 1857.8627729999998,
                    "p95": 1880.607027,
                    "p99": 1880.607027,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3082.970242,
                    "min": 2956.038717,
                    "p50": 3073.247395,
                    "p95": 3082.970242,
                    "p99": 3082.970242,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2485.683606,
                    "min": 2393.4362189999997,
                    "p50": 2454.376875,
                    "p95": 2485.683606,
                    "p99": 2485.683606,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 528.240596,
                    "min": 491.71103,
                    "p50": 520.853855,
                    "p95": 528.240596,
                    "p99": 528.240596,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1110.104421,
                    "min": 1063.6983519999999,
                    "p50": 1092.011549,
                    "p95": 1110.104421,
                    "p99": 1110.104421,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 409.153893,
                    "min": 387.345266,
                    "p50": 401.618796,
                    "p95": 409.153893,
                    "p99": 409.153893,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 894.8073519999999,
                    "min": 851.940019,
                    "p50": 873.4029989999999,
                    "p95": 894.8073519999999,
                    "p99": 894.8073519999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 953.283275,
                    "min": 912.748844,
                    "p50": 944.3665139999999,
                    "p95": 953.283275,
                    "p99": 953.283275,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.00390699999997,
                    "min": 264.974652,
                    "p50": 276.984674,
                    "p95": 288.00390699999997,
                    "p99": 288.00390699999997,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 710.63258,
                    "min": 674.8137429999999,
                    "p50": 703.593297,
                    "p95": 710.63258,
                    "p99": 710.63258,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 787.645085,
                    "min": 750.165765,
                    "p50": 760.613531,
                    "p95": 787.645085,
                    "p99": 787.645085,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 349.825398,
                    "min": 297.952635,
                    "p50": 340.19185899999997,
                    "p95": 349.825398,
                    "p99": 349.825398,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 220.377864,
                    "min": 181.169713,
                    "p50": 217.330546,
                    "p95": 220.377864,
                    "p99": 220.377864,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 832.803876,
                    "min": 772.5220889999999,
                    "p50": 826.875514,
                    "p95": 832.803876,
                    "p99": 832.803876,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 651.1965739999999,
                    "min": 615.45105,
                    "p50": 644.912382,
                    "p95": 651.1965739999999,
                    "p99": 651.1965739999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 586.586102,
                    "min": 560.8123519999999,
                    "p50": 580.731094,
                    "p95": 586.586102,
                    "p99": 586.586102,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 994.6440799999999,
                    "min": 945.1610169999999,
                    "p50": 963.7900139999999,
                    "p95": 994.6440799999999,
                    "p99": 994.6440799999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1494.323255,
                    "min": 1452.433216,
                    "p50": 1487.192861,
                    "p95": 1494.323255,
                    "p99": 1494.323255,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1291.2553699999999,
                    "min": 1252.656378,
                    "p50": 1274.8080479999999,
                    "p95": 1291.2553699999999,
                    "p99": 1291.2553699999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 349.678898,
                    "min": 333.174699,
                    "p50": 345.388741,
                    "p95": 349.678898,
                    "p99": 349.678898,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2116.277111,
                    "min": 2057.615995,
                    "p50": 2101.2242149999997,
                    "p95": 2116.277111,
                    "p99": 2116.277111,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 866.217466,
                    "min": 846.370788,
                    "p50": 863.3483249999999,
                    "p95": 866.217466,
                    "p99": 866.217466,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 554.467101,
                    "min": 531.5629279999999,
                    "p50": 546.0826129999999,
                    "p95": 554.467101,
                    "p99": 554.467101,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1178.121197,
                    "min": 1150.041389,
                    "p50": 1161.663629,
                    "p95": 1178.121197,
                    "p99": 1178.121197,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 665.389112,
                    "min": 640.8785389999999,
                    "p50": 654.7232769999999,
                    "p95": 665.389112,
                    "p99": 665.389112,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1855.622382,
                    "min": 1802.499414,
                    "p50": 1844.044388,
                    "p95": 1855.622382,
                    "p99": 1855.622382,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 457.507495,
                    "min": 443.04062799999997,
                    "p50": 445.944005,
                    "p95": 457.507495,
                    "p99": 457.507495,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1630.911197,
                    "min": 1546.494766,
                    "p50": 1586.934751,
                    "p95": 1630.911197,
                    "p99": 1630.911197,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 789.3495849999999,
                    "min": 739.058199,
                    "p50": 763.2537169999999,
                    "p95": 789.3495849999999,
                    "p99": 789.3495849999999,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1394.450408,
                    "min": 1345.793236,
                    "p50": 1373.92151,
                    "p95": 1394.450408,
                    "p99": 1394.450408,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1080.385079,
                    "min": 1048.499531,
                    "p50": 1063.5009089999999,
                    "p95": 1080.385079,
                    "p99": 1080.385079,
                    "n": 8,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 749.74083,
                    "min": 599.4506749999999,
                    "p50": 639.431611,
                    "p95": 749.74083,
                    "p99": 749.74083,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1932.0076199999999,
                    "min": 1759.198537,
                    "p50": 1852.365394,
                    "p95": 1932.0076199999999,
                    "p99": 1932.0076199999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1180.361015,
                    "min": 1073.605844,
                    "p50": 1136.7198779999999,
                    "p95": 1180.361015,
                    "p99": 1180.361015,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1653.115286,
                    "min": 1544.936459,
                    "p50": 1614.933429,
                    "p95": 1653.115286,
                    "p99": 1653.115286,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2576.082492,
                    "min": 2368.764917,
                    "p50": 2454.0445799999998,
                    "p95": 2576.082492,
                    "p99": 2576.082492,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1433.134292,
                    "min": 1305.4559399999998,
                    "p50": 1352.906471,
                    "p95": 1433.134292,
                    "p99": 1433.134292,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1820.6418609999998,
                    "min": 1644.927219,
                    "p50": 1735.455858,
                    "p95": 1820.6418609999998,
                    "p99": 1820.6418609999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3876.4961559999997,
                    "min": 3525.826082,
                    "p50": 3698.899786,
                    "p95": 3876.4961559999997,
                    "p99": 3876.4961559999997,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 936.6790159999999,
                    "min": 845.616958,
                    "p50": 889.444759,
                    "p95": 936.6790159999999,
                    "p99": 936.6790159999999,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 421.92794799999996,
                    "min": 384.399385,
                    "p50": 401.738925,
                    "p95": 421.92794799999996,
                    "p99": 421.92794799999996,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1322.013037,
                    "min": 1174.950191,
                    "p50": 1248.265056,
                    "p95": 1322.013037,
                    "p99": 1322.013037,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 799.624788,
                    "min": 727.766395,
                    "p50": 763.936954,
                    "p95": 799.624788,
                    "p99": 799.624788,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 549.170447,
                    "min": 496.875924,
                    "p50": 526.7752009999999,
                    "p95": 549.170447,
                    "p99": 549.170447,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1050.639294,
                    "min": 963.937252,
                    "p50": 1004.12236,
                    "p95": 1050.639294,
                    "p99": 1050.639294,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2277.93192,
                    "min": 2051.163256,
                    "p50": 2154.846688,
                    "p95": 2277.93192,
                    "p99": 2277.93192,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1561.0233039999998,
                    "min": 1419.484896,
                    "p50": 1503.378643,
                    "p95": 1561.0233039999998,
                    "p99": 1561.0233039999998,
                    "n": 8,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1399.46684,
                    "min": 1348.681824,
                    "p50": 1383.538556,
                    "p95": 1399.46684,
                    "p99": 1399.46684,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1662.197719,
                    "min": 1586.383637,
                    "p50": 1625.341269,
                    "p95": 1662.197719,
                    "p99": 1662.197719,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1759.7315019999999,
                    "min": 1701.3935359999998,
                    "p50": 1725.868467,
                    "p95": 1759.7315019999999,
                    "p99": 1759.7315019999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1083.100815,
                    "min": 1027.863405,
                    "p50": 1050.015864,
                    "p95": 1083.100815,
                    "p99": 1083.100815,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 733.740563,
                    "min": 705.354052,
                    "p50": 717.632557,
                    "p95": 733.740563,
                    "p99": 733.740563,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 958.029728,
                    "min": 901.8807099999999,
                    "p50": 937.6289949999999,
                    "p95": 958.029728,
                    "p99": 958.029728,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 493.08856699999995,
                    "min": 474.930211,
                    "p50": 487.678293,
                    "p95": 493.08856699999995,
                    "p99": 493.08856699999995,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 607.1243039999999,
                    "min": 583.252601,
                    "p50": 602.194401,
                    "p95": 607.1243039999999,
                    "p99": 607.1243039999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1185.932979,
                    "min": 1126.840619,
                    "p50": 1163.586726,
                    "p95": 1185.932979,
                    "p99": 1185.932979,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 834.9332509999999,
                    "min": 797.0545609999999,
                    "p50": 826.9958459999999,
                    "p95": 834.9332509999999,
                    "p99": 834.9332509999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2319.61665,
                    "min": 2252.97136,
                    "p50": 2283.065677,
                    "p95": 2319.61665,
                    "p99": 2319.61665,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1300.9396669999999,
                    "min": 1252.76583,
                    "p50": 1280.930425,
                    "p95": 1300.9396669999999,
                    "p99": 1300.9396669999999,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2046.1545119999998,
                    "min": 1973.434462,
                    "p50": 2012.031751,
                    "p95": 2046.1545119999998,
                    "p99": 2046.1545119999998,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 383.93009,
                    "min": 367.170903,
                    "p50": 377.122657,
                    "p95": 383.93009,
                    "p99": 383.93009,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1538.096274,
                    "min": 1485.508369,
                    "p50": 1499.559074,
                    "p95": 1538.096274,
                    "p99": 1538.096274,
                    "n": 8,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 995.708773,
                    "min": 956.8054589999999,
                    "p50": 984.773963,
                    "p95": 995.708773,
                    "p99": 995.708773,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 529.338488,
                    "min": 477.347423,
                    "p50": 504.962444,
                    "p95": 529.338488,
                    "p99": 529.338488,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 361.560057,
                    "min": 347.81080599999996,
                    "p50": 351.84954,
                    "p95": 361.560057,
                    "p99": 361.560057,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 277.216635,
                    "min": 254.57108499999998,
                    "p50": 270.984821,
                    "p95": 277.216635,
                    "p99": 277.216635,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1080.974899,
                    "min": 1041.3429999999998,
                    "p50": 1047.9580449999999,
                    "p95": 1080.974899,
                    "p99": 1080.974899,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1247.6760709999999,
                    "min": 1165.470446,
                    "p50": 1199.5811629999998,
                    "p95": 1247.6760709999999,
                    "p99": 1247.6760709999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 764.736044,
                    "min": 731.315389,
                    "p50": 736.5273659999999,
                    "p95": 764.736044,
                    "p99": 764.736044,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1645.85937,
                    "min": 1577.317734,
                    "p50": 1581.157115,
                    "p95": 1645.85937,
                    "p99": 1645.85937,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 842.4752589999999,
                    "min": 800.839831,
                    "p50": 812.812278,
                    "p95": 842.4752589999999,
                    "p99": 842.4752589999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 605.8775009999999,
                    "min": 572.677647,
                    "p50": 583.884403,
                    "p95": 605.8775009999999,
                    "p99": 605.8775009999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1439.092173,
                    "min": 1376.390292,
                    "p50": 1405.974314,
                    "p95": 1439.092173,
                    "p99": 1439.092173,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1159.382595,
                    "min": 1121.243944,
                    "p50": 1129.276891,
                    "p95": 1159.382595,
                    "p99": 1159.382595,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 439.452831,
                    "min": 422.409949,
                    "p50": 427.744357,
                    "p95": 439.452831,
                    "p99": 439.452831,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 680.7937539999999,
                    "min": 648.928851,
                    "p50": 661.8435499999999,
                    "p95": 680.7937539999999,
                    "p99": 680.7937539999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 2436.8917739999997,
                    "min": 2352.421,
                    "p50": 2359.5346489999997,
                    "p95": 2436.8917739999997,
                    "p99": 2436.8917739999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 922.6426439999999,
                    "min": 862.733714,
                    "p50": 892.896385,
                    "p95": 922.6426439999999,
                    "p99": 922.6426439999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3235.0422409999996,
                    "min": 3115.8696929999996,
                    "p50": 3161.019804,
                    "p95": 3235.0422409999996,
                    "p99": 3235.0422409999996,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1050.826035,
                    "min": 1018.3915129999999,
                    "p50": 1042.348374,
                    "p95": 1050.826035,
                    "p99": 1050.826035,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 566.504376,
                    "min": 528.947383,
                    "p50": 544.775491,
                    "p95": 566.504376,
                    "p99": 566.504376,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2095.5188479999997,
                    "min": 2017.3060919999998,
                    "p50": 2061.359506,
                    "p95": 2095.5188479999997,
                    "p99": 2095.5188479999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1493.930378,
                    "min": 1444.3565159999998,
                    "p50": 1464.043618,
                    "p95": 1493.930378,
                    "p99": 1493.930378,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 662.281115,
                    "min": 620.456496,
                    "p50": 645.154682,
                    "p95": 662.281115,
                    "p99": 662.281115,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1587.795644,
                    "min": 1526.07701,
                    "p50": 1559.788128,
                    "p95": 1587.795644,
                    "p99": 1587.795644,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 758.2378759999999,
                    "min": 725.606469,
                    "p50": 749.5227699999999,
                    "p95": 758.2378759999999,
                    "p99": 758.2378759999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1273.4606079999999,
                    "min": 1221.743859,
                    "p50": 1262.490585,
                    "p95": 1273.4606079999999,
                    "p99": 1273.4606079999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 964.949338,
                    "min": 923.0160659999999,
                    "p50": 949.035705,
                    "p95": 964.949338,
                    "p99": 964.949338,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1372.5889949999998,
                    "min": 1325.823958,
                    "p50": 1352.0128519999998,
                    "p95": 1372.5889949999998,
                    "p99": 1372.5889949999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1835.03919,
                    "min": 1772.5835009999998,
                    "p50": 1811.180684,
                    "p95": 1835.03919,
                    "p99": 1835.03919,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 866.679088,
                    "min": 810.2319689999999,
                    "p50": 845.401302,
                    "p95": 866.679088,
                    "p99": 866.679088,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1160.198332,
                    "min": 1126.664145,
                    "p50": 1149.705553,
                    "p95": 1160.198332,
                    "p99": 1160.198332,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 345.672356,
                    "min": 326.481692,
                    "p50": 340.564627,
                    "p95": 345.672356,
                    "p99": 345.672356,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 451.929446,
                    "min": 413.508877,
                    "p50": 440.568763,
                    "p95": 451.929446,
                    "p99": 451.929446,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1410.775258,
                    "min": 1316.661777,
                    "p50": 1363.5395999999998,
                    "p95": 1410.775258,
                    "p99": 1410.775258,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 576.664628,
                    "min": 558.788249,
                    "p50": 572.096441,
                    "p95": 576.664628,
                    "p99": 576.664628,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1662.408639,
                    "min": 1607.6092669999998,
                    "p50": 1631.7145739999999,
                    "p95": 1662.408639,
                    "p99": 1662.408639,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1937.252115,
                    "min": 1886.136747,
                    "p50": 1910.3511199999998,
                    "p95": 1937.252115,
                    "p99": 1937.252115,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 717.047687,
                    "min": 686.979711,
                    "p50": 705.338624,
                    "p95": 717.047687,
                    "p99": 717.047687,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1271.963018,
                    "min": 1198.3057589999999,
                    "p50": 1238.926312,
                    "p95": 1271.963018,
                    "p99": 1271.963018,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1126.2376259999999,
                    "min": 1097.963835,
                    "p50": 1104.6025809999999,
                    "p95": 1126.2376259999999,
                    "p99": 1126.2376259999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 870.4810699999999,
                    "min": 832.047118,
                    "p50": 839.116535,
                    "p95": 870.4810699999999,
                    "p99": 870.4810699999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 447.17613,
                    "min": 434.05882199999996,
                    "p50": 438.333728,
                    "p95": 447.17613,
                    "p99": 447.17613,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2411.630482,
                    "min": 2349.2199689999998,
                    "p50": 2389.4707209999997,
                    "p95": 2411.630482,
                    "p99": 2411.630482,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1521.243424,
                    "min": 1484.867072,
                    "p50": 1512.095818,
                    "p95": 1521.243424,
                    "p99": 1521.243424,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1822.580577,
                    "min": 1747.8136889999998,
                    "p50": 1790.3616399999999,
                    "p95": 1822.580577,
                    "p99": 1822.580577,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2749.1497219999997,
                    "min": 2690.9976939999997,
                    "p50": 2732.104526,
                    "p95": 2749.1497219999997,
                    "p99": 2749.1497219999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2079.4060999999997,
                    "min": 2005.163382,
                    "p50": 2054.713115,
                    "p95": 2079.4060999999997,
                    "p99": 2079.4060999999997,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 986.1696069999999,
                    "min": 959.1060789999999,
                    "p50": 976.057568,
                    "p95": 986.1696069999999,
                    "p99": 986.1696069999999,
                    "n": 8,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1840.1212939999998,
                    "min": 1775.566826,
                    "p50": 1807.119324,
                    "p95": 1840.1212939999998,
                    "p99": 1840.1212939999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1078.4287339999998,
                    "min": 1045.2175029999999,
                    "p50": 1065.7471719999999,
                    "p95": 1078.4287339999998,
                    "p99": 1078.4287339999998,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1483.417505,
                    "min": 1435.147788,
                    "p50": 1462.18993,
                    "p95": 1483.417505,
                    "p99": 1483.417505,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1602.962618,
                    "min": 1516.945109,
                    "p50": 1570.6601779999999,
                    "p95": 1602.962618,
                    "p99": 1602.962618,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2103.568668,
                    "min": 2023.815328,
                    "p50": 2083.299091,
                    "p95": 2103.568668,
                    "p99": 2103.568668,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1176.876908,
                    "min": 1131.960317,
                    "p50": 1155.240382,
                    "p95": 1176.876908,
                    "p99": 1176.876908,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 656.755625,
                    "min": 634.926637,
                    "p50": 654.980372,
                    "p95": 656.755625,
                    "p99": 656.755625,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 867.957129,
                    "min": 832.9679199999999,
                    "p50": 855.649858,
                    "p95": 867.957129,
                    "p99": 867.957129,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1388.378115,
                    "min": 1345.276959,
                    "p50": 1365.0337909999998,
                    "p95": 1388.378115,
                    "p99": 1388.378115,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1267.53379,
                    "min": 1245.400365,
                    "p50": 1261.5486449999999,
                    "p95": 1267.53379,
                    "p99": 1267.53379,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3126.977089,
                    "min": 3065.4487569999997,
                    "p50": 3114.8643939999997,
                    "p95": 3126.977089,
                    "p99": 3126.977089,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 754.964427,
                    "min": 731.38708,
                    "p50": 743.969528,
                    "p95": 754.964427,
                    "p99": 754.964427,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 345.44780299999996,
                    "min": 332.212726,
                    "p50": 343.13557,
                    "p95": 345.44780299999996,
                    "p99": 345.44780299999996,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 561.678578,
                    "min": 538.927017,
                    "p50": 548.4862459999999,
                    "p95": 561.678578,
                    "p99": 561.678578,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 975.331327,
                    "min": 935.3616529999999,
                    "p50": 949.9429289999999,
                    "p95": 975.331327,
                    "p99": 975.331327,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 447.76914899999997,
                    "min": 425.57989499999996,
                    "p50": 439.413834,
                    "p95": 447.76914899999997,
                    "p99": 447.76914899999997,
                    "n": 8,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1569.384298,
                    "min": 1526.0027519999999,
                    "p50": 1556.210515,
                    "p95": 1569.384298,
                    "p99": 1569.384298,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 764.27697,
                    "min": 740.4858889999999,
                    "p50": 754.486303,
                    "p95": 764.27697,
                    "p99": 764.27697,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 349.018672,
                    "min": 311.08885699999996,
                    "p50": 343.469456,
                    "p95": 349.018672,
                    "p99": 349.018672,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 448.92792699999995,
                    "min": 440.58944199999996,
                    "p50": 444.921228,
                    "p95": 448.92792699999995,
                    "p99": 448.92792699999995,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1066.734416,
                    "min": 1012.7124769999999,
                    "p50": 1057.5483629999999,
                    "p95": 1066.734416,
                    "p99": 1066.734416,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 662.0056989999999,
                    "min": 637.977121,
                    "p50": 647.906059,
                    "p95": 662.0056989999999,
                    "p99": 662.0056989999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2099.906649,
                    "min": 2055.587141,
                    "p50": 2068.936326,
                    "p95": 2099.906649,
                    "p99": 2099.906649,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 552.521701,
                    "min": 541.664104,
                    "p50": 549.1614119999999,
                    "p95": 552.521701,
                    "p99": 552.521701,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1160.299761,
                    "min": 1118.9896019999999,
                    "p50": 1154.8173219999999,
                    "p95": 1160.299761,
                    "p99": 1160.299761,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 863.6648879999999,
                    "min": 814.069659,
                    "p50": 850.888331,
                    "p95": 863.6648879999999,
                    "p99": 863.6648879999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1264.353925,
                    "min": 1229.071233,
                    "p50": 1253.695857,
                    "p95": 1264.353925,
                    "p99": 1264.353925,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1394.9088239999999,
                    "min": 1331.285433,
                    "p50": 1360.937031,
                    "p95": 1394.9088239999999,
                    "p99": 1394.9088239999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1835.1773409999998,
                    "min": 1795.4230699999998,
                    "p50": 1821.5054619999999,
                    "p95": 1835.1773409999998,
                    "p99": 1835.1773409999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1475.9103,
                    "min": 1442.2144309999999,
                    "p50": 1465.483937,
                    "p95": 1475.9103,
                    "p99": 1475.9103,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 966.208769,
                    "min": 913.911353,
                    "p50": 950.66566,
                    "p95": 966.208769,
                    "p99": 966.208769,
                    "n": 8,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 537.746617,
                    "min": 501.390674,
                    "p50": 531.5952169999999,
                    "p95": 537.746617,
                    "p99": 537.746617,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1954.564328,
                    "min": 1855.23462,
                    "p50": 1894.273718,
                    "p95": 1954.564328,
                    "p99": 1954.564328,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1418.128043,
                    "min": 1374.414765,
                    "p50": 1398.3841909999999,
                    "p95": 1418.128043,
                    "p99": 1418.128043,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1160.624777,
                    "min": 1129.841203,
                    "p50": 1156.4884459999998,
                    "p95": 1160.624777,
                    "p99": 1160.624777,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 805.8226139999999,
                    "min": 767.9686959999999,
                    "p50": 781.954672,
                    "p95": 805.8226139999999,
                    "p99": 805.8226139999999,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 413.151661,
                    "min": 386.286618,
                    "p50": 407.090394,
                    "p95": 413.151661,
                    "p99": 413.151661,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 660.77027,
                    "min": 627.2172889999999,
                    "p50": 658.021497,
                    "p95": 660.77027,
                    "p99": 660.77027,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1793.8061,
                    "min": 1742.704665,
                    "p50": 1773.234223,
                    "p95": 1793.8061,
                    "p99": 1793.8061,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2267.523954,
                    "min": 2162.918676,
                    "p50": 2204.494059,
                    "p95": 2267.523954,
                    "p99": 2267.523954,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 911.496145,
                    "min": 894.640285,
                    "p50": 907.165492,
                    "p95": 911.496145,
                    "p99": 911.496145,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1286.892337,
                    "min": 1259.0446239999999,
                    "p50": 1272.46149,
                    "p95": 1286.892337,
                    "p99": 1286.892337,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2544.275969,
                    "min": 2479.320827,
                    "p50": 2510.36743,
                    "p95": 2544.275969,
                    "p99": 2544.275969,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1532.1733869999998,
                    "min": 1493.916601,
                    "p50": 1519.8097539999999,
                    "p95": 1532.1733869999998,
                    "p99": 1532.1733869999998,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1049.850441,
                    "min": 995.6350769999999,
                    "p50": 1031.6110489999999,
                    "p95": 1049.850441,
                    "p99": 1049.850441,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1677.367266,
                    "min": 1626.5774689999998,
                    "p50": 1669.888827,
                    "p95": 1677.367266,
                    "p99": 1677.367266,
                    "n": 8,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2595.465926,
                    "min": 2436.320682,
                    "p50": 2482.2662769999997,
                    "p95": 2595.465926,
                    "p99": 2595.465926,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1386.8546039999999,
                    "min": 1297.241726,
                    "p50": 1336.675117,
                    "p95": 1386.8546039999999,
                    "p99": 1386.8546039999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1747.743098,
                    "min": 1624.855851,
                    "p50": 1653.412959,
                    "p95": 1747.743098,
                    "p99": 1747.743098,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1881.2918949999998,
                    "min": 1790.898956,
                    "p50": 1812.947964,
                    "p95": 1881.2918949999998,
                    "p99": 1881.2918949999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2363.22429,
                    "min": 2256.832293,
                    "p50": 2307.027999,
                    "p95": 2363.22429,
                    "p99": 2363.22429,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2215.105006,
                    "min": 2110.491136,
                    "p50": 2147.107737,
                    "p95": 2215.105006,
                    "p99": 2215.105006,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 703.496014,
                    "min": 658.263472,
                    "p50": 684.423827,
                    "p95": 703.496014,
                    "p99": 703.496014,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1531.245439,
                    "min": 1481.37401,
                    "p50": 1507.5330159999999,
                    "p95": 1531.245439,
                    "p99": 1531.245439,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2053.757835,
                    "min": 1943.53046,
                    "p50": 1973.184593,
                    "p95": 2053.757835,
                    "p99": 2053.757835,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2955.3713119999998,
                    "min": 2826.3802579999997,
                    "p50": 2872.101671,
                    "p95": 2955.3713119999998,
                    "p99": 2955.3713119999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 860.9886439999999,
                    "min": 831.173065,
                    "p50": 846.640096,
                    "p95": 860.9886439999999,
                    "p99": 860.9886439999999,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1212.6908059999998,
                    "min": 1156.285562,
                    "p50": 1170.0504429999999,
                    "p95": 1212.6908059999998,
                    "p99": 1212.6908059999998,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 533.998779,
                    "min": 482.62231099999997,
                    "p50": 524.8841689999999,
                    "p95": 533.998779,
                    "p99": 533.998779,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1032.36836,
                    "min": 974.110115,
                    "p50": 1003.123444,
                    "p95": 1032.36836,
                    "p99": 1032.36836,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3378.36005,
                    "min": 3211.847733,
                    "p50": 3268.537112,
                    "p95": 3378.36005,
                    "p99": 3378.36005,
                    "n": 8,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3437.995035,
                    "min": 3217.623823,
                    "p50": 3305.265852,
                    "p95": 3437.995035,
                    "p99": 3437.995035,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2416.994299,
                    "min": 2288.958503,
                    "p50": 2322.7328159999997,
                    "p95": 2416.994299,
                    "p99": 2416.994299,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2064.706886,
                    "min": 1959.3727709999998,
                    "p50": 1993.199488,
                    "p95": 2064.706886,
                    "p99": 2064.706886,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1569.887876,
                    "min": 1465.650437,
                    "p50": 1506.421582,
                    "p95": 1569.887876,
                    "p99": 1569.887876,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1395.955763,
                    "min": 1313.014932,
                    "p50": 1336.810297,
                    "p95": 1395.955763,
                    "p99": 1395.955763,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1045.901909,
                    "min": 1003.136816,
                    "p50": 1012.0999509999999,
                    "p95": 1045.901909,
                    "p99": 1045.901909,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2206.0930829999998,
                    "min": 2120.902169,
                    "p50": 2153.1528519999997,
                    "p95": 2206.0930829999998,
                    "p99": 2206.0930829999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 713.43346,
                    "min": 664.619708,
                    "p50": 685.3290579999999,
                    "p95": 713.43346,
                    "p99": 713.43346,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1880.33252,
                    "min": 1806.731918,
                    "p50": 1826.223456,
                    "p95": 1880.33252,
                    "p99": 1880.33252,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 882.183913,
                    "min": 835.5324939999999,
                    "p50": 856.841913,
                    "p95": 882.183913,
                    "p99": 882.183913,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2980.990205,
                    "min": 2853.853913,
                    "p50": 2896.161078,
                    "p95": 2980.990205,
                    "p99": 2980.990205,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 536.0094829999999,
                    "min": 506.057907,
                    "p50": 527.303213,
                    "p95": 536.0094829999999,
                    "p99": 536.0094829999999,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1214.207214,
                    "min": 1153.6584249999999,
                    "p50": 1184.989491,
                    "p95": 1214.207214,
                    "p99": 1214.207214,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2553.4051289999998,
                    "min": 2437.9286629999997,
                    "p50": 2484.941806,
                    "p95": 2553.4051289999998,
                    "p99": 2553.4051289999998,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1731.628048,
                    "min": 1647.9576519999998,
                    "p50": 1659.269147,
                    "p95": 1731.628048,
                    "p99": 1731.628048,
                    "n": 8,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1922.316774,
                    "min": 1813.400015,
                    "p50": 1856.5837569999999,
                    "p95": 1922.316774,
                    "p99": 1922.316774,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1064.3274609999999,
                    "min": 981.850509,
                    "p50": 1023.618353,
                    "p95": 1064.3274609999999,
                    "p99": 1064.3274609999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 897.489383,
                    "min": 841.4367209999999,
                    "p50": 866.624191,
                    "p95": 897.489383,
                    "p99": 897.489383,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1722.979351,
                    "min": 1655.7564499999999,
                    "p50": 1682.901112,
                    "p95": 1722.979351,
                    "p99": 1722.979351,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3423.0393639999998,
                    "min": 3277.226298,
                    "p50": 3316.385716,
                    "p95": 3423.0393639999998,
                    "p99": 3423.0393639999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 713.635663,
                    "min": 686.079944,
                    "p50": 695.6060659999999,
                    "p95": 713.635663,
                    "p99": 713.635663,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1225.844544,
                    "min": 1168.297486,
                    "p50": 1191.717388,
                    "p95": 1225.844544,
                    "p99": 1225.844544,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 555.1549749999999,
                    "min": 525.246318,
                    "p50": 533.192443,
                    "p95": 555.1549749999999,
                    "p99": 555.1549749999999,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2640.587337,
                    "min": 2470.0391139999997,
                    "p50": 2517.737047,
                    "p95": 2640.587337,
                    "p99": 2640.587337,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2383.6963029999997,
                    "min": 2295.2556219999997,
                    "p50": 2345.467028,
                    "p95": 2383.6963029999997,
                    "p99": 2383.6963029999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2067.427858,
                    "min": 1991.756739,
                    "p50": 2010.832864,
                    "p95": 2067.427858,
                    "p99": 2067.427858,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2244.3795849999997,
                    "min": 2136.0218019999998,
                    "p50": 2185.671391,
                    "p95": 2244.3795849999997,
                    "p99": 2244.3795849999997,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1560.956228,
                    "min": 1462.713975,
                    "p50": 1524.07573,
                    "p95": 1560.956228,
                    "p99": 1560.956228,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3029.4234969999998,
                    "min": 2847.134184,
                    "p50": 2936.992768,
                    "p95": 3029.4234969999998,
                    "p99": 3029.4234969999998,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1400.091225,
                    "min": 1304.9973969999999,
                    "p50": 1348.8839309999998,
                    "p95": 1400.091225,
                    "p99": 1400.091225,
                    "n": 8,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 808.833893,
                    "min": 770.73838,
                    "p50": 796.550156,
                    "p95": 808.833893,
                    "p99": 808.833893,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 463.67292199999997,
                    "min": 427.82453999999996,
                    "p50": 452.11562299999997,
                    "p95": 463.67292199999997,
                    "p99": 463.67292199999997,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 934.4598709999999,
                    "min": 906.528864,
                    "p50": 926.332359,
                    "p95": 934.4598709999999,
                    "p99": 934.4598709999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1091.742741,
                    "min": 1056.032412,
                    "p50": 1073.91136,
                    "p95": 1091.742741,
                    "p99": 1091.742741,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 222.935913,
                    "min": 196.16764899999998,
                    "p50": 212.81743899999998,
                    "p95": 222.935913,
                    "p99": 222.935913,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 760.565198,
                    "min": 725.813986,
                    "p50": 749.934353,
                    "p95": 760.565198,
                    "p99": 760.565198,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 398.432936,
                    "min": 359.360821,
                    "p50": 392.860682,
                    "p95": 398.432936,
                    "p99": 398.432936,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.830465,
                    "min": 241.309184,
                    "p50": 273.624717,
                    "p95": 281.830465,
                    "p99": 281.830465,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1834.80107,
                    "min": 1781.6830439999999,
                    "p50": 1823.166252,
                    "p95": 1834.80107,
                    "p99": 1834.80107,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 578.565514,
                    "min": 540.629957,
                    "p50": 561.2233299999999,
                    "p95": 578.565514,
                    "p99": 578.565514,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 701.119977,
                    "min": 670.6255279999999,
                    "p50": 686.760485,
                    "p95": 701.119977,
                    "p99": 701.119977,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 896.2304949999999,
                    "min": 832.033472,
                    "p50": 868.747176,
                    "p95": 896.2304949999999,
                    "p99": 896.2304949999999,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 337.997646,
                    "min": 313.733784,
                    "p50": 332.40772999999996,
                    "p95": 337.997646,
                    "p99": 337.997646,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3194.804988,
                    "min": 2969.0595479999997,
                    "p50": 3002.628394,
                    "p95": 3194.804988,
                    "p99": 3194.804988,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1229.4437739999998,
                    "min": 1195.172464,
                    "p50": 1221.2769329999999,
                    "p95": 1229.4437739999998,
                    "p99": 1229.4437739999998,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 633.975091,
                    "min": 606.6011669999999,
                    "p50": 618.22935,
                    "p95": 633.975091,
                    "p99": 633.975091,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 519.749273,
                    "min": 474.568995,
                    "p50": 511.826571,
                    "p95": 519.749273,
                    "p99": 519.749273,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2458.316919,
                    "min": 2364.177382,
                    "p50": 2406.5419469999997,
                    "p95": 2458.316919,
                    "p99": 2458.316919,
                    "n": 8,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2763.160762,
                    "min": 2672.00591,
                    "p50": 2695.410102,
                    "p95": 2763.160762,
                    "p99": 2763.160762,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 851.690069,
                    "min": 807.541199,
                    "p50": 835.481775,
                    "p95": 851.690069,
                    "p99": 851.690069,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1795.4464859999998,
                    "min": 1758.427811,
                    "p50": 1778.693323,
                    "p95": 1795.4464859999998,
                    "p99": 1795.4464859999998,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1256.54983,
                    "min": 1219.2792299999999,
                    "p50": 1241.198033,
                    "p95": 1256.54983,
                    "p99": 1256.54983,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1386.403818,
                    "min": 1356.0983139999998,
                    "p50": 1380.621664,
                    "p95": 1386.403818,
                    "p99": 1386.403818,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 446.087379,
                    "min": 426.803594,
                    "p50": 440.506674,
                    "p95": 446.087379,
                    "p99": 446.087379,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1530.9984319999999,
                    "min": 1463.243188,
                    "p50": 1506.876217,
                    "p95": 1530.9984319999999,
                    "p99": 1530.9984319999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 715.690654,
                    "min": 698.97839,
                    "p50": 708.537924,
                    "p95": 715.690654,
                    "p99": 715.690654,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1942.6801639999999,
                    "min": 1878.883591,
                    "p50": 1914.8168409999998,
                    "p95": 1942.6801639999999,
                    "p99": 1942.6801639999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1118.231274,
                    "min": 1095.7835069999999,
                    "p50": 1111.85719,
                    "p95": 1118.231274,
                    "p99": 1118.231274,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2444.0236259999997,
                    "min": 2362.366267,
                    "p50": 2394.770261,
                    "p95": 2444.0236259999997,
                    "p99": 2444.0236259999997,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1668.4745189999999,
                    "min": 1634.57433,
                    "p50": 1649.233565,
                    "p95": 1668.4745189999999,
                    "p99": 1668.4745189999999,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 994.148503,
                    "min": 957.600374,
                    "p50": 976.8076259999999,
                    "p95": 994.148503,
                    "p99": 994.148503,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 582.670111,
                    "min": 564.565748,
                    "p50": 577.068038,
                    "p95": 582.670111,
                    "p99": 582.670111,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2056.783785,
                    "min": 2014.500088,
                    "p50": 2050.669235,
                    "p95": 2056.783785,
                    "p99": 2056.783785,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4127.642033,
                    "min": 3980.753899,
                    "p50": 4053.433393,
                    "p95": 4127.642033,
                    "p99": 4127.642033,
                    "n": 8,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 918.136275,
                    "min": 867.0902249999999,
                    "p50": 906.445037,
                    "p95": 918.136275,
                    "p99": 918.136275,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1026.5635539999998,
                    "min": 983.574706,
                    "p50": 997.8769729999999,
                    "p95": 1026.5635539999998,
                    "p99": 1026.5635539999998,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 533.62783,
                    "min": 512.945055,
                    "p50": 529.811913,
                    "p95": 533.62783,
                    "p99": 533.62783,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 843.967991,
                    "min": 800.0805809999999,
                    "p50": 821.440835,
                    "p95": 843.967991,
                    "p99": 843.967991,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1431.23963,
                    "min": 1345.7498289999999,
                    "p50": 1404.509914,
                    "p95": 1431.23963,
                    "p99": 1431.23963,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 343.953851,
                    "min": 315.674333,
                    "p50": 330.797573,
                    "p95": 343.953851,
                    "p99": 343.953851,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3022.157628,
                    "min": 2919.2537399999997,
                    "p50": 2951.535885,
                    "p95": 3022.157628,
                    "p99": 3022.157628,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1129.524663,
                    "min": 1075.100469,
                    "p50": 1096.9473289999999,
                    "p95": 1129.524663,
                    "p99": 1129.524663,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1330.037531,
                    "min": 1276.427698,
                    "p50": 1294.9308529999998,
                    "p95": 1330.037531,
                    "p99": 1330.037531,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 634.9801249999999,
                    "min": 613.66574,
                    "p50": 621.782278,
                    "p95": 634.9801249999999,
                    "p99": 634.9801249999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1777.10251,
                    "min": 1716.893429,
                    "p50": 1756.750282,
                    "p95": 1777.10251,
                    "p99": 1777.10251,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1232.545641,
                    "min": 1181.669873,
                    "p50": 1204.04771,
                    "p95": 1232.545641,
                    "p99": 1232.545641,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 731.8955119999999,
                    "min": 676.784848,
                    "p50": 714.341648,
                    "p95": 731.8955119999999,
                    "p99": 731.8955119999999,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 3973.385958,
                    "min": 3878.873992,
                    "p50": 3937.812977,
                    "p95": 3973.385958,
                    "p99": 3973.385958,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 430.242073,
                    "min": 410.408096,
                    "p50": 424.93329,
                    "p95": 430.242073,
                    "p99": 430.242073,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1536.670423,
                    "min": 1479.1765619999999,
                    "p50": 1490.3800239999998,
                    "p95": 1536.670423,
                    "p99": 1536.670423,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2030.666086,
                    "min": 1936.921797,
                    "p50": 1979.9936229999998,
                    "p95": 2030.666086,
                    "p99": 2030.666086,
                    "n": 8,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom8Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}