{
    "nethermind": [
        {
            "title": "GasLimit",
            "max": "332.08",
            "p50": "294.58",
            "p95": "169.23",
            "p99": "104.59",
            "min": "102.35",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "830.06",
            "p50": "660.57",
            "p95": "524.54",
            "p99": "500.88",
            "min": "499.49",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "459.08",
            "p50": "392.80",
            "p95": "318.09",
            "p99": "273.32",
            "min": "270.33",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "281.88",
            "p50": "253.87",
            "p95": "218.03",
            "p99": "203.25",
            "min": "202.93",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8048.56",
            "p50": "4443.18",
            "p95": "1117.19",
            "p99": "1082.65",
            "min": "1078.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "1101.55",
            "p50": "819.39",
            "p95": "538.20",
            "p99": "453.53",
            "min": "390.68",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "13223.23",
            "p50": "4381.31",
            "p95": "1122.46",
            "p99": "940.17",
            "min": "760.63",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "21889.07",
            "p50": "4443.58",
            "p95": "1108.51",
            "p99": "445.17",
            "min": "434.81",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1245.66",
            "p50": "886.29",
            "p95": "624.35",
            "p99": "588.79",
            "min": "582.92",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "453.35",
            "p50": "381.07",
            "p95": "282.52",
            "p99": "267.65",
            "min": "266.75",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "240.67",
            "p50": "222.55",
            "p95": "190.71",
            "p99": "179.58",
            "min": "179.47",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "70.77",
            "p50": "69.45",
            "p95": "66.24",
            "p99": "64.26",
            "min": "63.83",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "79.50",
            "p50": "75.74",
            "p95": "71.94",
            "p99": "69.52",
            "min": "68.87",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2188.36",
            "p50": "1444.22",
            "p95": "1004.29",
            "p99": "941.73",
            "min": "927.76",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.32",
            "p50": "68.21",
            "p95": "63.57",
            "p99": "62.44",
            "min": "62.40",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "70.30",
            "p50": "67.90",
            "p95": "64.30",
            "p99": "62.39",
            "min": "62.20",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1400.51",
            "p50": "1106.82",
            "p95": "675.26",
            "p99": "629.29",
            "min": "617.77",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3343.91",
            "p50": "1959.95",
            "p95": "1179.34",
            "p99": "1098.01",
            "min": "1096.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1429.13",
            "p50": "1053.53",
            "p95": "679.25",
            "p99": "659.84",
            "min": "657.91",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "135.22",
            "p50": "124.27",
            "p95": "118.02",
            "p99": "124.05",
            "min": "115.63",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "135.56",
            "p50": "127.34",
            "p95": "114.16",
            "p99": "120.93",
            "min": "113.05",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "167.26",
            "p50": "153.72",
            "p95": "138.81",
            "p99": "139.01",
            "min": "132.39",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "193.43",
            "p50": "147.55",
            "p95": "139.66",
            "p99": "162.62",
            "min": "139.37",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "129.24",
            "p50": "121.64",
            "p95": "112.77",
            "p99": "106.62",
            "min": "106.47",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "149.56",
            "p50": "141.49",
            "p95": "127.96",
            "p99": "121.29",
            "min": "120.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "130.25",
            "p50": "122.54",
            "p95": "112.79",
            "p99": "79.93",
            "min": "73.04",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "128.35",
            "p50": "122.08",
            "p95": "109.80",
            "p99": "83.81",
            "min": "78.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "752.47",
            "p50": "623.61",
            "p95": "447.96",
            "p99": "350.66",
            "min": "341.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "758.19",
            "p50": "664.67",
            "p95": "461.34",
            "p99": "370.22",
            "min": "365.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "689.48",
            "p50": "583.68",
            "p95": "407.31",
            "p99": "223.01",
            "min": "77.99",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "760.81",
            "p50": "635.83",
            "p95": "397.05",
            "p99": "198.00",
            "min": "82.51",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "224.77",
            "p50": "205.70",
            "p95": "165.15",
            "p99": "101.44",
            "min": "85.55",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "226.64",
            "p50": "200.84",
            "p95": "175.75",
            "p99": "153.80",
            "min": "151.00",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "235.94",
            "p50": "208.90",
            "p95": "181.68",
            "p99": "129.67",
            "min": "117.94",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "223.73",
            "p50": "207.24",
            "p95": "178.04",
            "p99": "128.29",
            "min": "118.21",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "237.28",
            "p50": "223.06",
            "p95": "178.64",
            "p99": "118.77",
            "min": "104.31",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "297.76",
            "p50": "266.45",
            "p95": "213.17",
            "p99": "203.06",
            "min": "202.55",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "322.83",
            "p50": "289.45",
            "p95": "236.44",
            "p99": "138.93",
            "min": "108.52",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "402.67",
            "p50": "364.38",
            "p95": "287.68",
            "p99": "254.54",
            "min": "252.67",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "636.39",
            "p50": "548.98",
            "p95": "384.96",
            "p99": "335.38",
            "min": "333.73",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "292.19",
            "p50": "264.86",
            "p95": "207.97",
            "p99": "134.72",
            "min": "117.60",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "254.68",
            "p50": "223.71",
            "p95": "188.79",
            "p99": "166.78",
            "min": "161.32",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "266.84",
            "p50": "245.33",
            "p95": "206.03",
            "p99": "193.91",
            "min": "193.45",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "390.20",
            "p50": "342.03",
            "p95": "274.23",
            "p99": "245.31",
            "min": "242.27",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "235.54",
            "p50": "220.68",
            "p95": "189.15",
            "p99": "173.15",
            "min": "172.63",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "289.49",
            "p50": "262.20",
            "p95": "223.88",
            "p99": "208.89",
            "min": "206.87",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "275.48",
            "p50": "254.78",
            "p95": "219.11",
            "p99": "200.98",
            "min": "199.81",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "229.65",
            "p50": "211.70",
            "p95": "178.48",
            "p99": "174.19",
            "min": "174.08",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "285.01",
            "p50": "258.30",
            "p95": "215.61",
            "p99": "194.86",
            "min": "193.65",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "127.52",
            "p50": "120.34",
            "p95": "108.78",
            "p99": "105.31",
            "min": "104.98",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "128.28",
            "p50": "120.79",
            "p95": "110.51",
            "p99": "107.68",
            "min": "107.31",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "128.06",
            "p50": "121.18",
            "p95": "111.78",
            "p99": "105.99",
            "min": "105.42",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "381.75",
            "p50": "344.48",
            "p95": "269.35",
            "p99": "247.03",
            "min": "246.53",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "271.26",
            "p50": "247.77",
            "p95": "209.46",
            "p99": "193.69",
            "min": "193.53",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "421.30",
            "p50": "380.01",
            "p95": "290.10",
            "p99": "263.51",
            "min": "262.63",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "geth": [
        {
            "title": "GasLimit",
            "max": "190.53",
            "p50": "173.24",
            "p95": "147.75",
            "p99": "131.57",
            "min": "131.39",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "871.90",
            "p50": "601.55",
            "p95": "433.41",
            "p99": "400.25",
            "min": "395.25",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "252.20",
            "p50": "224.67",
            "p95": "179.94",
            "p99": "154.90",
            "min": "150.70",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "158.87",
            "p50": "148.68",
            "p95": "128.94",
            "p99": "112.77",
            "min": "108.83",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2805.82",
            "p50": "1575.84",
            "p95": "1111.68",
            "p99": "1002.11",
            "min": "978.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "346.29",
            "p50": "294.86",
            "p95": "223.40",
            "p99": "182.28",
            "min": "159.85",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4548.96",
            "p50": "2579.49",
            "p95": "1183.03",
            "p99": "1097.40",
            "min": "1085.62",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "10116.45",
            "p50": "4472.74",
            "p95": "1282.90",
            "p99": "1021.94",
            "min": "915.87",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "333.55",
            "p50": "288.22",
            "p95": "216.88",
            "p99": "208.21",
            "min": "207.30",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "178.78",
            "p50": "160.25",
            "p95": "128.19",
            "p99": "114.72",
            "min": "114.43",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "139.17",
            "p50": "131.15",
            "p95": "114.11",
            "p99": "107.24",
            "min": "105.73",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "237.05",
            "p50": "214.64",
            "p95": "170.50",
            "p99": "152.09",
            "min": "145.45",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "50.76",
            "p50": "48.61",
            "p95": "45.33",
            "p99": "44.15",
            "min": "43.81",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "208.78",
            "p50": "190.67",
            "p95": "154.70",
            "p99": "143.22",
            "min": "140.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.55",
            "p50": "82.94",
            "p95": "75.14",
            "p99": "69.80",
            "min": "67.71",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.62",
            "p50": "82.60",
            "p95": "76.20",
            "p99": "67.24",
            "min": "66.73",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.09",
            "p50": "89.19",
            "p95": "80.75",
            "p99": "76.07",
            "min": "75.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "215.80",
            "p50": "196.79",
            "p95": "159.01",
            "p99": "140.72",
            "min": "135.18",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.93",
            "p50": "89.11",
            "p95": "80.64",
            "p99": "73.83",
            "min": "70.47",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "106.10",
            "p50": "101.99",
            "p95": "95.37",
            "p99": "99.75",
            "min": "94.95",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "112.15",
            "p50": "107.10",
            "p95": "98.24",
            "p99": "101.92",
            "min": "96.41",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "272.54",
            "p50": "234.36",
            "p95": "184.72",
            "p99": "178.98",
            "min": "157.04",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "130.09",
            "p50": "117.97",
            "p95": "108.59",
            "p99": "111.17",
            "min": "96.90",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "470.90",
            "p50": "381.82",
            "p95": "256.35",
            "p99": "223.22",
            "min": "220.57",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "480.24",
            "p50": "387.75",
            "p95": "280.79",
            "p99": "254.12",
            "min": "251.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "477.42",
            "p50": "391.16",
            "p95": "254.93",
            "p99": "228.00",
            "min": "227.98",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "450.50",
            "p50": "375.16",
            "p95": "256.11",
            "p99": "210.31",
            "min": "207.70",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1020.91",
            "p50": "722.55",
            "p95": "510.53",
            "p99": "456.61",
            "min": "450.06",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "975.59",
            "p50": "697.61",
            "p95": "490.04",
            "p99": "463.11",
            "min": "454.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "859.84",
            "p50": "636.68",
            "p95": "436.46",
            "p99": "400.32",
            "min": "387.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "923.59",
            "p50": "660.80",
            "p95": "480.24",
            "p99": "470.38",
            "min": "469.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "402.29",
            "p50": "347.10",
            "p95": "254.10",
            "p99": "226.67",
            "min": "222.80",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "428.50",
            "p50": "336.51",
            "p95": "251.66",
            "p99": "199.32",
            "min": "196.78",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "392.70",
            "p50": "333.28",
            "p95": "233.61",
            "p99": "204.86",
            "min": "204.46",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "400.87",
            "p50": "349.92",
            "p95": "259.81",
            "p99": "227.01",
            "min": "226.37",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "83.01",
            "p50": "78.92",
            "p95": "73.07",
            "p99": "70.08",
            "min": "69.70",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "159.83",
            "p50": "149.54",
            "p95": "127.33",
            "p99": "113.77",
            "min": "113.45",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "153.03",
            "p50": "143.00",
            "p95": "122.98",
            "p99": "104.09",
            "min": "101.67",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "171.34",
            "p50": "159.64",
            "p95": "130.04",
            "p99": "116.77",
            "min": "116.51",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "235.54",
            "p50": "212.76",
            "p95": "169.63",
            "p99": "151.58",
            "min": "146.97",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "141.91",
            "p50": "133.73",
            "p95": "117.01",
            "p99": "108.62",
            "min": "107.46",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "203.36",
            "p50": "185.04",
            "p95": "152.51",
            "p99": "140.51",
            "min": "140.49",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "159.25",
            "p50": "149.10",
            "p95": "126.82",
            "p99": "111.00",
            "min": "110.00",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "228.66",
            "p50": "208.29",
            "p95": "166.03",
            "p99": "146.41",
            "min": "141.02",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "106.47",
            "p50": "101.00",
            "p95": "89.80",
            "p99": "79.56",
            "min": "79.55",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "191.62",
            "p50": "178.00",
            "p95": "148.16",
            "p99": "129.90",
            "min": "129.00",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "161.53",
            "p50": "149.75",
            "p95": "126.19",
            "p99": "105.61",
            "min": "104.39",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "139.11",
            "p50": "132.15",
            "p95": "114.46",
            "p99": "107.26",
            "min": "106.84",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "188.23",
            "p50": "177.17",
            "p95": "146.66",
            "p99": "129.14",
            "min": "128.78",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "70.05",
            "p50": "67.55",
            "p95": "62.50",
            "p99": "61.63",
            "min": "61.52",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "71.21",
            "p50": "68.90",
            "p95": "63.78",
            "p99": "62.09",
            "min": "61.95",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "75.16",
            "p50": "72.91",
            "p95": "66.60",
            "p99": "61.75",
            "min": "60.76",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "170.34",
            "p50": "158.07",
            "p95": "132.62",
            "p99": "104.57",
            "min": "103.00",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "194.58",
            "p50": "178.43",
            "p95": "147.35",
            "p99": "142.99",
            "min": "142.29",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "199.93",
            "p50": "184.39",
            "p95": "150.21",
            "p99": "128.14",
            "min": "118.67",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "reth": [
        {
            "title": "GasLimit",
            "max": "340.07",
            "p50": "294.55",
            "p95": "235.88",
            "p99": "211.08",
            "min": "211.06",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "1655.24",
            "p50": "1090.66",
            "p95": "951.89",
            "p99": "918.79",
            "min": "918.58",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "434.47",
            "p50": "355.02",
            "p95": "276.93",
            "p99": "240.81",
            "min": "238.47",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "337.84",
            "p50": "298.42",
            "p95": "236.80",
            "p99": "209.06",
            "min": "205.49",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8136.42",
            "p50": "4934.34",
            "p95": "1158.56",
            "p99": "1004.30",
            "min": "977.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "854.11",
            "p50": "678.14",
            "p95": "453.13",
            "p99": "422.26",
            "min": "421.65",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15574.39",
            "p50": "4910.37",
            "p95": "1236.31",
            "p99": "1210.47",
            "min": "1209.29",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "41001.56",
            "p50": "4867.45",
            "p95": "1251.66",
            "p99": "1159.21",
            "min": "1099.57",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "854.88",
            "p50": "674.54",
            "p95": "429.44",
            "p99": "411.20",
            "min": "406.70",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "438.47",
            "p50": "365.49",
            "p95": "286.51",
            "p99": "267.73",
            "min": "267.44",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "175.01",
            "p50": "163.02",
            "p95": "142.51",
            "p99": "140.32",
            "min": "140.23",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "71.11",
            "p50": "69.11",
            "p95": "64.34",
            "p99": "63.53",
            "min": "63.45",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "81.02",
            "p50": "76.54",
            "p95": "70.80",
            "p99": "69.44",
            "min": "69.32",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "163.90",
            "p50": "155.95",
            "p95": "135.95",
            "p99": "133.50",
            "min": "133.44",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.89",
            "p50": "51.60",
            "p95": "49.21",
            "p99": "48.83",
            "min": "48.79",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.82",
            "p50": "51.64",
            "p95": "49.37",
            "p99": "48.52",
            "min": "48.40",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1144.25",
            "p50": "861.98",
            "p95": "561.50",
            "p99": "530.34",
            "min": "525.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "4614.31",
            "p50": "2324.82",
            "p95": "1415.14",
            "p99": "1165.97",
            "min": "1114.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "999.18",
            "p50": "772.30",
            "p95": "495.73",
            "p99": "465.66",
            "min": "465.02",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "64.26",
            "p50": "61.89",
            "p95": "60.05",
            "p99": "61.52",
            "min": "59.45",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "68.22",
            "p50": "65.15",
            "p95": "62.49",
            "p99": "64.06",
            "min": "61.83",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "179.54",
            "p50": "151.30",
            "p95": "134.97",
            "p99": "142.87",
            "min": "134.27",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "94.96",
            "p50": "72.56",
            "p95": "69.20",
            "p99": "79.89",
            "min": "68.51",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "266.69",
            "p50": "234.09",
            "p95": "196.95",
            "p99": "187.76",
            "min": "187.73",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "299.05",
            "p50": "260.56",
            "p95": "220.64",
            "p99": "206.70",
            "min": "206.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "275.13",
            "p50": "242.05",
            "p95": "198.30",
            "p99": "186.26",
            "min": "186.21",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "273.04",
            "p50": "236.23",
            "p95": "201.58",
            "p99": "188.97",
            "min": "187.90",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "990.69",
            "p50": "758.94",
            "p95": "496.02",
            "p99": "468.81",
            "min": "467.08",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "988.26",
            "p50": "739.40",
            "p95": "497.90",
            "p99": "463.57",
            "min": "460.22",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1009.17",
            "p50": "774.46",
            "p95": "506.41",
            "p99": "477.67",
            "min": "474.87",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "970.85",
            "p50": "743.94",
            "p95": "496.82",
            "p99": "483.34",
            "min": "482.14",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "220.66",
            "p50": "194.72",
            "p95": "171.88",
            "p99": "161.11",
            "min": "160.91",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "220.34",
            "p50": "195.20",
            "p95": "171.41",
            "p99": "164.89",
            "min": "164.57",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "237.83",
            "p50": "210.17",
            "p95": "180.36",
            "p99": "173.56",
            "min": "172.36",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "217.52",
            "p50": "194.57",
            "p95": "173.85",
            "p99": "163.36",
            "min": "162.00",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "192.47",
            "p50": "177.89",
            "p95": "154.12",
            "p99": "148.84",
            "min": "148.21",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "401.91",
            "p50": "319.32",
            "p95": "256.49",
            "p99": "240.77",
            "min": "239.10",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "431.09",
            "p50": "369.96",
            "p95": "274.71",
            "p99": "242.70",
            "min": "236.12",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "189.33",
            "p50": "177.45",
            "p95": "152.64",
            "p99": "149.09",
            "min": "149.08",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "370.73",
            "p50": "325.62",
            "p95": "253.80",
            "p99": "232.61",
            "min": "232.05",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "295.34",
            "p50": "265.67",
            "p95": "215.77",
            "p99": "210.11",
            "min": "209.61",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "505.33",
            "p50": "411.39",
            "p95": "299.36",
            "p99": "284.60",
            "min": "281.05",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "341.28",
            "p50": "296.99",
            "p95": "240.01",
            "p99": "229.53",
            "min": "227.82",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "372.67",
            "p50": "326.58",
            "p95": "251.01",
            "p99": "231.14",
            "min": "228.23",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "191.84",
            "p50": "177.88",
            "p95": "153.51",
            "p99": "148.79",
            "min": "148.25",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "337.00",
            "p50": "301.31",
            "p95": "233.33",
            "p99": "209.24",
            "min": "209.04",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "340.19",
            "p50": "302.51",
            "p95": "239.54",
            "p99": "206.72",
            "min": "206.00",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "178.79",
            "p50": "165.67",
            "p95": "143.40",
            "p99": "140.84",
            "min": "140.57",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "338.62",
            "p50": "296.42",
            "p95": "236.21",
            "p99": "226.27",
            "min": "224.51",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "143.48",
            "p50": "134.38",
            "p95": "119.30",
            "p99": "116.92",
            "min": "116.90",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "144.53",
            "p50": "135.23",
            "p95": "120.29",
            "p99": "117.06",
            "min": "116.79",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "145.14",
            "p50": "135.33",
            "p95": "120.83",
            "p99": "118.25",
            "min": "118.23",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "269.96",
            "p50": "246.01",
            "p95": "204.14",
            "p99": "193.31",
            "min": "190.95",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "337.57",
            "p50": "298.55",
            "p95": "235.38",
            "p99": "212.26",
            "min": "205.98",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "336.02",
            "p50": "301.47",
            "p95": "235.23",
            "p99": "202.05",
            "min": "195.15",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "besu": [
        {
            "title": "GasLimit",
            "max": "84.37",
            "p50": "80.37",
            "p95": "61.88",
            "p99": "60.55",
            "min": "60.50",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "566.29",
            "p50": "408.99",
            "p95": "204.64",
            "p99": "163.26",
            "min": "149.54",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "139.52",
            "p50": "131.13",
            "p95": "118.52",
            "p99": "107.22",
            "min": "106.08",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "87.12",
            "p50": "70.42",
            "p95": "66.62",
            "p99": "65.32",
            "min": "65.28",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2720.13",
            "p50": "1997.06",
            "p95": "1083.43",
            "p99": "845.94",
            "min": "800.34",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "300.78",
            "p50": "246.11",
            "p95": "181.73",
            "p99": "159.15",
            "min": "157.11",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4087.21",
            "p50": "1427.35",
            "p95": "608.26",
            "p99": "544.80",
            "min": "536.56",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14648.45",
            "p50": "4495.57",
            "p95": "1127.77",
            "p99": "969.25",
            "min": "807.42",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "300.98",
            "p50": "241.22",
            "p95": "196.80",
            "p99": "172.71",
            "min": "170.28",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "228.34",
            "p50": "202.46",
            "p95": "155.45",
            "p99": "118.05",
            "min": "116.01",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "99.06",
            "p50": "92.34",
            "p95": "74.56",
            "p99": "56.37",
            "min": "54.73",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "70.93",
            "p50": "69.05",
            "p95": "65.92",
            "p99": "64.12",
            "min": "63.92",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "54.59",
            "p50": "52.50",
            "p95": "49.69",
            "p99": "47.50",
            "min": "47.31",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1124.28",
            "p50": "759.30",
            "p95": "505.58",
            "p99": "309.31",
            "min": "290.09",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "67.00",
            "p50": "64.70",
            "p95": "60.86",
            "p99": "58.34",
            "min": "57.19",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.95",
            "p50": "64.56",
            "p95": "60.52",
            "p99": "53.61",
            "min": "51.99",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "868.19",
            "p50": "642.43",
            "p95": "437.60",
            "p99": "321.65",
            "min": "272.93",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1233.28",
            "p50": "879.73",
            "p95": "495.82",
            "p99": "372.25",
            "min": "357.55",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "853.96",
            "p50": "673.60",
            "p95": "410.09",
            "p99": "289.19",
            "min": "238.30",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "78.28",
            "p50": "74.09",
            "p95": "71.58",
            "p99": "74.10",
            "min": "70.95",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "68.81",
            "p50": "66.34",
            "p95": "63.69",
            "p99": "65.13",
            "min": "63.15",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "40.80",
            "p50": "38.57",
            "p95": "34.81",
            "p99": "35.32",
            "min": "34.03",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "103.46",
            "p50": "86.52",
            "p95": "82.34",
            "p99": "90.96",
            "min": "81.54",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "67.75",
            "p50": "64.01",
            "p95": "59.12",
            "p99": "56.97",
            "min": "56.96",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "64.65",
            "p50": "61.46",
            "p95": "57.04",
            "p99": "55.40",
            "min": "55.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "66.85",
            "p50": "63.88",
            "p95": "58.57",
            "p99": "56.95",
            "min": "56.91",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "67.52",
            "p50": "64.01",
            "p95": "58.81",
            "p99": "56.46",
            "min": "56.26",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "247.14",
            "p50": "223.03",
            "p95": "188.65",
            "p99": "177.93",
            "min": "176.50",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "248.20",
            "p50": "226.14",
            "p95": "195.45",
            "p99": "182.19",
            "min": "177.46",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "239.59",
            "p50": "219.02",
            "p95": "189.73",
            "p99": "176.60",
            "min": "175.90",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "248.18",
            "p50": "225.16",
            "p95": "189.89",
            "p99": "176.90",
            "min": "176.78",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "57.67",
            "p50": "55.27",
            "p95": "49.45",
            "p99": "48.00",
            "min": "47.72",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "57.71",
            "p50": "55.06",
            "p95": "49.50",
            "p99": "48.24",
            "min": "48.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "60.66",
            "p50": "57.94",
            "p95": "51.98",
            "p99": "50.68",
            "min": "50.61",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "57.64",
            "p50": "54.98",
            "p95": "49.56",
            "p99": "48.51",
            "min": "48.42",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "100.06",
            "p50": "95.71",
            "p95": "90.61",
            "p99": "87.17",
            "min": "87.08",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "80.43",
            "p50": "70.96",
            "p95": "61.37",
            "p99": "58.15",
            "min": "57.85",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "86.93",
            "p50": "80.51",
            "p95": "70.86",
            "p99": "66.87",
            "min": "66.15",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "175.68",
            "p50": "166.40",
            "p95": "145.82",
            "p99": "139.03",
            "min": "136.52",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "169.15",
            "p50": "157.79",
            "p95": "141.30",
            "p99": "136.35",
            "min": "136.13",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "97.20",
            "p50": "93.89",
            "p95": "87.35",
            "p99": "85.80",
            "min": "85.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "85.32",
            "p50": "80.19",
            "p95": "74.35",
            "p99": "67.97",
            "min": "66.69",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "88.98",
            "p50": "85.71",
            "p95": "80.22",
            "p99": "78.27",
            "min": "78.14",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "128.70",
            "p50": "122.49",
            "p95": "110.82",
            "p99": "108.73",
            "min": "108.22",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "99.14",
            "p50": "95.34",
            "p95": "88.52",
            "p99": "86.98",
            "min": "86.79",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "75.95",
            "p50": "72.59",
            "p95": "68.82",
            "p99": "67.18",
            "min": "67.09",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "98.88",
            "p50": "94.72",
            "p95": "88.45",
            "p99": "86.94",
            "min": "86.84",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "98.74",
            "p50": "95.11",
            "p95": "89.02",
            "p99": "86.13",
            "min": "85.96",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "80.91",
            "p50": "78.28",
            "p95": "74.39",
            "p99": "72.72",
            "min": "72.61",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "62.27",
            "p50": "60.21",
            "p95": "57.21",
            "p99": "56.27",
            "min": "56.18",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "62.16",
            "p50": "59.85",
            "p95": "56.91",
            "p99": "55.99",
            "min": "55.97",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "61.53",
            "p50": "59.35",
            "p95": "56.27",
            "p99": "54.35",
            "min": "54.04",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "169.19",
            "p50": "161.19",
            "p95": "143.69",
            "p99": "135.85",
            "min": "134.57",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "75.36",
            "p50": "72.76",
            "p95": "68.68",
            "p99": "67.35",
            "min": "67.25",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "104.03",
            "p50": "99.42",
            "p95": "93.10",
            "p99": "88.04",
            "min": "87.22",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ],
    "erigon": [
        {
            "title": "GasLimit",
            "max": "157.72",
            "p50": "152.29",
            "p95": "138.53",
            "p99": "123.17",
            "min": "121.34",
            "n": "112",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        {
            "title": "ETH transfers",
            "max": "212.83",
            "p50": "178.85",
            "p95": "146.71",
            "p99": "159.22",
            "min": "139.40",
            "n": "72",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        {
            "title": "BlobHash",
            "max": "203.57",
            "p50": "193.14",
            "p95": "171.68",
            "p99": "151.51",
            "min": "151.22",
            "n": "103",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        {
            "title": "Number",
            "max": "157.22",
            "p50": "152.13",
            "p95": "140.40",
            "p99": "132.45",
            "min": "132.11",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2487.53",
            "p50": "1454.18",
            "p95": "728.42",
            "p99": "613.64",
            "min": "593.18",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating constant value",
            "max": "338.72",
            "p50": "314.18",
            "p95": "269.95",
            "p99": "240.89",
            "min": "231.61",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3957.40",
            "p50": "2068.97",
            "p95": "806.72",
            "p99": "746.53",
            "min": "717.19",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "11503.15",
            "p50": "3988.93",
            "p95": "1165.30",
            "p99": "952.43",
            "min": "851.56",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating zero value",
            "max": "333.84",
            "p50": "308.68",
            "p95": "266.53",
            "p99": "217.85",
            "min": "207.16",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        {
            "title": "SStore - one storage key, repeating random values",
            "max": "162.55",
            "p50": "153.60",
            "p95": "139.57",
            "p99": "123.57",
            "min": "122.87",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        {
            "title": "Origin",
            "max": "120.26",
            "p50": "117.13",
            "p95": "109.02",
            "p99": "101.04",
            "min": "99.77",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        {
            "title": "Point evaluation - one data",
            "max": "237.46",
            "p50": "226.14",
            "p95": "191.34",
            "p99": "172.10",
            "min": "170.78",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        {
            "title": "EcRecover precompile",
            "max": "51.93",
            "p50": "49.82",
            "p95": "48.02",
            "p99": "46.14",
            "min": "45.90",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "207.69",
            "p50": "196.64",
            "p95": "174.95",
            "p99": "153.21",
            "min": "152.89",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "86.52",
            "p50": "84.14",
            "p95": "79.25",
            "p99": "75.97",
            "min": "75.25",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.18",
            "p50": "84.13",
            "p95": "79.03",
            "p99": "76.37",
            "min": "76.26",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.10",
            "p50": "90.40",
            "p95": "86.82",
            "p99": "83.98",
            "min": "82.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "211.61",
            "p50": "201.90",
            "p95": "179.10",
            "p99": "170.14",
            "min": "167.78",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.92",
            "p50": "90.52",
            "p95": "85.67",
            "p99": "82.46",
            "min": "82.21",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        {
            "title": "Blake2f 1M rounds",
            "max": "109.67",
            "p50": "105.46",
            "p95": "95.50",
            "p99": "96.65",
            "min": "86.83",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        {
            "title": "Blake2f 1k rounds",
            "max": "112.04",
            "p50": "108.43",
            "p95": "99.39",
            "p99": "101.66",
            "min": "96.06",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        {
            "title": "Blake2f 1 round",
            "max": "159.57",
            "p50": "150.91",
            "p95": "136.63",
            "p99": "137.44",
            "min": "132.24",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        {
            "title": "Blake2f 10M rounds",
            "max": "150.18",
            "p50": "124.32",
            "p95": "118.11",
            "p99": "131.64",
            "min": "117.66",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        {
            "title": "SHA-2 precompile from 1 byte",
            "max": "246.42",
            "p50": "225.10",
            "p95": "181.13",
            "p99": "176.22",
            "min": "175.92",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "271.92",
            "p50": "244.55",
            "p95": "201.53",
            "p99": "189.81",
            "min": "188.81",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "252.60",
            "p50": "225.39",
            "p95": "194.64",
            "p99": "181.92",
            "min": "181.51",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "252.27",
            "p50": "225.73",
            "p95": "190.38",
            "p99": "177.32",
            "min": "176.12",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "868.50",
            "p50": "721.10",
            "p95": "538.21",
            "p99": "447.87",
            "min": "443.29",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        {
            "title": "RipemdFrom16KBytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "831.40",
            "p50": "709.87",
            "p95": "539.52",
            "p99": "450.00",
            "min": "446.89",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        {
            "title": "RipemdFrom1024Bytes",
            "max": "0",
            "p50": "0",
            "p95": "0",
            "p99": "0",
            "min": "0",
            "n": "0",
            "description": "Description not found on metadata file"
        },
        {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "784.46",
            "p50": "667.41",
            "p95": "518.35",
            "p99": "466.49",
            "min": "464.55",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "808.30",
            "p50": "687.36",
            "p95": "529.70",
            "p99": "457.83",
            "min": "456.10",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        {
            "title": "Identity precompile from 8 bytes",
            "max": "214.82",
            "p50": "201.05",
            "p95": "168.37",
            "p99": "152.11",
            "min": "149.91",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        {
            "title": "Identity precompile from 32 bytes",
            "max": "211.39",
            "p50": "200.36",
            "p95": "182.02",
            "p99": "171.49",
            "min": "169.99",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        {
            "title": "Identity precompile from 128 bytes",
            "max": "221.16",
            "p50": "205.33",
            "p95": "183.29",
            "p99": "165.65",
            "min": "164.58",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        {
            "title": "Identity precompile from 1 byte",
            "max": "219.16",
            "p50": "205.71",
            "p95": "186.02",
            "p99": "166.61",
            "min": "166.35",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        {
            "title": "Address",
            "max": "92.22",
            "p50": "89.31",
            "p95": "84.99",
            "p99": "80.37",
            "min": "79.95",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        {
            "title": "MStore - zero",
            "max": "83.22",
            "p50": "81.47",
            "p95": "76.02",
            "p99": "73.11",
            "min": "72.75",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        {
            "title": "MStore - random",
            "max": "77.43",
            "p50": "74.74",
            "p95": "70.99",
            "p99": "67.23",
            "min": "66.54",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        {
            "title": "JumpDest",
            "max": "120.58",
            "p50": "116.04",
            "p95": "104.74",
            "p99": "86.35",
            "min": "75.29",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        {
            "title": "Push0-Pop",
            "max": "179.70",
            "p50": "171.75",
            "p95": "153.23",
            "p99": "141.57",
            "min": "136.86",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        {
            "title": "PrevRandao",
            "max": "122.46",
            "p50": "118.19",
            "p95": "108.12",
            "p99": "87.97",
            "min": "85.69",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        {
            "title": "CodeCopy",
            "max": "179.30",
            "p50": "169.39",
            "p95": "152.69",
            "p99": "132.95",
            "min": "127.48",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        {
            "title": "BaseFee",
            "max": "159.31",
            "p50": "152.85",
            "p95": "139.50",
            "p99": "131.35",
            "min": "131.28",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        {
            "title": "Gas-Pop",
            "max": "177.76",
            "p50": "170.01",
            "p95": "152.20",
            "p99": "139.45",
            "min": "139.19",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        {
            "title": "Caller",
            "max": "91.64",
            "p50": "89.27",
            "p95": "83.32",
            "p99": "76.35",
            "min": "75.36",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        {
            "title": "MSize",
            "max": "158.43",
            "p50": "150.64",
            "p95": "137.17",
            "p99": "123.41",
            "min": "123.36",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        {
            "title": "ChainId",
            "max": "132.12",
            "p50": "127.48",
            "p95": "117.46",
            "p99": "112.97",
            "min": "111.50",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        {
            "title": "CoinBase",
            "max": "120.19",
            "p50": "116.97",
            "p95": "108.57",
            "p99": "97.27",
            "min": "96.11",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        {
            "title": "Timestamp",
            "max": "156.79",
            "p50": "151.07",
            "p95": "135.29",
            "p99": "126.42",
            "min": "125.59",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        {
            "title": "Keccak256 from 1 byte",
            "max": "65.27",
            "p50": "63.89",
            "p95": "60.95",
            "p99": "59.27",
            "min": "59.27",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        {
            "title": "Keccak256 from 8 bytes",
            "max": "66.72",
            "p50": "65.10",
            "p95": "62.74",
            "p99": "61.13",
            "min": "61.04",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        {
            "title": "Keccak256 from 32 bytes",
            "max": "70.02",
            "p50": "68.33",
            "p95": "65.22",
            "p99": "63.73",
            "min": "63.55",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        {
            "title": "Caller-Pop",
            "max": "141.55",
            "p50": "135.82",
            "p95": "124.64",
            "p99": "105.72",
            "min": "94.02",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        {
            "title": "Gas",
            "max": "159.27",
            "p50": "152.50",
            "p95": "135.87",
            "p99": "127.99",
            "min": "127.40",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        {
            "title": "Push0",
            "max": "162.28",
            "p50": "155.35",
            "p95": "141.54",
            "p99": "137.14",
            "min": "136.06",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    ]
}