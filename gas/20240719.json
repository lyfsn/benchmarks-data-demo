{
    "nethermind": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "349.56",
            "p50": "307.08",
            "p95": "159.64",
            "p99": "135.62",
            "min": "132.87",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "915.11",
            "p50": "735.62",
            "p95": "574.82",
            "p99": "524.20",
            "min": "520.40",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "457.58",
            "p50": "390.66",
            "p95": "290.63",
            "p99": "277.84",
            "min": "277.21",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "266.54",
            "p50": "238.97",
            "p95": "206.97",
            "p99": "191.51",
            "min": "190.49",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "11151.06",
            "p50": "4123.48",
            "p95": "1132.11",
            "p99": "1093.25",
            "min": "1090.47",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "987.90",
            "p50": "750.46",
            "p95": "473.32",
            "p99": "453.42",
            "min": "442.96",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "14385.98",
            "p50": "4394.80",
            "p95": "1209.91",
            "p99": "1021.60",
            "min": "962.98",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "36447.30",
            "p50": "4433.23",
            "p95": "1160.52",
            "p99": "1086.61",
            "min": "1077.91",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "1062.99",
            "p50": "812.84",
            "p95": "522.03",
            "p99": "497.62",
            "min": "496.71",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "430.24",
            "p50": "364.55",
            "p95": "265.36",
            "p99": "247.43",
            "min": "246.92",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "240.14",
            "p50": "223.35",
            "p95": "188.86",
            "p99": "173.31",
            "min": "173.12",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "68.62",
            "p50": "67.54",
            "p95": "63.74",
            "p99": "62.13",
            "min": "62.11",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.63",
            "p50": "76.56",
            "p95": "72.06",
            "p99": "69.57",
            "min": "69.22",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "2353.48",
            "p50": "1494.51",
            "p95": "988.80",
            "p99": "890.94",
            "min": "826.20",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "70.35",
            "p50": "68.52",
            "p95": "64.09",
            "p99": "61.88",
            "min": "61.76",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "70.70",
            "p50": "68.35",
            "p95": "64.19",
            "p99": "62.60",
            "min": "62.49",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1446.80",
            "p50": "1138.15",
            "p95": "692.63",
            "p99": "651.34",
            "min": "640.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "3561.40",
            "p50": "2217.97",
            "p95": "1225.59",
            "p99": "1112.03",
            "min": "1107.61",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1474.65",
            "p50": "1073.79",
            "p95": "693.38",
            "p99": "646.51",
            "min": "633.45",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "135.19",
            "p50": "127.29",
            "p95": "116.05",
            "p99": "124.18",
            "min": "115.88",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "136.82",
            "p50": "128.88",
            "p95": "118.20",
            "p99": "122.88",
            "min": "115.38",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "189.58",
            "p50": "168.70",
            "p95": "146.86",
            "p99": "150.55",
            "min": "141.39",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "193.99",
            "p50": "148.48",
            "p95": "139.91",
            "p99": "162.74",
            "min": "139.18",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "131.48",
            "p50": "123.26",
            "p95": "110.92",
            "p99": "105.87",
            "min": "105.58",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "153.62",
            "p50": "143.05",
            "p95": "126.67",
            "p99": "122.36",
            "min": "122.30",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "131.97",
            "p50": "124.11",
            "p95": "111.66",
            "p99": "91.36",
            "min": "87.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "133.28",
            "p50": "124.12",
            "p95": "113.06",
            "p99": "105.53",
            "min": "105.10",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "834.88",
            "p50": "666.84",
            "p95": "406.60",
            "p99": "320.43",
            "min": "251.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "785.98",
            "p50": "677.10",
            "p95": "451.96",
            "p99": "363.72",
            "min": "358.62",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "840.81",
            "p50": "688.17",
            "p95": "464.55",
            "p99": "398.80",
            "min": "398.67",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "767.13",
            "p50": "689.99",
            "p95": "441.17",
            "p99": "271.13",
            "min": "183.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "739.86",
            "p50": "624.39",
            "p95": "418.45",
            "p99": "344.94",
            "min": "342.60",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "849.54",
            "p50": "683.65",
            "p95": "434.10",
            "p99": "358.42",
            "min": "343.05",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "238.52",
            "p50": "212.24",
            "p95": "166.48",
            "p99": "156.89",
            "min": "155.78",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "242.50",
            "p50": "211.81",
            "p95": "185.38",
            "p99": "96.18",
            "min": "75.88",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "252.08",
            "p50": "218.38",
            "p95": "183.44",
            "p99": "141.99",
            "min": "134.69",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "240.80",
            "p50": "209.99",
            "p95": "179.55",
            "p99": "159.30",
            "min": "158.61",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "240.54",
            "p50": "223.08",
            "p95": "196.27",
            "p99": "173.41",
            "min": "171.83",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "294.14",
            "p50": "266.35",
            "p95": "226.11",
            "p99": "215.01",
            "min": "214.90",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "319.64",
            "p50": "291.56",
            "p95": "235.63",
            "p99": "219.49",
            "min": "216.39",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "419.58",
            "p50": "388.06",
            "p95": "306.51",
            "p99": "270.65",
            "min": "264.97",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "638.10",
            "p50": "597.16",
            "p95": "389.96",
            "p99": "270.12",
            "min": "215.61",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "285.35",
            "p50": "265.09",
            "p95": "220.67",
            "p99": "169.03",
            "min": "161.79",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "255.09",
            "p50": "233.56",
            "p95": "201.59",
            "p99": "186.83",
            "min": "186.51",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "268.05",
            "p50": "250.42",
            "p95": "201.11",
            "p99": "187.57",
            "min": "186.18",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "385.48",
            "p50": "354.65",
            "p95": "269.63",
            "p99": "214.94",
            "min": "198.47",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "239.00",
            "p50": "220.31",
            "p95": "185.66",
            "p99": "170.41",
            "min": "169.54",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "285.24",
            "p50": "266.61",
            "p95": "227.69",
            "p99": "201.59",
            "min": "201.31",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "279.45",
            "p50": "261.45",
            "p95": "222.68",
            "p99": "196.90",
            "min": "195.29",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "228.32",
            "p50": "214.99",
            "p95": "186.99",
            "p99": "170.91",
            "min": "167.34",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "286.48",
            "p50": "268.94",
            "p95": "216.93",
            "p99": "198.48",
            "min": "197.88",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "127.10",
            "p50": "119.42",
            "p95": "108.63",
            "p99": "105.55",
            "min": "105.28",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "126.97",
            "p50": "119.52",
            "p95": "109.27",
            "p99": "102.69",
            "min": "102.36",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "127.17",
            "p50": "119.77",
            "p95": "109.62",
            "p99": "102.88",
            "min": "102.70",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "380.58",
            "p50": "352.58",
            "p95": "273.80",
            "p99": "243.65",
            "min": "241.46",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "261.83",
            "p50": "246.47",
            "p95": "210.66",
            "p99": "188.70",
            "min": "188.36",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "427.23",
            "p50": "398.53",
            "p95": "309.54",
            "p99": "286.32",
            "min": "285.71",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "geth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "193.79",
            "p50": "170.80",
            "p95": "145.14",
            "p99": "130.47",
            "min": "129.62",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "827.59",
            "p50": "604.12",
            "p95": "431.89",
            "p99": "409.49",
            "min": "409.06",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "245.45",
            "p50": "220.78",
            "p95": "166.85",
            "p99": "145.76",
            "min": "145.22",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "157.66",
            "p50": "147.51",
            "p95": "127.35",
            "p99": "119.05",
            "min": "118.77",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2690.82",
            "p50": "1490.72",
            "p95": "1120.27",
            "p99": "1012.86",
            "min": "984.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "332.06",
            "p50": "290.38",
            "p95": "211.63",
            "p99": "200.31",
            "min": "200.16",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "3941.19",
            "p50": "2425.09",
            "p95": "1124.81",
            "p99": "913.30",
            "min": "905.45",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "9074.09",
            "p50": "4476.34",
            "p95": "1382.41",
            "p99": "1114.05",
            "min": "1109.67",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "364.66",
            "p50": "315.53",
            "p95": "236.26",
            "p99": "203.31",
            "min": "182.92",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "172.92",
            "p50": "149.53",
            "p95": "126.30",
            "p99": "110.51",
            "min": "110.41",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "145.59",
            "p50": "136.59",
            "p95": "119.06",
            "p99": "117.67",
            "min": "117.54",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "237.91",
            "p50": "216.27",
            "p95": "172.55",
            "p99": "160.62",
            "min": "159.52",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "51.24",
            "p50": "48.64",
            "p95": "45.82",
            "p99": "44.70",
            "min": "44.46",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "209.72",
            "p50": "190.72",
            "p95": "154.54",
            "p99": "140.38",
            "min": "129.59",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "87.04",
            "p50": "82.84",
            "p95": "76.61",
            "p99": "75.34",
            "min": "74.98",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "85.97",
            "p50": "82.40",
            "p95": "75.53",
            "p99": "73.42",
            "min": "73.13",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "93.39",
            "p50": "89.21",
            "p95": "81.07",
            "p99": "75.66",
            "min": "73.84",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "214.90",
            "p50": "196.24",
            "p95": "157.48",
            "p99": "138.06",
            "min": "133.12",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "93.86",
            "p50": "89.90",
            "p95": "79.48",
            "p99": "73.37",
            "min": "72.13",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "106.44",
            "p50": "103.41",
            "p95": "95.72",
            "p99": "98.54",
            "min": "92.58",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "112.99",
            "p50": "108.56",
            "p95": "95.70",
            "p99": "95.22",
            "min": "85.65",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "268.13",
            "p50": "234.70",
            "p95": "183.56",
            "p99": "188.31",
            "min": "169.59",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "133.97",
            "p50": "118.44",
            "p95": "102.87",
            "p99": "113.28",
            "min": "97.67",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "459.49",
            "p50": "372.46",
            "p95": "272.04",
            "p99": "239.55",
            "min": "236.27",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "477.41",
            "p50": "392.18",
            "p95": "264.36",
            "p99": "233.18",
            "min": "230.29",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "506.03",
            "p50": "390.62",
            "p95": "242.30",
            "p99": "220.91",
            "min": "219.18",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "443.63",
            "p50": "380.83",
            "p95": "235.76",
            "p99": "231.51",
            "min": "231.14",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1013.86",
            "p50": "740.23",
            "p95": "519.73",
            "p99": "465.21",
            "min": "462.91",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "803.47",
            "p50": "613.73",
            "p95": "405.61",
            "p99": "386.94",
            "min": "375.91",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "953.67",
            "p50": "696.73",
            "p95": "472.31",
            "p99": "437.97",
            "min": "416.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "821.91",
            "p50": "607.01",
            "p95": "411.00",
            "p99": "388.83",
            "min": "385.20",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "900.06",
            "p50": "618.84",
            "p95": "431.59",
            "p99": "399.30",
            "min": "384.45",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "995.45",
            "p50": "680.97",
            "p95": "484.06",
            "p99": "425.38",
            "min": "423.42",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "416.07",
            "p50": "340.99",
            "p95": "251.15",
            "p99": "226.10",
            "min": "223.10",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "394.53",
            "p50": "330.58",
            "p95": "251.43",
            "p99": "224.64",
            "min": "224.10",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "398.41",
            "p50": "333.56",
            "p95": "249.19",
            "p99": "230.18",
            "min": "229.97",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "418.42",
            "p50": "349.14",
            "p95": "258.99",
            "p99": "225.03",
            "min": "218.20",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "68.40",
            "p50": "66.15",
            "p95": "61.04",
            "p99": "60.31",
            "min": "60.24",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "159.02",
            "p50": "146.85",
            "p95": "125.40",
            "p99": "114.50",
            "min": "113.27",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "154.49",
            "p50": "142.53",
            "p95": "122.13",
            "p99": "119.18",
            "min": "119.02",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "164.23",
            "p50": "153.40",
            "p95": "129.09",
            "p99": "126.75",
            "min": "126.12",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "228.81",
            "p50": "208.40",
            "p95": "165.88",
            "p99": "161.32",
            "min": "161.25",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "142.75",
            "p50": "135.51",
            "p95": "115.01",
            "p99": "94.29",
            "min": "91.39",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "199.75",
            "p50": "181.83",
            "p95": "150.85",
            "p99": "137.24",
            "min": "133.37",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "161.21",
            "p50": "147.51",
            "p95": "125.03",
            "p99": "112.03",
            "min": "110.22",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "224.48",
            "p50": "204.43",
            "p95": "170.02",
            "p99": "156.85",
            "min": "156.42",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "107.17",
            "p50": "101.78",
            "p95": "89.39",
            "p99": "85.76",
            "min": "85.53",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "192.52",
            "p50": "176.18",
            "p95": "146.36",
            "p99": "103.43",
            "min": "96.97",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "161.15",
            "p50": "148.76",
            "p95": "127.23",
            "p99": "120.13",
            "min": "120.01",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "145.75",
            "p50": "136.73",
            "p95": "115.79",
            "p99": "105.23",
            "min": "105.16",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "190.04",
            "p50": "175.92",
            "p95": "147.50",
            "p99": "140.64",
            "min": "140.59",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "70.50",
            "p50": "68.00",
            "p95": "63.20",
            "p99": "55.39",
            "min": "54.93",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "71.59",
            "p50": "69.34",
            "p95": "64.64",
            "p99": "60.02",
            "min": "59.10",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "75.75",
            "p50": "73.24",
            "p95": "67.57",
            "p99": "63.82",
            "min": "63.73",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "169.93",
            "p50": "157.94",
            "p95": "132.39",
            "p99": "122.31",
            "min": "118.78",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "195.05",
            "p50": "178.12",
            "p95": "147.80",
            "p99": "114.74",
            "min": "114.40",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "198.20",
            "p50": "181.05",
            "p95": "149.23",
            "p99": "133.09",
            "min": "128.58",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "reth": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "723.78",
            "p50": "585.76",
            "p95": "373.75",
            "p99": "355.58",
            "min": "352.42",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "1643.29",
            "p50": "1030.14",
            "p95": "956.32",
            "p99": "925.14",
            "min": "920.63",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "860.55",
            "p50": "674.71",
            "p95": "438.50",
            "p99": "423.14",
            "min": "417.06",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "718.44",
            "p50": "575.14",
            "p95": "372.05",
            "p99": "368.29",
            "min": "368.18",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "8073.78",
            "p50": "4894.81",
            "p95": "1208.38",
            "p99": "1136.03",
            "min": "1103.17",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "812.45",
            "p50": "650.72",
            "p95": "447.88",
            "p99": "402.97",
            "min": "402.75",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "15087.99",
            "p50": "4906.49",
            "p95": "1285.86",
            "p99": "1225.92",
            "min": "1224.16",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "26256.64",
            "p50": "4878.93",
            "p95": "1240.16",
            "p99": "1162.79",
            "min": "1115.46",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "816.42",
            "p50": "651.08",
            "p95": "406.77",
            "p99": "399.60",
            "min": "398.81",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "431.82",
            "p50": "369.73",
            "p95": "301.85",
            "p99": "265.20",
            "min": "265.17",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "242.13",
            "p50": "216.85",
            "p95": "189.65",
            "p99": "179.61",
            "min": "179.51",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "72.09",
            "p50": "70.04",
            "p95": "65.19",
            "p99": "64.10",
            "min": "64.04",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "80.89",
            "p50": "76.56",
            "p95": "71.80",
            "p99": "69.31",
            "min": "69.21",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "169.25",
            "p50": "160.03",
            "p95": "140.13",
            "p99": "135.55",
            "min": "135.42",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "52.67",
            "p50": "51.43",
            "p95": "49.08",
            "p99": "48.32",
            "min": "48.27",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "52.58",
            "p50": "51.23",
            "p95": "49.23",
            "p99": "48.88",
            "min": "48.84",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "1200.05",
            "p50": "895.07",
            "p95": "589.83",
            "p99": "530.39",
            "min": "513.68",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "5816.80",
            "p50": "2853.83",
            "p95": "1247.28",
            "p99": "1152.98",
            "min": "1085.87",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "1045.57",
            "p50": "797.49",
            "p95": "514.95",
            "p99": "489.33",
            "min": "485.64",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "65.35",
            "p50": "61.81",
            "p95": "60.15",
            "p99": "62.19",
            "min": "59.81",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "69.37",
            "p50": "66.77",
            "p95": "63.18",
            "p99": "65.16",
            "min": "62.89",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "311.14",
            "p50": "269.27",
            "p95": "220.14",
            "p99": "233.45",
            "min": "215.23",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "93.54",
            "p50": "72.51",
            "p95": "69.10",
            "p99": "79.28",
            "min": "68.53",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "466.86",
            "p50": "393.05",
            "p95": "288.90",
            "p99": "278.83",
            "min": "277.61",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "487.37",
            "p50": "413.07",
            "p95": "311.56",
            "p99": "284.26",
            "min": "283.83",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "465.39",
            "p50": "394.75",
            "p95": "292.70",
            "p99": "284.97",
            "min": "283.82",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "462.88",
            "p50": "392.18",
            "p95": "290.44",
            "p99": "285.98",
            "min": "285.45",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "1501.29",
            "p50": "1070.01",
            "p95": "728.82",
            "p99": "687.93",
            "min": "669.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "1355.81",
            "p50": "957.85",
            "p95": "660.03",
            "p99": "619.96",
            "min": "616.82",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "1495.41",
            "p50": "1024.97",
            "p95": "722.23",
            "p99": "651.06",
            "min": "648.88",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "1344.69",
            "p50": "970.26",
            "p95": "632.62",
            "p99": "613.20",
            "min": "609.80",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "1314.05",
            "p50": "959.25",
            "p95": "644.17",
            "p99": "579.69",
            "min": "560.64",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "1510.65",
            "p50": "1029.57",
            "p95": "733.33",
            "p99": "654.01",
            "min": "628.20",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "399.73",
            "p50": "344.27",
            "p95": "261.86",
            "p99": "256.87",
            "min": "255.84",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "402.14",
            "p50": "348.52",
            "p95": "265.89",
            "p99": "255.61",
            "min": "254.45",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "427.01",
            "p50": "370.81",
            "p95": "275.17",
            "p99": "269.98",
            "min": "269.84",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "398.00",
            "p50": "350.18",
            "p95": "264.99",
            "p99": "258.80",
            "min": "258.33",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "272.75",
            "p50": "247.61",
            "p95": "200.40",
            "p99": "195.14",
            "min": "194.45",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "759.52",
            "p50": "573.93",
            "p95": "416.99",
            "p99": "360.03",
            "min": "359.71",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "791.69",
            "p50": "623.66",
            "p95": "402.14",
            "p99": "376.07",
            "min": "374.20",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "527.25",
            "p50": "453.53",
            "p95": "317.61",
            "p99": "307.64",
            "min": "306.70",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "915.74",
            "p50": "714.24",
            "p95": "478.80",
            "p99": "393.40",
            "min": "392.80",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "507.69",
            "p50": "428.32",
            "p95": "323.01",
            "p99": "298.90",
            "min": "298.51",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "586.77",
            "p50": "477.53",
            "p95": "334.56",
            "p99": "305.28",
            "min": "297.58",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "723.33",
            "p50": "576.60",
            "p95": "375.13",
            "p99": "354.37",
            "min": "351.90",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "929.84",
            "p50": "724.05",
            "p95": "470.89",
            "p99": "461.97",
            "min": "461.67",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "272.16",
            "p50": "246.58",
            "p95": "198.68",
            "p99": "197.31",
            "min": "197.26",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "678.64",
            "p50": "537.32",
            "p95": "362.65",
            "p99": "351.33",
            "min": "349.69",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "717.11",
            "p50": "572.29",
            "p95": "373.91",
            "p99": "364.09",
            "min": "361.69",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "240.02",
            "p50": "218.71",
            "p95": "189.45",
            "p99": "179.26",
            "min": "179.24",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "723.07",
            "p50": "589.47",
            "p95": "422.30",
            "p99": "371.09",
            "min": "370.88",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "149.80",
            "p50": "139.59",
            "p95": "126.73",
            "p99": "120.92",
            "min": "120.74",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "151.94",
            "p50": "143.57",
            "p95": "128.83",
            "p99": "124.38",
            "min": "124.03",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "152.20",
            "p50": "143.12",
            "p95": "127.33",
            "p99": "124.04",
            "min": "123.76",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "451.84",
            "p50": "398.97",
            "p95": "306.92",
            "p99": "282.23",
            "min": "282.07",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "715.23",
            "p50": "581.10",
            "p95": "394.73",
            "p99": "345.32",
            "min": "344.74",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "714.83",
            "p50": "576.83",
            "p95": "410.75",
            "p99": "368.48",
            "min": "368.47",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "erigon": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "157.33",
            "p50": "152.59",
            "p95": "144.16",
            "p99": "143.38",
            "min": "143.24",
            "n": "98",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "206.05",
            "p50": "178.49",
            "p95": "148.87",
            "p99": "161.30",
            "min": "136.13",
            "n": "63",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "201.67",
            "p50": "193.79",
            "p95": "174.40",
            "p99": "162.75",
            "min": "158.42",
            "n": "89",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "158.04",
            "p50": "152.43",
            "p95": "136.25",
            "p99": "122.11",
            "min": "121.85",
            "n": "105",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "4522.25",
            "p50": "1440.98",
            "p95": "762.79",
            "p99": "599.74",
            "min": "584.52",
            "n": "139",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "11114.32",
            "p50": "316.30",
            "p95": "261.03",
            "p99": "219.37",
            "min": "215.81",
            "n": "141",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "8364.22",
            "p50": "2137.34",
            "p95": "814.23",
            "p99": "607.23",
            "min": "522.14",
            "n": "146",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "14786.93",
            "p50": "3883.43",
            "p95": "1124.96",
            "p99": "1008.72",
            "min": "934.27",
            "n": "144",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "11285.06",
            "p50": "313.66",
            "p95": "259.37",
            "p99": "222.23",
            "min": "217.90",
            "n": "142",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "5581.92",
            "p50": "155.47",
            "p95": "142.18",
            "p99": "127.30",
            "min": "126.64",
            "n": "134",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "3994.84",
            "p50": "114.96",
            "p95": "107.47",
            "p99": "98.09",
            "min": "97.61",
            "n": "109",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "8420.86",
            "p50": "227.39",
            "p95": "199.94",
            "p99": "179.31",
            "min": "172.34",
            "n": "133",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "1121.62",
            "p50": "49.35",
            "p95": "48.03",
            "p99": "47.31",
            "min": "47.20",
            "n": "120",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "6766.41",
            "p50": "195.88",
            "p95": "171.87",
            "p99": "160.25",
            "min": "159.15",
            "n": "135",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "2600.42",
            "p50": "84.11",
            "p95": "80.83",
            "p99": "77.16",
            "min": "77.07",
            "n": "120",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "86.48",
            "p50": "84.04",
            "p95": "79.46",
            "p99": "75.21",
            "min": "74.68",
            "n": "112",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "92.53",
            "p50": "90.24",
            "p95": "85.00",
            "p99": "81.02",
            "min": "80.63",
            "n": "133",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "2317.55",
            "p50": "200.76",
            "p95": "178.45",
            "p99": "154.47",
            "min": "153.52",
            "n": "134",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "92.97",
            "p50": "90.14",
            "p95": "85.17",
            "p99": "81.08",
            "min": "80.58",
            "n": "133",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "108.87",
            "p50": "105.57",
            "p95": "100.36",
            "p99": "104.08",
            "min": "99.28",
            "n": "49",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "111.50",
            "p50": "107.94",
            "p95": "100.39",
            "p99": "102.60",
            "min": "95.89",
            "n": "56",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "160.26",
            "p50": "150.23",
            "p95": "137.21",
            "p99": "139.72",
            "min": "131.34",
            "n": "70",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "149.34",
            "p50": "124.03",
            "p95": "116.54",
            "p99": "131.87",
            "min": "114.40",
            "n": "49",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "242.87",
            "p50": "224.42",
            "p95": "190.25",
            "p99": "174.61",
            "min": "174.22",
            "n": "105",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "272.94",
            "p50": "247.10",
            "p95": "197.40",
            "p99": "169.89",
            "min": "168.91",
            "n": "105",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "244.05",
            "p50": "221.80",
            "p95": "186.14",
            "p99": "169.40",
            "min": "169.02",
            "n": "105",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "245.07",
            "p50": "224.56",
            "p95": "194.37",
            "p99": "169.15",
            "min": "169.07",
            "n": "105",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "858.87",
            "p50": "706.45",
            "p95": "496.24",
            "p99": "422.02",
            "min": "414.36",
            "n": "133",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "811.23",
            "p50": "685.21",
            "p95": "529.20",
            "p99": "454.76",
            "min": "433.86",
            "n": "133",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "813.54",
            "p50": "696.30",
            "p95": "521.38",
            "p99": "421.52",
            "min": "419.46",
            "n": "133",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "798.08",
            "p50": "681.20",
            "p95": "522.14",
            "p99": "348.60",
            "min": "323.42",
            "n": "133",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "770.64",
            "p50": "672.84",
            "p95": "505.26",
            "p99": "383.80",
            "min": "378.05",
            "n": "133",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "796.58",
            "p50": "689.17",
            "p95": "507.40",
            "p99": "448.08",
            "min": "441.01",
            "n": "126",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "211.23",
            "p50": "201.99",
            "p95": "183.10",
            "p99": "165.91",
            "min": "165.26",
            "n": "105",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "210.22",
            "p50": "199.02",
            "p95": "182.44",
            "p99": "172.60",
            "min": "172.43",
            "n": "105",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "218.50",
            "p50": "205.63",
            "p95": "181.06",
            "p99": "168.93",
            "min": "168.63",
            "n": "105",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "215.72",
            "p50": "204.27",
            "p95": "179.23",
            "p99": "157.59",
            "min": "156.30",
            "n": "105",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "89.03",
            "p50": "86.92",
            "p95": "82.23",
            "p99": "78.78",
            "min": "78.71",
            "n": "112",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "82.92",
            "p50": "80.61",
            "p95": "75.81",
            "p99": "72.30",
            "min": "72.18",
            "n": "105",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "76.78",
            "p50": "74.79",
            "p95": "70.77",
            "p99": "68.28",
            "min": "68.09",
            "n": "112",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "120.16",
            "p50": "115.79",
            "p95": "104.89",
            "p99": "101.19",
            "min": "101.01",
            "n": "126",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "176.81",
            "p50": "169.34",
            "p95": "152.60",
            "p99": "132.65",
            "min": "128.54",
            "n": "126",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "120.66",
            "p50": "116.60",
            "p95": "109.31",
            "p99": "103.41",
            "min": "103.33",
            "n": "105",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "174.72",
            "p50": "165.52",
            "p95": "151.11",
            "p99": "141.64",
            "min": "140.64",
            "n": "112",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "159.03",
            "p50": "152.39",
            "p95": "137.41",
            "p99": "125.03",
            "min": "124.58",
            "n": "105",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "177.72",
            "p50": "168.80",
            "p95": "147.28",
            "p99": "145.68",
            "min": "145.48",
            "n": "119",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "92.65",
            "p50": "86.20",
            "p95": "81.64",
            "p99": "80.07",
            "min": "80.04",
            "n": "105",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "156.32",
            "p50": "151.74",
            "p95": "137.81",
            "p99": "126.03",
            "min": "126.03",
            "n": "105",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "133.66",
            "p50": "129.00",
            "p95": "115.04",
            "p99": "106.68",
            "min": "105.84",
            "n": "112",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "117.94",
            "p50": "114.33",
            "p95": "105.57",
            "p99": "93.71",
            "min": "93.25",
            "n": "105",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "157.41",
            "p50": "151.51",
            "p95": "135.39",
            "p99": "127.01",
            "min": "127.00",
            "n": "105",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "63.79",
            "p50": "62.48",
            "p95": "59.96",
            "p99": "58.52",
            "min": "58.51",
            "n": "105",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "65.37",
            "p50": "63.70",
            "p95": "60.46",
            "p99": "59.50",
            "min": "59.48",
            "n": "105",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "68.69",
            "p50": "66.69",
            "p95": "64.08",
            "p99": "62.19",
            "min": "62.13",
            "n": "105",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "144.92",
            "p50": "138.64",
            "p95": "121.46",
            "p99": "92.58",
            "min": "92.32",
            "n": "126",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "157.43",
            "p50": "151.66",
            "p95": "137.76",
            "p99": "127.65",
            "min": "127.39",
            "n": "112",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "160.08",
            "p50": "155.14",
            "p95": "142.82",
            "p99": "129.68",
            "min": "128.24",
            "n": "119",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    },
    "besu": {
        "GasLimit": {
            "title": "GasLimit",
            "max": "84.10",
            "p50": "79.87",
            "p95": "61.24",
            "p99": "58.15",
            "min": "57.96",
            "n": "120",
            "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "Transfers": {
            "title": "ETH transfers",
            "max": "637.67",
            "p50": "411.10",
            "p95": "209.50",
            "p99": "198.69",
            "min": "197.85",
            "n": "128",
            "description": "All block gas limit consumed by simple ETH transfers"
        },
        "BlobHashZero": {
            "title": "BlobHash",
            "max": "137.76",
            "p50": "131.01",
            "p95": "119.33",
            "p99": "116.12",
            "min": "115.51",
            "n": "128",
            "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "Number": {
            "title": "Number",
            "max": "87.37",
            "p50": "69.50",
            "p95": "65.75",
            "p99": "64.29",
            "min": "64.24",
            "n": "120",
            "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "title": "SStore - many accounts, random storage keys, random values",
            "max": "2983.28",
            "p50": "2036.96",
            "p95": "1104.39",
            "p99": "900.02",
            "min": "778.28",
            "n": "152",
            "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "title": "SStore - one storage key, repeating constant value",
            "max": "297.65",
            "p50": "247.68",
            "p95": "194.34",
            "p99": "149.24",
            "min": "140.41",
            "n": "152",
            "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "title": "SStore - many accounts, consecutive storage keys, random values",
            "max": "4422.40",
            "p50": "1360.08",
            "p95": "670.24",
            "p99": "506.41",
            "min": "391.44",
            "n": "152",
            "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "title": "SStore - one storage key, repeating two values, zero and non-zero",
            "max": "17383.77",
            "p50": "4461.57",
            "p95": "1173.05",
            "p99": "1099.42",
            "min": "1086.36",
            "n": "152",
            "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "title": "SStore - one storage key, repeating zero value",
            "max": "289.17",
            "p50": "235.76",
            "p95": "203.34",
            "p99": "185.15",
            "min": "178.36",
            "n": "152",
            "description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "title": "SStore - one storage key, repeating random values",
            "max": "231.89",
            "p50": "198.00",
            "p95": "148.34",
            "p99": "128.59",
            "min": "124.01",
            "n": "144",
            "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "Origin": {
            "title": "Origin",
            "max": "99.19",
            "p50": "91.15",
            "p95": "71.34",
            "p99": "62.05",
            "min": "61.81",
            "n": "120",
            "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "PointEvaluationOneData": {
            "title": "Point evaluation - one data",
            "max": "71.11",
            "p50": "68.85",
            "p95": "65.53",
            "p99": "64.46",
            "min": "64.37",
            "n": "136",
            "description": "Point evaluation precompile repeating computations on the same data"
        },
        "EcRecover": {
            "title": "EcRecover precompile",
            "max": "54.41",
            "p50": "52.23",
            "p95": "49.23",
            "p99": "47.85",
            "min": "47.57",
            "n": "136",
            "description": "EcRecover precompile calculations"
        },
        "EcMulInfinities32ByteScalar": {
            "title": "EcMul with (0, 0) and 32-byte scalar",
            "max": "1142.16",
            "p50": "789.74",
            "p95": "519.41",
            "p99": "413.38",
            "min": "364.67",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "max": "66.93",
            "p50": "64.56",
            "p95": "60.95",
            "p99": "55.58",
            "min": "54.00",
            "n": "136",
            "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcMul12And32ByteScalar": {
            "title": "EcMul with (1, 2) and 32-byte scalar",
            "max": "66.73",
            "p50": "64.42",
            "p95": "61.00",
            "p99": "57.22",
            "min": "56.25",
            "n": "128",
            "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "title": "EcMul with 32-byte coordinates and scalar 2",
            "max": "844.09",
            "p50": "661.72",
            "p95": "420.02",
            "p99": "312.12",
            "min": "305.53",
            "n": "152",
            "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMulInfinities2Scalar": {
            "title": "EcMul with (0, 0) and scalar 2",
            "max": "1381.07",
            "p50": "911.65",
            "p95": "556.98",
            "p99": "287.87",
            "min": "254.90",
            "n": "152",
            "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMul122": {
            "title": "EcMul with (1, 2) and scalar 2",
            "max": "882.05",
            "p50": "662.49",
            "p95": "446.48",
            "p99": "358.20",
            "min": "297.95",
            "n": "152",
            "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "Blake1MRounds": {
            "title": "Blake2f 1M rounds",
            "max": "77.58",
            "p50": "73.80",
            "p95": "71.27",
            "p99": "73.87",
            "min": "71.07",
            "n": "56",
            "description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake1KRounds": {
            "title": "Blake2f 1k rounds",
            "max": "69.70",
            "p50": "65.67",
            "p95": "62.62",
            "p99": "64.42",
            "min": "61.58",
            "n": "64",
            "description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1Round": {
            "title": "Blake2f 1 round",
            "max": "41.56",
            "p50": "37.09",
            "p95": "34.39",
            "p99": "35.56",
            "min": "34.16",
            "n": "80",
            "description": "Blake2f precompile with 1 round of computations"
        },
        "Blake10MRounds": {
            "title": "Blake2f 10M rounds",
            "max": "105.53",
            "p50": "87.13",
            "p95": "82.02",
            "p99": "91.92",
            "min": "81.64",
            "n": "56",
            "description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "SHA2From1Byte": {
            "title": "SHA-2 precompile from 1 byte",
            "max": "68.00",
            "p50": "61.38",
            "p95": "58.11",
            "p99": "56.23",
            "min": "56.23",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From128Bytes": {
            "title": "SHA-2 precompile from 128 bytes",
            "max": "64.60",
            "p50": "59.63",
            "p95": "56.66",
            "p99": "54.73",
            "min": "54.67",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "SHA2From32Bytes": {
            "title": "SHA-2 precompile from 32 bytes",
            "max": "67.86",
            "p50": "61.20",
            "p95": "57.38",
            "p99": "54.71",
            "min": "54.36",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From8Bytes": {
            "title": "SHA-2 precompile from 8 bytes",
            "max": "67.94",
            "p50": "61.57",
            "p95": "57.50",
            "p99": "56.11",
            "min": "56.07",
            "n": "120",
            "description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "title": "Ripemd-160 precompile from 32 bytes",
            "max": "248.63",
            "p50": "218.72",
            "p95": "188.88",
            "p99": "180.00",
            "min": "177.56",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom16KBytes": {
            "title": "RipemdFrom16KBytes",
            "max": "299.32",
            "p50": "272.29",
            "p95": "229.62",
            "p99": "212.02",
            "min": "205.99",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom8Bytes": {
            "title": "Ripemd-160 precompile from 8 bytes",
            "max": "248.98",
            "p50": "220.69",
            "p95": "186.20",
            "p99": "173.90",
            "min": "172.69",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom1024Bytes": {
            "title": "RipemdFrom1024Bytes",
            "max": "279.89",
            "p50": "255.71",
            "p95": "211.40",
            "p99": "199.22",
            "min": "199.16",
            "n": "152",
            "description": "Description not found on metadata file"
        },
        "RipemdFrom128Bytes": {
            "title": "Ripemd-160 precompile from 128 bytes",
            "max": "240.61",
            "p50": "216.05",
            "p95": "183.64",
            "p99": "172.86",
            "min": "172.81",
            "n": "152",
            "description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "title": "Ripemd-160 precompile from 1 byte",
            "max": "248.33",
            "p50": "220.08",
            "p95": "191.14",
            "p99": "172.30",
            "min": "169.77",
            "n": "144",
            "description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "title": "Identity precompile from 8 bytes",
            "max": "57.94",
            "p50": "51.19",
            "p95": "48.53",
            "p99": "47.46",
            "min": "47.37",
            "n": "120",
            "description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "title": "Identity precompile from 32 bytes",
            "max": "58.06",
            "p50": "51.71",
            "p95": "48.89",
            "p99": "47.45",
            "min": "47.41",
            "n": "120",
            "description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "title": "Identity precompile from 128 bytes",
            "max": "60.91",
            "p50": "54.33",
            "p95": "51.12",
            "p99": "49.80",
            "min": "49.63",
            "n": "120",
            "description": "Identity precompile call based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "title": "Identity precompile from 1 byte",
            "max": "58.10",
            "p50": "52.18",
            "p95": "48.41",
            "p99": "47.54",
            "min": "47.49",
            "n": "120",
            "description": "Identity precompile call based on 1-byte source data"
        },
        "Address": {
            "title": "Address",
            "max": "100.29",
            "p50": "94.22",
            "p95": "88.85",
            "p99": "86.19",
            "min": "85.92",
            "n": "128",
            "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "title": "MStore - zero",
            "max": "81.73",
            "p50": "71.90",
            "p95": "67.00",
            "p99": "65.09",
            "min": "64.83",
            "n": "120",
            "description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "title": "MStore - random",
            "max": "87.61",
            "p50": "77.91",
            "p95": "69.22",
            "p99": "65.48",
            "min": "64.81",
            "n": "128",
            "description": "Endlessly pushing random value to memory with offset zero"
        },
        "JumpDest": {
            "title": "JumpDest",
            "max": "176.38",
            "p50": "164.16",
            "p95": "146.26",
            "p99": "127.95",
            "min": "122.40",
            "n": "144",
            "description": "Block full of JumpDest opcode only"
        },
        "Push0Pop": {
            "title": "Push0-Pop",
            "max": "167.03",
            "p50": "157.94",
            "p95": "142.34",
            "p99": "133.48",
            "min": "132.69",
            "n": "144",
            "description": "Endlessly pushing zeros to stack, then popping it"
        },
        "PrevRandao": {
            "title": "PrevRandao",
            "max": "97.89",
            "p50": "92.31",
            "p95": "87.21",
            "p99": "85.21",
            "min": "85.19",
            "n": "120",
            "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "CodeCopy": {
            "title": "CodeCopy",
            "max": "90.36",
            "p50": "79.18",
            "p95": "72.73",
            "p99": "64.24",
            "min": "61.24",
            "n": "128",
            "description": "Endlessly loading 32-bytes of code to the memory"
        },
        "BaseFee": {
            "title": "BaseFee",
            "max": "88.49",
            "p50": "84.63",
            "p95": "79.62",
            "p99": "77.42",
            "min": "77.15",
            "n": "120",
            "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "title": "Gas-Pop",
            "max": "126.48",
            "p50": "118.97",
            "p95": "109.00",
            "p99": "104.77",
            "min": "104.61",
            "n": "136",
            "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "Caller": {
            "title": "Caller",
            "max": "99.61",
            "p50": "93.99",
            "p95": "88.38",
            "p99": "86.38",
            "min": "86.26",
            "n": "120",
            "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "MSize": {
            "title": "MSize",
            "max": "73.83",
            "p50": "71.59",
            "p95": "67.42",
            "p99": "66.15",
            "min": "66.07",
            "n": "120",
            "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "title": "ChainId",
            "max": "97.35",
            "p50": "93.05",
            "p95": "86.83",
            "p99": "83.27",
            "min": "82.73",
            "n": "128",
            "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "title": "CoinBase",
            "max": "98.18",
            "p50": "93.56",
            "p95": "87.42",
            "p99": "85.32",
            "min": "85.24",
            "n": "120",
            "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "title": "Timestamp",
            "max": "81.13",
            "p50": "77.06",
            "p95": "72.60",
            "p99": "70.12",
            "min": "69.76",
            "n": "120",
            "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Keccak256From1Byte": {
            "title": "Keccak256 from 1 byte",
            "max": "61.90",
            "p50": "59.17",
            "p95": "56.60",
            "p99": "55.31",
            "min": "55.20",
            "n": "120",
            "description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "title": "Keccak256 from 8 bytes",
            "max": "61.72",
            "p50": "58.59",
            "p95": "56.02",
            "p99": "54.88",
            "min": "54.84",
            "n": "120",
            "description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "title": "Keccak256 from 32 bytes",
            "max": "60.98",
            "p50": "58.10",
            "p95": "55.29",
            "p99": "53.84",
            "min": "53.70",
            "n": "120",
            "description": "Keccak calculations based on 32-byte source data"
        },
        "CallerPop": {
            "title": "Caller-Pop",
            "max": "167.72",
            "p50": "158.44",
            "p95": "143.22",
            "p99": "133.76",
            "min": "131.38",
            "n": "144",
            "description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Gas": {
            "title": "Gas",
            "max": "73.99",
            "p50": "71.68",
            "p95": "67.91",
            "p99": "66.33",
            "min": "66.23",
            "n": "128",
            "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "Push0": {
            "title": "Push0",
            "max": "102.59",
            "p50": "99.00",
            "p95": "92.09",
            "p99": "86.45",
            "min": "85.48",
            "n": "136",
            "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        }
    }
}