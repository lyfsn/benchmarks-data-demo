{
    "clients": {
        "nethermind": {
            "name": "nethermind",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 946.314354,
                    "min": 0,
                    "p50": 745.581272,
                    "p95": 946.314354,
                    "p99": 946.314354,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 337.761065,
                    "min": 0,
                    "p50": 293.493494,
                    "p95": 337.761065,
                    "p99": 337.761065,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 522.493016,
                    "min": 0,
                    "p50": 474.89563,
                    "p95": 522.493016,
                    "p99": 522.493016,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 463.186647,
                    "min": 0,
                    "p50": 411.774546,
                    "p95": 463.186647,
                    "p99": 463.186647,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 364.10764,
                    "min": 0,
                    "p50": 324.365857,
                    "p95": 364.10764,
                    "p99": 364.10764,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 398.081757,
                    "min": 0,
                    "p50": 392.48719,
                    "p95": 398.081757,
                    "p99": 398.081757,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 495.469549,
                    "min": 0,
                    "p50": 451.03477899999996,
                    "p95": 495.469549,
                    "p99": 495.469549,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 138.262799,
                    "min": 0,
                    "p50": 128.914805,
                    "p95": 138.262799,
                    "p99": 138.262799,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.023798,
                    "min": 0,
                    "p50": 151.53813,
                    "p95": 159.023798,
                    "p99": 159.023798,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 205.66090599999998,
                    "min": 0,
                    "p50": 185.76929099999998,
                    "p95": 205.66090599999998,
                    "p99": 205.66090599999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 702.290395,
                    "min": 0,
                    "p50": 639.298203,
                    "p95": 702.290395,
                    "p99": 702.290395,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 235.078588,
                    "min": 0,
                    "p50": 203.953294,
                    "p95": 235.078588,
                    "p99": 235.078588,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 630.3124829999999,
                    "min": 0,
                    "p50": 554.285256,
                    "p95": 630.3124829999999,
                    "p99": 630.3124829999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 298.93805299999997,
                    "min": 0,
                    "p50": 271.886043,
                    "p95": 298.93805299999997,
                    "p99": 298.93805299999997,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 276.062011,
                    "min": 0,
                    "p50": 247.681334,
                    "p95": 276.062011,
                    "p99": 276.062011,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 160.38836999999998,
                    "min": 0,
                    "p50": 146.01727599999998,
                    "p95": 160.38836999999998,
                    "p99": 160.38836999999998,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 247.65476199999998,
                    "min": 0,
                    "p50": 225.45538599999998,
                    "p95": 247.65476199999998,
                    "p99": 247.65476199999998,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 296.22110599999996,
                    "min": 0,
                    "p50": 280.336864,
                    "p95": 296.22110599999996,
                    "p99": 296.22110599999996,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.81079,
                    "min": 0,
                    "p50": 79.00070199999999,
                    "p95": 84.81079,
                    "p99": 84.81079,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 189.002626,
                    "min": 0,
                    "p50": 168.229425,
                    "p95": 189.002626,
                    "p99": 189.002626,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.32848,
                    "min": 0,
                    "p50": 247.511099,
                    "p95": 266.32848,
                    "p99": 266.32848,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 66.133185,
                    "min": 0,
                    "p50": 63.139708999999996,
                    "p95": 66.133185,
                    "p99": 66.133185,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 205.431555,
                    "min": 0,
                    "p50": 137.47531999999998,
                    "p95": 205.431555,
                    "p99": 205.431555,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 168.719273,
                    "min": 0,
                    "p50": 152.936397,
                    "p95": 168.719273,
                    "p99": 168.719273,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 457.23083499999996,
                    "min": 0,
                    "p50": 419.535105,
                    "p95": 457.23083499999996,
                    "p99": 457.23083499999996,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 562.4546789999999,
                    "min": 0,
                    "p50": 531.097236,
                    "p95": 562.4546789999999,
                    "p99": 562.4546789999999,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 197.46141699999998,
                    "min": 0,
                    "p50": 170.672475,
                    "p95": 197.46141699999998,
                    "p99": 197.46141699999998,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1278.82656,
                    "min": 0,
                    "p50": 1257.930032,
                    "p95": 1278.82656,
                    "p99": 1278.82656,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 48.956846999999996,
                    "min": 0,
                    "p50": 48.43945,
                    "p95": 48.956846999999996,
                    "p99": 48.956846999999996,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 107.429694,
                    "min": 0,
                    "p50": 95.603746,
                    "p95": 107.429694,
                    "p99": 107.429694,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 702.574888,
                    "min": 0,
                    "p50": 652.063087,
                    "p95": 702.574888,
                    "p99": 702.574888,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 307.497328,
                    "min": 0,
                    "p50": 283.080177,
                    "p95": 307.497328,
                    "p99": 307.497328,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 254.97873199999998,
                    "min": 0,
                    "p50": 229.438344,
                    "p95": 254.97873199999998,
                    "p99": 254.97873199999998,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 263.911586,
                    "min": 0,
                    "p50": 246.52075299999998,
                    "p95": 263.911586,
                    "p99": 263.911586,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 157.421923,
                    "min": 0,
                    "p50": 144.422316,
                    "p95": 157.421923,
                    "p99": 157.421923,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 753.324523,
                    "min": 0,
                    "p50": 691.209474,
                    "p95": 753.324523,
                    "p99": 753.324523,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 443.821551,
                    "min": 0,
                    "p50": 423.88532499999997,
                    "p95": 443.821551,
                    "p99": 443.821551,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 326.38969399999996,
                    "min": 0,
                    "p50": 308.681215,
                    "p95": 326.38969399999996,
                    "p99": 326.38969399999996,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 314.7101,
                    "min": 0,
                    "p50": 290.351227,
                    "p95": 314.7101,
                    "p99": 314.7101,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 196.09901,
                    "min": 0,
                    "p50": 181.434037,
                    "p95": 196.09901,
                    "p99": 196.09901,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 501.931374,
                    "min": 0,
                    "p50": 478.758114,
                    "p95": 501.931374,
                    "p99": 501.931374,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 111.79467799999999,
                    "min": 0,
                    "p50": 105.583501,
                    "p95": 111.79467799999999,
                    "p99": 111.79467799999999,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 401.07064599999995,
                    "min": 0,
                    "p50": 369.167915,
                    "p95": 401.07064599999995,
                    "p99": 401.07064599999995,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 228.71316399999998,
                    "min": 0,
                    "p50": 212.19724599999998,
                    "p95": 228.71316399999998,
                    "p99": 228.71316399999998,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 182.39236699999998,
                    "min": 0,
                    "p50": 160.115987,
                    "p95": 182.39236699999998,
                    "p99": 182.39236699999998,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 140.95797199999998,
                    "min": 0,
                    "p50": 126.59700699999999,
                    "p95": 140.95797199999998,
                    "p99": 140.95797199999998,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 349.40894299999997,
                    "min": 0,
                    "p50": 331.66342399999996,
                    "p95": 349.40894299999997,
                    "p99": 349.40894299999997,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 718.469243,
                    "min": 0,
                    "p50": 666.208751,
                    "p95": 718.469243,
                    "p99": 718.469243,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.08122899999998,
                    "min": 0,
                    "p50": 139.29345899999998,
                    "p95": 149.08122899999998,
                    "p99": 149.08122899999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 495.071823,
                    "min": 0,
                    "p50": 460.662765,
                    "p95": 495.071823,
                    "p99": 495.071823,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 520.380217,
                    "min": 0,
                    "p50": 504.086972,
                    "p95": 520.380217,
                    "p99": 520.380217,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 194.042487,
                    "min": 0,
                    "p50": 172.065228,
                    "p95": 194.042487,
                    "p99": 194.042487,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 476.619671,
                    "min": 0,
                    "p50": 427.581488,
                    "p95": 476.619671,
                    "p99": 476.619671,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 606.7129679999999,
                    "min": 0,
                    "p50": 575.03373,
                    "p95": 606.7129679999999,
                    "p99": 606.7129679999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 271.91344699999996,
                    "min": 0,
                    "p50": 251.45636199999998,
                    "p95": 271.91344699999996,
                    "p99": 271.91344699999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 396.83525399999996,
                    "min": 0,
                    "p50": 357.110902,
                    "p95": 396.83525399999996,
                    "p99": 396.83525399999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 346.431878,
                    "min": 0,
                    "p50": 316.288698,
                    "p95": 346.431878,
                    "p99": 346.431878,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 824.748473,
                    "min": 0,
                    "p50": 756.952352,
                    "p95": 824.748473,
                    "p99": 824.748473,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 434.554147,
                    "min": 0,
                    "p50": 382.806971,
                    "p95": 434.554147,
                    "p99": 434.554147,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 308.563429,
                    "min": 0,
                    "p50": 290.36798999999996,
                    "p95": 308.563429,
                    "p99": 308.563429,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.029856,
                    "min": 0,
                    "p50": 208.60716599999998,
                    "p95": 233.029856,
                    "p99": 233.029856,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 594.21245,
                    "min": 0,
                    "p50": 538.955796,
                    "p95": 594.21245,
                    "p99": 594.21245,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 52.524668999999996,
                    "min": 0,
                    "p50": 29.48179,
                    "p95": 52.524668999999996,
                    "p99": 52.524668999999996,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 27.172144,
                    "min": 0,
                    "p50": 27.023459,
                    "p95": 27.172144,
                    "p99": 27.172144,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 85.907404,
                    "min": 0,
                    "p50": 81.324896,
                    "p95": 85.907404,
                    "p99": 85.907404,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 173.06534399999998,
                    "min": 0,
                    "p50": 155.660228,
                    "p95": 173.06534399999998,
                    "p99": 173.06534399999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.416797,
                    "min": 0,
                    "p50": 26.900761,
                    "p95": 27.416797,
                    "p99": 27.416797,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 48.107769999999995,
                    "min": 0,
                    "p50": 26.913871,
                    "p95": 48.107769999999995,
                    "p99": 48.107769999999995,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 58.048252999999995,
                    "min": 0,
                    "p50": 53.464472,
                    "p95": 58.048252999999995,
                    "p99": 58.048252999999995,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.676938999999997,
                    "min": 0,
                    "p50": 26.794904,
                    "p95": 27.676938999999997,
                    "p99": 27.676938999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.432287,
                    "min": 0,
                    "p50": 27.157546999999997,
                    "p95": 28.432287,
                    "p99": 28.432287,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 44.884968,
                    "min": 0,
                    "p50": 27.706218,
                    "p95": 44.884968,
                    "p99": 44.884968,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 47.741627,
                    "min": 0,
                    "p50": 45.650397999999996,
                    "p95": 47.741627,
                    "p99": 47.741627,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.751621,
                    "min": 0,
                    "p50": 26.95787,
                    "p95": 27.751621,
                    "p99": 27.751621,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 30.148982999999998,
                    "min": 0,
                    "p50": 27.047677,
                    "p95": 30.148982999999998,
                    "p99": 30.148982999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.921903999999998,
                    "min": 0,
                    "p50": 27.112354999999997,
                    "p95": 27.921903999999998,
                    "p99": 27.921903999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.631411999999997,
                    "min": 0,
                    "p50": 26.911939999999998,
                    "p95": 27.631411999999997,
                    "p99": 27.631411999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.647091,
                    "min": 0,
                    "p50": 26.786845999999997,
                    "p95": 27.647091,
                    "p99": 27.647091,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.919414,
                    "min": 0,
                    "p50": 26.771596,
                    "p95": 27.919414,
                    "p99": 27.919414,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 28.244125,
                    "min": 0,
                    "p50": 26.836762999999998,
                    "p95": 28.244125,
                    "p99": 28.244125,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 30.99692,
                    "min": 0,
                    "p50": 26.759293999999997,
                    "p95": 30.99692,
                    "p99": 30.99692,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.63771799999998,
                    "min": 0,
                    "p50": 166.455265,
                    "p95": 167.63771799999998,
                    "p99": 167.63771799999998,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 88.771374,
                    "min": 0,
                    "p50": 71.586565,
                    "p95": 88.771374,
                    "p99": 88.771374,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 166.109752,
                    "min": 0,
                    "p50": 131.39745299999998,
                    "p95": 166.109752,
                    "p99": 166.109752,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 95.468864,
                    "min": 0,
                    "p50": 73.619006,
                    "p95": 95.468864,
                    "p99": 95.468864,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 144.39524699999998,
                    "min": 0,
                    "p50": 138.92381,
                    "p95": 144.39524699999998,
                    "p99": 144.39524699999998,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 509.06825299999997,
                    "min": 0,
                    "p50": 493.669534,
                    "p95": 509.06825299999997,
                    "p99": 509.06825299999997,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 136.478714,
                    "min": 0,
                    "p50": 130.442766,
                    "p95": 136.478714,
                    "p99": 136.478714,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 163.95364899999998,
                    "min": 0,
                    "p50": 159.860884,
                    "p95": 163.95364899999998,
                    "p99": 163.95364899999998,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 205.512421,
                    "min": 0,
                    "p50": 189.449264,
                    "p95": 205.512421,
                    "p99": 205.512421,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 116.368365,
                    "min": 0,
                    "p50": 112.70620699999999,
                    "p95": 116.368365,
                    "p99": 116.368365,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 407.766997,
                    "min": 0,
                    "p50": 402.15727,
                    "p95": 407.766997,
                    "p99": 407.766997,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 106.64855299999999,
                    "min": 0,
                    "p50": 105.382072,
                    "p95": 106.64855299999999,
                    "p99": 106.64855299999999,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 151.436875,
                    "min": 0,
                    "p50": 148.974231,
                    "p95": 151.436875,
                    "p99": 151.436875,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 319.006015,
                    "min": 0,
                    "p50": 310.8846,
                    "p95": 319.006015,
                    "p99": 319.006015,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 73.58335199999999,
                    "min": 0,
                    "p50": 63.745391,
                    "p95": 73.58335199999999,
                    "p99": 73.58335199999999,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 979.514924,
                    "min": 0,
                    "p50": 939.162822,
                    "p95": 979.514924,
                    "p99": 979.514924,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.333526,
                    "min": 0,
                    "p50": 54.079544,
                    "p95": 61.333526,
                    "p99": 61.333526,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 181.80886999999998,
                    "min": 0,
                    "p50": 161.760415,
                    "p95": 181.80886999999998,
                    "p99": 181.80886999999998,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 227.658811,
                    "min": 0,
                    "p50": 191.43221499999999,
                    "p95": 227.658811,
                    "p99": 227.658811,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.903705,
                    "min": 0,
                    "p50": 26.745984,
                    "p95": 27.903705,
                    "p99": 27.903705,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.380281999999998,
                    "min": 0,
                    "p50": 27.281032,
                    "p95": 28.380281999999998,
                    "p99": 28.380281999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.750718,
                    "min": 0,
                    "p50": 26.471954999999998,
                    "p95": 27.750718,
                    "p99": 27.750718,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.718659,
                    "min": 0,
                    "p50": 26.792835,
                    "p95": 27.718659,
                    "p99": 27.718659,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 36.903368,
                    "min": 0,
                    "p50": 27.019578,
                    "p95": 36.903368,
                    "p99": 36.903368,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.985712,
                    "min": 0,
                    "p50": 26.924521,
                    "p95": 27.985712,
                    "p99": 27.985712,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 28.255724999999998,
                    "min": 0,
                    "p50": 26.698717,
                    "p95": 28.255724999999998,
                    "p99": 28.255724999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 32.879858,
                    "min": 0,
                    "p50": 27.26149,
                    "p95": 32.879858,
                    "p99": 32.879858,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 52.554337,
                    "min": 0,
                    "p50": 50.345468999999994,
                    "p95": 52.554337,
                    "p99": 52.554337,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 39.827408,
                    "min": 0,
                    "p50": 26.997208,
                    "p95": 39.827408,
                    "p99": 39.827408,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 29.227228,
                    "min": 0,
                    "p50": 26.850984999999998,
                    "p95": 29.227228,
                    "p99": 29.227228,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.094575,
                    "min": 0,
                    "p50": 26.644819,
                    "p95": 27.094575,
                    "p99": 27.094575,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.750387999999997,
                    "min": 0,
                    "p50": 26.946897999999997,
                    "p95": 27.750387999999997,
                    "p99": 27.750387999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.303983,
                    "min": 0,
                    "p50": 26.525921,
                    "p95": 28.303983,
                    "p99": 28.303983,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 80.81716899999999,
                    "min": 0,
                    "p50": 76.410208,
                    "p95": 80.81716899999999,
                    "p99": 80.81716899999999,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 88.539007,
                    "min": 0,
                    "p50": 26.894952999999997,
                    "p95": 88.539007,
                    "p99": 88.539007,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 186.58931099999998,
                    "min": 0,
                    "p50": 40.613735999999996,
                    "p95": 186.58931099999998,
                    "p99": 186.58931099999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.638461999999997,
                    "min": 0,
                    "p50": 26.791244,
                    "p95": 27.638461999999997,
                    "p99": 27.638461999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.356088999999997,
                    "min": 0,
                    "p50": 27.0555,
                    "p95": 27.356088999999997,
                    "p99": 27.356088999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 27.262522999999998,
                    "min": 0,
                    "p50": 27.068434999999997,
                    "p95": 27.262522999999998,
                    "p99": 27.262522999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 28.412269,
                    "min": 0,
                    "p50": 26.514523999999998,
                    "p95": 28.412269,
                    "p99": 28.412269,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.803378,
                    "min": 0,
                    "p50": 26.98736,
                    "p95": 27.803378,
                    "p99": 27.803378,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 27.467374999999997,
                    "min": 0,
                    "p50": 26.755875,
                    "p95": 27.467374999999997,
                    "p99": 27.467374999999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.087719,
                    "min": 0,
                    "p50": 26.707648,
                    "p95": 28.087719,
                    "p99": 28.087719,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 28.195646,
                    "min": 0,
                    "p50": 26.959121999999997,
                    "p95": 28.195646,
                    "p99": 28.195646,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.026414,
                    "min": 0,
                    "p50": 26.683666,
                    "p95": 28.026414,
                    "p99": 28.026414,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 28.174546,
                    "min": 0,
                    "p50": 26.734605,
                    "p95": 28.174546,
                    "p99": 28.174546,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 29.059051999999998,
                    "min": 0,
                    "p50": 27.222663999999998,
                    "p95": 29.059051999999998,
                    "p99": 29.059051999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 30.927581,
                    "min": 0,
                    "p50": 26.900952,
                    "p95": 30.927581,
                    "p99": 30.927581,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 28.06064,
                    "min": 0,
                    "p50": 27.030419,
                    "p95": 28.06064,
                    "p99": 28.06064,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 27.702749999999998,
                    "min": 0,
                    "p50": 26.709546999999997,
                    "p95": 27.702749999999998,
                    "p99": 27.702749999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 27.103537,
                    "min": 0,
                    "p50": 26.594948,
                    "p95": 27.103537,
                    "p99": 27.103537,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 30.492372999999997,
                    "min": 0,
                    "p50": 26.845572999999998,
                    "p95": 30.492372999999997,
                    "p99": 30.492372999999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.719329,
                    "min": 0,
                    "p50": 27.250552,
                    "p95": 27.719329,
                    "p99": 27.719329,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 51.467442,
                    "min": 0,
                    "p50": 43.687999999999995,
                    "p95": 51.467442,
                    "p99": 51.467442,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.096657,
                    "min": 0,
                    "p50": 26.794157,
                    "p95": 27.096657,
                    "p99": 27.096657,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 182.27580799999998,
                    "min": 0,
                    "p50": 27.150285,
                    "p95": 182.27580799999998,
                    "p99": 182.27580799999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.392878,
                    "min": 0,
                    "p50": 26.958409999999997,
                    "p95": 27.392878,
                    "p99": 27.392878,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 126.890757,
                    "min": 0,
                    "p50": 123.279698,
                    "p95": 126.890757,
                    "p99": 126.890757,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 53.367574999999995,
                    "min": 0,
                    "p50": 49.340754,
                    "p95": 53.367574999999995,
                    "p99": 53.367574999999995,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 873.619191,
                    "min": 0,
                    "p50": 832.3484239999999,
                    "p95": 873.619191,
                    "p99": 873.619191,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 200.547124,
                    "min": 0,
                    "p50": 194.90969199999998,
                    "p95": 200.547124,
                    "p99": 200.547124,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 97.29925899999999,
                    "min": 0,
                    "p50": 81.85907399999999,
                    "p95": 97.29925899999999,
                    "p99": 97.29925899999999,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 68.877817,
                    "min": 0,
                    "p50": 62.226592,
                    "p95": 68.877817,
                    "p99": 68.877817,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 91.744492,
                    "min": 0,
                    "p50": 85.698318,
                    "p95": 91.744492,
                    "p99": 91.744492,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 290.4975,
                    "min": 0,
                    "p50": 280.890717,
                    "p95": 290.4975,
                    "p99": 290.4975,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 150.455832,
                    "min": 0,
                    "p50": 145.374225,
                    "p95": 150.455832,
                    "p99": 150.455832,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 133.284654,
                    "min": 0,
                    "p50": 129.832879,
                    "p95": 133.284654,
                    "p99": 133.284654,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 370.058962,
                    "min": 0,
                    "p50": 361.220964,
                    "p95": 370.058962,
                    "p99": 370.058962,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 458.488385,
                    "min": 0,
                    "p50": 443.745856,
                    "p95": 458.488385,
                    "p99": 458.488385,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 161.59267,
                    "min": 0,
                    "p50": 143.18728299999998,
                    "p95": 161.59267,
                    "p99": 161.59267,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 84.128081,
                    "min": 0,
                    "p50": 62.615812999999996,
                    "p95": 84.128081,
                    "p99": 84.128081,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 184.88805599999998,
                    "min": 0,
                    "p50": 180.027096,
                    "p95": 184.88805599999998,
                    "p99": 184.88805599999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 115.03522199999999,
                    "min": 0,
                    "p50": 110.377472,
                    "p95": 115.03522199999999,
                    "p99": 115.03522199999999,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 142.166898,
                    "min": 0,
                    "p50": 128.112025,
                    "p95": 142.166898,
                    "p99": 142.166898,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 172.60185199999998,
                    "min": 0,
                    "p50": 165.847488,
                    "p95": 172.60185199999998,
                    "p99": 172.60185199999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 109.33744,
                    "min": 0,
                    "p50": 106.15381099999999,
                    "p95": 109.33744,
                    "p99": 109.33744,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 745.2947029999999,
                    "min": 0,
                    "p50": 711.16881,
                    "p95": 745.2947029999999,
                    "p99": 745.2947029999999,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 137.602524,
                    "min": 0,
                    "p50": 127.41260199999999,
                    "p95": 137.602524,
                    "p99": 137.602524,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 251.558678,
                    "min": 0,
                    "p50": 239.26653499999998,
                    "p95": 251.558678,
                    "p99": 251.558678,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 358.693858,
                    "min": 0,
                    "p50": 346.353944,
                    "p95": 358.693858,
                    "p99": 358.693858,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 148.448515,
                    "min": 0,
                    "p50": 137.988014,
                    "p95": 148.448515,
                    "p99": 148.448515,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 384.884146,
                    "min": 0,
                    "p50": 374.457669,
                    "p95": 384.884146,
                    "p99": 384.884146,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 222.82708399999999,
                    "min": 0,
                    "p50": 216.94836099999998,
                    "p95": 222.82708399999999,
                    "p99": 222.82708399999999,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 431.50157099999996,
                    "min": 0,
                    "p50": 419.41506799999996,
                    "p95": 431.50157099999996,
                    "p99": 431.50157099999996,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 174.641763,
                    "min": 0,
                    "p50": 172.05395199999998,
                    "p95": 174.641763,
                    "p99": 174.641763,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 273.234643,
                    "min": 0,
                    "p50": 265.768064,
                    "p95": 273.234643,
                    "p99": 273.234643,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 959.9604909999999,
                    "min": 0,
                    "p50": 926.785621,
                    "p95": 959.9604909999999,
                    "p99": 959.9604909999999,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 308.70237,
                    "min": 0,
                    "p50": 285.57023,
                    "p95": 308.70237,
                    "p99": 308.70237,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 198.773227,
                    "min": 0,
                    "p50": 183.706417,
                    "p95": 198.773227,
                    "p99": 198.773227,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 333.1049,
                    "min": 0,
                    "p50": 312.038797,
                    "p95": 333.1049,
                    "p99": 333.1049,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 115.273164,
                    "min": 0,
                    "p50": 112.166871,
                    "p95": 115.273164,
                    "p99": 115.273164,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 364.334191,
                    "min": 0,
                    "p50": 345.96759599999996,
                    "p95": 364.334191,
                    "p99": 364.334191,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 520.885773,
                    "min": 0,
                    "p50": 505.08016999999995,
                    "p95": 520.885773,
                    "p99": 520.885773,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1557.998973,
                    "min": 0,
                    "p50": 1405.938293,
                    "p95": 1557.998973,
                    "p99": 1557.998973,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 166.00544299999999,
                    "min": 0,
                    "p50": 138.83393999999998,
                    "p95": 166.00544299999999,
                    "p99": 166.00544299999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 294.98299499999996,
                    "min": 0,
                    "p50": 276.52617699999996,
                    "p95": 294.98299499999996,
                    "p99": 294.98299499999996,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 251.775063,
                    "min": 0,
                    "p50": 214.136043,
                    "p95": 251.775063,
                    "p99": 251.775063,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 467.98549299999996,
                    "min": 0,
                    "p50": 454.415683,
                    "p95": 467.98549299999996,
                    "p99": 467.98549299999996,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 425.222878,
                    "min": 0,
                    "p50": 412.85986099999997,
                    "p95": 425.222878,
                    "p99": 425.222878,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 545.0418999999999,
                    "min": 0,
                    "p50": 536.593097,
                    "p95": 545.0418999999999,
                    "p99": 545.0418999999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 678.84683,
                    "min": 0,
                    "p50": 655.5642419999999,
                    "p95": 678.84683,
                    "p99": 678.84683,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 592.3584,
                    "min": 0,
                    "p50": 571.9040679999999,
                    "p95": 592.3584,
                    "p99": 592.3584,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 497.28531999999996,
                    "min": 0,
                    "p50": 483.850644,
                    "p95": 497.28531999999996,
                    "p99": 497.28531999999996,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 886.6842959999999,
                    "min": 0,
                    "p50": 846.1546659999999,
                    "p95": 886.6842959999999,
                    "p99": 886.6842959999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 339.117994,
                    "min": 0,
                    "p50": 305.867467,
                    "p95": 339.117994,
                    "p99": 339.117994,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 211.219722,
                    "min": 0,
                    "p50": 173.46479399999998,
                    "p95": 211.219722,
                    "p99": 211.219722,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 770.1534419999999,
                    "min": 0,
                    "p50": 759.8859,
                    "p95": 770.1534419999999,
                    "p99": 770.1534419999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 380.816757,
                    "min": 0,
                    "p50": 360.09120099999996,
                    "p95": 380.816757,
                    "p99": 380.816757,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 640.609801,
                    "min": 0,
                    "p50": 611.9749439999999,
                    "p95": 640.609801,
                    "p99": 640.609801,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 907.346236,
                    "min": 0,
                    "p50": 895.667194,
                    "p95": 907.346236,
                    "p99": 907.346236,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2050.93614,
                    "min": 0,
                    "p50": 2024.7247249999998,
                    "p95": 2050.93614,
                    "p99": 2050.93614,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2905.826358,
                    "min": 0,
                    "p50": 2879.2157349999998,
                    "p95": 2905.826358,
                    "p99": 2905.826358,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5743.823856999999,
                    "min": 0,
                    "p50": 5693.342009,
                    "p95": 5743.823856999999,
                    "p99": 5743.823856999999,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1610.4954,
                    "min": 0,
                    "p50": 1593.549123,
                    "p95": 1610.4954,
                    "p99": 1610.4954,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 753.365229,
                    "min": 0,
                    "p50": 742.939818,
                    "p95": 753.365229,
                    "p99": 753.365229,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 618.235337,
                    "min": 0,
                    "p50": 603.232454,
                    "p95": 618.235337,
                    "p99": 618.235337,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1761.468748,
                    "min": 0,
                    "p50": 1733.197232,
                    "p95": 1761.468748,
                    "p99": 1761.468748,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4333.426261,
                    "min": 0,
                    "p50": 4295.432239,
                    "p95": 4333.426261,
                    "p99": 4333.426261,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2555.171751,
                    "min": 0,
                    "p50": 2524.213562,
                    "p95": 2555.171751,
                    "p99": 2555.171751,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2203.1610109999997,
                    "min": 0,
                    "p50": 2148.208932,
                    "p95": 2203.1610109999997,
                    "p99": 2203.1610109999997,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1186.592363,
                    "min": 0,
                    "p50": 1169.596327,
                    "p95": 1186.592363,
                    "p99": 1186.592363,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1465.873574,
                    "min": 0,
                    "p50": 1431.8102629999998,
                    "p95": 1465.873574,
                    "p99": 1465.873574,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1049.8405539999999,
                    "min": 0,
                    "p50": 1033.727737,
                    "p95": 1049.8405539999999,
                    "p99": 1049.8405539999999,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 470.999212,
                    "min": 0,
                    "p50": 459.515492,
                    "p95": 470.999212,
                    "p99": 470.999212,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1894.3534439999999,
                    "min": 0,
                    "p50": 1861.16165,
                    "p95": 1894.3534439999999,
                    "p99": 1894.3534439999999,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1314.349115,
                    "min": 0,
                    "p50": 1304.1619759999999,
                    "p95": 1314.349115,
                    "p99": 1314.349115,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 434.39090899999997,
                    "min": 0,
                    "p50": 418.414227,
                    "p95": 434.39090899999997,
                    "p99": 434.39090899999997,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1324.520154,
                    "min": 0,
                    "p50": 1298.174896,
                    "p95": 1324.520154,
                    "p99": 1324.520154,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2647.261903,
                    "min": 0,
                    "p50": 2603.8727289999997,
                    "p95": 2647.261903,
                    "p99": 2647.261903,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1473.250945,
                    "min": 0,
                    "p50": 1454.380375,
                    "p95": 1473.250945,
                    "p99": 1473.250945,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3840.113073,
                    "min": 0,
                    "p50": 3817.3625309999998,
                    "p95": 3840.113073,
                    "p99": 3840.113073,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 824.264877,
                    "min": 0,
                    "p50": 785.214753,
                    "p95": 824.264877,
                    "p99": 824.264877,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1221.71011,
                    "min": 0,
                    "p50": 1189.174156,
                    "p95": 1221.71011,
                    "p99": 1221.71011,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5078.88029,
                    "min": 0,
                    "p50": 5039.074899,
                    "p95": 5078.88029,
                    "p99": 5078.88029,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 698.6300259999999,
                    "min": 0,
                    "p50": 664.5503269999999,
                    "p95": 698.6300259999999,
                    "p99": 698.6300259999999,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1749.936581,
                    "min": 0,
                    "p50": 1708.796145,
                    "p95": 1749.936581,
                    "p99": 1749.936581,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 932.395806,
                    "min": 0,
                    "p50": 916.977844,
                    "p95": 932.395806,
                    "p99": 932.395806,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 558.924631,
                    "min": 0,
                    "p50": 543.485602,
                    "p95": 558.924631,
                    "p99": 558.924631,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1999.85573,
                    "min": 0,
                    "p50": 1980.512098,
                    "p95": 1999.85573,
                    "p99": 1999.85573,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1873.3008539999998,
                    "min": 0,
                    "p50": 1844.8479169999998,
                    "p95": 1873.3008539999998,
                    "p99": 1873.3008539999998,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2298.823785,
                    "min": 0,
                    "p50": 2233.80061,
                    "p95": 2298.823785,
                    "p99": 2298.823785,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1067.355656,
                    "min": 0,
                    "p50": 1050.7013729999999,
                    "p95": 1067.355656,
                    "p99": 1067.355656,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1590.865858,
                    "min": 0,
                    "p50": 1557.4635739999999,
                    "p95": 1590.865858,
                    "p99": 1590.865858,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 109.79209499999999,
                    "min": 0,
                    "p50": 84.64799699999999,
                    "p95": 109.79209499999999,
                    "p99": 109.79209499999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 89.646227,
                    "min": 0,
                    "p50": 84.81241399999999,
                    "p95": 89.646227,
                    "p99": 89.646227,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 138.547404,
                    "min": 0,
                    "p50": 119.596948,
                    "p95": 138.547404,
                    "p99": 138.547404,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 180.29794099999998,
                    "min": 0,
                    "p50": 169.853076,
                    "p95": 180.29794099999998,
                    "p99": 180.29794099999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 506.98227499999996,
                    "min": 0,
                    "p50": 489.589212,
                    "p95": 506.98227499999996,
                    "p99": 506.98227499999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 225.938999,
                    "min": 0,
                    "p50": 220.27381499999998,
                    "p95": 225.938999,
                    "p99": 225.938999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 98.623403,
                    "min": 0,
                    "p50": 80.930269,
                    "p95": 98.623403,
                    "p99": 98.623403,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 32.155037,
                    "min": 0,
                    "p50": 27.26784,
                    "p95": 32.155037,
                    "p99": 32.155037,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 274.60832999999997,
                    "min": 0,
                    "p50": 258.787158,
                    "p95": 274.60832999999997,
                    "p99": 274.60832999999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 65.017228,
                    "min": 0,
                    "p50": 36.018851999999995,
                    "p95": 65.017228,
                    "p99": 65.017228,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 78.757179,
                    "min": 0,
                    "p50": 72.63658699999999,
                    "p95": 78.757179,
                    "p99": 78.757179,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 84.60441399999999,
                    "min": 0,
                    "p50": 45.18861,
                    "p95": 84.60441399999999,
                    "p99": 84.60441399999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 124.186275,
                    "min": 0,
                    "p50": 109.54517299999999,
                    "p95": 124.186275,
                    "p99": 124.186275,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 50.771428,
                    "min": 0,
                    "p50": 47.965024,
                    "p95": 50.771428,
                    "p99": 50.771428,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 59.301359999999995,
                    "min": 0,
                    "p50": 31.812656999999998,
                    "p95": 59.301359999999995,
                    "p99": 59.301359999999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 113.985828,
                    "min": 0,
                    "p50": 106.805157,
                    "p95": 113.985828,
                    "p99": 113.985828,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 96.325887,
                    "min": 0,
                    "p50": 81.135195,
                    "p95": 96.325887,
                    "p99": 96.325887,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 43.974031,
                    "min": 0,
                    "p50": 27.589433,
                    "p95": 43.974031,
                    "p99": 43.974031,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 102.00025099999999,
                    "min": 0,
                    "p50": 88.343645,
                    "p95": 102.00025099999999,
                    "p99": 102.00025099999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2559.457418,
                    "min": 0,
                    "p50": 2538.359681,
                    "p95": 2559.457418,
                    "p99": 2559.457418,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1052.265928,
                    "min": 0,
                    "p50": 1040.023906,
                    "p95": 1052.265928,
                    "p99": 1052.265928,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 769.2219779999999,
                    "min": 0,
                    "p50": 729.557015,
                    "p95": 769.2219779999999,
                    "p99": 769.2219779999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1786.005484,
                    "min": 0,
                    "p50": 1765.704532,
                    "p95": 1786.005484,
                    "p99": 1786.005484,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1192.476085,
                    "min": 0,
                    "p50": 1164.101221,
                    "p95": 1192.476085,
                    "p99": 1192.476085,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5777.8642629999995,
                    "min": 0,
                    "p50": 5736.918256,
                    "p95": 5777.8642629999995,
                    "p99": 5777.8642629999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1640.970715,
                    "min": 0,
                    "p50": 1605.972149,
                    "p95": 1640.970715,
                    "p99": 1640.970715,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 906.0921159999999,
                    "min": 0,
                    "p50": 875.653066,
                    "p95": 906.0921159999999,
                    "p99": 906.0921159999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1923.184116,
                    "min": 0,
                    "p50": 1908.092007,
                    "p95": 1923.184116,
                    "p99": 1923.184116,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4365.766257,
                    "min": 0,
                    "p50": 4321.272256,
                    "p95": 4365.766257,
                    "p99": 4365.766257,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2204.059643,
                    "min": 0,
                    "p50": 2172.0331309999997,
                    "p95": 2204.059643,
                    "p99": 2204.059643,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2926.741035,
                    "min": 0,
                    "p50": 2890.362929,
                    "p95": 2926.741035,
                    "p99": 2926.741035,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 478.55114899999995,
                    "min": 0,
                    "p50": 475.01561599999997,
                    "p95": 478.55114899999995,
                    "p99": 478.55114899999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2066.699142,
                    "min": 0,
                    "p50": 2031.9789899999998,
                    "p95": 2066.699142,
                    "p99": 2066.699142,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 619.8668779999999,
                    "min": 0,
                    "p50": 607.842936,
                    "p95": 619.8668779999999,
                    "p99": 619.8668779999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1489.071972,
                    "min": 0,
                    "p50": 1469.217465,
                    "p95": 1489.071972,
                    "p99": 1489.071972,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1349.1855839999998,
                    "min": 0,
                    "p50": 1320.778813,
                    "p95": 1349.1855839999998,
                    "p99": 1349.1855839999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2204.89281,
                    "min": 0,
                    "p50": 2180.529299,
                    "p95": 2204.89281,
                    "p99": 2204.89281,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 627.9244679999999,
                    "min": 0,
                    "p50": 602.6956279999999,
                    "p95": 627.9244679999999,
                    "p99": 627.9244679999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1341.602963,
                    "min": 0,
                    "p50": 1308.774713,
                    "p95": 1341.602963,
                    "p99": 1341.602963,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1924.8261029999999,
                    "min": 0,
                    "p50": 1907.0539529999999,
                    "p95": 1924.8261029999999,
                    "p99": 1924.8261029999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1498.53196,
                    "min": 0,
                    "p50": 1470.4374699999998,
                    "p95": 1498.53196,
                    "p99": 1498.53196,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1637.14518,
                    "min": 0,
                    "p50": 1600.533314,
                    "p95": 1637.14518,
                    "p99": 1637.14518,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2947.175909,
                    "min": 0,
                    "p50": 2890.943899,
                    "p95": 2947.175909,
                    "p99": 2947.175909,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4375.983104,
                    "min": 0,
                    "p50": 4330.618426999999,
                    "p95": 4375.983104,
                    "p99": 4375.983104,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1780.435477,
                    "min": 0,
                    "p50": 1760.803576,
                    "p95": 1780.435477,
                    "p99": 1780.435477,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 776.6238629999999,
                    "min": 0,
                    "p50": 761.3121669999999,
                    "p95": 776.6238629999999,
                    "p99": 776.6238629999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 477.938293,
                    "min": 0,
                    "p50": 459.145216,
                    "p95": 477.938293,
                    "p99": 477.938293,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 916.5855789999999,
                    "min": 0,
                    "p50": 900.958751,
                    "p95": 916.5855789999999,
                    "p99": 916.5855789999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2577.729527,
                    "min": 0,
                    "p50": 2554.616564,
                    "p95": 2577.729527,
                    "p99": 2577.729527,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1067.68671,
                    "min": 0,
                    "p50": 1046.160782,
                    "p95": 1067.68671,
                    "p99": 1067.68671,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2062.4096409999997,
                    "min": 0,
                    "p50": 2043.143457,
                    "p95": 2062.4096409999997,
                    "p99": 2062.4096409999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1202.667222,
                    "min": 0,
                    "p50": 1184.334508,
                    "p95": 1202.667222,
                    "p99": 1202.667222,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 752.4662639999999,
                    "min": 0,
                    "p50": 716.7856049999999,
                    "p95": 752.4662639999999,
                    "p99": 752.4662639999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 142.85037499999999,
                    "min": 0,
                    "p50": 137.816135,
                    "p95": 142.85037499999999,
                    "p99": 142.85037499999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 401.688625,
                    "min": 0,
                    "p50": 398.211824,
                    "p95": 401.688625,
                    "p99": 401.688625,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 93.113744,
                    "min": 0,
                    "p50": 88.53411,
                    "p95": 93.113744,
                    "p99": 93.113744,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 63.592102,
                    "min": 0,
                    "p50": 53.102692,
                    "p95": 63.592102,
                    "p99": 63.592102,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 128.889334,
                    "min": 0,
                    "p50": 116.988952,
                    "p95": 128.889334,
                    "p99": 128.889334,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 329.47871299999997,
                    "min": 0,
                    "p50": 293.003206,
                    "p95": 329.47871299999997,
                    "p99": 329.47871299999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 151.356877,
                    "min": 0,
                    "p50": 138.547168,
                    "p95": 151.356877,
                    "p99": 151.356877,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 121.65464999999999,
                    "min": 0,
                    "p50": 96.400607,
                    "p95": 121.65464999999999,
                    "p99": 121.65464999999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 167.529753,
                    "min": 0,
                    "p50": 155.734897,
                    "p95": 167.529753,
                    "p99": 167.529753,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 74.22145499999999,
                    "min": 0,
                    "p50": 59.068107999999995,
                    "p95": 74.22145499999999,
                    "p99": 74.22145499999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 123.02188799999999,
                    "min": 0,
                    "p50": 119.12809499999999,
                    "p95": 123.02188799999999,
                    "p99": 123.02188799999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 45.773762,
                    "min": 0,
                    "p50": 27.875819999999997,
                    "p95": 45.773762,
                    "p99": 45.773762,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 98.087699,
                    "min": 0,
                    "p50": 61.508272,
                    "p95": 98.087699,
                    "p99": 98.087699,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 88.49072199999999,
                    "min": 0,
                    "p50": 81.02210199999999,
                    "p95": 88.49072199999999,
                    "p99": 88.49072199999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 108.64119099999999,
                    "min": 0,
                    "p50": 97.052078,
                    "p95": 108.64119099999999,
                    "p99": 108.64119099999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 114.088939,
                    "min": 0,
                    "p50": 75.897886,
                    "p95": 114.088939,
                    "p99": 114.088939,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 255.75851699999998,
                    "min": 0,
                    "p50": 243.091217,
                    "p95": 255.75851699999998,
                    "p99": 255.75851699999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 187.75690799999998,
                    "min": 0,
                    "p50": 172.81853099999998,
                    "p95": 187.75690799999998,
                    "p99": 187.75690799999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 43.471716,
                    "min": 0,
                    "p50": 36.250814999999996,
                    "p95": 43.471716,
                    "p99": 43.471716,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 166.08181199999999,
                    "min": 0,
                    "p50": 155.510962,
                    "p95": 166.08181199999999,
                    "p99": 166.08181199999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 132.223588,
                    "min": 0,
                    "p50": 115.20375899999999,
                    "p95": 132.223588,
                    "p99": 132.223588,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 102.84863299999999,
                    "min": 0,
                    "p50": 87.31681999999999,
                    "p95": 102.84863299999999,
                    "p99": 102.84863299999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 65.029365,
                    "min": 0,
                    "p50": 50.771615999999995,
                    "p95": 65.029365,
                    "p99": 65.029365,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 340.99152599999996,
                    "min": 0,
                    "p50": 338.35821599999997,
                    "p95": 340.99152599999996,
                    "p99": 340.99152599999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 194.827213,
                    "min": 0,
                    "p50": 187.74630399999998,
                    "p95": 194.827213,
                    "p99": 194.827213,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 74.52817999999999,
                    "min": 0,
                    "p50": 59.78105,
                    "p95": 74.52817999999999,
                    "p99": 74.52817999999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 85.54701299999999,
                    "min": 0,
                    "p50": 68.708722,
                    "p95": 85.54701299999999,
                    "p99": 85.54701299999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 53.519272,
                    "min": 0,
                    "p50": 50.450685,
                    "p95": 53.519272,
                    "p99": 53.519272,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 57.937760999999995,
                    "min": 0,
                    "p50": 30.957500999999997,
                    "p95": 57.937760999999995,
                    "p99": 57.937760999999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 28.356882,
                    "min": 0,
                    "p50": 27.31721,
                    "p95": 28.356882,
                    "p99": 28.356882,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 94.077518,
                    "min": 0,
                    "p50": 82.56774899999999,
                    "p95": 94.077518,
                    "p99": 94.077518,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 70.192403,
                    "min": 0,
                    "p50": 54.200632,
                    "p95": 70.192403,
                    "p99": 70.192403,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 85.689449,
                    "min": 0,
                    "p50": 48.742262,
                    "p95": 85.689449,
                    "p99": 85.689449,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 47.411778999999996,
                    "min": 0,
                    "p50": 41.339006999999995,
                    "p95": 47.411778999999996,
                    "p99": 47.411778999999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 80.662131,
                    "min": 0,
                    "p50": 71.566333,
                    "p95": 80.662131,
                    "p99": 80.662131,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 35.440377,
                    "min": 0,
                    "p50": 34.106054,
                    "p95": 35.440377,
                    "p99": 35.440377,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.581633,
                    "min": 0,
                    "p50": 27.059347,
                    "p95": 27.581633,
                    "p99": 27.581633,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 165.63314499999998,
                    "min": 0,
                    "p50": 157.963528,
                    "p95": 165.63314499999998,
                    "p99": 165.63314499999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 97.214074,
                    "min": 0,
                    "p50": 86.231544,
                    "p95": 97.214074,
                    "p99": 97.214074,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 183.88731099999998,
                    "min": 0,
                    "p50": 180.143927,
                    "p95": 183.88731099999998,
                    "p99": 183.88731099999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 91.982945,
                    "min": 0,
                    "p50": 76.390295,
                    "p95": 91.982945,
                    "p99": 91.982945,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 86.569994,
                    "min": 0,
                    "p50": 82.225405,
                    "p95": 86.569994,
                    "p99": 86.569994,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 61.977245999999994,
                    "min": 0,
                    "p50": 58.243252,
                    "p95": 61.977245999999994,
                    "p99": 61.977245999999994,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 142.440114,
                    "min": 0,
                    "p50": 138.00915,
                    "p95": 142.440114,
                    "p99": 142.440114,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 119.59597099999999,
                    "min": 0,
                    "p50": 80.31306599999999,
                    "p95": 119.59597099999999,
                    "p99": 119.59597099999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 249.93375799999998,
                    "min": 0,
                    "p50": 237.108524,
                    "p95": 249.93375799999998,
                    "p99": 249.93375799999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 104.183858,
                    "min": 0,
                    "p50": 93.025247,
                    "p95": 104.183858,
                    "p99": 104.183858,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 740.481728,
                    "min": 0,
                    "p50": 702.281106,
                    "p95": 740.481728,
                    "p99": 740.481728,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 73.028065,
                    "min": 0,
                    "p50": 71.91129099999999,
                    "p95": 73.028065,
                    "p99": 73.028065,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 134.58937699999998,
                    "min": 0,
                    "p50": 130.657958,
                    "p95": 134.58937699999998,
                    "p99": 134.58937699999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 127.13342399999999,
                    "min": 0,
                    "p50": 124.747491,
                    "p95": 127.13342399999999,
                    "p99": 127.13342399999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 320.187281,
                    "min": 0,
                    "p50": 311.82090999999997,
                    "p95": 320.187281,
                    "p99": 320.187281,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 49.430102999999995,
                    "min": 0,
                    "p50": 26.814183999999997,
                    "p95": 49.430102999999995,
                    "p99": 49.430102999999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 146.925978,
                    "min": 0,
                    "p50": 137.068932,
                    "p95": 146.925978,
                    "p99": 146.925978,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 113.201533,
                    "min": 0,
                    "p50": 99.951517,
                    "p95": 113.201533,
                    "p99": 113.201533,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 391.32524,
                    "min": 0,
                    "p50": 375.13769099999996,
                    "p95": 391.32524,
                    "p99": 391.32524,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 569.201189,
                    "min": 0,
                    "p50": 556.755221,
                    "p95": 569.201189,
                    "p99": 569.201189,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 489.931585,
                    "min": 0,
                    "p50": 483.81897399999997,
                    "p95": 489.931585,
                    "p99": 489.931585,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 716.332856,
                    "min": 0,
                    "p50": 688.804905,
                    "p95": 716.332856,
                    "p99": 716.332856,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 260.918869,
                    "min": 0,
                    "p50": 258.22628399999996,
                    "p95": 260.918869,
                    "p99": 260.918869,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 335.384442,
                    "min": 0,
                    "p50": 322.033163,
                    "p95": 335.384442,
                    "p99": 335.384442,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 637.6724889999999,
                    "min": 0,
                    "p50": 619.867527,
                    "p95": 637.6724889999999,
                    "p99": 637.6724889999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 413.099353,
                    "min": 0,
                    "p50": 395.207095,
                    "p95": 413.099353,
                    "p99": 413.099353,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 779.945534,
                    "min": 0,
                    "p50": 749.586807,
                    "p95": 779.945534,
                    "p99": 779.945534,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 264.38514499999997,
                    "min": 0,
                    "p50": 252.56583899999998,
                    "p95": 264.38514499999997,
                    "p99": 264.38514499999997,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 639.3032019999999,
                    "min": 0,
                    "p50": 611.451003,
                    "p95": 639.3032019999999,
                    "p99": 639.3032019999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 488.75991,
                    "min": 0,
                    "p50": 450.866226,
                    "p95": 488.75991,
                    "p99": 488.75991,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 561.656876,
                    "min": 0,
                    "p50": 558.228226,
                    "p95": 561.656876,
                    "p99": 561.656876,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 712.1946929999999,
                    "min": 0,
                    "p50": 702.898955,
                    "p95": 712.1946929999999,
                    "p99": 712.1946929999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 339.28945,
                    "min": 0,
                    "p50": 328.483765,
                    "p95": 339.28945,
                    "p99": 339.28945,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 417.193923,
                    "min": 0,
                    "p50": 379.34574,
                    "p95": 417.193923,
                    "p99": 417.193923,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 298.264347,
                    "min": 0,
                    "p50": 265.325585,
                    "p95": 298.264347,
                    "p99": 298.264347,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 474.335374,
                    "min": 0,
                    "p50": 450.049045,
                    "p95": 474.335374,
                    "p99": 474.335374,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 599.033691,
                    "min": 0,
                    "p50": 568.389051,
                    "p95": 599.033691,
                    "p99": 599.033691,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 423.217545,
                    "min": 0,
                    "p50": 380.611201,
                    "p95": 423.217545,
                    "p99": 423.217545,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 780.1637999999999,
                    "min": 0,
                    "p50": 764.5508209999999,
                    "p95": 780.1637999999999,
                    "p99": 780.1637999999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.64475,
                    "min": 0,
                    "p50": 211.42202799999998,
                    "p95": 227.64475,
                    "p99": 227.64475,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 666.096057,
                    "min": 0,
                    "p50": 630.9876019999999,
                    "p95": 666.096057,
                    "p99": 666.096057,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 535.03676,
                    "min": 0,
                    "p50": 499.82141099999996,
                    "p95": 535.03676,
                    "p99": 535.03676,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.064931,
                    "min": 0,
                    "p50": 330.194914,
                    "p95": 350.064931,
                    "p99": 350.064931,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 731.383114,
                    "min": 0,
                    "p50": 674.087101,
                    "p95": 731.383114,
                    "p99": 731.383114,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 495.687547,
                    "min": 0,
                    "p50": 457.584002,
                    "p95": 495.687547,
                    "p99": 495.687547,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 641.931037,
                    "min": 0,
                    "p50": 626.972734,
                    "p95": 641.931037,
                    "p99": 641.931037,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 193.833272,
                    "min": 0,
                    "p50": 179.690699,
                    "p95": 193.833272,
                    "p99": 193.833272,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 343.592711,
                    "min": 0,
                    "p50": 334.43222099999997,
                    "p95": 343.592711,
                    "p99": 343.592711,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 571.471541,
                    "min": 0,
                    "p50": 552.212717,
                    "p95": 571.471541,
                    "p99": 571.471541,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 268.825389,
                    "min": 0,
                    "p50": 253.67412099999999,
                    "p95": 268.825389,
                    "p99": 268.825389,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 420.992908,
                    "min": 0,
                    "p50": 407.50546599999996,
                    "p95": 420.992908,
                    "p99": 420.992908,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1170.0328299999999,
                    "min": 0,
                    "p50": 1136.23464,
                    "p95": 1170.0328299999999,
                    "p99": 1170.0328299999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 611.73757,
                    "min": 0,
                    "p50": 572.691454,
                    "p95": 611.73757,
                    "p99": 611.73757,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.284671,
                    "min": 0,
                    "p50": 347.008039,
                    "p95": 365.284671,
                    "p99": 365.284671,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1082.035703,
                    "min": 0,
                    "p50": 1051.482291,
                    "p95": 1082.035703,
                    "p99": 1082.035703,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 847.846413,
                    "min": 0,
                    "p50": 803.882432,
                    "p95": 847.846413,
                    "p99": 847.846413,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 676.671381,
                    "min": 0,
                    "p50": 653.001977,
                    "p95": 676.671381,
                    "p99": 676.671381,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1002.638466,
                    "min": 0,
                    "p50": 971.380137,
                    "p95": 1002.638466,
                    "p99": 1002.638466,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 442.418409,
                    "min": 0,
                    "p50": 411.841884,
                    "p95": 442.418409,
                    "p99": 442.418409,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 279.27311499999996,
                    "min": 0,
                    "p50": 263.16733999999997,
                    "p95": 279.27311499999996,
                    "p99": 279.27311499999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1450.332399,
                    "min": 0,
                    "p50": 1410.0644459999999,
                    "p95": 1450.332399,
                    "p99": 1450.332399,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1240.962305,
                    "min": 0,
                    "p50": 1210.1045259999999,
                    "p95": 1240.962305,
                    "p99": 1240.962305,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1633.678535,
                    "min": 0,
                    "p50": 1589.0044639999999,
                    "p95": 1633.678535,
                    "p99": 1633.678535,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 756.760442,
                    "min": 0,
                    "p50": 747.979346,
                    "p95": 756.760442,
                    "p99": 756.760442,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 911.2649859999999,
                    "min": 0,
                    "p50": 888.0353,
                    "p95": 911.2649859999999,
                    "p99": 911.2649859999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 524.564043,
                    "min": 0,
                    "p50": 482.037372,
                    "p95": 524.564043,
                    "p99": 524.564043,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 948.1039589999999,
                    "min": 0,
                    "p50": 910.316349,
                    "p95": 948.1039589999999,
                    "p99": 948.1039589999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 380.37612099999996,
                    "min": 0,
                    "p50": 374.865024,
                    "p95": 380.37612099999996,
                    "p99": 380.37612099999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1062.57558,
                    "min": 0,
                    "p50": 1035.410971,
                    "p95": 1062.57558,
                    "p99": 1062.57558,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 728.873348,
                    "min": 0,
                    "p50": 711.1295319999999,
                    "p95": 728.873348,
                    "p99": 728.873348,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 312.59449,
                    "min": 0,
                    "p50": 294.56030699999997,
                    "p95": 312.59449,
                    "p99": 312.59449,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 454.61017899999996,
                    "min": 0,
                    "p50": 444.34898599999997,
                    "p95": 454.61017899999996,
                    "p99": 454.61017899999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 857.377936,
                    "min": 0,
                    "p50": 836.970922,
                    "p95": 857.377936,
                    "p99": 857.377936,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 997.923413,
                    "min": 0,
                    "p50": 977.3952429999999,
                    "p95": 997.923413,
                    "p99": 997.923413,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1429.967903,
                    "min": 0,
                    "p50": 1396.897643,
                    "p95": 1429.967903,
                    "p99": 1429.967903,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 517.1892369999999,
                    "min": 0,
                    "p50": 498.639297,
                    "p95": 517.1892369999999,
                    "p99": 517.1892369999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1249.339078,
                    "min": 0,
                    "p50": 1217.927907,
                    "p95": 1249.339078,
                    "p99": 1249.339078,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 587.1698269999999,
                    "min": 0,
                    "p50": 550.8918209999999,
                    "p95": 587.1698269999999,
                    "p99": 587.1698269999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 792.199717,
                    "min": 0,
                    "p50": 761.8829029999999,
                    "p95": 792.199717,
                    "p99": 792.199717,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 662.2984759999999,
                    "min": 0,
                    "p50": 656.7721839999999,
                    "p95": 662.2984759999999,
                    "p99": 662.2984759999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.40943599999997,
                    "min": 0,
                    "p50": 223.00392,
                    "p95": 257.40943599999997,
                    "p99": 257.40943599999997,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 436.312706,
                    "min": 0,
                    "p50": 417.76591099999996,
                    "p95": 436.312706,
                    "p99": 436.312706,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 671.846536,
                    "min": 0,
                    "p50": 662.7801069999999,
                    "p95": 671.846536,
                    "p99": 671.846536,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 609.504253,
                    "min": 0,
                    "p50": 584.291336,
                    "p95": 609.504253,
                    "p99": 609.504253,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1427.71201,
                    "min": 0,
                    "p50": 1406.318108,
                    "p95": 1427.71201,
                    "p99": 1427.71201,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1201.408353,
                    "min": 0,
                    "p50": 1191.6396379999999,
                    "p95": 1201.408353,
                    "p99": 1201.408353,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 282.267603,
                    "min": 0,
                    "p50": 267.617047,
                    "p95": 282.267603,
                    "p99": 282.267603,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 930.0733389999999,
                    "min": 0,
                    "p50": 886.876323,
                    "p95": 930.0733389999999,
                    "p99": 930.0733389999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 827.5285299999999,
                    "min": 0,
                    "p50": 784.967775,
                    "p95": 827.5285299999999,
                    "p99": 827.5285299999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 353.227406,
                    "min": 0,
                    "p50": 319.740004,
                    "p95": 353.227406,
                    "p99": 353.227406,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 994.3077639999999,
                    "min": 0,
                    "p50": 975.0141779999999,
                    "p95": 994.3077639999999,
                    "p99": 994.3077639999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 758.6054919999999,
                    "min": 0,
                    "p50": 730.765304,
                    "p95": 758.6054919999999,
                    "p99": 758.6054919999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1618.067264,
                    "min": 0,
                    "p50": 1581.834772,
                    "p95": 1618.067264,
                    "p99": 1618.067264,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1146.882102,
                    "min": 0,
                    "p50": 1109.522487,
                    "p95": 1146.882102,
                    "p99": 1146.882102,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 524.804456,
                    "min": 0,
                    "p50": 508.26526199999995,
                    "p95": 524.804456,
                    "p99": 524.804456,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1084.85406,
                    "min": 0,
                    "p50": 1062.500357,
                    "p95": 1084.85406,
                    "p99": 1084.85406,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1656.1934589999998,
                    "min": 0,
                    "p50": 1595.4677239999999,
                    "p95": 1656.1934589999998,
                    "p99": 1656.1934589999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 360.307092,
                    "min": 0,
                    "p50": 340.492234,
                    "p95": 360.307092,
                    "p99": 360.307092,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 751.5488449999999,
                    "min": 0,
                    "p50": 731.955369,
                    "p95": 751.5488449999999,
                    "p99": 751.5488449999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 839.57075,
                    "min": 0,
                    "p50": 801.1449259999999,
                    "p95": 839.57075,
                    "p99": 839.57075,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 913.655457,
                    "min": 0,
                    "p50": 893.213672,
                    "p95": 913.655457,
                    "p99": 913.655457,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1448.812868,
                    "min": 0,
                    "p50": 1404.428444,
                    "p95": 1448.812868,
                    "p99": 1448.812868,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 989.8662959999999,
                    "min": 0,
                    "p50": 956.3366299999999,
                    "p95": 989.8662959999999,
                    "p99": 989.8662959999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1074.960307,
                    "min": 0,
                    "p50": 1050.7196159999999,
                    "p95": 1074.960307,
                    "p99": 1074.960307,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 268.350063,
                    "min": 0,
                    "p50": 242.432616,
                    "p95": 268.350063,
                    "p99": 268.350063,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 508.237863,
                    "min": 0,
                    "p50": 490.873514,
                    "p95": 508.237863,
                    "p99": 508.237863,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 437.595247,
                    "min": 0,
                    "p50": 425.574102,
                    "p95": 437.595247,
                    "p99": 437.595247,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1240.266402,
                    "min": 0,
                    "p50": 1217.394708,
                    "p95": 1240.266402,
                    "p99": 1240.266402,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 687.003476,
                    "min": 0,
                    "p50": 659.08165,
                    "p95": 687.003476,
                    "p99": 687.003476,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1129.1887789999998,
                    "min": 0,
                    "p50": 1114.23201,
                    "p95": 1129.1887789999998,
                    "p99": 1129.1887789999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 603.7720919999999,
                    "min": 0,
                    "p50": 588.964347,
                    "p95": 603.7720919999999,
                    "p99": 603.7720919999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 358.924609,
                    "min": 0,
                    "p50": 334.88905,
                    "p95": 358.924609,
                    "p99": 358.924609,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.831166,
                    "min": 0,
                    "p50": 84.518338,
                    "p95": 89.831166,
                    "p99": 89.831166,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1402.600585,
                    "min": 0,
                    "p50": 1351.82521,
                    "p95": 1402.600585,
                    "p99": 1402.600585,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 321.415702,
                    "min": 0,
                    "p50": 294.964355,
                    "p95": 321.415702,
                    "p99": 321.415702,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 457.741609,
                    "min": 0,
                    "p50": 437.498682,
                    "p95": 457.741609,
                    "p99": 457.741609,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 185.61774599999998,
                    "min": 0,
                    "p50": 169.507248,
                    "p95": 185.61774599999998,
                    "p99": 185.61774599999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 613.869504,
                    "min": 0,
                    "p50": 586.238566,
                    "p95": 613.869504,
                    "p99": 613.869504,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 126.563639,
                    "min": 0,
                    "p50": 116.93113299999999,
                    "p95": 126.563639,
                    "p99": 126.563639,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.216433,
                    "min": 0,
                    "p50": 143.159246,
                    "p95": 153.216433,
                    "p99": 153.216433,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.240318,
                    "min": 0,
                    "p50": 75.15146399999999,
                    "p95": 84.240318,
                    "p99": 84.240318,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.464505,
                    "min": 0,
                    "p50": 152.05096899999998,
                    "p95": 167.464505,
                    "p99": 167.464505,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 145.417698,
                    "min": 0,
                    "p50": 128.870514,
                    "p95": 145.417698,
                    "p99": 145.417698,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 200.80984899999999,
                    "min": 0,
                    "p50": 192.027635,
                    "p95": 200.80984899999999,
                    "p99": 200.80984899999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 225.33953499999998,
                    "min": 0,
                    "p50": 188.80966899999999,
                    "p95": 225.33953499999998,
                    "p99": 225.33953499999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 208.358451,
                    "min": 0,
                    "p50": 193.80780199999998,
                    "p95": 208.358451,
                    "p99": 208.358451,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 733.689855,
                    "min": 0,
                    "p50": 727.8385099999999,
                    "p95": 733.689855,
                    "p99": 733.689855,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.649514,
                    "min": 0,
                    "p50": 109.765445,
                    "p95": 114.649514,
                    "p99": 114.649514,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 242.245892,
                    "min": 0,
                    "p50": 230.03357699999998,
                    "p95": 242.245892,
                    "p99": 242.245892,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 254.091197,
                    "min": 0,
                    "p50": 246.18790199999998,
                    "p95": 254.091197,
                    "p99": 254.091197,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 221.74032499999998,
                    "min": 0,
                    "p50": 187.234082,
                    "p95": 221.74032499999998,
                    "p99": 221.74032499999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1391.8299049999998,
                    "min": 0,
                    "p50": 1332.7241239999998,
                    "p95": 1391.8299049999998,
                    "p99": 1391.8299049999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.55229899999998,
                    "min": 0,
                    "p50": 205.68354599999998,
                    "p95": 227.55229899999998,
                    "p99": 227.55229899999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.19848199999998,
                    "min": 0,
                    "p50": 139.860133,
                    "p95": 167.19848199999998,
                    "p99": 167.19848199999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 272.576061,
                    "min": 0,
                    "p50": 240.537655,
                    "p95": 272.576061,
                    "p99": 272.576061,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 315.907201,
                    "min": 0,
                    "p50": 302.37917699999997,
                    "p95": 315.907201,
                    "p99": 315.907201,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 111.260786,
                    "min": 0,
                    "p50": 92.491804,
                    "p95": 111.260786,
                    "p99": 111.260786,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 179.380415,
                    "min": 0,
                    "p50": 168.19044399999999,
                    "p95": 179.380415,
                    "p99": 179.380415,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 135.864431,
                    "min": 0,
                    "p50": 133.501927,
                    "p95": 135.864431,
                    "p99": 135.864431,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 253.665739,
                    "min": 0,
                    "p50": 240.085456,
                    "p95": 253.665739,
                    "p99": 253.665739,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 206.872063,
                    "min": 0,
                    "p50": 199.34741,
                    "p95": 206.872063,
                    "p99": 206.872063,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 579.32017,
                    "min": 0,
                    "p50": 558.9213169999999,
                    "p95": 579.32017,
                    "p99": 579.32017,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 462.79832,
                    "min": 0,
                    "p50": 433.094409,
                    "p95": 462.79832,
                    "p99": 462.79832,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 194.70434699999998,
                    "min": 0,
                    "p50": 158.671356,
                    "p95": 194.70434699999998,
                    "p99": 194.70434699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 82.72286,
                    "min": 0,
                    "p50": 75.371009,
                    "p95": 82.72286,
                    "p99": 82.72286,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 153.51603699999998,
                    "min": 0,
                    "p50": 122.87238099999999,
                    "p95": 153.51603699999998,
                    "p99": 153.51603699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.432521,
                    "min": 0,
                    "p50": 58.375808,
                    "p95": 95.432521,
                    "p99": 95.432521,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.01690099999999,
                    "min": 0,
                    "p50": 107.928028,
                    "p95": 123.01690099999999,
                    "p99": 123.01690099999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 747.4982289999999,
                    "min": 0,
                    "p50": 702.877563,
                    "p95": 747.4982289999999,
                    "p99": 747.4982289999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 140.200591,
                    "min": 0,
                    "p50": 109.768287,
                    "p95": 140.200591,
                    "p99": 140.200591,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 236.24879299999998,
                    "min": 0,
                    "p50": 200.81645,
                    "p95": 236.24879299999998,
                    "p99": 236.24879299999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 209.17340399999998,
                    "min": 0,
                    "p50": 200.813379,
                    "p95": 209.17340399999998,
                    "p99": 209.17340399999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 130.08112699999998,
                    "min": 0,
                    "p50": 95.550767,
                    "p95": 130.08112699999998,
                    "p99": 130.08112699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 344.573734,
                    "min": 0,
                    "p50": 332.265171,
                    "p95": 344.573734,
                    "p99": 344.573734,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 110.13133099999999,
                    "min": 0,
                    "p50": 85.446766,
                    "p95": 110.13133099999999,
                    "p99": 110.13133099999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 161.34586299999998,
                    "min": 0,
                    "p50": 122.87299999999999,
                    "p95": 161.34586299999998,
                    "p99": 161.34586299999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 190.108712,
                    "min": 0,
                    "p50": 179.017723,
                    "p95": 190.108712,
                    "p99": 190.108712,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 265.213882,
                    "min": 0,
                    "p50": 248.640923,
                    "p95": 265.213882,
                    "p99": 265.213882,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 487.69996299999997,
                    "min": 0,
                    "p50": 475.83049,
                    "p95": 487.69996299999997,
                    "p99": 487.69996299999997,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 218.05722699999998,
                    "min": 0,
                    "p50": 209.47471099999999,
                    "p95": 218.05722699999998,
                    "p99": 218.05722699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 180.949584,
                    "min": 0,
                    "p50": 174.487283,
                    "p95": 180.949584,
                    "p99": 180.949584,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 117.087227,
                    "min": 0,
                    "p50": 78.623521,
                    "p95": 117.087227,
                    "p99": 117.087227,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 252.88279999999997,
                    "min": 0,
                    "p50": 245.406199,
                    "p95": 252.88279999999997,
                    "p99": 252.88279999999997,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 306.976495,
                    "min": 0,
                    "p50": 268.649288,
                    "p95": 306.976495,
                    "p99": 306.976495,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 635.0480239999999,
                    "min": 0,
                    "p50": 596.8373409999999,
                    "p95": 635.0480239999999,
                    "p99": 635.0480239999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 789.68058,
                    "min": 0,
                    "p50": 774.009543,
                    "p95": 789.68058,
                    "p99": 789.68058,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1529.398002,
                    "min": 0,
                    "p50": 1491.446238,
                    "p95": 1529.398002,
                    "p99": 1529.398002,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 86.59527399999999,
                    "min": 0,
                    "p50": 72.180229,
                    "p95": 86.59527399999999,
                    "p99": 86.59527399999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 730.333438,
                    "min": 0,
                    "p50": 674.7113979999999,
                    "p95": 730.333438,
                    "p99": 730.333438,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 221.633498,
                    "min": 0,
                    "p50": 208.686284,
                    "p95": 221.633498,
                    "p99": 221.633498,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 453.15462099999996,
                    "min": 0,
                    "p50": 139.11833099999998,
                    "p95": 453.15462099999996,
                    "p99": 453.15462099999996,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 248.17273899999998,
                    "min": 0,
                    "p50": 214.738449,
                    "p95": 248.17273899999998,
                    "p99": 248.17273899999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 132.14651899999998,
                    "min": 0,
                    "p50": 100.757854,
                    "p95": 132.14651899999998,
                    "p99": 132.14651899999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 112.36741699999999,
                    "min": 0,
                    "p50": 86.151563,
                    "p95": 112.36741699999999,
                    "p99": 112.36741699999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 84.125979,
                    "min": 0,
                    "p50": 68.178889,
                    "p95": 84.125979,
                    "p99": 84.125979,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 191.25429799999998,
                    "min": 0,
                    "p50": 175.18210299999998,
                    "p95": 191.25429799999998,
                    "p99": 191.25429799999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 276.779675,
                    "min": 0,
                    "p50": 270.421042,
                    "p95": 276.779675,
                    "p99": 276.779675,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.47236699999999,
                    "min": 0,
                    "p50": 85.73262799999999,
                    "p95": 122.47236699999999,
                    "p99": 122.47236699999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 149.82344999999998,
                    "min": 0,
                    "p50": 146.335665,
                    "p95": 149.82344999999998,
                    "p99": 149.82344999999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 232.70412499999998,
                    "min": 0,
                    "p50": 225.42126499999998,
                    "p95": 232.70412499999998,
                    "p99": 232.70412499999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 595.2048179999999,
                    "min": 0,
                    "p50": 557.063008,
                    "p95": 595.2048179999999,
                    "p99": 595.2048179999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1362.7045249999999,
                    "min": 0,
                    "p50": 1321.1088399999999,
                    "p95": 1362.7045249999999,
                    "p99": 1362.7045249999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 167.047026,
                    "min": 0,
                    "p50": 153.918275,
                    "p95": 167.047026,
                    "p99": 167.047026,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 319.669848,
                    "min": 0,
                    "p50": 298.17807799999997,
                    "p95": 319.669848,
                    "p99": 319.669848,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 204.43415,
                    "min": 0,
                    "p50": 165.405148,
                    "p95": 204.43415,
                    "p99": 204.43415,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 89.564064,
                    "min": 0,
                    "p50": 58.845807,
                    "p95": 89.564064,
                    "p99": 89.564064,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 448.313852,
                    "min": 0,
                    "p50": 433.334888,
                    "p95": 448.313852,
                    "p99": 448.313852,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 245.175763,
                    "min": 0,
                    "p50": 218.68576,
                    "p95": 245.175763,
                    "p99": 245.175763,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 183.348984,
                    "min": 0,
                    "p50": 168.55064,
                    "p95": 183.348984,
                    "p99": 183.348984,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 269.691404,
                    "min": 0,
                    "p50": 250.02588899999998,
                    "p95": 269.691404,
                    "p99": 269.691404,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 975.586249,
                    "min": 0,
                    "p50": 931.720202,
                    "p95": 975.586249,
                    "p99": 975.586249,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 638.945177,
                    "min": 0,
                    "p50": 622.95592,
                    "p95": 638.945177,
                    "p99": 638.945177,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 740.431012,
                    "min": 0,
                    "p50": 720.37623,
                    "p95": 740.431012,
                    "p99": 740.431012,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 850.092815,
                    "min": 0,
                    "p50": 803.026807,
                    "p95": 850.092815,
                    "p99": 850.092815,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 463.776005,
                    "min": 0,
                    "p50": 442.763551,
                    "p95": 463.776005,
                    "p99": 463.776005,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.798552,
                    "min": 0,
                    "p50": 277.520355,
                    "p95": 318.798552,
                    "p99": 318.798552,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 415.53810799999997,
                    "min": 0,
                    "p50": 404.511461,
                    "p95": 415.53810799999997,
                    "p99": 415.53810799999997,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 368.488348,
                    "min": 0,
                    "p50": 333.977355,
                    "p95": 368.488348,
                    "p99": 368.488348,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 501.657656,
                    "min": 0,
                    "p50": 467.031344,
                    "p95": 501.657656,
                    "p99": 501.657656,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 547.620579,
                    "min": 0,
                    "p50": 525.55493,
                    "p95": 547.620579,
                    "p99": 547.620579,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 694.3337829999999,
                    "min": 0,
                    "p50": 677.6004879999999,
                    "p95": 694.3337829999999,
                    "p99": 694.3337829999999,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 600.397011,
                    "min": 0,
                    "p50": 577.8376549999999,
                    "p95": 600.397011,
                    "p99": 600.397011,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 559.306346,
                    "min": 0,
                    "p50": 545.2199079999999,
                    "p95": 559.306346,
                    "p99": 559.306346,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 667.5510909999999,
                    "min": 0,
                    "p50": 640.7138679999999,
                    "p95": 667.5510909999999,
                    "p99": 667.5510909999999,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 690.665343,
                    "min": 0,
                    "p50": 660.141664,
                    "p95": 690.665343,
                    "p99": 690.665343,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 226.708678,
                    "min": 0,
                    "p50": 185.037982,
                    "p95": 226.708678,
                    "p99": 226.708678,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 269.910703,
                    "min": 0,
                    "p50": 258.366378,
                    "p95": 269.910703,
                    "p99": 269.910703,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 368.615436,
                    "min": 0,
                    "p50": 357.071673,
                    "p95": 368.615436,
                    "p99": 368.615436,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 314.05686199999997,
                    "min": 0,
                    "p50": 291.276839,
                    "p95": 314.05686199999997,
                    "p99": 314.05686199999997,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1294.41472,
                    "min": 0,
                    "p50": 494.047031,
                    "p95": 1294.41472,
                    "p99": 1294.41472,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 187.506731,
                    "min": 0,
                    "p50": 163.952632,
                    "p95": 187.506731,
                    "p99": 187.506731,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 426.491714,
                    "min": 0,
                    "p50": 376.034942,
                    "p95": 426.491714,
                    "p99": 426.491714,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 883.3980389999999,
                    "min": 0,
                    "p50": 834.8586429999999,
                    "p95": 883.3980389999999,
                    "p99": 883.3980389999999,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 981.449497,
                    "min": 0,
                    "p50": 936.8014059999999,
                    "p95": 981.449497,
                    "p99": 981.449497,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 727.39144,
                    "min": 0,
                    "p50": 714.63253,
                    "p95": 727.39144,
                    "p99": 727.39144,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1379.79171,
                    "min": 0,
                    "p50": 415.90745699999997,
                    "p95": 1379.79171,
                    "p99": 1379.79171,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 624.02449,
                    "min": 0,
                    "p50": 586.771198,
                    "p95": 624.02449,
                    "p99": 624.02449,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 694.350463,
                    "min": 0,
                    "p50": 667.2415589999999,
                    "p95": 694.350463,
                    "p99": 694.350463,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 646.427766,
                    "min": 0,
                    "p50": 611.981527,
                    "p95": 646.427766,
                    "p99": 646.427766,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 724.152663,
                    "min": 0,
                    "p50": 686.138502,
                    "p95": 724.152663,
                    "p99": 724.152663,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 830.641338,
                    "min": 0,
                    "p50": 790.957945,
                    "p95": 830.641338,
                    "p99": 830.641338,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 583.051915,
                    "min": 0,
                    "p50": 545.755616,
                    "p95": 583.051915,
                    "p99": 583.051915,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1214.699525,
                    "min": 0,
                    "p50": 524.168952,
                    "p95": 1214.699525,
                    "p99": 1214.699525,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 177.53608799999998,
                    "min": 0,
                    "p50": 161.418151,
                    "p95": 177.53608799999998,
                    "p99": 177.53608799999998,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 906.533415,
                    "min": 0,
                    "p50": 905.6132399999999,
                    "p95": 906.533415,
                    "p99": 906.533415,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 506.849021,
                    "min": 0,
                    "p50": 466.837379,
                    "p95": 506.849021,
                    "p99": 506.849021,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 455.61911799999996,
                    "min": 0,
                    "p50": 412.16573999999997,
                    "p95": 455.61911799999996,
                    "p99": 455.61911799999996,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.57250799999997,
                    "min": 0,
                    "p50": 296.613962,
                    "p95": 318.57250799999997,
                    "p99": 318.57250799999997,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 414.355669,
                    "min": 0,
                    "p50": 387.69456199999996,
                    "p95": 414.355669,
                    "p99": 414.355669,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 359.89661,
                    "min": 0,
                    "p50": 339.633902,
                    "p95": 359.89661,
                    "p99": 359.89661,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 234.317522,
                    "min": 0,
                    "p50": 212.301922,
                    "p95": 234.317522,
                    "p99": 234.317522,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 269.703899,
                    "min": 0,
                    "p50": 255.613597,
                    "p95": 269.703899,
                    "p99": 269.703899,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 705.079077,
                    "min": 0,
                    "p50": 673.4383789999999,
                    "p95": 705.079077,
                    "p99": 705.079077,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 768.1798679999999,
                    "min": 0,
                    "p50": 702.964653,
                    "p95": 768.1798679999999,
                    "p99": 768.1798679999999,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 604.1216519999999,
                    "min": 0,
                    "p50": 563.754312,
                    "p95": 604.1216519999999,
                    "p99": 604.1216519999999,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 845.3392719999999,
                    "min": 0,
                    "p50": 816.839575,
                    "p95": 845.3392719999999,
                    "p99": 845.3392719999999,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 221.76493599999998,
                    "min": 0,
                    "p50": 218.63847099999998,
                    "p95": 221.76493599999998,
                    "p99": 221.76493599999998,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 542.786146,
                    "min": 0,
                    "p50": 526.69074,
                    "p95": 542.786146,
                    "p99": 542.786146,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 962.695222,
                    "min": 0,
                    "p50": 939.6596509999999,
                    "p95": 962.695222,
                    "p99": 962.695222,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 322.08652,
                    "min": 0,
                    "p50": 303.235998,
                    "p95": 322.08652,
                    "p99": 322.08652,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 426.269409,
                    "min": 0,
                    "p50": 396.84712199999996,
                    "p95": 426.269409,
                    "p99": 426.269409,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 379.382662,
                    "min": 0,
                    "p50": 350.96821,
                    "p95": 379.382662,
                    "p99": 379.382662,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 277.680157,
                    "min": 0,
                    "p50": 235.78645,
                    "p95": 277.680157,
                    "p99": 277.680157,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 463.935922,
                    "min": 0,
                    "p50": 434.608886,
                    "p95": 463.935922,
                    "p99": 463.935922,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 504.225033,
                    "min": 0,
                    "p50": 464.17315299999996,
                    "p95": 504.225033,
                    "p99": 504.225033,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 179.48056599999998,
                    "min": 0,
                    "p50": 164.502791,
                    "p95": 179.48056599999998,
                    "p99": 179.48056599999998,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 643.150141,
                    "min": 0,
                    "p50": 630.167603,
                    "p95": 643.150141,
                    "p99": 643.150141,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 675.098085,
                    "min": 0,
                    "p50": 635.6100299999999,
                    "p95": 675.098085,
                    "p99": 675.098085,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 424.38172399999996,
                    "min": 0,
                    "p50": 408.54821,
                    "p95": 424.38172399999996,
                    "p99": 424.38172399999996,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 508.060389,
                    "min": 0,
                    "p50": 471.27187899999996,
                    "p95": 508.060389,
                    "p99": 508.060389,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 340.782731,
                    "min": 0,
                    "p50": 329.928747,
                    "p95": 340.782731,
                    "p99": 340.782731,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 294.19161299999996,
                    "min": 0,
                    "p50": 258.785869,
                    "p95": 294.19161299999996,
                    "p99": 294.19161299999996,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 464.439281,
                    "min": 0,
                    "p50": 432.94676999999996,
                    "p95": 464.439281,
                    "p99": 464.439281,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 167.76555299999998,
                    "min": 0,
                    "p50": 130.29577,
                    "p95": 167.76555299999998,
                    "p99": 167.76555299999998,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 210.609816,
                    "min": 0,
                    "p50": 195.929169,
                    "p95": 210.609816,
                    "p99": 210.609816,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 379.71131299999996,
                    "min": 0,
                    "p50": 342.643698,
                    "p95": 379.71131299999996,
                    "p99": 379.71131299999996,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 253.525983,
                    "min": 0,
                    "p50": 215.929385,
                    "p95": 253.525983,
                    "p99": 253.525983,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 889.9077,
                    "min": 0,
                    "p50": 863.426829,
                    "p95": 889.9077,
                    "p99": 889.9077,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 549.794131,
                    "min": 0,
                    "p50": 535.65687,
                    "p95": 549.794131,
                    "p99": 549.794131,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 768.642751,
                    "min": 0,
                    "p50": 746.033882,
                    "p95": 768.642751,
                    "p99": 768.642751,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 636.815791,
                    "min": 0,
                    "p50": 623.8414829999999,
                    "p95": 636.815791,
                    "p99": 636.815791,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 594.1352079999999,
                    "min": 0,
                    "p50": 580.058738,
                    "p95": 594.1352079999999,
                    "p99": 594.1352079999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1318.1035239999999,
                    "min": 0,
                    "p50": 1285.398481,
                    "p95": 1318.1035239999999,
                    "p99": 1318.1035239999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 726.354796,
                    "min": 0,
                    "p50": 535.9776929999999,
                    "p95": 726.354796,
                    "p99": 726.354796,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 628.543279,
                    "min": 0,
                    "p50": 414.097926,
                    "p95": 628.543279,
                    "p99": 628.543279,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 492.32710199999997,
                    "min": 0,
                    "p50": 476.40810899999997,
                    "p95": 492.32710199999997,
                    "p99": 492.32710199999997,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 768.5155229999999,
                    "min": 0,
                    "p50": 715.827456,
                    "p95": 768.5155229999999,
                    "p99": 768.5155229999999,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 658.378775,
                    "min": 0,
                    "p50": 622.3352689999999,
                    "p95": 658.378775,
                    "p99": 658.378775,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 462.853791,
                    "min": 0,
                    "p50": 446.04958999999997,
                    "p95": 462.853791,
                    "p99": 462.853791,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 148.473053,
                    "min": 0,
                    "p50": 131.157501,
                    "p95": 148.473053,
                    "p99": 148.473053,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.379573,
                    "min": 0,
                    "p50": 164.127626,
                    "p95": 185.379573,
                    "p99": 185.379573,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 397.71631299999996,
                    "min": 0,
                    "p50": 368.699274,
                    "p95": 397.71631299999996,
                    "p99": 397.71631299999996,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 252.78255299999998,
                    "min": 0,
                    "p50": 226.97816899999998,
                    "p95": 252.78255299999998,
                    "p99": 252.78255299999998,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 363.36450099999996,
                    "min": 0,
                    "p50": 329.42037,
                    "p95": 363.36450099999996,
                    "p99": 363.36450099999996,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 216.296246,
                    "min": 0,
                    "p50": 194.94255099999998,
                    "p95": 216.296246,
                    "p99": 216.296246,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 534.3353,
                    "min": 0,
                    "p50": 510.86945099999997,
                    "p95": 534.3353,
                    "p99": 534.3353,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 311.45311599999997,
                    "min": 0,
                    "p50": 282.763942,
                    "p95": 311.45311599999997,
                    "p99": 311.45311599999997,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 299.05046799999997,
                    "min": 0,
                    "p50": 274.058742,
                    "p95": 299.05046799999997,
                    "p99": 299.05046799999997,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 384.94145399999996,
                    "min": 0,
                    "p50": 343.491425,
                    "p95": 384.94145399999996,
                    "p99": 384.94145399999996,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 994.8784169999999,
                    "min": 0,
                    "p50": 134.295941,
                    "p95": 994.8784169999999,
                    "p99": 994.8784169999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 320.204028,
                    "min": 0,
                    "p50": 291.87100599999997,
                    "p95": 320.204028,
                    "p99": 320.204028,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 282.970786,
                    "min": 0,
                    "p50": 247.34444499999998,
                    "p95": 282.970786,
                    "p99": 282.970786,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 233.706458,
                    "min": 0,
                    "p50": 212.810107,
                    "p95": 233.706458,
                    "p99": 233.706458,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 545.028315,
                    "min": 0,
                    "p50": 514.102213,
                    "p95": 545.028315,
                    "p99": 545.028315,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 473.289624,
                    "min": 0,
                    "p50": 452.64355,
                    "p95": 473.289624,
                    "p99": 473.289624,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 700.090752,
                    "min": 0,
                    "p50": 670.320927,
                    "p95": 700.090752,
                    "p99": 700.090752,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1081.178653,
                    "min": 0,
                    "p50": 992.1384069999999,
                    "p95": 1081.178653,
                    "p99": 1081.178653,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 460.362146,
                    "min": 0,
                    "p50": 411.376742,
                    "p95": 460.362146,
                    "p99": 460.362146,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 204.220234,
                    "min": 0,
                    "p50": 191.411429,
                    "p95": 204.220234,
                    "p99": 204.220234,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 423.859362,
                    "min": 0,
                    "p50": 386.02338199999997,
                    "p95": 423.859362,
                    "p99": 423.859362,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 146.409077,
                    "min": 0,
                    "p50": 130.90160699999998,
                    "p95": 146.409077,
                    "p99": 146.409077,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 512.393381,
                    "min": 0,
                    "p50": 475.39435499999996,
                    "p95": 512.393381,
                    "p99": 512.393381,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 631.321508,
                    "min": 0,
                    "p50": 594.2577299999999,
                    "p95": 631.321508,
                    "p99": 631.321508,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 348.15968899999996,
                    "min": 0,
                    "p50": 319.648784,
                    "p95": 348.15968899999996,
                    "p99": 348.15968899999996,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1036.0883979999999,
                    "min": 0,
                    "p50": 1014.268879,
                    "p95": 1036.0883979999999,
                    "p99": 1036.0883979999999,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 264.199025,
                    "min": 0,
                    "p50": 255.541789,
                    "p95": 264.199025,
                    "p99": 264.199025,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 191.216984,
                    "min": 0,
                    "p50": 179.274552,
                    "p95": 191.216984,
                    "p99": 191.216984,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 339.901634,
                    "min": 0,
                    "p50": 336.62985299999997,
                    "p95": 339.901634,
                    "p99": 339.901634,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 141.354151,
                    "min": 0,
                    "p50": 128.70979599999998,
                    "p95": 141.354151,
                    "p99": 141.354151,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 548.635393,
                    "min": 0,
                    "p50": 535.262029,
                    "p95": 548.635393,
                    "p99": 548.635393,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 415.157559,
                    "min": 0,
                    "p50": 399.782335,
                    "p95": 415.157559,
                    "p99": 415.157559,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 389.964911,
                    "min": 0,
                    "p50": 385.61927499999996,
                    "p95": 389.964911,
                    "p99": 389.964911,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 120.795863,
                    "min": 0,
                    "p50": 102.542407,
                    "p95": 120.795863,
                    "p99": 120.795863,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 167.97040199999998,
                    "min": 0,
                    "p50": 158.859221,
                    "p95": 167.97040199999998,
                    "p99": 167.97040199999998,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 467.408664,
                    "min": 0,
                    "p50": 459.26707999999996,
                    "p95": 467.408664,
                    "p99": 467.408664,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 228.965732,
                    "min": 0,
                    "p50": 201.452115,
                    "p95": 228.965732,
                    "p99": 228.965732,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 314.07708099999996,
                    "min": 0,
                    "p50": 302.387836,
                    "p95": 314.07708099999996,
                    "p99": 314.07708099999996,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 213.820733,
                    "min": 0,
                    "p50": 178.126743,
                    "p95": 213.820733,
                    "p99": 213.820733,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 368.413033,
                    "min": 0,
                    "p50": 350.04580699999997,
                    "p95": 368.413033,
                    "p99": 368.413033,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 784.5410559999999,
                    "min": 0,
                    "p50": 752.559502,
                    "p95": 784.5410559999999,
                    "p99": 784.5410559999999,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1261.9887609999998,
                    "min": 0,
                    "p50": 1244.3199889999999,
                    "p95": 1261.9887609999998,
                    "p99": 1261.9887609999998,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 290.293639,
                    "min": 0,
                    "p50": 270.344521,
                    "p95": 290.293639,
                    "p99": 290.293639,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 153.467929,
                    "min": 0,
                    "p50": 138.471816,
                    "p95": 153.467929,
                    "p99": 153.467929,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 374.96516299999996,
                    "min": 0,
                    "p50": 339.488094,
                    "p95": 374.96516299999996,
                    "p99": 374.96516299999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 544.850383,
                    "min": 0,
                    "p50": 499.527811,
                    "p95": 544.850383,
                    "p99": 544.850383,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 928.242903,
                    "min": 0,
                    "p50": 812.314637,
                    "p95": 928.242903,
                    "p99": 928.242903,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 760.160715,
                    "min": 0,
                    "p50": 660.308242,
                    "p95": 760.160715,
                    "p99": 760.160715,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 178.427615,
                    "min": 0,
                    "p50": 146.033732,
                    "p95": 178.427615,
                    "p99": 178.427615,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 350.025586,
                    "min": 0,
                    "p50": 302.383102,
                    "p95": 350.025586,
                    "p99": 350.025586,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 135.82421399999998,
                    "min": 0,
                    "p50": 123.94886299999999,
                    "p95": 135.82421399999998,
                    "p99": 135.82421399999998,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 286.538138,
                    "min": 0,
                    "p50": 251.915427,
                    "p95": 286.538138,
                    "p99": 286.538138,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 305.964165,
                    "min": 0,
                    "p50": 251.676513,
                    "p95": 305.964165,
                    "p99": 305.964165,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 106.967315,
                    "min": 0,
                    "p50": 92.59698999999999,
                    "p95": 106.967315,
                    "p99": 106.967315,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 218.849839,
                    "min": 0,
                    "p50": 202.347559,
                    "p95": 218.849839,
                    "p99": 218.849839,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 257.72953,
                    "min": 0,
                    "p50": 216.659819,
                    "p95": 257.72953,
                    "p99": 257.72953,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 131.794064,
                    "min": 0,
                    "p50": 111.850061,
                    "p95": 131.794064,
                    "p99": 131.794064,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 89.308978,
                    "min": 0,
                    "p50": 75.30741499999999,
                    "p95": 89.308978,
                    "p99": 89.308978,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 274.678724,
                    "min": 0,
                    "p50": 232.53663999999998,
                    "p95": 274.678724,
                    "p99": 274.678724,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 209.171571,
                    "min": 0,
                    "p50": 196.746752,
                    "p95": 209.171571,
                    "p99": 209.171571,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 204.417072,
                    "min": 0,
                    "p50": 176.308661,
                    "p95": 204.417072,
                    "p99": 204.417072,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 387.53925799999996,
                    "min": 0,
                    "p50": 341.588256,
                    "p95": 387.53925799999996,
                    "p99": 387.53925799999996,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 567.716415,
                    "min": 0,
                    "p50": 493.30116399999997,
                    "p95": 567.716415,
                    "p99": 567.716415,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 503.093668,
                    "min": 0,
                    "p50": 424.315137,
                    "p95": 503.093668,
                    "p99": 503.093668,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 147.704283,
                    "min": 0,
                    "p50": 134.78338399999998,
                    "p95": 147.704283,
                    "p99": 147.704283,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 807.117357,
                    "min": 0,
                    "p50": 717.343045,
                    "p95": 807.117357,
                    "p99": 807.117357,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 341.331685,
                    "min": 0,
                    "p50": 283.652961,
                    "p95": 341.331685,
                    "p99": 341.331685,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 223.316113,
                    "min": 0,
                    "p50": 203.871952,
                    "p95": 223.316113,
                    "p99": 223.316113,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 458.10950199999996,
                    "min": 0,
                    "p50": 405.711347,
                    "p95": 458.10950199999996,
                    "p99": 458.10950199999996,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 268.299059,
                    "min": 0,
                    "p50": 235.356291,
                    "p95": 268.299059,
                    "p99": 268.299059,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 703.47362,
                    "min": 0,
                    "p50": 630.944294,
                    "p95": 703.47362,
                    "p99": 703.47362,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.29726599999998,
                    "min": 0,
                    "p50": 143.985965,
                    "p95": 185.29726599999998,
                    "p99": 185.29726599999998,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 580.6017009999999,
                    "min": 0,
                    "p50": 544.434361,
                    "p95": 580.6017009999999,
                    "p99": 580.6017009999999,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 311.238671,
                    "min": 0,
                    "p50": 269.161335,
                    "p95": 311.238671,
                    "p99": 311.238671,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 544.4692729999999,
                    "min": 0,
                    "p50": 484.265542,
                    "p95": 544.4692729999999,
                    "p99": 544.4692729999999,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 391.615126,
                    "min": 0,
                    "p50": 353.78574199999997,
                    "p95": 391.615126,
                    "p99": 391.615126,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 264.354688,
                    "min": 0,
                    "p50": 231.04852,
                    "p95": 264.354688,
                    "p99": 264.354688,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 701.873145,
                    "min": 0,
                    "p50": 594.624815,
                    "p95": 701.873145,
                    "p99": 701.873145,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 444.83613599999995,
                    "min": 0,
                    "p50": 387.818939,
                    "p95": 444.83613599999995,
                    "p99": 444.83613599999995,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 622.93655,
                    "min": 0,
                    "p50": 548.966585,
                    "p95": 622.93655,
                    "p99": 622.93655,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 936.557607,
                    "min": 0,
                    "p50": 821.813309,
                    "p95": 936.557607,
                    "p99": 936.557607,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 537.0308269999999,
                    "min": 0,
                    "p50": 469.09936899999997,
                    "p95": 537.0308269999999,
                    "p99": 537.0308269999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 668.652116,
                    "min": 0,
                    "p50": 586.299213,
                    "p95": 668.652116,
                    "p99": 668.652116,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1380.832398,
                    "min": 0,
                    "p50": 1215.557525,
                    "p95": 1380.832398,
                    "p99": 1380.832398,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 354.958913,
                    "min": 0,
                    "p50": 315.03443599999997,
                    "p95": 354.958913,
                    "p99": 354.958913,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 175.015649,
                    "min": 0,
                    "p50": 130.34081799999998,
                    "p95": 175.015649,
                    "p99": 175.015649,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 499.246985,
                    "min": 0,
                    "p50": 428.655149,
                    "p95": 499.246985,
                    "p99": 499.246985,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 303.29278,
                    "min": 0,
                    "p50": 277.07440199999996,
                    "p95": 303.29278,
                    "p99": 303.29278,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 200.03068199999998,
                    "min": 0,
                    "p50": 185.835188,
                    "p95": 200.03068199999998,
                    "p99": 200.03068199999998,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 392.30141799999996,
                    "min": 0,
                    "p50": 340.616509,
                    "p95": 392.30141799999996,
                    "p99": 392.30141799999996,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 805.178871,
                    "min": 0,
                    "p50": 723.8236979999999,
                    "p95": 805.178871,
                    "p99": 805.178871,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 566.002522,
                    "min": 0,
                    "p50": 499.43449899999996,
                    "p95": 566.002522,
                    "p99": 566.002522,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 504.009954,
                    "min": 0,
                    "p50": 487.652133,
                    "p95": 504.009954,
                    "p99": 504.009954,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 577.280813,
                    "min": 0,
                    "p50": 546.061918,
                    "p95": 577.280813,
                    "p99": 577.280813,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 621.647487,
                    "min": 0,
                    "p50": 582.838946,
                    "p95": 621.647487,
                    "p99": 621.647487,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 389.210583,
                    "min": 0,
                    "p50": 363.023156,
                    "p95": 389.210583,
                    "p99": 389.210583,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 274.168969,
                    "min": 0,
                    "p50": 236.82795,
                    "p95": 274.168969,
                    "p99": 274.168969,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 350.96408099999996,
                    "min": 0,
                    "p50": 337.267251,
                    "p95": 350.96408099999996,
                    "p99": 350.96408099999996,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 198.10116599999998,
                    "min": 0,
                    "p50": 177.473729,
                    "p95": 198.10116599999998,
                    "p99": 198.10116599999998,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 233.264309,
                    "min": 0,
                    "p50": 207.24505499999998,
                    "p95": 233.264309,
                    "p99": 233.264309,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 432.980553,
                    "min": 0,
                    "p50": 390.169606,
                    "p95": 432.980553,
                    "p99": 432.980553,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 311.63253299999997,
                    "min": 0,
                    "p50": 300.628584,
                    "p95": 311.63253299999997,
                    "p99": 311.63253299999997,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 811.369156,
                    "min": 0,
                    "p50": 782.275629,
                    "p95": 811.369156,
                    "p99": 811.369156,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 468.977241,
                    "min": 0,
                    "p50": 453.093983,
                    "p95": 468.977241,
                    "p99": 468.977241,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 716.520133,
                    "min": 0,
                    "p50": 694.5685639999999,
                    "p95": 716.520133,
                    "p99": 716.520133,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 159.14083399999998,
                    "min": 0,
                    "p50": 144.457413,
                    "p95": 159.14083399999998,
                    "p99": 159.14083399999998,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 529.657476,
                    "min": 0,
                    "p50": 508.388871,
                    "p95": 529.657476,
                    "p99": 529.657476,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 352.661295,
                    "min": 0,
                    "p50": 335.924707,
                    "p95": 352.661295,
                    "p99": 352.661295,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 197.47429699999998,
                    "min": 0,
                    "p50": 183.383617,
                    "p95": 197.47429699999998,
                    "p99": 197.47429699999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 147.432005,
                    "min": 0,
                    "p50": 105.92349399999999,
                    "p95": 147.432005,
                    "p99": 147.432005,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 118.736792,
                    "min": 0,
                    "p50": 106.24065499999999,
                    "p95": 118.736792,
                    "p99": 118.736792,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 377.82568499999996,
                    "min": 0,
                    "p50": 361.00800599999997,
                    "p95": 377.82568499999996,
                    "p99": 377.82568499999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 426.20815899999997,
                    "min": 0,
                    "p50": 412.69922599999995,
                    "p95": 426.20815899999997,
                    "p99": 426.20815899999997,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 288.262972,
                    "min": 0,
                    "p50": 238.06992799999998,
                    "p95": 288.262972,
                    "p99": 288.262972,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 577.641704,
                    "min": 0,
                    "p50": 537.234458,
                    "p95": 577.641704,
                    "p99": 577.641704,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 299.491497,
                    "min": 0,
                    "p50": 286.28628399999997,
                    "p95": 299.491497,
                    "p99": 299.491497,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 221.551731,
                    "min": 0,
                    "p50": 208.45683699999998,
                    "p95": 221.551731,
                    "p99": 221.551731,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 490.016105,
                    "min": 0,
                    "p50": 478.39383599999996,
                    "p95": 490.016105,
                    "p99": 490.016105,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 413.22421499999996,
                    "min": 0,
                    "p50": 378.67916299999996,
                    "p95": 413.22421499999996,
                    "p99": 413.22421499999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 164.85036599999998,
                    "min": 0,
                    "p50": 144.96795699999998,
                    "p95": 164.85036599999998,
                    "p99": 164.85036599999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 249.493066,
                    "min": 0,
                    "p50": 208.587167,
                    "p95": 249.493066,
                    "p99": 249.493066,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 866.028993,
                    "min": 0,
                    "p50": 789.1834349999999,
                    "p95": 866.028993,
                    "p99": 866.028993,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 331.71684,
                    "min": 0,
                    "p50": 285.34777099999997,
                    "p95": 331.71684,
                    "p99": 331.71684,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1140.272109,
                    "min": 0,
                    "p50": 1052.5370189999999,
                    "p95": 1140.272109,
                    "p99": 1140.272109,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 466.405961,
                    "min": 0,
                    "p50": 457.137363,
                    "p95": 466.405961,
                    "p99": 466.405961,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 252.934241,
                    "min": 0,
                    "p50": 235.019215,
                    "p95": 252.934241,
                    "p99": 252.934241,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 884.9102849999999,
                    "min": 0,
                    "p50": 869.791433,
                    "p95": 884.9102849999999,
                    "p99": 884.9102849999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 641.496087,
                    "min": 0,
                    "p50": 594.299863,
                    "p95": 641.496087,
                    "p99": 641.496087,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 293.36229499999996,
                    "min": 0,
                    "p50": 282.18010899999996,
                    "p95": 293.36229499999996,
                    "p99": 293.36229499999996,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 681.0474429999999,
                    "min": 0,
                    "p50": 666.432684,
                    "p95": 681.0474429999999,
                    "p99": 681.0474429999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 339.27282099999996,
                    "min": 0,
                    "p50": 322.754874,
                    "p95": 339.27282099999996,
                    "p99": 339.27282099999996,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 568.568616,
                    "min": 0,
                    "p50": 535.268563,
                    "p95": 568.568616,
                    "p99": 568.568616,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 424.126022,
                    "min": 0,
                    "p50": 383.788279,
                    "p95": 424.126022,
                    "p99": 424.126022,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 590.901165,
                    "min": 0,
                    "p50": 569.9119029999999,
                    "p95": 590.901165,
                    "p99": 590.901165,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 785.762389,
                    "min": 0,
                    "p50": 766.644094,
                    "p95": 785.762389,
                    "p99": 785.762389,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 382.52966,
                    "min": 0,
                    "p50": 358.250551,
                    "p95": 382.52966,
                    "p99": 382.52966,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 499.777674,
                    "min": 0,
                    "p50": 471.07307799999995,
                    "p95": 499.777674,
                    "p99": 499.777674,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 172.305152,
                    "min": 0,
                    "p50": 153.417201,
                    "p95": 172.305152,
                    "p99": 172.305152,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 197.511661,
                    "min": 0,
                    "p50": 172.90471599999998,
                    "p95": 197.511661,
                    "p99": 197.511661,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 391.368183,
                    "min": 0,
                    "p50": 360.76919999999996,
                    "p95": 391.368183,
                    "p99": 391.368183,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 178.472422,
                    "min": 0,
                    "p50": 152.34926099999998,
                    "p95": 178.472422,
                    "p99": 178.472422,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 457.07916,
                    "min": 0,
                    "p50": 435.11515099999997,
                    "p95": 457.07916,
                    "p99": 457.07916,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 557.172496,
                    "min": 0,
                    "p50": 506.194961,
                    "p95": 557.172496,
                    "p99": 557.172496,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 221.458104,
                    "min": 0,
                    "p50": 206.737437,
                    "p95": 221.458104,
                    "p99": 221.458104,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 365.861224,
                    "min": 0,
                    "p50": 325.09398899999997,
                    "p95": 365.861224,
                    "p99": 365.861224,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 315.103253,
                    "min": 0,
                    "p50": 289.34952599999997,
                    "p95": 315.103253,
                    "p99": 315.103253,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 257.393083,
                    "min": 0,
                    "p50": 240.655959,
                    "p95": 257.393083,
                    "p99": 257.393083,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 147.99352,
                    "min": 0,
                    "p50": 115.818952,
                    "p95": 147.99352,
                    "p99": 147.99352,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 667.035277,
                    "min": 0,
                    "p50": 649.6535799999999,
                    "p95": 667.035277,
                    "p99": 667.035277,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 435.77255299999996,
                    "min": 0,
                    "p50": 413.458688,
                    "p95": 435.77255299999996,
                    "p99": 435.77255299999996,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 504.899026,
                    "min": 0,
                    "p50": 474.85399099999995,
                    "p95": 504.899026,
                    "p99": 504.899026,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 778.8544549999999,
                    "min": 0,
                    "p50": 716.957987,
                    "p95": 778.8544549999999,
                    "p99": 778.8544549999999,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 590.817424,
                    "min": 0,
                    "p50": 540.9567969999999,
                    "p95": 590.817424,
                    "p99": 590.817424,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 290.33164899999997,
                    "min": 0,
                    "p50": 274.010919,
                    "p95": 290.33164899999997,
                    "p99": 290.33164899999997,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 694.336279,
                    "min": 0,
                    "p50": 661.767697,
                    "p95": 694.336279,
                    "p99": 694.336279,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 402.15342,
                    "min": 0,
                    "p50": 375.011512,
                    "p95": 402.15342,
                    "p99": 402.15342,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 552.6507849999999,
                    "min": 0,
                    "p50": 543.538832,
                    "p95": 552.6507849999999,
                    "p99": 552.6507849999999,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 588.993301,
                    "min": 0,
                    "p50": 559.405685,
                    "p95": 588.993301,
                    "p99": 588.993301,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 775.314116,
                    "min": 0,
                    "p50": 757.953364,
                    "p95": 775.314116,
                    "p99": 775.314116,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 447.57412,
                    "min": 0,
                    "p50": 434.039833,
                    "p95": 447.57412,
                    "p99": 447.57412,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 259.61348599999997,
                    "min": 0,
                    "p50": 227.11417999999998,
                    "p95": 259.61348599999997,
                    "p99": 259.61348599999997,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 332.336961,
                    "min": 0,
                    "p50": 301.44186099999996,
                    "p95": 332.336961,
                    "p99": 332.336961,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 519.491286,
                    "min": 0,
                    "p50": 505.057602,
                    "p95": 519.491286,
                    "p99": 519.491286,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 484.235255,
                    "min": 0,
                    "p50": 442.331512,
                    "p95": 484.235255,
                    "p99": 484.235255,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1149.05632,
                    "min": 0,
                    "p50": 1101.7342489999999,
                    "p95": 1149.05632,
                    "p99": 1149.05632,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 298.752027,
                    "min": 0,
                    "p50": 284.828825,
                    "p95": 298.752027,
                    "p99": 298.752027,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.212991,
                    "min": 0,
                    "p50": 137.764685,
                    "p95": 151.212991,
                    "p99": 151.212991,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 227.879674,
                    "min": 0,
                    "p50": 200.22448699999998,
                    "p95": 227.879674,
                    "p99": 227.879674,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 373.099853,
                    "min": 0,
                    "p50": 361.343126,
                    "p95": 373.099853,
                    "p99": 373.099853,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.057581,
                    "min": 0,
                    "p50": 151.14561,
                    "p95": 185.057581,
                    "p99": 185.057581,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 720.178045,
                    "min": 0,
                    "p50": 690.533821,
                    "p95": 720.178045,
                    "p99": 720.178045,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 362.32179099999996,
                    "min": 0,
                    "p50": 338.713621,
                    "p95": 362.32179099999996,
                    "p99": 362.32179099999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 174.17291699999998,
                    "min": 0,
                    "p50": 163.458484,
                    "p95": 174.17291699999998,
                    "p99": 174.17291699999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 220.14655,
                    "min": 0,
                    "p50": 205.060003,
                    "p95": 220.14655,
                    "p99": 220.14655,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 484.98551399999997,
                    "min": 0,
                    "p50": 452.29343,
                    "p95": 484.98551399999997,
                    "p99": 484.98551399999997,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 318.854925,
                    "min": 0,
                    "p50": 303.700045,
                    "p95": 318.854925,
                    "p99": 318.854925,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 950.965865,
                    "min": 0,
                    "p50": 906.0603289999999,
                    "p95": 950.965865,
                    "p99": 950.965865,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 265.941334,
                    "min": 0,
                    "p50": 257.297983,
                    "p95": 265.941334,
                    "p99": 265.941334,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 536.064676,
                    "min": 0,
                    "p50": 514.25987,
                    "p95": 536.064676,
                    "p99": 536.064676,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 394.90601799999996,
                    "min": 0,
                    "p50": 382.523033,
                    "p95": 394.90601799999996,
                    "p99": 394.90601799999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 578.064619,
                    "min": 0,
                    "p50": 555.410505,
                    "p95": 578.064619,
                    "p99": 578.064619,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 624.420313,
                    "min": 0,
                    "p50": 601.129762,
                    "p95": 624.420313,
                    "p99": 624.420313,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 831.686097,
                    "min": 0,
                    "p50": 806.981918,
                    "p95": 831.686097,
                    "p99": 831.686097,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 676.079304,
                    "min": 0,
                    "p50": 656.371121,
                    "p95": 676.079304,
                    "p99": 676.079304,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 437.829417,
                    "min": 0,
                    "p50": 416.113026,
                    "p95": 437.829417,
                    "p99": 437.829417,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 184.489767,
                    "min": 0,
                    "p50": 168.763959,
                    "p95": 184.489767,
                    "p99": 184.489767,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 608.255756,
                    "min": 0,
                    "p50": 550.043279,
                    "p95": 608.255756,
                    "p99": 608.255756,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 426.08223799999996,
                    "min": 0,
                    "p50": 419.204818,
                    "p95": 426.08223799999996,
                    "p99": 426.08223799999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 354.142436,
                    "min": 0,
                    "p50": 322.503576,
                    "p95": 354.142436,
                    "p99": 354.142436,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 257.641712,
                    "min": 0,
                    "p50": 240.456832,
                    "p95": 257.641712,
                    "p99": 257.641712,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 161.82476,
                    "min": 0,
                    "p50": 141.476786,
                    "p95": 161.82476,
                    "p99": 161.82476,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 218.50889999999998,
                    "min": 0,
                    "p50": 193.377195,
                    "p95": 218.50889999999998,
                    "p99": 218.50889999999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 575.878173,
                    "min": 0,
                    "p50": 523.5391559999999,
                    "p95": 575.878173,
                    "p99": 575.878173,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 684.024598,
                    "min": 0,
                    "p50": 626.83092,
                    "p95": 684.024598,
                    "p99": 684.024598,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 277.563533,
                    "min": 0,
                    "p50": 269.465248,
                    "p95": 277.563533,
                    "p99": 277.563533,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 388.762186,
                    "min": 0,
                    "p50": 359.873525,
                    "p95": 388.762186,
                    "p99": 388.762186,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 794.3641799999999,
                    "min": 0,
                    "p50": 708.7739419999999,
                    "p95": 794.3641799999999,
                    "p99": 794.3641799999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 470.500484,
                    "min": 0,
                    "p50": 433.513215,
                    "p95": 470.500484,
                    "p99": 470.500484,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 324.315491,
                    "min": 0,
                    "p50": 307.274161,
                    "p95": 324.315491,
                    "p99": 324.315491,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 528.508832,
                    "min": 0,
                    "p50": 461.778261,
                    "p95": 528.508832,
                    "p99": 528.508832,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1249.440234,
                    "min": 0,
                    "p50": 1187.04627,
                    "p95": 1249.440234,
                    "p99": 1249.440234,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 670.59893,
                    "min": 0,
                    "p50": 655.832151,
                    "p95": 670.59893,
                    "p99": 670.59893,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 829.449311,
                    "min": 0,
                    "p50": 810.192109,
                    "p95": 829.449311,
                    "p99": 829.449311,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 930.550136,
                    "min": 0,
                    "p50": 893.121509,
                    "p95": 930.550136,
                    "p99": 930.550136,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1173.772944,
                    "min": 0,
                    "p50": 1115.348419,
                    "p95": 1173.772944,
                    "p99": 1173.772944,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1101.045771,
                    "min": 0,
                    "p50": 1052.713378,
                    "p95": 1101.045771,
                    "p99": 1101.045771,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 365.98869199999996,
                    "min": 0,
                    "p50": 348.58039099999996,
                    "p95": 365.98869199999996,
                    "p99": 365.98869199999996,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 769.886134,
                    "min": 0,
                    "p50": 732.85052,
                    "p95": 769.886134,
                    "p99": 769.886134,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1015.72881,
                    "min": 0,
                    "p50": 969.8581069999999,
                    "p95": 1015.72881,
                    "p99": 1015.72881,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1477.915475,
                    "min": 0,
                    "p50": 1405.64386,
                    "p95": 1477.915475,
                    "p99": 1477.915475,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 448.80616599999996,
                    "min": 0,
                    "p50": 427.43956099999997,
                    "p95": 448.80616599999996,
                    "p99": 448.80616599999996,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 615.340078,
                    "min": 0,
                    "p50": 582.896341,
                    "p95": 615.340078,
                    "p99": 615.340078,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 278.79737,
                    "min": 0,
                    "p50": 261.219963,
                    "p95": 278.79737,
                    "p99": 278.79737,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 521.3086089999999,
                    "min": 0,
                    "p50": 495.582315,
                    "p95": 521.3086089999999,
                    "p99": 521.3086089999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1678.353416,
                    "min": 0,
                    "p50": 1589.0853559999998,
                    "p95": 1678.353416,
                    "p99": 1678.353416,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1654.024461,
                    "min": 0,
                    "p50": 1571.255761,
                    "p95": 1654.024461,
                    "p99": 1654.024461,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1181.994305,
                    "min": 0,
                    "p50": 1132.5862009999998,
                    "p95": 1181.994305,
                    "p99": 1181.994305,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1030.518533,
                    "min": 0,
                    "p50": 968.8057809999999,
                    "p95": 1030.518533,
                    "p99": 1030.518533,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 780.704208,
                    "min": 0,
                    "p50": 736.7839819999999,
                    "p95": 780.704208,
                    "p99": 780.704208,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 662.1549699999999,
                    "min": 0,
                    "p50": 646.725609,
                    "p95": 662.1549699999999,
                    "p99": 662.1549699999999,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 511.54175299999997,
                    "min": 0,
                    "p50": 501.68413499999997,
                    "p95": 511.54175299999997,
                    "p99": 511.54175299999997,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1100.152401,
                    "min": 0,
                    "p50": 1045.783769,
                    "p95": 1100.152401,
                    "p99": 1100.152401,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 354.614214,
                    "min": 0,
                    "p50": 331.388136,
                    "p95": 354.614214,
                    "p99": 354.614214,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 934.963765,
                    "min": 0,
                    "p50": 891.233447,
                    "p95": 934.963765,
                    "p99": 934.963765,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 448.17179699999997,
                    "min": 0,
                    "p50": 427.725683,
                    "p95": 448.17179699999997,
                    "p99": 448.17179699999997,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1462.772778,
                    "min": 0,
                    "p50": 1383.685322,
                    "p95": 1462.772778,
                    "p99": 1462.772778,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 280.62294299999996,
                    "min": 0,
                    "p50": 270.6473,
                    "p95": 280.62294299999996,
                    "p99": 280.62294299999996,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 608.2772649999999,
                    "min": 0,
                    "p50": 583.023875,
                    "p95": 608.2772649999999,
                    "p99": 608.2772649999999,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1256.5639979999999,
                    "min": 0,
                    "p50": 1209.016962,
                    "p95": 1256.5639979999999,
                    "p99": 1256.5639979999999,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 852.563778,
                    "min": 0,
                    "p50": 815.099346,
                    "p95": 852.563778,
                    "p99": 852.563778,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 923.5978299999999,
                    "min": 0,
                    "p50": 875.5721139999999,
                    "p95": 923.5978299999999,
                    "p99": 923.5978299999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 504.025222,
                    "min": 0,
                    "p50": 494.056339,
                    "p95": 504.025222,
                    "p99": 504.025222,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 451.039974,
                    "min": 0,
                    "p50": 407.899748,
                    "p95": 451.039974,
                    "p99": 451.039974,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 873.7650729999999,
                    "min": 0,
                    "p50": 809.189436,
                    "p95": 873.7650729999999,
                    "p99": 873.7650729999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1665.996474,
                    "min": 0,
                    "p50": 1597.261663,
                    "p95": 1665.996474,
                    "p99": 1665.996474,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 356.930296,
                    "min": 0,
                    "p50": 335.897558,
                    "p95": 356.930296,
                    "p99": 356.930296,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 601.304203,
                    "min": 0,
                    "p50": 576.671873,
                    "p95": 601.304203,
                    "p99": 601.304203,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 287.794896,
                    "min": 0,
                    "p50": 275.611424,
                    "p95": 287.794896,
                    "p99": 287.794896,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1271.527822,
                    "min": 0,
                    "p50": 1207.031998,
                    "p95": 1271.527822,
                    "p99": 1271.527822,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1185.587392,
                    "min": 0,
                    "p50": 1113.393343,
                    "p95": 1185.587392,
                    "p99": 1185.587392,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1025.16579,
                    "min": 0,
                    "p50": 967.070932,
                    "p95": 1025.16579,
                    "p99": 1025.16579,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1102.3412309999999,
                    "min": 0,
                    "p50": 1046.102335,
                    "p95": 1102.3412309999999,
                    "p99": 1102.3412309999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 778.777467,
                    "min": 0,
                    "p50": 727.5311469999999,
                    "p95": 778.777467,
                    "p99": 778.777467,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1449.208971,
                    "min": 0,
                    "p50": 1399.255868,
                    "p95": 1449.208971,
                    "p99": 1449.208971,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 685.6465029999999,
                    "min": 0,
                    "p50": 671.067513,
                    "p95": 685.6465029999999,
                    "p99": 685.6465029999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 388.38250899999997,
                    "min": 0,
                    "p50": 376.173709,
                    "p95": 388.38250899999997,
                    "p99": 388.38250899999997,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 228.461139,
                    "min": 0,
                    "p50": 196.64970699999998,
                    "p95": 228.461139,
                    "p99": 228.461139,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 440.675711,
                    "min": 0,
                    "p50": 419.30057899999997,
                    "p95": 440.675711,
                    "p99": 440.675711,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 491.074038,
                    "min": 0,
                    "p50": 465.658938,
                    "p95": 491.074038,
                    "p99": 491.074038,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 121.922877,
                    "min": 0,
                    "p50": 113.70489099999999,
                    "p95": 121.922877,
                    "p99": 121.922877,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 359.25055,
                    "min": 0,
                    "p50": 335.83347799999996,
                    "p95": 359.25055,
                    "p99": 359.25055,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 200.082352,
                    "min": 0,
                    "p50": 197.91287599999998,
                    "p95": 200.082352,
                    "p99": 200.082352,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 147.450327,
                    "min": 0,
                    "p50": 136.205614,
                    "p95": 147.450327,
                    "p99": 147.450327,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 867.723581,
                    "min": 0,
                    "p50": 818.849167,
                    "p95": 867.723581,
                    "p99": 867.723581,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 293.945738,
                    "min": 0,
                    "p50": 271.79733899999997,
                    "p95": 293.945738,
                    "p99": 293.945738,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 332.66070199999996,
                    "min": 0,
                    "p50": 325.36269899999996,
                    "p95": 332.66070199999996,
                    "p99": 332.66070199999996,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 426.349296,
                    "min": 0,
                    "p50": 377.777158,
                    "p95": 426.349296,
                    "p99": 426.349296,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 172.24747399999998,
                    "min": 0,
                    "p50": 161.805571,
                    "p95": 172.24747399999998,
                    "p99": 172.24747399999998,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1413.0015959999998,
                    "min": 0,
                    "p50": 1340.8940049999999,
                    "p95": 1413.0015959999998,
                    "p99": 1413.0015959999998,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 588.4341909999999,
                    "min": 0,
                    "p50": 539.9291559999999,
                    "p95": 588.4341909999999,
                    "p99": 588.4341909999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 305.198942,
                    "min": 0,
                    "p50": 277.463259,
                    "p95": 305.198942,
                    "p99": 305.198942,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 254.49940099999998,
                    "min": 0,
                    "p50": 238.655759,
                    "p95": 254.49940099999998,
                    "p99": 254.49940099999998,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1138.727048,
                    "min": 0,
                    "p50": 1070.215612,
                    "p95": 1138.727048,
                    "p99": 1138.727048,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 838.8559829999999,
                    "min": 0,
                    "p50": 757.183719,
                    "p95": 838.8559829999999,
                    "p99": 838.8559829999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 285.414822,
                    "min": 0,
                    "p50": 251.337733,
                    "p95": 285.414822,
                    "p99": 285.414822,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 570.052435,
                    "min": 0,
                    "p50": 514.4397789999999,
                    "p95": 570.052435,
                    "p99": 570.052435,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 402.121701,
                    "min": 0,
                    "p50": 345.830499,
                    "p95": 402.121701,
                    "p99": 402.121701,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 440.720143,
                    "min": 0,
                    "p50": 408.289611,
                    "p95": 440.720143,
                    "p99": 440.720143,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 164.967516,
                    "min": 0,
                    "p50": 141.505735,
                    "p95": 164.967516,
                    "p99": 164.967516,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 473.683179,
                    "min": 0,
                    "p50": 438.906496,
                    "p95": 473.683179,
                    "p99": 473.683179,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.93219599999998,
                    "min": 0,
                    "p50": 227.69710999999998,
                    "p95": 231.93219599999998,
                    "p99": 231.93219599999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 610.5186259999999,
                    "min": 0,
                    "p50": 559.575371,
                    "p95": 610.5186259999999,
                    "p99": 610.5186259999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 336.977688,
                    "min": 0,
                    "p50": 329.46081699999996,
                    "p95": 336.977688,
                    "p99": 336.977688,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 712.366732,
                    "min": 0,
                    "p50": 686.019286,
                    "p95": 712.366732,
                    "p99": 712.366732,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 527.222949,
                    "min": 0,
                    "p50": 480.24312399999997,
                    "p95": 527.222949,
                    "p99": 527.222949,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 321.21143,
                    "min": 0,
                    "p50": 293.921852,
                    "p95": 321.21143,
                    "p99": 321.21143,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 202.95519299999998,
                    "min": 0,
                    "p50": 176.87827099999998,
                    "p95": 202.95519299999998,
                    "p99": 202.95519299999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 638.214657,
                    "min": 0,
                    "p50": 606.281653,
                    "p95": 638.214657,
                    "p99": 638.214657,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1222.202149,
                    "min": 0,
                    "p50": 1164.12628,
                    "p95": 1222.202149,
                    "p99": 1222.202149,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 255.205447,
                    "min": 0,
                    "p50": 244.217919,
                    "p95": 255.205447,
                    "p99": 255.205447,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 279.939774,
                    "min": 0,
                    "p50": 271.54963499999997,
                    "p95": 279.939774,
                    "p99": 279.939774,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 159.458956,
                    "min": 0,
                    "p50": 123.09776,
                    "p95": 159.458956,
                    "p99": 159.458956,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 232.150373,
                    "min": 0,
                    "p50": 219.25695399999998,
                    "p95": 232.150373,
                    "p99": 232.150373,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 377.040649,
                    "min": 0,
                    "p50": 346.966927,
                    "p95": 377.040649,
                    "p99": 377.040649,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 112.660708,
                    "min": 0,
                    "p50": 101.15891599999999,
                    "p95": 112.660708,
                    "p99": 112.660708,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 749.110686,
                    "min": 0,
                    "p50": 733.1352939999999,
                    "p95": 749.110686,
                    "p99": 749.110686,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 305.866251,
                    "min": 0,
                    "p50": 292.537596,
                    "p95": 305.866251,
                    "p99": 305.866251,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 352.73098699999997,
                    "min": 0,
                    "p50": 340.739031,
                    "p95": 352.73098699999997,
                    "p99": 352.73098699999997,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 188.79885299999998,
                    "min": 0,
                    "p50": 182.78389199999998,
                    "p95": 188.79885299999998,
                    "p99": 188.79885299999998,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 458.97364999999996,
                    "min": 0,
                    "p50": 424.017806,
                    "p95": 458.97364999999996,
                    "p99": 458.97364999999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 328.80712,
                    "min": 0,
                    "p50": 301.581048,
                    "p95": 328.80712,
                    "p99": 328.80712,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 208.753438,
                    "min": 0,
                    "p50": 171.088688,
                    "p95": 208.753438,
                    "p99": 208.753438,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1001.838366,
                    "min": 0,
                    "p50": 981.2355829999999,
                    "p95": 1001.838366,
                    "p99": 1001.838366,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 135.034806,
                    "min": 0,
                    "p50": 98.66089699999999,
                    "p95": 135.034806,
                    "p99": 135.034806,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 400.094931,
                    "min": 0,
                    "p50": 382.04166799999996,
                    "p95": 400.094931,
                    "p99": 400.094931,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 521.972257,
                    "min": 0,
                    "p50": 503.404359,
                    "p95": 521.972257,
                    "p99": 521.972257,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "geth": {
            "name": "geth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 644.411933,
                    "min": 0,
                    "p50": 605.969479,
                    "p95": 644.411933,
                    "p99": 644.411933,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 564.051324,
                    "min": 0,
                    "p50": 543.150193,
                    "p95": 564.051324,
                    "p99": 564.051324,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 879.121273,
                    "min": 0,
                    "p50": 843.255554,
                    "p95": 879.121273,
                    "p99": 879.121273,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 785.845507,
                    "min": 0,
                    "p50": 739.124207,
                    "p95": 785.845507,
                    "p99": 785.845507,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 639.818211,
                    "min": 0,
                    "p50": 590.9226679999999,
                    "p95": 639.818211,
                    "p99": 639.818211,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 738.0026379999999,
                    "min": 0,
                    "p50": 687.056792,
                    "p95": 738.0026379999999,
                    "p99": 738.0026379999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 813.2449869999999,
                    "min": 0,
                    "p50": 785.877125,
                    "p95": 813.2449869999999,
                    "p99": 813.2449869999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 243.42374099999998,
                    "min": 0,
                    "p50": 200.035262,
                    "p95": 243.42374099999998,
                    "p99": 243.42374099999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 314.43082,
                    "min": 0,
                    "p50": 251.14049699999998,
                    "p95": 314.43082,
                    "p99": 314.43082,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 351.13699399999996,
                    "min": 0,
                    "p50": 300.700134,
                    "p95": 351.13699399999996,
                    "p99": 351.13699399999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1115.9055489999998,
                    "min": 0,
                    "p50": 1088.091882,
                    "p95": 1115.9055489999998,
                    "p99": 1115.9055489999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 394.197482,
                    "min": 0,
                    "p50": 347.776123,
                    "p95": 394.197482,
                    "p99": 394.197482,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1019.0982859999999,
                    "min": 0,
                    "p50": 959.838029,
                    "p95": 1019.0982859999999,
                    "p99": 1019.0982859999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 512.028515,
                    "min": 0,
                    "p50": 489.66662099999996,
                    "p95": 512.028515,
                    "p99": 512.028515,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 442.035604,
                    "min": 0,
                    "p50": 401.974766,
                    "p95": 442.035604,
                    "p99": 442.035604,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 185.026385,
                    "min": 0,
                    "p50": 156.18447999999998,
                    "p95": 185.026385,
                    "p99": 185.026385,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 263.859172,
                    "min": 0,
                    "p50": 230.33334399999998,
                    "p95": 263.859172,
                    "p99": 263.859172,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 308.883226,
                    "min": 0,
                    "p50": 291.37432,
                    "p95": 308.883226,
                    "p99": 308.883226,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 114.152915,
                    "min": 0,
                    "p50": 99.974369,
                    "p95": 114.152915,
                    "p99": 114.152915,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 201.12469099999998,
                    "min": 0,
                    "p50": 164.82995499999998,
                    "p95": 201.12469099999998,
                    "p99": 201.12469099999998,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 308.669201,
                    "min": 0,
                    "p50": 242.56968899999998,
                    "p95": 308.669201,
                    "p99": 308.669201,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 97.676352,
                    "min": 0,
                    "p50": 79.03169,
                    "p95": 97.676352,
                    "p99": 97.676352,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 163.120692,
                    "min": 0,
                    "p50": 136.383549,
                    "p95": 163.120692,
                    "p99": 163.120692,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 166.950795,
                    "min": 0,
                    "p50": 149.12982499999998,
                    "p95": 166.950795,
                    "p99": 166.950795,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 450.777062,
                    "min": 0,
                    "p50": 408.941037,
                    "p95": 450.777062,
                    "p99": 450.777062,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 573.1403419999999,
                    "min": 0,
                    "p50": 510.737735,
                    "p95": 573.1403419999999,
                    "p99": 573.1403419999999,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 202.237751,
                    "min": 0,
                    "p50": 179.90469099999999,
                    "p95": 202.237751,
                    "p99": 202.237751,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1363.9004639999998,
                    "min": 0,
                    "p50": 1239.5317129999999,
                    "p95": 1363.9004639999998,
                    "p99": 1363.9004639999998,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 70.42983,
                    "min": 0,
                    "p50": 65.82282099999999,
                    "p95": 70.42983,
                    "p99": 70.42983,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 128.575366,
                    "min": 0,
                    "p50": 120.76834799999999,
                    "p95": 128.575366,
                    "p99": 128.575366,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 697.281398,
                    "min": 0,
                    "p50": 645.270404,
                    "p95": 697.281398,
                    "p99": 697.281398,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 517.843995,
                    "min": 0,
                    "p50": 480.394866,
                    "p95": 517.843995,
                    "p99": 517.843995,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 471.010653,
                    "min": 0,
                    "p50": 400.99897999999996,
                    "p95": 471.010653,
                    "p99": 471.010653,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 581.387891,
                    "min": 0,
                    "p50": 475.115274,
                    "p95": 581.387891,
                    "p99": 581.387891,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 269.068498,
                    "min": 0,
                    "p50": 243.859962,
                    "p95": 269.068498,
                    "p99": 269.068498,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1239.796797,
                    "min": 0,
                    "p50": 1221.858105,
                    "p95": 1239.796797,
                    "p99": 1239.796797,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 808.868082,
                    "min": 0,
                    "p50": 724.610222,
                    "p95": 808.868082,
                    "p99": 808.868082,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 608.193439,
                    "min": 0,
                    "p50": 555.344536,
                    "p95": 608.193439,
                    "p99": 608.193439,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 626.763456,
                    "min": 0,
                    "p50": 513.859194,
                    "p95": 626.763456,
                    "p99": 626.763456,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 363.995324,
                    "min": 0,
                    "p50": 318.315265,
                    "p95": 363.995324,
                    "p99": 363.995324,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 863.738757,
                    "min": 0,
                    "p50": 822.233975,
                    "p95": 863.738757,
                    "p99": 863.738757,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 190.964646,
                    "min": 0,
                    "p50": 168.751814,
                    "p95": 190.964646,
                    "p99": 190.964646,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 670.994158,
                    "min": 0,
                    "p50": 629.961054,
                    "p95": 670.994158,
                    "p99": 670.994158,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 371.55465899999996,
                    "min": 0,
                    "p50": 351.079028,
                    "p95": 371.55465899999996,
                    "p99": 371.55465899999996,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 299.324935,
                    "min": 0,
                    "p50": 280.478825,
                    "p95": 299.324935,
                    "p99": 299.324935,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 227.9717,
                    "min": 0,
                    "p50": 204.125733,
                    "p95": 227.9717,
                    "p99": 227.9717,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 595.84093,
                    "min": 0,
                    "p50": 589.3567509999999,
                    "p95": 595.84093,
                    "p99": 595.84093,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1178.393986,
                    "min": 0,
                    "p50": 1121.21804,
                    "p95": 1178.393986,
                    "p99": 1178.393986,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 240.787365,
                    "min": 0,
                    "p50": 231.087832,
                    "p95": 240.787365,
                    "p99": 240.787365,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 853.114474,
                    "min": 0,
                    "p50": 779.5798609999999,
                    "p95": 853.114474,
                    "p99": 853.114474,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1030.129163,
                    "min": 0,
                    "p50": 849.969256,
                    "p95": 1030.129163,
                    "p99": 1030.129163,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 322.68994499999997,
                    "min": 0,
                    "p50": 294.988704,
                    "p95": 322.68994499999997,
                    "p99": 322.68994499999997,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 732.769355,
                    "min": 0,
                    "p50": 720.001898,
                    "p95": 732.769355,
                    "p99": 732.769355,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1079.719437,
                    "min": 0,
                    "p50": 967.461881,
                    "p95": 1079.719437,
                    "p99": 1079.719437,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 439.87997099999995,
                    "min": 0,
                    "p50": 417.216654,
                    "p95": 439.87997099999995,
                    "p99": 439.87997099999995,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 684.543958,
                    "min": 0,
                    "p50": 599.013663,
                    "p95": 684.543958,
                    "p99": 684.543958,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 593.40827,
                    "min": 0,
                    "p50": 542.247749,
                    "p95": 593.40827,
                    "p99": 593.40827,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1375.823784,
                    "min": 0,
                    "p50": 1278.011632,
                    "p95": 1375.823784,
                    "p99": 1375.823784,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 694.773828,
                    "min": 0,
                    "p50": 660.905957,
                    "p95": 694.773828,
                    "p99": 694.773828,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 526.737399,
                    "min": 0,
                    "p50": 476.86807899999997,
                    "p95": 526.737399,
                    "p99": 526.737399,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 386.58487399999996,
                    "min": 0,
                    "p50": 356.376081,
                    "p95": 386.58487399999996,
                    "p99": 386.58487399999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 936.955288,
                    "min": 0,
                    "p50": 897.479435,
                    "p95": 936.955288,
                    "p99": 936.955288,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 133.540348,
                    "min": 0,
                    "p50": 109.18025999999999,
                    "p95": 133.540348,
                    "p99": 133.540348,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 39.191562,
                    "min": 0,
                    "p50": 33.109652,
                    "p95": 39.191562,
                    "p99": 39.191562,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 256.600865,
                    "min": 0,
                    "p50": 220.66368599999998,
                    "p95": 256.600865,
                    "p99": 256.600865,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 461.12197799999996,
                    "min": 0,
                    "p50": 389.162202,
                    "p95": 461.12197799999996,
                    "p99": 461.12197799999996,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 114.55140399999999,
                    "min": 0,
                    "p50": 91.51629,
                    "p95": 114.55140399999999,
                    "p99": 114.55140399999999,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 63.757796,
                    "min": 0,
                    "p50": 48.551665,
                    "p95": 63.757796,
                    "p99": 63.757796,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 217.040649,
                    "min": 0,
                    "p50": 181.370082,
                    "p95": 217.040649,
                    "p99": 217.040649,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 43.558181999999995,
                    "min": 0,
                    "p50": 37.925549,
                    "p95": 43.558181999999995,
                    "p99": 43.558181999999995,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 66.324941,
                    "min": 0,
                    "p50": 48.318064,
                    "p95": 66.324941,
                    "p99": 66.324941,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 120.467011,
                    "min": 0,
                    "p50": 99.985576,
                    "p95": 120.467011,
                    "p99": 120.467011,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 178.537857,
                    "min": 0,
                    "p50": 146.82671399999998,
                    "p95": 178.537857,
                    "p99": 178.537857,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 54.636815999999996,
                    "min": 0,
                    "p50": 32.722132,
                    "p95": 54.636815999999996,
                    "p99": 54.636815999999996,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 84.50712999999999,
                    "min": 0,
                    "p50": 80.917357,
                    "p95": 84.50712999999999,
                    "p99": 84.50712999999999,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 98.966428,
                    "min": 0,
                    "p50": 92.201032,
                    "p95": 98.966428,
                    "p99": 98.966428,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 68.725156,
                    "min": 0,
                    "p50": 58.758751,
                    "p95": 68.725156,
                    "p99": 68.725156,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 66.500231,
                    "min": 0,
                    "p50": 59.977869999999996,
                    "p95": 66.500231,
                    "p99": 66.500231,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 96.557394,
                    "min": 0,
                    "p50": 91.19619999999999,
                    "p95": 96.557394,
                    "p99": 96.557394,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 70.65263399999999,
                    "min": 0,
                    "p50": 65.252462,
                    "p95": 70.65263399999999,
                    "p99": 70.65263399999999,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 76.86578,
                    "min": 0,
                    "p50": 69.771504,
                    "p95": 76.86578,
                    "p99": 76.86578,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 336.099563,
                    "min": 0,
                    "p50": 308.509211,
                    "p95": 336.099563,
                    "p99": 336.099563,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 286.29123799999996,
                    "min": 0,
                    "p50": 197.014589,
                    "p95": 286.29123799999996,
                    "p99": 286.29123799999996,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 498.74361999999996,
                    "min": 0,
                    "p50": 448.83472,
                    "p95": 498.74361999999996,
                    "p99": 498.74361999999996,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 269.289847,
                    "min": 0,
                    "p50": 225.584636,
                    "p95": 269.289847,
                    "p99": 269.289847,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 416.13269299999996,
                    "min": 0,
                    "p50": 372.149633,
                    "p95": 416.13269299999996,
                    "p99": 416.13269299999996,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1542.4719209999998,
                    "min": 0,
                    "p50": 1511.669119,
                    "p95": 1542.4719209999998,
                    "p99": 1542.4719209999998,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 379.641994,
                    "min": 0,
                    "p50": 343.767631,
                    "p95": 379.641994,
                    "p99": 379.641994,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 469.13773499999996,
                    "min": 0,
                    "p50": 426.975165,
                    "p95": 469.13773499999996,
                    "p99": 469.13773499999996,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 579.168157,
                    "min": 0,
                    "p50": 560.095099,
                    "p95": 579.168157,
                    "p99": 579.168157,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 283.9509,
                    "min": 0,
                    "p50": 281.187486,
                    "p95": 283.9509,
                    "p99": 283.9509,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1319.407651,
                    "min": 0,
                    "p50": 1238.4676259999999,
                    "p95": 1319.407651,
                    "p99": 1319.407651,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 307.117689,
                    "min": 0,
                    "p50": 254.000352,
                    "p95": 307.117689,
                    "p99": 307.117689,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 466.80358099999995,
                    "min": 0,
                    "p50": 391.627254,
                    "p95": 466.80358099999995,
                    "p99": 466.80358099999995,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 919.5107079999999,
                    "min": 0,
                    "p50": 914.067724,
                    "p95": 919.5107079999999,
                    "p99": 919.5107079999999,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 173.873113,
                    "min": 0,
                    "p50": 166.442781,
                    "p95": 173.873113,
                    "p99": 173.873113,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3043.076002,
                    "min": 0,
                    "p50": 3011.817607,
                    "p95": 3043.076002,
                    "p99": 3043.076002,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 164.599973,
                    "min": 0,
                    "p50": 137.93813699999998,
                    "p95": 164.599973,
                    "p99": 164.599973,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 529.247767,
                    "min": 0,
                    "p50": 486.38509899999997,
                    "p95": 529.247767,
                    "p99": 529.247767,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 646.134875,
                    "min": 0,
                    "p50": 628.795127,
                    "p95": 646.134875,
                    "p99": 646.134875,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 50.277097,
                    "min": 0,
                    "p50": 35.137605,
                    "p95": 50.277097,
                    "p99": 50.277097,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 60.538641999999996,
                    "min": 0,
                    "p50": 49.542069,
                    "p95": 60.538641999999996,
                    "p99": 60.538641999999996,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 33.173781,
                    "min": 0,
                    "p50": 26.902434,
                    "p95": 33.173781,
                    "p99": 33.173781,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 58.149502,
                    "min": 0,
                    "p50": 48.841687,
                    "p95": 58.149502,
                    "p99": 58.149502,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 66.318792,
                    "min": 0,
                    "p50": 51.292552,
                    "p95": 66.318792,
                    "p99": 66.318792,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 156.959891,
                    "min": 0,
                    "p50": 113.90105199999999,
                    "p95": 156.959891,
                    "p99": 156.959891,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 65.766341,
                    "min": 0,
                    "p50": 61.605812,
                    "p95": 65.766341,
                    "p99": 65.766341,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 41.407965,
                    "min": 0,
                    "p50": 36.091881,
                    "p95": 41.407965,
                    "p99": 41.407965,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 175.80523599999998,
                    "min": 0,
                    "p50": 144.821526,
                    "p95": 175.80523599999998,
                    "p99": 175.80523599999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 67.50894,
                    "min": 0,
                    "p50": 46.581147,
                    "p95": 67.50894,
                    "p99": 67.50894,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 34.029458,
                    "min": 0,
                    "p50": 27.01571,
                    "p95": 34.029458,
                    "p99": 34.029458,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 70.300541,
                    "min": 0,
                    "p50": 53.599494,
                    "p95": 70.300541,
                    "p99": 70.300541,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 35.084958,
                    "min": 0,
                    "p50": 30.545883999999997,
                    "p95": 35.084958,
                    "p99": 35.084958,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 75.35561,
                    "min": 0,
                    "p50": 64.207314,
                    "p95": 75.35561,
                    "p99": 75.35561,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 288.231751,
                    "min": 0,
                    "p50": 244.857129,
                    "p95": 288.231751,
                    "p99": 288.231751,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 58.095721999999995,
                    "min": 0,
                    "p50": 39.805807,
                    "p95": 58.095721999999995,
                    "p99": 58.095721999999995,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 142.021488,
                    "min": 0,
                    "p50": 118.67881799999999,
                    "p95": 142.021488,
                    "p99": 142.021488,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 90.587119,
                    "min": 0,
                    "p50": 73.25032999999999,
                    "p95": 90.587119,
                    "p99": 90.587119,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 60.989554,
                    "min": 0,
                    "p50": 49.916937,
                    "p95": 60.989554,
                    "p99": 60.989554,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 75.452159,
                    "min": 0,
                    "p50": 62.625223,
                    "p95": 75.452159,
                    "p99": 75.452159,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 27.366083,
                    "min": 0,
                    "p50": 27.033331,
                    "p95": 27.366083,
                    "p99": 27.366083,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 27.050100999999998,
                    "min": 0,
                    "p50": 26.583464,
                    "p95": 27.050100999999998,
                    "p99": 27.050100999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 28.227197,
                    "min": 0,
                    "p50": 26.561304,
                    "p95": 28.227197,
                    "p99": 28.227197,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 31.283783999999997,
                    "min": 0,
                    "p50": 26.730269999999997,
                    "p95": 31.283783999999997,
                    "p99": 31.283783999999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 27.4206,
                    "min": 0,
                    "p50": 26.767778999999997,
                    "p95": 27.4206,
                    "p99": 27.4206,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 27.239804,
                    "min": 0,
                    "p50": 26.697581,
                    "p95": 27.239804,
                    "p99": 27.239804,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 27.923347,
                    "min": 0,
                    "p50": 26.567324,
                    "p95": 27.923347,
                    "p99": 27.923347,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 27.194696999999998,
                    "min": 0,
                    "p50": 26.660141,
                    "p95": 27.194696999999998,
                    "p99": 27.194696999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 61.116775999999994,
                    "min": 0,
                    "p50": 51.463184999999996,
                    "p95": 61.116775999999994,
                    "p99": 61.116775999999994,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 27.008101,
                    "min": 0,
                    "p50": 26.73056,
                    "p95": 27.008101,
                    "p99": 27.008101,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 40.607064,
                    "min": 0,
                    "p50": 39.797277,
                    "p95": 40.607064,
                    "p99": 40.607064,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 33.651047,
                    "min": 0,
                    "p50": 28.646687,
                    "p95": 33.651047,
                    "p99": 33.651047,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 43.437636,
                    "min": 0,
                    "p50": 27.056479,
                    "p95": 43.437636,
                    "p99": 43.437636,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 31.311522,
                    "min": 0,
                    "p50": 26.854608,
                    "p95": 31.311522,
                    "p99": 31.311522,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 117.451337,
                    "min": 0,
                    "p50": 109.759158,
                    "p95": 117.451337,
                    "p99": 117.451337,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 27.350382999999997,
                    "min": 0,
                    "p50": 26.779628,
                    "p95": 27.350382999999997,
                    "p99": 27.350382999999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 27.209516999999998,
                    "min": 0,
                    "p50": 26.908106,
                    "p95": 27.209516999999998,
                    "p99": 27.209516999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 27.200567,
                    "min": 0,
                    "p50": 26.71246,
                    "p95": 27.200567,
                    "p99": 27.200567,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 460.49060399999996,
                    "min": 0,
                    "p50": 344.461094,
                    "p95": 460.49060399999996,
                    "p99": 460.49060399999996,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 165.426437,
                    "min": 0,
                    "p50": 140.505022,
                    "p95": 165.426437,
                    "p99": 165.426437,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 3175.2389089999997,
                    "min": 0,
                    "p50": 3053.447181,
                    "p95": 3175.2389089999997,
                    "p99": 3175.2389089999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 739.611489,
                    "min": 0,
                    "p50": 643.294674,
                    "p95": 739.611489,
                    "p99": 739.611489,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 308.19235699999996,
                    "min": 0,
                    "p50": 257.674846,
                    "p95": 308.19235699999996,
                    "p99": 308.19235699999996,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 205.855594,
                    "min": 0,
                    "p50": 170.769242,
                    "p95": 205.855594,
                    "p99": 205.855594,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 263.888312,
                    "min": 0,
                    "p50": 227.48466399999998,
                    "p95": 263.888312,
                    "p99": 263.888312,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1018.216409,
                    "min": 0,
                    "p50": 966.5065639999999,
                    "p95": 1018.216409,
                    "p99": 1018.216409,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 512.272355,
                    "min": 0,
                    "p50": 432.091255,
                    "p95": 512.272355,
                    "p99": 512.272355,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 415.00807499999996,
                    "min": 0,
                    "p50": 375.08838,
                    "p95": 415.00807499999996,
                    "p99": 415.00807499999996,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1308.2824799999999,
                    "min": 0,
                    "p50": 1281.331876,
                    "p95": 1308.2824799999999,
                    "p99": 1308.2824799999999,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1604.744357,
                    "min": 0,
                    "p50": 1550.298617,
                    "p95": 1604.744357,
                    "p99": 1604.744357,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 515.618217,
                    "min": 0,
                    "p50": 463.95395099999996,
                    "p95": 515.618217,
                    "p99": 515.618217,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 201.543917,
                    "min": 0,
                    "p50": 199.070548,
                    "p95": 201.543917,
                    "p99": 201.543917,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 625.962843,
                    "min": 0,
                    "p50": 576.9893509999999,
                    "p95": 625.962843,
                    "p99": 625.962843,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 318.49803499999996,
                    "min": 0,
                    "p50": 311.00622699999997,
                    "p95": 318.49803499999996,
                    "p99": 318.49803499999996,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 452.38939899999997,
                    "min": 0,
                    "p50": 405.21149299999996,
                    "p95": 452.38939899999997,
                    "p99": 452.38939899999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 549.596698,
                    "min": 0,
                    "p50": 497.050949,
                    "p95": 549.596698,
                    "p99": 549.596698,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 344.974177,
                    "min": 0,
                    "p50": 288.22745,
                    "p95": 344.974177,
                    "p99": 344.974177,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1907.841265,
                    "min": 0,
                    "p50": 1779.7086459999998,
                    "p95": 1907.841265,
                    "p99": 1907.841265,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 312.974854,
                    "min": 0,
                    "p50": 272.690861,
                    "p95": 312.974854,
                    "p99": 312.974854,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 599.0215,
                    "min": 0,
                    "p50": 572.90955,
                    "p95": 599.0215,
                    "p99": 599.0215,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 885.2052229999999,
                    "min": 0,
                    "p50": 834.774202,
                    "p95": 885.2052229999999,
                    "p99": 885.2052229999999,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 354.913521,
                    "min": 0,
                    "p50": 321.545531,
                    "p95": 354.913521,
                    "p99": 354.913521,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1011.73546,
                    "min": 0,
                    "p50": 909.4698629999999,
                    "p95": 1011.73546,
                    "p99": 1011.73546,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 539.902099,
                    "min": 0,
                    "p50": 492.72173399999997,
                    "p95": 539.902099,
                    "p99": 539.902099,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1086.778703,
                    "min": 0,
                    "p50": 1043.2605999999998,
                    "p95": 1086.778703,
                    "p99": 1086.778703,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 474.47682199999997,
                    "min": 0,
                    "p50": 373.726472,
                    "p95": 474.47682199999997,
                    "p99": 474.47682199999997,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 647.930902,
                    "min": 0,
                    "p50": 627.957317,
                    "p95": 647.930902,
                    "p99": 647.930902,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2487.580063,
                    "min": 0,
                    "p50": 2279.919003,
                    "p95": 2487.580063,
                    "p99": 2487.580063,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 777.148337,
                    "min": 0,
                    "p50": 637.820524,
                    "p95": 777.148337,
                    "p99": 777.148337,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 497.115937,
                    "min": 0,
                    "p50": 462.963577,
                    "p95": 497.115937,
                    "p99": 497.115937,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 809.5024199999999,
                    "min": 0,
                    "p50": 739.176693,
                    "p95": 809.5024199999999,
                    "p99": 809.5024199999999,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 242.16531799999998,
                    "min": 0,
                    "p50": 211.742505,
                    "p95": 242.16531799999998,
                    "p99": 242.16531799999998,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 894.593571,
                    "min": 0,
                    "p50": 792.206509,
                    "p95": 894.593571,
                    "p99": 894.593571,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1250.388436,
                    "min": 0,
                    "p50": 1208.548038,
                    "p95": 1250.388436,
                    "p99": 1250.388436,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3056.5658719999997,
                    "min": 0,
                    "p50": 2901.93523,
                    "p95": 3056.5658719999997,
                    "p99": 3056.5658719999997,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 264.899234,
                    "min": 0,
                    "p50": 262.75624999999997,
                    "p95": 264.899234,
                    "p99": 264.899234,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 512.226816,
                    "min": 0,
                    "p50": 471.735477,
                    "p95": 512.226816,
                    "p99": 512.226816,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 414.65081699999996,
                    "min": 0,
                    "p50": 397.15833399999997,
                    "p95": 414.65081699999996,
                    "p99": 414.65081699999996,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 771.965101,
                    "min": 0,
                    "p50": 750.3412959999999,
                    "p95": 771.965101,
                    "p99": 771.965101,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 708.570255,
                    "min": 0,
                    "p50": 679.811144,
                    "p95": 708.570255,
                    "p99": 708.570255,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 917.821069,
                    "min": 0,
                    "p50": 890.5761229999999,
                    "p95": 917.821069,
                    "p99": 917.821069,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1155.035312,
                    "min": 0,
                    "p50": 1103.066478,
                    "p95": 1155.035312,
                    "p99": 1155.035312,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 997.299628,
                    "min": 0,
                    "p50": 964.1690689999999,
                    "p95": 997.299628,
                    "p99": 997.299628,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 863.1836649999999,
                    "min": 0,
                    "p50": 821.280894,
                    "p95": 863.1836649999999,
                    "p99": 863.1836649999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1580.790086,
                    "min": 0,
                    "p50": 1462.5000579999999,
                    "p95": 1580.790086,
                    "p99": 1580.790086,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 598.219128,
                    "min": 0,
                    "p50": 547.588875,
                    "p95": 598.219128,
                    "p99": 598.219128,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 339.615891,
                    "min": 0,
                    "p50": 328.915285,
                    "p95": 339.615891,
                    "p99": 339.615891,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1400.264036,
                    "min": 0,
                    "p50": 1273.757073,
                    "p95": 1400.264036,
                    "p99": 1400.264036,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 715.0040829999999,
                    "min": 0,
                    "p50": 611.879689,
                    "p95": 715.0040829999999,
                    "p99": 715.0040829999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1109.298024,
                    "min": 0,
                    "p50": 1026.20887,
                    "p95": 1109.298024,
                    "p99": 1109.298024,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 316.88336499999997,
                    "min": 0,
                    "p50": 298.145538,
                    "p95": 316.88336499999997,
                    "p99": 316.88336499999997,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 692.552191,
                    "min": 0,
                    "p50": 632.227508,
                    "p95": 692.552191,
                    "p99": 692.552191,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 885.1689749999999,
                    "min": 0,
                    "p50": 871.118492,
                    "p95": 885.1689749999999,
                    "p99": 885.1689749999999,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1706.438023,
                    "min": 0,
                    "p50": 1686.781064,
                    "p95": 1706.438023,
                    "p99": 1706.438023,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 512.1530779999999,
                    "min": 0,
                    "p50": 502.598798,
                    "p95": 512.1530779999999,
                    "p99": 512.1530779999999,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 273.621753,
                    "min": 0,
                    "p50": 255.393084,
                    "p95": 273.621753,
                    "p99": 273.621753,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 232.32186299999998,
                    "min": 0,
                    "p50": 216.363033,
                    "p95": 232.32186299999998,
                    "p99": 232.32186299999998,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 552.130799,
                    "min": 0,
                    "p50": 542.0577509999999,
                    "p95": 552.130799,
                    "p99": 552.130799,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1305.151572,
                    "min": 0,
                    "p50": 1280.990012,
                    "p95": 1305.151572,
                    "p99": 1305.151572,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 803.270754,
                    "min": 0,
                    "p50": 771.0330389999999,
                    "p95": 803.270754,
                    "p99": 803.270754,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 677.857347,
                    "min": 0,
                    "p50": 666.764761,
                    "p95": 677.857347,
                    "p99": 677.857347,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 397.109994,
                    "min": 0,
                    "p50": 384.495365,
                    "p95": 397.109994,
                    "p99": 397.109994,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 511.518875,
                    "min": 0,
                    "p50": 465.511852,
                    "p95": 511.518875,
                    "p99": 511.518875,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 365.038704,
                    "min": 0,
                    "p50": 335.029293,
                    "p95": 365.038704,
                    "p99": 365.038704,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 180.093629,
                    "min": 0,
                    "p50": 174.859885,
                    "p95": 180.093629,
                    "p99": 180.093629,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 610.794497,
                    "min": 0,
                    "p50": 584.2352,
                    "p95": 610.794497,
                    "p99": 610.794497,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 461.667666,
                    "min": 0,
                    "p50": 417.095401,
                    "p95": 461.667666,
                    "p99": 461.667666,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 661.953034,
                    "min": 0,
                    "p50": 657.3758849999999,
                    "p95": 661.953034,
                    "p99": 661.953034,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 2051.398204,
                    "min": 0,
                    "p50": 2033.539793,
                    "p95": 2051.398204,
                    "p99": 2051.398204,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 4098.75151,
                    "min": 0,
                    "p50": 4051.3578639999996,
                    "p95": 4098.75151,
                    "p99": 4098.75151,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2267.694958,
                    "min": 0,
                    "p50": 2225.9519299999997,
                    "p95": 2267.694958,
                    "p99": 2267.694958,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5981.619326,
                    "min": 0,
                    "p50": 5916.777604999999,
                    "p95": 5981.619326,
                    "p99": 5981.619326,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1299.787836,
                    "min": 0,
                    "p50": 1251.4775009999998,
                    "p95": 1299.787836,
                    "p99": 1299.787836,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1860.281465,
                    "min": 0,
                    "p50": 1847.414724,
                    "p95": 1860.281465,
                    "p99": 1860.281465,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7926.03255,
                    "min": 0,
                    "p50": 7869.224467,
                    "p95": 7926.03255,
                    "p99": 7926.03255,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1080.33955,
                    "min": 0,
                    "p50": 1064.411777,
                    "p95": 1080.33955,
                    "p99": 1080.33955,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2739.3980619999998,
                    "min": 0,
                    "p50": 2674.727789,
                    "p95": 2739.3980619999998,
                    "p99": 2739.3980619999998,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1452.095746,
                    "min": 0,
                    "p50": 1428.250448,
                    "p95": 1452.095746,
                    "p99": 1452.095746,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 856.325687,
                    "min": 0,
                    "p50": 842.90508,
                    "p95": 856.325687,
                    "p99": 856.325687,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 3130.610569,
                    "min": 0,
                    "p50": 3060.5061229999997,
                    "p95": 3130.610569,
                    "p99": 3130.610569,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2923.685082,
                    "min": 0,
                    "p50": 2866.133943,
                    "p95": 2923.685082,
                    "p99": 2923.685082,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3548.8831929999997,
                    "min": 0,
                    "p50": 3528.927733,
                    "p95": 3548.8831929999997,
                    "p99": 3548.8831929999997,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1643.697111,
                    "min": 0,
                    "p50": 1624.206344,
                    "p95": 1643.697111,
                    "p99": 1643.697111,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2477.423135,
                    "min": 0,
                    "p50": 2423.515464,
                    "p95": 2477.423135,
                    "p99": 2477.423135,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 769.507542,
                    "min": 0,
                    "p50": 714.814254,
                    "p95": 769.507542,
                    "p99": 769.507542,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 576.87313,
                    "min": 0,
                    "p50": 521.6760929999999,
                    "p95": 576.87313,
                    "p99": 576.87313,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1043.664694,
                    "min": 0,
                    "p50": 1018.3354149999999,
                    "p95": 1043.664694,
                    "p99": 1043.664694,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1519.014933,
                    "min": 0,
                    "p50": 1497.689734,
                    "p95": 1519.014933,
                    "p99": 1519.014933,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4835.220453999999,
                    "min": 0,
                    "p50": 4770.1202029999995,
                    "p95": 4835.220453999999,
                    "p99": 4835.220453999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1967.0359389999999,
                    "min": 0,
                    "p50": 1945.772452,
                    "p95": 1967.0359389999999,
                    "p99": 1967.0359389999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 626.709265,
                    "min": 0,
                    "p50": 569.047909,
                    "p95": 626.709265,
                    "p99": 626.709265,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 231.27181199999998,
                    "min": 0,
                    "p50": 191.64043999999998,
                    "p95": 231.27181199999998,
                    "p99": 231.27181199999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2451.494071,
                    "min": 0,
                    "p50": 2429.227885,
                    "p95": 2451.494071,
                    "p99": 2451.494071,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 385.876055,
                    "min": 0,
                    "p50": 378.873874,
                    "p95": 385.876055,
                    "p99": 385.876055,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 467.975424,
                    "min": 0,
                    "p50": 430.286224,
                    "p95": 467.975424,
                    "p99": 467.975424,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 518.339868,
                    "min": 0,
                    "p50": 473.56676999999996,
                    "p95": 518.339868,
                    "p99": 518.339868,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 925.808418,
                    "min": 0,
                    "p50": 874.6506479999999,
                    "p95": 925.808418,
                    "p99": 925.808418,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 329.05857399999996,
                    "min": 0,
                    "p50": 288.607887,
                    "p95": 329.05857399999996,
                    "p99": 329.05857399999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 436.860733,
                    "min": 0,
                    "p50": 335.843445,
                    "p95": 436.860733,
                    "p99": 436.860733,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 807.0473499999999,
                    "min": 0,
                    "p50": 755.666207,
                    "p95": 807.0473499999999,
                    "p99": 807.0473499999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 634.713905,
                    "min": 0,
                    "p50": 622.1660489999999,
                    "p95": 634.713905,
                    "p99": 634.713905,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 288.551739,
                    "min": 0,
                    "p50": 239.885322,
                    "p95": 288.551739,
                    "p99": 288.551739,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 720.591005,
                    "min": 0,
                    "p50": 664.740453,
                    "p95": 720.591005,
                    "p99": 720.591005,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2103.7817489999998,
                    "min": 0,
                    "p50": 2042.6264529999999,
                    "p95": 2103.7817489999998,
                    "p99": 2103.7817489999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 895.224266,
                    "min": 0,
                    "p50": 849.30085,
                    "p95": 895.224266,
                    "p99": 895.224266,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 665.720329,
                    "min": 0,
                    "p50": 620.530084,
                    "p95": 665.720329,
                    "p99": 665.720329,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1505.520959,
                    "min": 0,
                    "p50": 1418.1326319999998,
                    "p95": 1505.520959,
                    "p99": 1505.520959,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 979.2099099999999,
                    "min": 0,
                    "p50": 965.453757,
                    "p95": 979.2099099999999,
                    "p99": 979.2099099999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4685.545268,
                    "min": 0,
                    "p50": 4631.797294,
                    "p95": 4685.545268,
                    "p99": 4685.545268,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1336.522089,
                    "min": 0,
                    "p50": 1302.6257269999999,
                    "p95": 1336.522089,
                    "p99": 1336.522089,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 783.98844,
                    "min": 0,
                    "p50": 738.170321,
                    "p95": 783.98844,
                    "p99": 783.98844,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1656.788022,
                    "min": 0,
                    "p50": 1560.1191629999998,
                    "p95": 1656.788022,
                    "p99": 1656.788022,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3537.090007,
                    "min": 0,
                    "p50": 3492.746918,
                    "p95": 3537.090007,
                    "p99": 3537.090007,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1849.980742,
                    "min": 0,
                    "p50": 1773.6002369999999,
                    "p95": 1849.980742,
                    "p99": 1849.980742,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2422.144335,
                    "min": 0,
                    "p50": 2323.679029,
                    "p95": 2422.144335,
                    "p99": 2422.144335,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 417.07003,
                    "min": 0,
                    "p50": 390.966598,
                    "p95": 417.07003,
                    "p99": 417.07003,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1718.5009759999998,
                    "min": 0,
                    "p50": 1643.2990379999999,
                    "p95": 1718.5009759999998,
                    "p99": 1718.5009759999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 509.31382099999996,
                    "min": 0,
                    "p50": 504.97837899999996,
                    "p95": 509.31382099999996,
                    "p99": 509.31382099999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1219.3092669999999,
                    "min": 0,
                    "p50": 1190.280784,
                    "p95": 1219.3092669999999,
                    "p99": 1219.3092669999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1123.543457,
                    "min": 0,
                    "p50": 1076.6559029999999,
                    "p95": 1123.543457,
                    "p99": 1123.543457,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1845.248235,
                    "min": 0,
                    "p50": 1774.110342,
                    "p95": 1845.248235,
                    "p99": 1845.248235,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 526.592659,
                    "min": 0,
                    "p50": 507.60909799999996,
                    "p95": 526.592659,
                    "p99": 526.592659,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1133.48459,
                    "min": 0,
                    "p50": 1084.842099,
                    "p95": 1133.48459,
                    "p99": 1133.48459,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1569.1111859999999,
                    "min": 0,
                    "p50": 1532.7888249999999,
                    "p95": 1569.1111859999999,
                    "p99": 1569.1111859999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1281.474243,
                    "min": 0,
                    "p50": 1192.202405,
                    "p95": 1281.474243,
                    "p99": 1281.474243,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1349.277363,
                    "min": 0,
                    "p50": 1309.746991,
                    "p95": 1349.277363,
                    "p99": 1349.277363,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2412.344557,
                    "min": 0,
                    "p50": 2344.891255,
                    "p95": 2412.344557,
                    "p99": 2412.344557,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3519.140848,
                    "min": 0,
                    "p50": 3477.3703499999997,
                    "p95": 3519.140848,
                    "p99": 3519.140848,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1437.808304,
                    "min": 0,
                    "p50": 1414.82713,
                    "p95": 1437.808304,
                    "p99": 1437.808304,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 692.280549,
                    "min": 0,
                    "p50": 626.5033129999999,
                    "p95": 692.280549,
                    "p99": 692.280549,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 399.677054,
                    "min": 0,
                    "p50": 392.451286,
                    "p95": 399.677054,
                    "p99": 399.677054,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 787.936254,
                    "min": 0,
                    "p50": 736.2968119999999,
                    "p95": 787.936254,
                    "p99": 787.936254,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2079.094264,
                    "min": 0,
                    "p50": 2063.0903319999998,
                    "p95": 2079.094264,
                    "p99": 2079.094264,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 951.127478,
                    "min": 0,
                    "p50": 856.708229,
                    "p95": 951.127478,
                    "p99": 951.127478,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1690.4765579999998,
                    "min": 0,
                    "p50": 1643.411048,
                    "p95": 1690.4765579999998,
                    "p99": 1690.4765579999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1021.223656,
                    "min": 0,
                    "p50": 976.006802,
                    "p95": 1021.223656,
                    "p99": 1021.223656,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10883.255844,
                    "min": 0,
                    "p50": 10807.87308,
                    "p95": 10883.255844,
                    "p99": 10883.255844,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1594.6102879999999,
                    "min": 0,
                    "p50": 1549.805917,
                    "p95": 1594.6102879999999,
                    "p99": 1594.6102879999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5458.401567,
                    "min": 0,
                    "p50": 5402.630199,
                    "p95": 5458.401567,
                    "p99": 5458.401567,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 832.944948,
                    "min": 0,
                    "p50": 805.372567,
                    "p95": 832.944948,
                    "p99": 832.944948,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 499.10488799999996,
                    "min": 0,
                    "p50": 483.04936899999996,
                    "p95": 499.10488799999996,
                    "p99": 499.10488799999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1371.657794,
                    "min": 0,
                    "p50": 1328.027652,
                    "p95": 1371.657794,
                    "p99": 1371.657794,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4408.440189,
                    "min": 0,
                    "p50": 4332.678608,
                    "p95": 4408.440189,
                    "p99": 4408.440189,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1734.75859,
                    "min": 0,
                    "p50": 1642.29188,
                    "p95": 1734.75859,
                    "p99": 1734.75859,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1477.924675,
                    "min": 0,
                    "p50": 1435.4911359999999,
                    "p95": 1477.924675,
                    "p99": 1477.924675,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1950.7298449999998,
                    "min": 0,
                    "p50": 1935.4078729999999,
                    "p95": 1950.7298449999998,
                    "p99": 1950.7298449999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 598.17484,
                    "min": 0,
                    "p50": 586.033773,
                    "p95": 598.17484,
                    "p99": 598.17484,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1264.466273,
                    "min": 0,
                    "p50": 1231.113283,
                    "p95": 1264.466273,
                    "p99": 1264.466273,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 371.487312,
                    "min": 0,
                    "p50": 366.929262,
                    "p95": 371.487312,
                    "p99": 371.487312,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 923.011488,
                    "min": 0,
                    "p50": 909.362134,
                    "p95": 923.011488,
                    "p99": 923.011488,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 735.3057769999999,
                    "min": 0,
                    "p50": 693.4682779999999,
                    "p95": 735.3057769999999,
                    "p99": 735.3057769999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1061.1641829999999,
                    "min": 0,
                    "p50": 1017.3658379999999,
                    "p95": 1061.1641829999999,
                    "p99": 1061.1641829999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1160.518351,
                    "min": 0,
                    "p50": 1115.755539,
                    "p95": 1160.518351,
                    "p99": 1160.518351,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3304.268176,
                    "min": 0,
                    "p50": 3271.4279389999997,
                    "p95": 3304.268176,
                    "p99": 3304.268176,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2260.538341,
                    "min": 0,
                    "p50": 2173.225953,
                    "p95": 2260.538341,
                    "p99": 2260.538341,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 334.462351,
                    "min": 0,
                    "p50": 325.074563,
                    "p95": 334.462351,
                    "p99": 334.462351,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1927.164575,
                    "min": 0,
                    "p50": 1892.391895,
                    "p95": 1927.164575,
                    "p99": 1927.164575,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1466.563275,
                    "min": 0,
                    "p50": 1450.125325,
                    "p95": 1466.563275,
                    "p99": 1466.563275,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1011.517437,
                    "min": 0,
                    "p50": 974.2186479999999,
                    "p95": 1011.517437,
                    "p99": 1011.517437,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 551.349302,
                    "min": 0,
                    "p50": 511.310009,
                    "p95": 551.349302,
                    "p99": 551.349302,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 4759.522895,
                    "min": 0,
                    "p50": 4665.990881,
                    "p95": 4759.522895,
                    "p99": 4759.522895,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2422.144551,
                    "min": 0,
                    "p50": 2372.8156989999998,
                    "p95": 2422.144551,
                    "p99": 2422.144551,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 667.97766,
                    "min": 0,
                    "p50": 601.2707379999999,
                    "p95": 667.97766,
                    "p99": 667.97766,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 741.577271,
                    "min": 0,
                    "p50": 682.884969,
                    "p95": 741.577271,
                    "p99": 741.577271,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 430.152718,
                    "min": 0,
                    "p50": 413.937981,
                    "p95": 430.152718,
                    "p99": 430.152718,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 555.07508,
                    "min": 0,
                    "p50": 464.37064999999996,
                    "p95": 555.07508,
                    "p99": 555.07508,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 256.463614,
                    "min": 0,
                    "p50": 235.052088,
                    "p95": 256.463614,
                    "p99": 256.463614,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 887.058815,
                    "min": 0,
                    "p50": 854.8342309999999,
                    "p95": 887.058815,
                    "p99": 887.058815,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 588.1762679999999,
                    "min": 0,
                    "p50": 557.566901,
                    "p95": 588.1762679999999,
                    "p99": 588.1762679999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 794.883644,
                    "min": 0,
                    "p50": 739.081502,
                    "p95": 794.883644,
                    "p99": 794.883644,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 375.599961,
                    "min": 0,
                    "p50": 368.482493,
                    "p95": 375.599961,
                    "p99": 375.599961,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 694.7051759999999,
                    "min": 0,
                    "p50": 647.06169,
                    "p95": 694.7051759999999,
                    "p99": 694.7051759999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 383.309221,
                    "min": 0,
                    "p50": 286.954385,
                    "p95": 383.309221,
                    "p99": 383.309221,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 246.25647099999998,
                    "min": 0,
                    "p50": 189.98891,
                    "p95": 246.25647099999998,
                    "p99": 246.25647099999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1966.486856,
                    "min": 0,
                    "p50": 1908.801158,
                    "p95": 1966.486856,
                    "p99": 1966.486856,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 946.254414,
                    "min": 0,
                    "p50": 914.512339,
                    "p95": 946.254414,
                    "p99": 946.254414,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2229.318743,
                    "min": 0,
                    "p50": 2189.8470079999997,
                    "p95": 2229.318743,
                    "p99": 2229.318743,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 827.714667,
                    "min": 0,
                    "p50": 800.420182,
                    "p95": 827.714667,
                    "p99": 827.714667,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 751.855204,
                    "min": 0,
                    "p50": 697.393292,
                    "p95": 751.855204,
                    "p99": 751.855204,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 498.23150799999996,
                    "min": 0,
                    "p50": 482.23231999999996,
                    "p95": 498.23150799999996,
                    "p99": 498.23150799999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1592.056331,
                    "min": 0,
                    "p50": 1551.919127,
                    "p95": 1592.056331,
                    "p99": 1592.056331,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1268.295927,
                    "min": 0,
                    "p50": 1215.371159,
                    "p95": 1268.295927,
                    "p99": 1268.295927,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3311.159169,
                    "min": 0,
                    "p50": 3257.018483,
                    "p95": 3311.159169,
                    "p99": 3311.159169,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1060.398273,
                    "min": 0,
                    "p50": 1013.3434169999999,
                    "p95": 1060.398273,
                    "p99": 1060.398273,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 10787.285237,
                    "min": 0,
                    "p50": 10743.546126,
                    "p95": 10787.285237,
                    "p99": 10787.285237,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 614.0516,
                    "min": 0,
                    "p50": 585.033298,
                    "p95": 614.0516,
                    "p99": 614.0516,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1479.497355,
                    "min": 0,
                    "p50": 1437.8331329999999,
                    "p95": 1479.497355,
                    "p99": 1479.497355,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1379.240282,
                    "min": 0,
                    "p50": 1336.892764,
                    "p95": 1379.240282,
                    "p99": 1379.240282,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 4383.727393,
                    "min": 0,
                    "p50": 4336.011235,
                    "p95": 4383.727393,
                    "p99": 4383.727393,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 381.695624,
                    "min": 0,
                    "p50": 376.099208,
                    "p95": 381.695624,
                    "p99": 381.695624,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1695.6106,
                    "min": 0,
                    "p50": 1655.117084,
                    "p95": 1695.6106,
                    "p99": 1695.6106,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1163.29313,
                    "min": 0,
                    "p50": 1119.507918,
                    "p95": 1163.29313,
                    "p99": 1163.29313,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 5448.758788,
                    "min": 0,
                    "p50": 5364.969415,
                    "p95": 5448.758788,
                    "p99": 5448.758788,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 709.084941,
                    "min": 0,
                    "p50": 674.6015279999999,
                    "p95": 709.084941,
                    "p99": 709.084941,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 599.511488,
                    "min": 0,
                    "p50": 578.620892,
                    "p95": 599.511488,
                    "p99": 599.511488,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 871.593723,
                    "min": 0,
                    "p50": 855.0149389999999,
                    "p95": 871.593723,
                    "p99": 871.593723,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 316.82689,
                    "min": 0,
                    "p50": 311.74650399999996,
                    "p95": 316.82689,
                    "p99": 316.82689,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 406.527678,
                    "min": 0,
                    "p50": 398.76660699999996,
                    "p95": 406.527678,
                    "p99": 406.527678,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 770.6669039999999,
                    "min": 0,
                    "p50": 763.9200549999999,
                    "p95": 770.6669039999999,
                    "p99": 770.6669039999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 500.233661,
                    "min": 0,
                    "p50": 488.08365699999996,
                    "p95": 500.233661,
                    "p99": 500.233661,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 933.340112,
                    "min": 0,
                    "p50": 884.496983,
                    "p95": 933.340112,
                    "p99": 933.340112,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 340.727278,
                    "min": 0,
                    "p50": 303.431227,
                    "p95": 340.727278,
                    "p99": 340.727278,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 738.620853,
                    "min": 0,
                    "p50": 717.453496,
                    "p95": 738.620853,
                    "p99": 738.620853,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 563.897684,
                    "min": 0,
                    "p50": 556.1039129999999,
                    "p95": 563.897684,
                    "p99": 563.897684,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 674.0422219999999,
                    "min": 0,
                    "p50": 642.229621,
                    "p95": 674.0422219999999,
                    "p99": 674.0422219999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 843.6981159999999,
                    "min": 0,
                    "p50": 802.006235,
                    "p95": 843.6981159999999,
                    "p99": 843.6981159999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 433.59063699999996,
                    "min": 0,
                    "p50": 393.277855,
                    "p95": 433.59063699999996,
                    "p99": 433.59063699999996,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 479.252957,
                    "min": 0,
                    "p50": 473.324433,
                    "p95": 479.252957,
                    "p99": 479.252957,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 263.277451,
                    "min": 0,
                    "p50": 180.536848,
                    "p95": 263.277451,
                    "p99": 263.277451,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 382.981539,
                    "min": 0,
                    "p50": 288.33935299999996,
                    "p95": 382.981539,
                    "p99": 382.981539,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 387.51622499999996,
                    "min": 0,
                    "p50": 373.28418999999997,
                    "p95": 387.51622499999996,
                    "p99": 387.51622499999996,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 293.885586,
                    "min": 0,
                    "p50": 284.697203,
                    "p95": 293.885586,
                    "p99": 293.885586,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 501.445476,
                    "min": 0,
                    "p50": 477.12161999999995,
                    "p95": 501.445476,
                    "p99": 501.445476,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 200.56832899999998,
                    "min": 0,
                    "p50": 151.46031299999999,
                    "p95": 200.56832899999998,
                    "p99": 200.56832899999998,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 419.293679,
                    "min": 0,
                    "p50": 406.651003,
                    "p95": 419.293679,
                    "p99": 419.293679,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 326.064344,
                    "min": 0,
                    "p50": 301.310243,
                    "p95": 326.064344,
                    "p99": 326.064344,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 254.11356099999998,
                    "min": 0,
                    "p50": 208.53069,
                    "p95": 254.11356099999998,
                    "p99": 254.11356099999998,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 552.8999709999999,
                    "min": 0,
                    "p50": 445.57377499999996,
                    "p95": 552.8999709999999,
                    "p99": 552.8999709999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 679.0207869999999,
                    "min": 0,
                    "p50": 594.309116,
                    "p95": 679.0207869999999,
                    "p99": 679.0207869999999,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 782.936297,
                    "min": 0,
                    "p50": 771.2481319999999,
                    "p95": 782.936297,
                    "p99": 782.936297,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 270.521915,
                    "min": 0,
                    "p50": 232.05934399999998,
                    "p95": 270.521915,
                    "p99": 270.521915,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 426.260003,
                    "min": 0,
                    "p50": 407.51703499999996,
                    "p95": 426.260003,
                    "p99": 426.260003,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 693.405268,
                    "min": 0,
                    "p50": 680.854128,
                    "p95": 693.405268,
                    "p99": 693.405268,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 410.40441,
                    "min": 0,
                    "p50": 317.933518,
                    "p95": 410.40441,
                    "p99": 410.40441,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 600.635181,
                    "min": 0,
                    "p50": 499.660124,
                    "p95": 600.635181,
                    "p99": 600.635181,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 371.20894999999996,
                    "min": 0,
                    "p50": 324.52975799999996,
                    "p95": 371.20894999999996,
                    "p99": 371.20894999999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 231.379305,
                    "min": 0,
                    "p50": 191.338246,
                    "p95": 231.379305,
                    "p99": 231.379305,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 152.594002,
                    "min": 0,
                    "p50": 129.116302,
                    "p95": 152.594002,
                    "p99": 152.594002,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 346.367446,
                    "min": 0,
                    "p50": 340.50128,
                    "p95": 346.367446,
                    "p99": 346.367446,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 315.421131,
                    "min": 0,
                    "p50": 272.70088,
                    "p95": 315.421131,
                    "p99": 315.421131,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 270.719944,
                    "min": 0,
                    "p50": 205.956755,
                    "p95": 270.719944,
                    "p99": 270.719944,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 328.398073,
                    "min": 0,
                    "p50": 310.11922699999997,
                    "p95": 328.398073,
                    "p99": 328.398073,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 198.054078,
                    "min": 0,
                    "p50": 149.154238,
                    "p95": 198.054078,
                    "p99": 198.054078,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.567402,
                    "min": 0,
                    "p50": 101.26083399999999,
                    "p95": 122.567402,
                    "p99": 122.567402,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 440.45426899999995,
                    "min": 0,
                    "p50": 405.06917899999996,
                    "p95": 440.45426899999995,
                    "p99": 440.45426899999995,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 391.670107,
                    "min": 0,
                    "p50": 365.733948,
                    "p95": 391.670107,
                    "p99": 391.670107,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 521.667116,
                    "min": 0,
                    "p50": 480.27846,
                    "p95": 521.667116,
                    "p99": 521.667116,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 241.72232699999998,
                    "min": 0,
                    "p50": 225.08451,
                    "p95": 241.72232699999998,
                    "p99": 241.72232699999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 322.524075,
                    "min": 0,
                    "p50": 304.09452999999996,
                    "p95": 322.524075,
                    "p99": 322.524075,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 245.25747099999998,
                    "min": 0,
                    "p50": 198.785282,
                    "p95": 245.25747099999998,
                    "p99": 245.25747099999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 342.384128,
                    "min": 0,
                    "p50": 302.082874,
                    "p95": 342.384128,
                    "p99": 342.384128,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 177.027705,
                    "min": 0,
                    "p50": 144.27413099999998,
                    "p95": 177.027705,
                    "p99": 177.027705,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 373.208457,
                    "min": 0,
                    "p50": 367.393013,
                    "p95": 373.208457,
                    "p99": 373.208457,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 278.01806799999997,
                    "min": 0,
                    "p50": 238.84143899999998,
                    "p95": 278.01806799999997,
                    "p99": 278.01806799999997,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 170.43838599999998,
                    "min": 0,
                    "p50": 126.126266,
                    "p95": 170.43838599999998,
                    "p99": 170.43838599999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 188.096129,
                    "min": 0,
                    "p50": 163.08587,
                    "p95": 188.096129,
                    "p99": 188.096129,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 361.27187499999997,
                    "min": 0,
                    "p50": 299.773376,
                    "p95": 361.27187499999997,
                    "p99": 361.27187499999997,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 373.09592399999997,
                    "min": 0,
                    "p50": 319.194249,
                    "p95": 373.09592399999997,
                    "p99": 373.09592399999997,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 523.201228,
                    "min": 0,
                    "p50": 451.050363,
                    "p95": 523.201228,
                    "p99": 523.201228,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 233.27183699999998,
                    "min": 0,
                    "p50": 189.345594,
                    "p95": 233.27183699999998,
                    "p99": 233.27183699999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 442.926784,
                    "min": 0,
                    "p50": 381.521465,
                    "p95": 442.926784,
                    "p99": 442.926784,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 237.45007099999998,
                    "min": 0,
                    "p50": 216.698048,
                    "p95": 237.45007099999998,
                    "p99": 237.45007099999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 300.226716,
                    "min": 0,
                    "p50": 258.38109299999996,
                    "p95": 300.226716,
                    "p99": 300.226716,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 268.072405,
                    "min": 0,
                    "p50": 219.029642,
                    "p95": 268.072405,
                    "p99": 268.072405,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 155.12478199999998,
                    "min": 0,
                    "p50": 99.99356,
                    "p95": 155.12478199999998,
                    "p99": 155.12478199999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 184.629325,
                    "min": 0,
                    "p50": 150.19261799999998,
                    "p95": 184.629325,
                    "p99": 184.629325,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 249.667645,
                    "min": 0,
                    "p50": 224.175379,
                    "p95": 249.667645,
                    "p99": 249.667645,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 233.322862,
                    "min": 0,
                    "p50": 186.651221,
                    "p95": 233.322862,
                    "p99": 233.322862,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 455.06274399999995,
                    "min": 0,
                    "p50": 393.82350399999996,
                    "p95": 455.06274399999995,
                    "p99": 455.06274399999995,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 437.360388,
                    "min": 0,
                    "p50": 407.21148,
                    "p95": 437.360388,
                    "p99": 437.360388,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 127.230926,
                    "min": 0,
                    "p50": 108.899232,
                    "p95": 127.230926,
                    "p99": 127.230926,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 305.205227,
                    "min": 0,
                    "p50": 263.519058,
                    "p95": 305.205227,
                    "p99": 305.205227,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 290.749716,
                    "min": 0,
                    "p50": 245.351352,
                    "p95": 290.749716,
                    "p99": 290.749716,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 154.66818,
                    "min": 0,
                    "p50": 128.589297,
                    "p95": 154.66818,
                    "p99": 154.66818,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 331.270776,
                    "min": 0,
                    "p50": 308.219589,
                    "p95": 331.270776,
                    "p99": 331.270776,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 301.60797199999996,
                    "min": 0,
                    "p50": 236.862622,
                    "p95": 301.60797199999996,
                    "p99": 301.60797199999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 511.168411,
                    "min": 0,
                    "p50": 479.14910499999996,
                    "p95": 511.168411,
                    "p99": 511.168411,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 372.750438,
                    "min": 0,
                    "p50": 330.247644,
                    "p95": 372.750438,
                    "p99": 372.750438,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 176.075413,
                    "min": 0,
                    "p50": 166.72583699999998,
                    "p95": 176.075413,
                    "p99": 176.075413,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 347.34975,
                    "min": 0,
                    "p50": 313.106704,
                    "p95": 347.34975,
                    "p99": 347.34975,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 545.089568,
                    "min": 0,
                    "p50": 486.088213,
                    "p95": 545.089568,
                    "p99": 545.089568,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.747848,
                    "min": 0,
                    "p50": 128.542138,
                    "p95": 162.747848,
                    "p99": 162.747848,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 267.960066,
                    "min": 0,
                    "p50": 232.775103,
                    "p95": 267.960066,
                    "p99": 267.960066,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 294.044184,
                    "min": 0,
                    "p50": 248.17515999999998,
                    "p95": 294.044184,
                    "p99": 294.044184,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 306.647069,
                    "min": 0,
                    "p50": 270.168776,
                    "p95": 306.647069,
                    "p99": 306.647069,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 445.472103,
                    "min": 0,
                    "p50": 433.777338,
                    "p95": 445.472103,
                    "p99": 445.472103,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 371.155279,
                    "min": 0,
                    "p50": 313.858685,
                    "p95": 371.155279,
                    "p99": 371.155279,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 380.725532,
                    "min": 0,
                    "p50": 308.385757,
                    "p95": 380.725532,
                    "p99": 380.725532,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 126.51634299999999,
                    "min": 0,
                    "p50": 114.68301299999999,
                    "p95": 126.51634299999999,
                    "p99": 126.51634299999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 256.534111,
                    "min": 0,
                    "p50": 179.946977,
                    "p95": 256.534111,
                    "p99": 256.534111,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 182.012575,
                    "min": 0,
                    "p50": 150.135919,
                    "p95": 182.012575,
                    "p99": 182.012575,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 389.075634,
                    "min": 0,
                    "p50": 381.25955999999996,
                    "p95": 389.075634,
                    "p99": 389.075634,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 253.276172,
                    "min": 0,
                    "p50": 211.858937,
                    "p95": 253.276172,
                    "p99": 253.276172,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 377.889495,
                    "min": 0,
                    "p50": 336.073383,
                    "p95": 377.889495,
                    "p99": 377.889495,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 227.12293699999998,
                    "min": 0,
                    "p50": 191.191315,
                    "p95": 227.12293699999998,
                    "p99": 227.12293699999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 232.93078899999998,
                    "min": 0,
                    "p50": 210.89075599999998,
                    "p95": 232.93078899999998,
                    "p99": 232.93078899999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.766215,
                    "min": 0,
                    "p50": 76.023063,
                    "p95": 81.766215,
                    "p99": 81.766215,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1061.943217,
                    "min": 0,
                    "p50": 1019.137757,
                    "p95": 1061.943217,
                    "p99": 1061.943217,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 286.20312,
                    "min": 0,
                    "p50": 240.93098899999998,
                    "p95": 286.20312,
                    "p99": 286.20312,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 367.756785,
                    "min": 0,
                    "p50": 328.054743,
                    "p95": 367.756785,
                    "p99": 367.756785,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 144.044588,
                    "min": 0,
                    "p50": 142.24184,
                    "p95": 144.044588,
                    "p99": 144.044588,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 537.66644,
                    "min": 0,
                    "p50": 419.884214,
                    "p95": 537.66644,
                    "p99": 537.66644,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 119.007542,
                    "min": 0,
                    "p50": 99.26651,
                    "p95": 119.007542,
                    "p99": 119.007542,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 133.263187,
                    "min": 0,
                    "p50": 123.70937199999999,
                    "p95": 133.263187,
                    "p99": 133.263187,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 66.976784,
                    "min": 0,
                    "p50": 58.290254999999995,
                    "p95": 66.976784,
                    "p99": 66.976784,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 154.192698,
                    "min": 0,
                    "p50": 133.955137,
                    "p95": 154.192698,
                    "p99": 154.192698,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 131.58246699999998,
                    "min": 0,
                    "p50": 115.65155499999999,
                    "p95": 131.58246699999998,
                    "p99": 131.58246699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 170.259524,
                    "min": 0,
                    "p50": 152.74523299999998,
                    "p95": 170.259524,
                    "p99": 170.259524,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 198.736946,
                    "min": 0,
                    "p50": 171.00749199999998,
                    "p95": 198.736946,
                    "p99": 198.736946,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 170.452453,
                    "min": 0,
                    "p50": 162.095606,
                    "p95": 170.452453,
                    "p99": 170.452453,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 550.2194539999999,
                    "min": 0,
                    "p50": 507.321804,
                    "p95": 550.2194539999999,
                    "p99": 550.2194539999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.54993499999999,
                    "min": 0,
                    "p50": 90.092488,
                    "p95": 96.54993499999999,
                    "p99": 96.54993499999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 189.85366,
                    "min": 0,
                    "p50": 182.447575,
                    "p95": 189.85366,
                    "p99": 189.85366,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 232.39539399999998,
                    "min": 0,
                    "p50": 188.728031,
                    "p95": 232.39539399999998,
                    "p99": 232.39539399999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 226.59775399999998,
                    "min": 0,
                    "p50": 175.69163899999998,
                    "p95": 226.59775399999998,
                    "p99": 226.59775399999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1091.591881,
                    "min": 0,
                    "p50": 1060.096937,
                    "p95": 1091.591881,
                    "p99": 1091.591881,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 236.817524,
                    "min": 0,
                    "p50": 186.360748,
                    "p95": 236.817524,
                    "p99": 236.817524,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 165.630713,
                    "min": 0,
                    "p50": 139.665186,
                    "p95": 165.630713,
                    "p99": 165.630713,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 266.208187,
                    "min": 0,
                    "p50": 220.84859999999998,
                    "p95": 266.208187,
                    "p99": 266.208187,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 271.230777,
                    "min": 0,
                    "p50": 246.93807999999999,
                    "p95": 271.230777,
                    "p99": 271.230777,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 101.59434499999999,
                    "min": 0,
                    "p50": 93.04924199999999,
                    "p95": 101.59434499999999,
                    "p99": 101.59434499999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 166.608385,
                    "min": 0,
                    "p50": 147.35523899999998,
                    "p95": 166.608385,
                    "p99": 166.608385,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 143.884714,
                    "min": 0,
                    "p50": 118.36066,
                    "p95": 143.884714,
                    "p99": 143.884714,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 243.877816,
                    "min": 0,
                    "p50": 198.18823899999998,
                    "p95": 243.877816,
                    "p99": 243.877816,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 175.581616,
                    "min": 0,
                    "p50": 166.863665,
                    "p95": 175.581616,
                    "p99": 175.581616,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 477.541496,
                    "min": 0,
                    "p50": 443.37264899999997,
                    "p95": 477.541496,
                    "p99": 477.541496,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 391.789421,
                    "min": 0,
                    "p50": 354.75577,
                    "p95": 391.789421,
                    "p99": 391.789421,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 182.64565,
                    "min": 0,
                    "p50": 160.925257,
                    "p95": 182.64565,
                    "p99": 182.64565,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 69.203952,
                    "min": 0,
                    "p50": 61.255983,
                    "p95": 69.203952,
                    "p99": 69.203952,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 154.83253,
                    "min": 0,
                    "p50": 132.077663,
                    "p95": 154.83253,
                    "p99": 154.83253,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 81.462862,
                    "min": 0,
                    "p50": 79.980155,
                    "p95": 81.462862,
                    "p99": 81.462862,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 125.63485299999999,
                    "min": 0,
                    "p50": 102.196029,
                    "p95": 125.63485299999999,
                    "p99": 125.63485299999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 590.794526,
                    "min": 0,
                    "p50": 560.3621009999999,
                    "p95": 590.794526,
                    "p99": 590.794526,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 136.216851,
                    "min": 0,
                    "p50": 128.149831,
                    "p95": 136.216851,
                    "p99": 136.216851,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 238.443312,
                    "min": 0,
                    "p50": 203.889051,
                    "p95": 238.443312,
                    "p99": 238.443312,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 213.573409,
                    "min": 0,
                    "p50": 170.629868,
                    "p95": 213.573409,
                    "p99": 213.573409,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 123.42696,
                    "min": 0,
                    "p50": 117.77282699999999,
                    "p95": 123.42696,
                    "p99": 123.42696,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 350.22610499999996,
                    "min": 0,
                    "p50": 272.008945,
                    "p95": 350.22610499999996,
                    "p99": 350.22610499999996,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 95.22795099999999,
                    "min": 0,
                    "p50": 89.221639,
                    "p95": 95.22795099999999,
                    "p99": 95.22795099999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 160.194561,
                    "min": 0,
                    "p50": 138.63834699999998,
                    "p95": 160.194561,
                    "p99": 160.194561,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 213.502793,
                    "min": 0,
                    "p50": 160.66916999999998,
                    "p95": 213.502793,
                    "p99": 213.502793,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 242.156761,
                    "min": 0,
                    "p50": 215.651077,
                    "p95": 242.156761,
                    "p99": 242.156761,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 420.14262299999996,
                    "min": 0,
                    "p50": 380.08594,
                    "p95": 420.14262299999996,
                    "p99": 420.14262299999996,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 225.128366,
                    "min": 0,
                    "p50": 184.34301,
                    "p95": 225.128366,
                    "p99": 225.128366,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 192.19419399999998,
                    "min": 0,
                    "p50": 150.38609399999999,
                    "p95": 192.19419399999998,
                    "p99": 192.19419399999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 119.074395,
                    "min": 0,
                    "p50": 98.630428,
                    "p95": 119.074395,
                    "p99": 119.074395,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 227.142159,
                    "min": 0,
                    "p50": 206.43183,
                    "p95": 227.142159,
                    "p99": 227.142159,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 289.777084,
                    "min": 0,
                    "p50": 255.948498,
                    "p95": 289.777084,
                    "p99": 289.777084,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 541.34344,
                    "min": 0,
                    "p50": 491.215041,
                    "p95": 541.34344,
                    "p99": 541.34344,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 635.276801,
                    "min": 0,
                    "p50": 608.074884,
                    "p95": 635.276801,
                    "p99": 635.276801,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1201.181961,
                    "min": 0,
                    "p50": 1183.49616,
                    "p95": 1201.181961,
                    "p99": 1201.181961,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 77.876449,
                    "min": 0,
                    "p50": 69.224942,
                    "p95": 77.876449,
                    "p99": 77.876449,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 605.965249,
                    "min": 0,
                    "p50": 549.295771,
                    "p95": 605.965249,
                    "p99": 605.965249,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 251.92658999999998,
                    "min": 0,
                    "p50": 178.439594,
                    "p95": 251.92658999999998,
                    "p99": 251.92658999999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 182.510154,
                    "min": 0,
                    "p50": 149.579441,
                    "p95": 182.510154,
                    "p99": 182.510154,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 234.608882,
                    "min": 0,
                    "p50": 199.806504,
                    "p95": 234.608882,
                    "p99": 234.608882,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 157.372086,
                    "min": 0,
                    "p50": 120.89179999999999,
                    "p95": 157.372086,
                    "p99": 157.372086,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 104.872035,
                    "min": 0,
                    "p50": 93.728422,
                    "p95": 104.872035,
                    "p99": 104.872035,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.592656,
                    "min": 0,
                    "p50": 62.206916,
                    "p95": 62.592656,
                    "p99": 62.592656,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.964168,
                    "min": 0,
                    "p50": 159.256719,
                    "p95": 171.964168,
                    "p99": 171.964168,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 268.777314,
                    "min": 0,
                    "p50": 222.72463,
                    "p95": 268.777314,
                    "p99": 268.777314,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 122.38972,
                    "min": 0,
                    "p50": 109.80086899999999,
                    "p95": 122.38972,
                    "p99": 122.38972,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 134.809736,
                    "min": 0,
                    "p50": 129.890063,
                    "p95": 134.809736,
                    "p99": 134.809736,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 226.198883,
                    "min": 0,
                    "p50": 189.83203899999998,
                    "p95": 226.198883,
                    "p99": 226.198883,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 510.72599699999995,
                    "min": 0,
                    "p50": 470.306691,
                    "p95": 510.72599699999995,
                    "p99": 510.72599699999995,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1152.995688,
                    "min": 0,
                    "p50": 1079.830023,
                    "p95": 1152.995688,
                    "p99": 1152.995688,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 160.710578,
                    "min": 0,
                    "p50": 139.661713,
                    "p95": 160.710578,
                    "p99": 160.710578,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 272.534159,
                    "min": 0,
                    "p50": 246.546732,
                    "p95": 272.534159,
                    "p99": 272.534159,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 205.68855299999998,
                    "min": 0,
                    "p50": 169.76764599999998,
                    "p95": 205.68855299999998,
                    "p99": 205.68855299999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.28327,
                    "min": 0,
                    "p50": 81.508046,
                    "p95": 86.28327,
                    "p99": 86.28327,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 393.687459,
                    "min": 0,
                    "p50": 341.924626,
                    "p95": 393.687459,
                    "p99": 393.687459,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 167.387404,
                    "min": 0,
                    "p50": 140.411914,
                    "p95": 167.387404,
                    "p99": 167.387404,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 125.62874099999999,
                    "min": 0,
                    "p50": 111.350436,
                    "p95": 125.62874099999999,
                    "p99": 125.62874099999999,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 207.347546,
                    "min": 0,
                    "p50": 159.619777,
                    "p95": 207.347546,
                    "p99": 207.347546,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 574.25686,
                    "min": 0,
                    "p50": 554.898418,
                    "p95": 574.25686,
                    "p99": 574.25686,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 411.64433299999996,
                    "min": 0,
                    "p50": 383.736893,
                    "p95": 411.64433299999996,
                    "p99": 411.64433299999996,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 456.634274,
                    "min": 0,
                    "p50": 383.988317,
                    "p95": 456.634274,
                    "p99": 456.634274,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 491.718533,
                    "min": 0,
                    "p50": 476.23821,
                    "p95": 491.718533,
                    "p99": 491.718533,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 293.378823,
                    "min": 0,
                    "p50": 248.45949299999998,
                    "p95": 293.378823,
                    "p99": 293.378823,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 238.04224299999998,
                    "min": 0,
                    "p50": 187.404747,
                    "p95": 238.04224299999998,
                    "p99": 238.04224299999998,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 272.81411399999996,
                    "min": 0,
                    "p50": 234.15666,
                    "p95": 272.81411399999996,
                    "p99": 272.81411399999996,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 255.518261,
                    "min": 0,
                    "p50": 204.537825,
                    "p95": 255.518261,
                    "p99": 255.518261,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 296.168228,
                    "min": 0,
                    "p50": 275.297889,
                    "p95": 296.168228,
                    "p99": 296.168228,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 340.584988,
                    "min": 0,
                    "p50": 290.907269,
                    "p95": 340.584988,
                    "p99": 340.584988,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 410.65409999999997,
                    "min": 0,
                    "p50": 398.36330999999996,
                    "p95": 410.65409999999997,
                    "p99": 410.65409999999997,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 329.656179,
                    "min": 0,
                    "p50": 311.39437599999997,
                    "p95": 329.656179,
                    "p99": 329.656179,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 346.512043,
                    "min": 0,
                    "p50": 328.164652,
                    "p95": 346.512043,
                    "p99": 346.512043,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 426.53634,
                    "min": 0,
                    "p50": 365.849667,
                    "p95": 426.53634,
                    "p99": 426.53634,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 558.365006,
                    "min": 0,
                    "p50": 402.970372,
                    "p95": 558.365006,
                    "p99": 558.365006,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 161.437533,
                    "min": 0,
                    "p50": 139.697861,
                    "p95": 161.437533,
                    "p99": 161.437533,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 174.410878,
                    "min": 0,
                    "p50": 161.24164299999998,
                    "p95": 174.410878,
                    "p99": 174.410878,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 238.74265699999998,
                    "min": 0,
                    "p50": 208.445605,
                    "p95": 238.74265699999998,
                    "p99": 238.74265699999998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 228.01956199999998,
                    "min": 0,
                    "p50": 184.40201199999998,
                    "p95": 228.01956199999998,
                    "p99": 228.01956199999998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 330.78269,
                    "min": 0,
                    "p50": 300.528657,
                    "p95": 330.78269,
                    "p99": 330.78269,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.89729699999998,
                    "min": 0,
                    "p50": 118.67378099999999,
                    "p95": 144.89729699999998,
                    "p99": 144.89729699999998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 249.966445,
                    "min": 0,
                    "p50": 233.266923,
                    "p95": 249.966445,
                    "p99": 249.966445,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 527.795562,
                    "min": 0,
                    "p50": 482.620816,
                    "p95": 527.795562,
                    "p99": 527.795562,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 595.575337,
                    "min": 0,
                    "p50": 524.509433,
                    "p95": 595.575337,
                    "p99": 595.575337,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 402.602038,
                    "min": 0,
                    "p50": 387.193296,
                    "p95": 402.602038,
                    "p99": 402.602038,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 313.892073,
                    "min": 0,
                    "p50": 287.32656499999996,
                    "p95": 313.892073,
                    "p99": 313.892073,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 367.727811,
                    "min": 0,
                    "p50": 353.985838,
                    "p95": 367.727811,
                    "p99": 367.727811,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 425.87222099999997,
                    "min": 0,
                    "p50": 401.743093,
                    "p95": 425.87222099999997,
                    "p99": 425.87222099999997,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 406.499706,
                    "min": 0,
                    "p50": 374.95919,
                    "p95": 406.499706,
                    "p99": 406.499706,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 441.886311,
                    "min": 0,
                    "p50": 417.36060699999996,
                    "p95": 441.886311,
                    "p99": 441.886311,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 584.863342,
                    "min": 0,
                    "p50": 491.392544,
                    "p95": 584.863342,
                    "p99": 584.863342,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 357.569213,
                    "min": 0,
                    "p50": 336.748045,
                    "p95": 357.569213,
                    "p99": 357.569213,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 418.487941,
                    "min": 0,
                    "p50": 319.191757,
                    "p95": 418.487941,
                    "p99": 418.487941,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 149.560831,
                    "min": 0,
                    "p50": 116.835022,
                    "p95": 149.560831,
                    "p99": 149.560831,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 615.977236,
                    "min": 0,
                    "p50": 542.079221,
                    "p95": 615.977236,
                    "p99": 615.977236,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 307.786222,
                    "min": 0,
                    "p50": 273.530505,
                    "p95": 307.786222,
                    "p99": 307.786222,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 299.977369,
                    "min": 0,
                    "p50": 269.50955799999997,
                    "p95": 299.977369,
                    "p99": 299.977369,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 241.576069,
                    "min": 0,
                    "p50": 217.5856,
                    "p95": 241.576069,
                    "p99": 241.576069,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 283.804248,
                    "min": 0,
                    "p50": 253.11350499999998,
                    "p95": 283.804248,
                    "p99": 283.804248,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 221.117055,
                    "min": 0,
                    "p50": 200.013395,
                    "p95": 221.117055,
                    "p99": 221.117055,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 170.57690599999998,
                    "min": 0,
                    "p50": 140.51130799999999,
                    "p95": 170.57690599999998,
                    "p99": 170.57690599999998,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 208.16494,
                    "min": 0,
                    "p50": 157.633874,
                    "p95": 208.16494,
                    "p99": 208.16494,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 416.778906,
                    "min": 0,
                    "p50": 358.83912699999996,
                    "p95": 416.778906,
                    "p99": 416.778906,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 445.804939,
                    "min": 0,
                    "p50": 377.78763499999997,
                    "p95": 445.804939,
                    "p99": 445.804939,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 364.04725299999996,
                    "min": 0,
                    "p50": 343.833754,
                    "p95": 364.04725299999996,
                    "p99": 364.04725299999996,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 485.359069,
                    "min": 0,
                    "p50": 481.374605,
                    "p95": 485.359069,
                    "p99": 485.359069,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.888198,
                    "min": 0,
                    "p50": 136.133029,
                    "p95": 162.888198,
                    "p99": 162.888198,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 328.48055999999997,
                    "min": 0,
                    "p50": 293.155039,
                    "p95": 328.48055999999997,
                    "p99": 328.48055999999997,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 541.061255,
                    "min": 0,
                    "p50": 514.5516759999999,
                    "p95": 541.061255,
                    "p99": 541.061255,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 201.272326,
                    "min": 0,
                    "p50": 181.709892,
                    "p95": 201.272326,
                    "p99": 201.272326,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 237.975538,
                    "min": 0,
                    "p50": 222.712457,
                    "p95": 237.975538,
                    "p99": 237.975538,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 230.657116,
                    "min": 0,
                    "p50": 204.187532,
                    "p95": 230.657116,
                    "p99": 230.657116,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 193.056941,
                    "min": 0,
                    "p50": 158.330635,
                    "p95": 193.056941,
                    "p99": 193.056941,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 289.839393,
                    "min": 0,
                    "p50": 281.769906,
                    "p95": 289.839393,
                    "p99": 289.839393,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 274.251512,
                    "min": 0,
                    "p50": 268.238381,
                    "p95": 274.251512,
                    "p99": 274.251512,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 135.150644,
                    "min": 0,
                    "p50": 116.31302,
                    "p95": 135.150644,
                    "p99": 135.150644,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 385.854624,
                    "min": 0,
                    "p50": 376.564961,
                    "p95": 385.854624,
                    "p99": 385.854624,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1904.8794389999998,
                    "min": 0,
                    "p50": 1857.9566149999998,
                    "p95": 1904.8794389999998,
                    "p99": 1904.8794389999998,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1172.778353,
                    "min": 0,
                    "p50": 1130.701722,
                    "p95": 1172.778353,
                    "p99": 1172.778353,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1433.32017,
                    "min": 0,
                    "p50": 1382.0434129999999,
                    "p95": 1433.32017,
                    "p99": 1433.32017,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 966.377314,
                    "min": 0,
                    "p50": 903.085696,
                    "p95": 966.377314,
                    "p99": 966.377314,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 822.983889,
                    "min": 0,
                    "p50": 773.559075,
                    "p95": 822.983889,
                    "p99": 822.983889,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1271.9996139999998,
                    "min": 0,
                    "p50": 1245.284205,
                    "p95": 1271.9996139999998,
                    "p99": 1271.9996139999998,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 455.58394599999997,
                    "min": 0,
                    "p50": 410.638937,
                    "p95": 455.58394599999997,
                    "p99": 455.58394599999997,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 543.093391,
                    "min": 0,
                    "p50": 536.17831,
                    "p95": 543.093391,
                    "p99": 543.093391,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1025.277067,
                    "min": 0,
                    "p50": 1015.0599579999999,
                    "p95": 1025.277067,
                    "p99": 1025.277067,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 665.664673,
                    "min": 0,
                    "p50": 662.865451,
                    "p95": 665.664673,
                    "p99": 665.664673,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2561.371998,
                    "min": 0,
                    "p50": 2476.356469,
                    "p95": 2561.371998,
                    "p99": 2561.371998,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1534.8130959999999,
                    "min": 0,
                    "p50": 1491.605349,
                    "p95": 1534.8130959999999,
                    "p99": 1534.8130959999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2207.1746909999997,
                    "min": 0,
                    "p50": 2163.407844,
                    "p95": 2207.1746909999997,
                    "p99": 2207.1746909999997,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1770.224728,
                    "min": 0,
                    "p50": 1743.8070369999998,
                    "p95": 1770.224728,
                    "p99": 1770.224728,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1668.80017,
                    "min": 0,
                    "p50": 1628.740411,
                    "p95": 1668.80017,
                    "p99": 1668.80017,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3689.639715,
                    "min": 0,
                    "p50": 3683.626516,
                    "p95": 3689.639715,
                    "p99": 3689.639715,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1012.794191,
                    "min": 0,
                    "p50": 978.52208,
                    "p95": 1012.794191,
                    "p99": 1012.794191,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 756.5716309999999,
                    "min": 0,
                    "p50": 724.679578,
                    "p95": 756.5716309999999,
                    "p99": 756.5716309999999,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 944.2493119999999,
                    "min": 0,
                    "p50": 846.112896,
                    "p95": 944.2493119999999,
                    "p99": 944.2493119999999,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1314.728269,
                    "min": 0,
                    "p50": 1280.0659409999998,
                    "p95": 1314.728269,
                    "p99": 1314.728269,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1156.2742309999999,
                    "min": 0,
                    "p50": 1123.3718099999999,
                    "p95": 1156.2742309999999,
                    "p99": 1156.2742309999999,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 807.602075,
                    "min": 0,
                    "p50": 785.315896,
                    "p95": 807.602075,
                    "p99": 807.602075,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 244.43480499999998,
                    "min": 0,
                    "p50": 234.63239199999998,
                    "p95": 244.43480499999998,
                    "p99": 244.43480499999998,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 333.003918,
                    "min": 0,
                    "p50": 294.428254,
                    "p95": 333.003918,
                    "p99": 333.003918,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 699.294991,
                    "min": 0,
                    "p50": 671.2929899999999,
                    "p95": 699.294991,
                    "p99": 699.294991,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 450.643732,
                    "min": 0,
                    "p50": 412.645083,
                    "p95": 450.643732,
                    "p99": 450.643732,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 643.695835,
                    "min": 0,
                    "p50": 605.765493,
                    "p95": 643.695835,
                    "p99": 643.695835,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 365.367978,
                    "min": 0,
                    "p50": 356.600285,
                    "p95": 365.367978,
                    "p99": 365.367978,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 914.626586,
                    "min": 0,
                    "p50": 903.652081,
                    "p95": 914.626586,
                    "p99": 914.626586,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 545.105164,
                    "min": 0,
                    "p50": 541.325306,
                    "p95": 545.105164,
                    "p99": 545.105164,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 494.249323,
                    "min": 0,
                    "p50": 478.530442,
                    "p95": 494.249323,
                    "p99": 494.249323,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 702.902559,
                    "min": 0,
                    "p50": 686.696302,
                    "p95": 702.902559,
                    "p99": 702.902559,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 317.831836,
                    "min": 0,
                    "p50": 306.678025,
                    "p95": 317.831836,
                    "p99": 317.831836,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 583.4952109999999,
                    "min": 0,
                    "p50": 564.463177,
                    "p95": 583.4952109999999,
                    "p99": 583.4952109999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 513.0587889999999,
                    "min": 0,
                    "p50": 500.062554,
                    "p95": 513.0587889999999,
                    "p99": 513.0587889999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 442.297174,
                    "min": 0,
                    "p50": 437.25546099999997,
                    "p95": 442.297174,
                    "p99": 442.297174,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1055.669033,
                    "min": 0,
                    "p50": 1006.486681,
                    "p95": 1055.669033,
                    "p99": 1055.669033,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 935.7080649999999,
                    "min": 0,
                    "p50": 882.202233,
                    "p95": 935.7080649999999,
                    "p99": 935.7080649999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1368.739495,
                    "min": 0,
                    "p50": 1332.839444,
                    "p95": 1368.739495,
                    "p99": 1368.739495,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1998.640749,
                    "min": 0,
                    "p50": 1981.3719159999998,
                    "p95": 1998.640749,
                    "p99": 1998.640749,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 836.392216,
                    "min": 0,
                    "p50": 823.368443,
                    "p95": 836.392216,
                    "p99": 836.392216,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 400.991779,
                    "min": 0,
                    "p50": 375.550141,
                    "p95": 400.991779,
                    "p99": 400.991779,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 765.172435,
                    "min": 0,
                    "p50": 747.049716,
                    "p95": 765.172435,
                    "p99": 765.172435,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.381051,
                    "min": 0,
                    "p50": 244.105255,
                    "p95": 256.381051,
                    "p99": 256.381051,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 983.3151039999999,
                    "min": 0,
                    "p50": 944.710879,
                    "p95": 983.3151039999999,
                    "p99": 983.3151039999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1221.29579,
                    "min": 0,
                    "p50": 1178.5775119999998,
                    "p95": 1221.29579,
                    "p99": 1221.29579,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 659.92613,
                    "min": 0,
                    "p50": 624.9582839999999,
                    "p95": 659.92613,
                    "p99": 659.92613,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2387.501711,
                    "min": 0,
                    "p50": 2345.3536209999997,
                    "p95": 2387.501711,
                    "p99": 2387.501711,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 666.6782569999999,
                    "min": 0,
                    "p50": 574.1612309999999,
                    "p95": 666.6782569999999,
                    "p99": 666.6782569999999,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 504.043554,
                    "min": 0,
                    "p50": 396.950492,
                    "p95": 504.043554,
                    "p99": 504.043554,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 762.223581,
                    "min": 0,
                    "p50": 742.0573529999999,
                    "p95": 762.223581,
                    "p99": 762.223581,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 286.783053,
                    "min": 0,
                    "p50": 281.804389,
                    "p95": 286.783053,
                    "p99": 286.783053,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1209.881389,
                    "min": 0,
                    "p50": 1203.4500209999999,
                    "p95": 1209.881389,
                    "p99": 1209.881389,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 935.248126,
                    "min": 0,
                    "p50": 914.771616,
                    "p95": 935.248126,
                    "p99": 935.248126,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 905.1682599999999,
                    "min": 0,
                    "p50": 863.523526,
                    "p95": 905.1682599999999,
                    "p99": 905.1682599999999,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.806716,
                    "min": 0,
                    "p50": 223.635615,
                    "p95": 256.806716,
                    "p99": 256.806716,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 429.07926499999996,
                    "min": 0,
                    "p50": 336.000047,
                    "p95": 429.07926499999996,
                    "p99": 429.07926499999996,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1072.8857329999998,
                    "min": 0,
                    "p50": 1053.365299,
                    "p95": 1072.8857329999998,
                    "p99": 1072.8857329999998,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 672.257767,
                    "min": 0,
                    "p50": 511.988974,
                    "p95": 672.257767,
                    "p99": 672.257767,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 730.287017,
                    "min": 0,
                    "p50": 682.945258,
                    "p95": 730.287017,
                    "p99": 730.287017,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 584.47596,
                    "min": 0,
                    "p50": 450.997331,
                    "p95": 584.47596,
                    "p99": 584.47596,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 850.382901,
                    "min": 0,
                    "p50": 802.771582,
                    "p95": 850.382901,
                    "p99": 850.382901,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1790.347264,
                    "min": 0,
                    "p50": 1773.303749,
                    "p95": 1790.347264,
                    "p99": 1790.347264,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2945.043146,
                    "min": 0,
                    "p50": 2904.21045,
                    "p95": 2945.043146,
                    "p99": 2945.043146,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 635.148431,
                    "min": 0,
                    "p50": 627.4163149999999,
                    "p95": 635.148431,
                    "p99": 635.148431,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 349.422755,
                    "min": 0,
                    "p50": 343.117978,
                    "p95": 349.422755,
                    "p99": 349.422755,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 899.008783,
                    "min": 0,
                    "p50": 887.3231539999999,
                    "p95": 899.008783,
                    "p99": 899.008783,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1356.0010909999999,
                    "min": 0,
                    "p50": 1307.793283,
                    "p95": 1356.0010909999999,
                    "p99": 1356.0010909999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2192.397203,
                    "min": 0,
                    "p50": 2125.466022,
                    "p95": 2192.397203,
                    "p99": 2192.397203,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1763.600731,
                    "min": 0,
                    "p50": 1714.655855,
                    "p95": 1763.600731,
                    "p99": 1763.600731,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 391.44914,
                    "min": 0,
                    "p50": 385.01854399999996,
                    "p95": 391.44914,
                    "p99": 391.44914,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 787.4018269999999,
                    "min": 0,
                    "p50": 781.6543489999999,
                    "p95": 787.4018269999999,
                    "p99": 787.4018269999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 317.78203199999996,
                    "min": 0,
                    "p50": 301.99518,
                    "p95": 317.78203199999996,
                    "p99": 317.78203199999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 670.967501,
                    "min": 0,
                    "p50": 645.097614,
                    "p95": 670.967501,
                    "p99": 670.967501,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 692.541705,
                    "min": 0,
                    "p50": 678.653188,
                    "p95": 692.541705,
                    "p99": 692.541705,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 255.212471,
                    "min": 0,
                    "p50": 224.640829,
                    "p95": 255.212471,
                    "p99": 255.212471,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 518.742929,
                    "min": 0,
                    "p50": 512.6322299999999,
                    "p95": 518.742929,
                    "p99": 518.742929,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 556.207674,
                    "min": 0,
                    "p50": 554.805676,
                    "p95": 556.207674,
                    "p99": 556.207674,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 263.713777,
                    "min": 0,
                    "p50": 256.808884,
                    "p95": 263.713777,
                    "p99": 263.713777,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 223.46406199999998,
                    "min": 0,
                    "p50": 175.80521099999999,
                    "p95": 223.46406199999998,
                    "p99": 223.46406199999998,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 605.251976,
                    "min": 0,
                    "p50": 595.105737,
                    "p95": 605.251976,
                    "p99": 605.251976,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 498.043566,
                    "min": 0,
                    "p50": 472.526047,
                    "p95": 498.043566,
                    "p99": 498.043566,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 459.75796299999996,
                    "min": 0,
                    "p50": 426.938677,
                    "p95": 459.75796299999996,
                    "p99": 459.75796299999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 678.410028,
                    "min": 0,
                    "p50": 663.629515,
                    "p95": 678.410028,
                    "p99": 678.410028,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1053.209088,
                    "min": 0,
                    "p50": 1007.918946,
                    "p95": 1053.209088,
                    "p99": 1053.209088,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 912.907238,
                    "min": 0,
                    "p50": 871.6891969999999,
                    "p95": 912.907238,
                    "p99": 912.907238,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.543898,
                    "min": 0,
                    "p50": 254.520591,
                    "p95": 257.543898,
                    "p99": 257.543898,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1415.622376,
                    "min": 0,
                    "p50": 1407.2183479999999,
                    "p95": 1415.622376,
                    "p99": 1415.622376,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 606.15357,
                    "min": 0,
                    "p50": 597.642386,
                    "p95": 606.15357,
                    "p99": 606.15357,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 394.98573899999997,
                    "min": 0,
                    "p50": 387.06758199999996,
                    "p95": 394.98573899999997,
                    "p99": 394.98573899999997,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 850.505668,
                    "min": 0,
                    "p50": 803.6293559999999,
                    "p95": 850.505668,
                    "p99": 850.505668,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 515.331149,
                    "min": 0,
                    "p50": 464.844224,
                    "p95": 515.331149,
                    "p99": 515.331149,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1306.325043,
                    "min": 0,
                    "p50": 1246.182211,
                    "p95": 1306.325043,
                    "p99": 1306.325043,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 363.48636,
                    "min": 0,
                    "p50": 321.869337,
                    "p95": 363.48636,
                    "p99": 363.48636,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1207.526779,
                    "min": 0,
                    "p50": 1073.827677,
                    "p95": 1207.526779,
                    "p99": 1207.526779,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 582.898544,
                    "min": 0,
                    "p50": 528.308199,
                    "p95": 582.898544,
                    "p99": 582.898544,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 978.4875509999999,
                    "min": 0,
                    "p50": 935.77271,
                    "p95": 978.4875509999999,
                    "p99": 978.4875509999999,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 792.0708569999999,
                    "min": 0,
                    "p50": 729.83289,
                    "p95": 792.0708569999999,
                    "p99": 792.0708569999999,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 323.249074,
                    "min": 0,
                    "p50": 295.232913,
                    "p95": 323.249074,
                    "p99": 323.249074,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 820.626675,
                    "min": 0,
                    "p50": 766.816546,
                    "p95": 820.626675,
                    "p99": 820.626675,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 498.068557,
                    "min": 0,
                    "p50": 487.678592,
                    "p95": 498.068557,
                    "p99": 498.068557,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 693.299231,
                    "min": 0,
                    "p50": 680.203759,
                    "p95": 693.299231,
                    "p99": 693.299231,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1127.313791,
                    "min": 0,
                    "p50": 1013.6156669999999,
                    "p95": 1127.313791,
                    "p99": 1127.313791,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 605.821049,
                    "min": 0,
                    "p50": 586.13839,
                    "p95": 605.821049,
                    "p99": 605.821049,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 768.110061,
                    "min": 0,
                    "p50": 725.40373,
                    "p95": 768.110061,
                    "p99": 768.110061,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1622.9250519999998,
                    "min": 0,
                    "p50": 1493.963554,
                    "p95": 1622.9250519999998,
                    "p99": 1622.9250519999998,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 422.39428999999996,
                    "min": 0,
                    "p50": 391.333511,
                    "p95": 422.39428999999996,
                    "p99": 422.39428999999996,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 213.173766,
                    "min": 0,
                    "p50": 197.71173399999998,
                    "p95": 213.173766,
                    "p99": 213.173766,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 577.7411969999999,
                    "min": 0,
                    "p50": 527.6413269999999,
                    "p95": 577.7411969999999,
                    "p99": 577.7411969999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 370.83794,
                    "min": 0,
                    "p50": 340.556784,
                    "p95": 370.83794,
                    "p99": 370.83794,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 252.42361699999998,
                    "min": 0,
                    "p50": 245.04228799999999,
                    "p95": 252.42361699999998,
                    "p99": 252.42361699999998,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 449.683907,
                    "min": 0,
                    "p50": 441.286471,
                    "p95": 449.683907,
                    "p99": 449.683907,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 921.6511459999999,
                    "min": 0,
                    "p50": 895.540087,
                    "p95": 921.6511459999999,
                    "p99": 921.6511459999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 649.2962779999999,
                    "min": 0,
                    "p50": 633.125053,
                    "p95": 649.2962779999999,
                    "p99": 649.2962779999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 979.332235,
                    "min": 0,
                    "p50": 805.501009,
                    "p95": 979.332235,
                    "p99": 979.332235,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1121.078912,
                    "min": 0,
                    "p50": 916.187827,
                    "p95": 1121.078912,
                    "p99": 1121.078912,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 975.7450339999999,
                    "min": 0,
                    "p50": 961.413815,
                    "p95": 975.7450339999999,
                    "p99": 975.7450339999999,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 637.951363,
                    "min": 0,
                    "p50": 599.276882,
                    "p95": 637.951363,
                    "p99": 637.951363,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 434.18858,
                    "min": 0,
                    "p50": 413.688222,
                    "p95": 434.18858,
                    "p99": 434.18858,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 591.3628689999999,
                    "min": 0,
                    "p50": 537.271484,
                    "p95": 591.3628689999999,
                    "p99": 591.3628689999999,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 375.107682,
                    "min": 0,
                    "p50": 295.65368,
                    "p95": 375.107682,
                    "p99": 375.107682,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 399.231252,
                    "min": 0,
                    "p50": 355.901486,
                    "p95": 399.231252,
                    "p99": 399.231252,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 703.42784,
                    "min": 0,
                    "p50": 658.367224,
                    "p95": 703.42784,
                    "p99": 703.42784,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 499.22718199999997,
                    "min": 0,
                    "p50": 472.49703,
                    "p95": 499.22718199999997,
                    "p99": 499.22718199999997,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1326.5923229999999,
                    "min": 0,
                    "p50": 1266.599544,
                    "p95": 1326.5923229999999,
                    "p99": 1326.5923229999999,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 800.615281,
                    "min": 0,
                    "p50": 718.62594,
                    "p95": 800.615281,
                    "p99": 800.615281,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1180.6069599999998,
                    "min": 0,
                    "p50": 1145.009269,
                    "p95": 1180.6069599999998,
                    "p99": 1180.6069599999998,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 242.36701599999998,
                    "min": 0,
                    "p50": 234.987292,
                    "p95": 242.36701599999998,
                    "p99": 242.36701599999998,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 895.410864,
                    "min": 0,
                    "p50": 838.3034839999999,
                    "p95": 895.410864,
                    "p99": 895.410864,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 576.486865,
                    "min": 0,
                    "p50": 560.753663,
                    "p95": 576.486865,
                    "p99": 576.486865,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 397.069714,
                    "min": 0,
                    "p50": 306.564669,
                    "p95": 397.069714,
                    "p99": 397.069714,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 249.90140499999998,
                    "min": 0,
                    "p50": 222.190742,
                    "p95": 249.90140499999998,
                    "p99": 249.90140499999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 242.55304099999998,
                    "min": 0,
                    "p50": 179.347519,
                    "p95": 242.55304099999998,
                    "p99": 242.55304099999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 768.985836,
                    "min": 0,
                    "p50": 609.653249,
                    "p95": 768.985836,
                    "p99": 768.985836,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 735.7669549999999,
                    "min": 0,
                    "p50": 693.7622279999999,
                    "p95": 735.7669549999999,
                    "p99": 735.7669549999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 545.189889,
                    "min": 0,
                    "p50": 437.861074,
                    "p95": 545.189889,
                    "p99": 545.189889,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 942.342413,
                    "min": 0,
                    "p50": 900.9918759999999,
                    "p95": 942.342413,
                    "p99": 942.342413,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 523.965409,
                    "min": 0,
                    "p50": 472.899091,
                    "p95": 523.965409,
                    "p99": 523.965409,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 394.17218399999996,
                    "min": 0,
                    "p50": 346.685064,
                    "p95": 394.17218399999996,
                    "p99": 394.17218399999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 805.643338,
                    "min": 0,
                    "p50": 796.4189,
                    "p95": 805.643338,
                    "p99": 805.643338,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 809.7068989999999,
                    "min": 0,
                    "p50": 645.378027,
                    "p95": 809.7068989999999,
                    "p99": 809.7068989999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 282.722946,
                    "min": 0,
                    "p50": 265.639068,
                    "p95": 282.722946,
                    "p99": 282.722946,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 486.53921699999995,
                    "min": 0,
                    "p50": 394.50262599999996,
                    "p95": 486.53921699999995,
                    "p99": 486.53921699999995,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1331.720364,
                    "min": 0,
                    "p50": 1316.865562,
                    "p95": 1331.720364,
                    "p99": 1331.720364,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 562.942622,
                    "min": 0,
                    "p50": 518.9637749999999,
                    "p95": 562.942622,
                    "p99": 562.942622,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1743.662032,
                    "min": 0,
                    "p50": 1737.610291,
                    "p95": 1743.662032,
                    "p99": 1743.662032,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 995.4402839999999,
                    "min": 0,
                    "p50": 983.6434949999999,
                    "p95": 995.4402839999999,
                    "p99": 995.4402839999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 527.083857,
                    "min": 0,
                    "p50": 519.133022,
                    "p95": 527.083857,
                    "p99": 527.083857,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1923.672163,
                    "min": 0,
                    "p50": 1912.4013889999999,
                    "p95": 1923.672163,
                    "p99": 1923.672163,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1565.8105699999999,
                    "min": 0,
                    "p50": 1354.270787,
                    "p95": 1565.8105699999999,
                    "p99": 1565.8105699999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 661.927728,
                    "min": 0,
                    "p50": 615.275641,
                    "p95": 661.927728,
                    "p99": 661.927728,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1498.292338,
                    "min": 0,
                    "p50": 1449.9093369999998,
                    "p95": 1498.292338,
                    "p99": 1498.292338,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 708.1558739999999,
                    "min": 0,
                    "p50": 699.45489,
                    "p95": 708.1558739999999,
                    "p99": 708.1558739999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1218.1065959999999,
                    "min": 0,
                    "p50": 1165.612056,
                    "p95": 1218.1065959999999,
                    "p99": 1218.1065959999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 902.7785409999999,
                    "min": 0,
                    "p50": 887.2897889999999,
                    "p95": 902.7785409999999,
                    "p99": 902.7785409999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1296.2995329999999,
                    "min": 0,
                    "p50": 1245.798828,
                    "p95": 1296.2995329999999,
                    "p99": 1296.2995329999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1722.2841919999998,
                    "min": 0,
                    "p50": 1671.041438,
                    "p95": 1722.2841919999998,
                    "p99": 1722.2841919999998,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 830.12076,
                    "min": 0,
                    "p50": 791.403648,
                    "p95": 830.12076,
                    "p99": 830.12076,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1112.3430409999999,
                    "min": 0,
                    "p50": 1072.8041,
                    "p95": 1112.3430409999999,
                    "p99": 1112.3430409999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 380.91337699999997,
                    "min": 0,
                    "p50": 328.25746799999996,
                    "p95": 380.91337699999997,
                    "p99": 380.91337699999997,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 456.30066,
                    "min": 0,
                    "p50": 423.370566,
                    "p95": 456.30066,
                    "p99": 456.30066,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 621.0721649999999,
                    "min": 0,
                    "p50": 556.390505,
                    "p95": 621.0721649999999,
                    "p99": 621.0721649999999,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 300.734087,
                    "min": 0,
                    "p50": 249.09129399999998,
                    "p95": 300.734087,
                    "p99": 300.734087,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 703.5599209999999,
                    "min": 0,
                    "p50": 653.515393,
                    "p95": 703.5599209999999,
                    "p99": 703.5599209999999,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 841.812947,
                    "min": 0,
                    "p50": 750.075475,
                    "p95": 841.812947,
                    "p99": 841.812947,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 382.76568299999997,
                    "min": 0,
                    "p50": 303.827977,
                    "p95": 382.76568299999997,
                    "p99": 382.76568299999997,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 551.723609,
                    "min": 0,
                    "p50": 504.73387099999997,
                    "p95": 551.723609,
                    "p99": 551.723609,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 468.56724199999996,
                    "min": 0,
                    "p50": 447.208402,
                    "p95": 468.56724199999996,
                    "p99": 468.56724199999996,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 386.474502,
                    "min": 0,
                    "p50": 345.901543,
                    "p95": 386.474502,
                    "p99": 386.474502,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 210.312211,
                    "min": 0,
                    "p50": 202.384356,
                    "p95": 210.312211,
                    "p99": 210.312211,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 946.0564909999999,
                    "min": 0,
                    "p50": 923.1294029999999,
                    "p95": 946.0564909999999,
                    "p99": 946.0564909999999,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 662.53016,
                    "min": 0,
                    "p50": 607.1788369999999,
                    "p95": 662.53016,
                    "p99": 662.53016,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 739.766043,
                    "min": 0,
                    "p50": 703.168597,
                    "p95": 739.766043,
                    "p99": 739.766043,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1084.142278,
                    "min": 0,
                    "p50": 1043.24143,
                    "p95": 1084.142278,
                    "p99": 1084.142278,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 829.761303,
                    "min": 0,
                    "p50": 795.394809,
                    "p95": 829.761303,
                    "p99": 829.761303,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 404.762817,
                    "min": 0,
                    "p50": 399.53450699999996,
                    "p95": 404.762817,
                    "p99": 404.762817,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1164.07833,
                    "min": 0,
                    "p50": 1114.330025,
                    "p95": 1164.07833,
                    "p99": 1164.07833,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 704.756762,
                    "min": 0,
                    "p50": 667.217463,
                    "p95": 704.756762,
                    "p99": 704.756762,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 948.6022069999999,
                    "min": 0,
                    "p50": 916.5189409999999,
                    "p95": 948.6022069999999,
                    "p99": 948.6022069999999,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1001.312192,
                    "min": 0,
                    "p50": 959.6816289999999,
                    "p95": 1001.312192,
                    "p99": 1001.312192,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1282.771201,
                    "min": 0,
                    "p50": 1264.343151,
                    "p95": 1282.771201,
                    "p99": 1282.771201,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 748.597398,
                    "min": 0,
                    "p50": 721.856146,
                    "p95": 748.597398,
                    "p99": 748.597398,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 468.00690699999996,
                    "min": 0,
                    "p50": 417.335677,
                    "p95": 468.00690699999996,
                    "p99": 468.00690699999996,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 656.6322359999999,
                    "min": 0,
                    "p50": 545.41458,
                    "p95": 656.6322359999999,
                    "p99": 656.6322359999999,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 898.8368859999999,
                    "min": 0,
                    "p50": 846.015872,
                    "p95": 898.8368859999999,
                    "p99": 898.8368859999999,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 817.4908839999999,
                    "min": 0,
                    "p50": 786.092755,
                    "p95": 817.4908839999999,
                    "p99": 817.4908839999999,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1917.426563,
                    "min": 0,
                    "p50": 1874.5359999999998,
                    "p95": 1917.426563,
                    "p99": 1917.426563,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 484.900132,
                    "min": 0,
                    "p50": 478.735071,
                    "p95": 484.900132,
                    "p99": 484.900132,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 235.59146099999998,
                    "min": 0,
                    "p50": 232.81672999999998,
                    "p95": 235.59146099999998,
                    "p99": 235.59146099999998,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 434.831572,
                    "min": 0,
                    "p50": 351.83585899999997,
                    "p95": 434.831572,
                    "p99": 434.831572,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 641.881663,
                    "min": 0,
                    "p50": 605.0355979999999,
                    "p95": 641.881663,
                    "p99": 641.881663,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 301.496629,
                    "min": 0,
                    "p50": 293.15833499999997,
                    "p95": 301.496629,
                    "p99": 301.496629,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1138.251573,
                    "min": 0,
                    "p50": 1089.323729,
                    "p95": 1138.251573,
                    "p99": 1138.251573,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 578.748873,
                    "min": 0,
                    "p50": 536.239651,
                    "p95": 578.748873,
                    "p99": 578.748873,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 263.718598,
                    "min": 0,
                    "p50": 259.634191,
                    "p95": 263.718598,
                    "p99": 263.718598,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 356.02018999999996,
                    "min": 0,
                    "p50": 328.21410399999996,
                    "p95": 356.02018999999996,
                    "p99": 356.02018999999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 791.3198,
                    "min": 0,
                    "p50": 748.4333829999999,
                    "p95": 791.3198,
                    "p99": 791.3198,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 500.015161,
                    "min": 0,
                    "p50": 469.709899,
                    "p95": 500.015161,
                    "p99": 500.015161,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1497.047223,
                    "min": 0,
                    "p50": 1436.131901,
                    "p95": 1497.047223,
                    "p99": 1497.047223,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 464.28637599999996,
                    "min": 0,
                    "p50": 401.67895899999996,
                    "p95": 464.28637599999996,
                    "p99": 464.28637599999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 862.9784679999999,
                    "min": 0,
                    "p50": 816.025238,
                    "p95": 862.9784679999999,
                    "p99": 862.9784679999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 631.620861,
                    "min": 0,
                    "p50": 611.3910119999999,
                    "p95": 631.620861,
                    "p99": 631.620861,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 929.14721,
                    "min": 0,
                    "p50": 879.913509,
                    "p95": 929.14721,
                    "p99": 929.14721,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 998.27901,
                    "min": 0,
                    "p50": 948.5245339999999,
                    "p95": 998.27901,
                    "p99": 998.27901,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1303.1122759999998,
                    "min": 0,
                    "p50": 1266.007516,
                    "p95": 1303.1122759999998,
                    "p99": 1303.1122759999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1081.984582,
                    "min": 0,
                    "p50": 1027.251484,
                    "p95": 1081.984582,
                    "p99": 1081.984582,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 685.0746429999999,
                    "min": 0,
                    "p50": 675.573258,
                    "p95": 685.0746429999999,
                    "p99": 685.0746429999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 281.379227,
                    "min": 0,
                    "p50": 251.960772,
                    "p95": 281.379227,
                    "p99": 281.379227,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 816.661261,
                    "min": 0,
                    "p50": 806.6520429999999,
                    "p95": 816.661261,
                    "p99": 816.661261,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 656.315207,
                    "min": 0,
                    "p50": 608.303693,
                    "p95": 656.315207,
                    "p99": 656.315207,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 514.0661769999999,
                    "min": 0,
                    "p50": 507.404458,
                    "p95": 514.0661769999999,
                    "p99": 514.0661769999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 410.70205799999997,
                    "min": 0,
                    "p50": 353.242278,
                    "p95": 410.70205799999997,
                    "p99": 410.70205799999997,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 205.74415499999998,
                    "min": 0,
                    "p50": 200.504552,
                    "p95": 205.74415499999998,
                    "p99": 205.74415499999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 378.091505,
                    "min": 0,
                    "p50": 305.063195,
                    "p95": 378.091505,
                    "p99": 378.091505,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 813.102675,
                    "min": 0,
                    "p50": 776.97043,
                    "p95": 813.102675,
                    "p99": 813.102675,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 974.586275,
                    "min": 0,
                    "p50": 936.7061729999999,
                    "p95": 974.586275,
                    "p99": 974.586275,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 409.361027,
                    "min": 0,
                    "p50": 403.055859,
                    "p95": 409.361027,
                    "p99": 409.361027,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 598.0713059999999,
                    "min": 0,
                    "p50": 558.956144,
                    "p95": 598.0713059999999,
                    "p99": 598.0713059999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1109.4641,
                    "min": 0,
                    "p50": 1052.480445,
                    "p95": 1109.4641,
                    "p99": 1109.4641,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 714.240176,
                    "min": 0,
                    "p50": 655.422008,
                    "p95": 714.240176,
                    "p99": 714.240176,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 511.696218,
                    "min": 0,
                    "p50": 460.714317,
                    "p95": 511.696218,
                    "p99": 511.696218,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 736.987477,
                    "min": 0,
                    "p50": 707.061816,
                    "p95": 736.987477,
                    "p99": 736.987477,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2214.996667,
                    "min": 0,
                    "p50": 2176.329022,
                    "p95": 2214.996667,
                    "p99": 2214.996667,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1226.0004569999999,
                    "min": 0,
                    "p50": 1189.144164,
                    "p95": 1226.0004569999999,
                    "p99": 1226.0004569999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1493.555469,
                    "min": 0,
                    "p50": 1471.280524,
                    "p95": 1493.555469,
                    "p99": 1493.555469,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1676.574289,
                    "min": 0,
                    "p50": 1615.3796189999998,
                    "p95": 1676.574289,
                    "p99": 1676.574289,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2083.66398,
                    "min": 0,
                    "p50": 2040.4384539999999,
                    "p95": 2083.66398,
                    "p99": 2083.66398,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1933.4157129999999,
                    "min": 0,
                    "p50": 1893.7397219999998,
                    "p95": 1933.4157129999999,
                    "p99": 1933.4157129999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 636.727858,
                    "min": 0,
                    "p50": 618.246434,
                    "p95": 636.727858,
                    "p99": 636.727858,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1348.0239319999998,
                    "min": 0,
                    "p50": 1326.369986,
                    "p95": 1348.0239319999998,
                    "p99": 1348.0239319999998,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1791.9404089999998,
                    "min": 0,
                    "p50": 1740.029431,
                    "p95": 1791.9404089999998,
                    "p99": 1791.9404089999998,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2552.856226,
                    "min": 0,
                    "p50": 2525.1189249999998,
                    "p95": 2552.856226,
                    "p99": 2552.856226,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 771.31129,
                    "min": 0,
                    "p50": 760.675262,
                    "p95": 771.31129,
                    "p99": 771.31129,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1054.30171,
                    "min": 0,
                    "p50": 1039.9650629999999,
                    "p95": 1054.30171,
                    "p99": 1054.30171,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 506.990521,
                    "min": 0,
                    "p50": 473.64547999999996,
                    "p95": 506.990521,
                    "p99": 506.990521,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 920.6839259999999,
                    "min": 0,
                    "p50": 903.9970649999999,
                    "p95": 920.6839259999999,
                    "p99": 920.6839259999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3010.603404,
                    "min": 0,
                    "p50": 2889.549552,
                    "p95": 3010.603404,
                    "p99": 3010.603404,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2874.709958,
                    "min": 0,
                    "p50": 2827.942442,
                    "p95": 2874.709958,
                    "p99": 2874.709958,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2050.217009,
                    "min": 0,
                    "p50": 1984.560734,
                    "p95": 2050.217009,
                    "p99": 2050.217009,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1748.8119439999998,
                    "min": 0,
                    "p50": 1713.4297769999998,
                    "p95": 1748.8119439999998,
                    "p99": 1748.8119439999998,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1317.3837019999999,
                    "min": 0,
                    "p50": 1295.506711,
                    "p95": 1317.3837019999999,
                    "p99": 1317.3837019999999,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1206.095208,
                    "min": 0,
                    "p50": 1165.070513,
                    "p95": 1206.095208,
                    "p99": 1206.095208,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 901.434256,
                    "min": 0,
                    "p50": 884.760003,
                    "p95": 901.434256,
                    "p99": 901.434256,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1864.8759209999998,
                    "min": 0,
                    "p50": 1837.8191419999998,
                    "p95": 1864.8759209999998,
                    "p99": 1864.8759209999998,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 639.957711,
                    "min": 0,
                    "p50": 609.463491,
                    "p95": 639.957711,
                    "p99": 639.957711,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1678.079117,
                    "min": 0,
                    "p50": 1584.222708,
                    "p95": 1678.079117,
                    "p99": 1678.079117,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 753.2471519999999,
                    "min": 0,
                    "p50": 746.808007,
                    "p95": 753.2471519999999,
                    "p99": 753.2471519999999,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2496.188726,
                    "min": 0,
                    "p50": 2466.648748,
                    "p95": 2496.188726,
                    "p99": 2496.188726,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 490.47799899999995,
                    "min": 0,
                    "p50": 474.55399,
                    "p95": 490.47799899999995,
                    "p99": 490.47799899999995,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1062.94094,
                    "min": 0,
                    "p50": 1020.196466,
                    "p95": 1062.94094,
                    "p99": 1062.94094,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2180.639566,
                    "min": 0,
                    "p50": 2126.482255,
                    "p95": 2180.639566,
                    "p99": 2180.639566,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1482.538685,
                    "min": 0,
                    "p50": 1436.3869849999999,
                    "p95": 1482.538685,
                    "p99": 1482.538685,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1549.620772,
                    "min": 0,
                    "p50": 1494.979777,
                    "p95": 1549.620772,
                    "p99": 1549.620772,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 845.1520889999999,
                    "min": 0,
                    "p50": 829.416043,
                    "p95": 845.1520889999999,
                    "p99": 845.1520889999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 741.594203,
                    "min": 0,
                    "p50": 711.298502,
                    "p95": 741.594203,
                    "p99": 741.594203,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1382.379768,
                    "min": 0,
                    "p50": 1355.984498,
                    "p95": 1382.379768,
                    "p99": 1382.379768,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2696.986097,
                    "min": 0,
                    "p50": 2644.844198,
                    "p95": 2696.986097,
                    "p99": 2696.986097,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 622.2907839999999,
                    "min": 0,
                    "p50": 578.945729,
                    "p95": 622.2907839999999,
                    "p99": 622.2907839999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 977.849788,
                    "min": 0,
                    "p50": 968.439703,
                    "p95": 977.849788,
                    "p99": 977.849788,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 447.374332,
                    "min": 0,
                    "p50": 440.592453,
                    "p95": 447.374332,
                    "p99": 447.374332,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2053.672935,
                    "min": 0,
                    "p50": 2000.131974,
                    "p95": 2053.672935,
                    "p99": 2053.672935,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1889.897702,
                    "min": 0,
                    "p50": 1873.666237,
                    "p95": 1889.897702,
                    "p99": 1889.897702,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1633.709398,
                    "min": 0,
                    "p50": 1608.6911929999999,
                    "p95": 1633.709398,
                    "p99": 1633.709398,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1790.7365929999999,
                    "min": 0,
                    "p50": 1754.359725,
                    "p95": 1790.7365929999999,
                    "p99": 1790.7365929999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1241.464164,
                    "min": 0,
                    "p50": 1225.773287,
                    "p95": 1241.464164,
                    "p99": 1241.464164,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2352.807583,
                    "min": 0,
                    "p50": 2321.389138,
                    "p95": 2352.807583,
                    "p99": 2352.807583,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1122.599436,
                    "min": 0,
                    "p50": 1096.935459,
                    "p95": 1122.599436,
                    "p99": 1122.599436,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 816.380328,
                    "min": 0,
                    "p50": 804.132921,
                    "p95": 816.380328,
                    "p99": 816.380328,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 593.335906,
                    "min": 0,
                    "p50": 454.889298,
                    "p95": 593.335906,
                    "p99": 593.335906,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 949.917013,
                    "min": 0,
                    "p50": 921.621361,
                    "p95": 949.917013,
                    "p99": 949.917013,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1414.5285119999999,
                    "min": 0,
                    "p50": 1055.284442,
                    "p95": 1414.5285119999999,
                    "p99": 1414.5285119999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 261.03310999999997,
                    "min": 0,
                    "p50": 228.54188399999998,
                    "p95": 261.03310999999997,
                    "p99": 261.03310999999997,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 985.2330979999999,
                    "min": 0,
                    "p50": 757.3509399999999,
                    "p95": 985.2330979999999,
                    "p99": 985.2330979999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 519.837864,
                    "min": 0,
                    "p50": 398.07577499999996,
                    "p95": 519.837864,
                    "p99": 519.837864,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 371.113099,
                    "min": 0,
                    "p50": 284.486127,
                    "p95": 371.113099,
                    "p99": 371.113099,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1804.611432,
                    "min": 0,
                    "p50": 1784.370547,
                    "p95": 1804.611432,
                    "p99": 1804.611432,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 607.499188,
                    "min": 0,
                    "p50": 572.112314,
                    "p95": 607.499188,
                    "p99": 607.499188,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 731.409872,
                    "min": 0,
                    "p50": 691.537504,
                    "p95": 731.409872,
                    "p99": 731.409872,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 931.559901,
                    "min": 0,
                    "p50": 865.839222,
                    "p95": 931.559901,
                    "p99": 931.559901,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 367.25431599999996,
                    "min": 0,
                    "p50": 340.195713,
                    "p95": 367.25431599999996,
                    "p99": 367.25431599999996,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3721.0597789999997,
                    "min": 0,
                    "p50": 2951.637576,
                    "p95": 3721.0597789999997,
                    "p99": 3721.0597789999997,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1227.53226,
                    "min": 0,
                    "p50": 1205.099101,
                    "p95": 1227.53226,
                    "p99": 1227.53226,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 651.960074,
                    "min": 0,
                    "p50": 632.01779,
                    "p95": 651.960074,
                    "p99": 651.960074,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 541.124076,
                    "min": 0,
                    "p50": 521.079311,
                    "p95": 541.124076,
                    "p99": 541.124076,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2475.310539,
                    "min": 0,
                    "p50": 2361.461982,
                    "p95": 2475.310539,
                    "p99": 2475.310539,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1121.536641,
                    "min": 0,
                    "p50": 1052.108409,
                    "p95": 1121.536641,
                    "p99": 1121.536641,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 357.890396,
                    "min": 0,
                    "p50": 346.53688999999997,
                    "p95": 357.890396,
                    "p99": 357.890396,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 768.270149,
                    "min": 0,
                    "p50": 696.879612,
                    "p95": 768.270149,
                    "p99": 768.270149,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 542.749301,
                    "min": 0,
                    "p50": 504.920646,
                    "p95": 542.749301,
                    "p99": 542.749301,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 563.029017,
                    "min": 0,
                    "p50": 551.478764,
                    "p95": 563.029017,
                    "p99": 563.029017,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 225.81660599999998,
                    "min": 0,
                    "p50": 201.591803,
                    "p95": 225.81660599999998,
                    "p99": 225.81660599999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 622.5492849999999,
                    "min": 0,
                    "p50": 609.085112,
                    "p95": 622.5492849999999,
                    "p99": 622.5492849999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 314.888534,
                    "min": 0,
                    "p50": 300.119108,
                    "p95": 314.888534,
                    "p99": 314.888534,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 804.5690579999999,
                    "min": 0,
                    "p50": 767.940971,
                    "p95": 804.5690579999999,
                    "p99": 804.5690579999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 508.863651,
                    "min": 0,
                    "p50": 451.706513,
                    "p95": 508.863651,
                    "p99": 508.863651,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 948.7752399999999,
                    "min": 0,
                    "p50": 922.6923429999999,
                    "p95": 948.7752399999999,
                    "p99": 948.7752399999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 680.321958,
                    "min": 0,
                    "p50": 651.198888,
                    "p95": 680.321958,
                    "p99": 680.321958,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 412.995024,
                    "min": 0,
                    "p50": 400.830113,
                    "p95": 412.995024,
                    "p99": 412.995024,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 283.89370099999996,
                    "min": 0,
                    "p50": 250.69688299999999,
                    "p95": 283.89370099999996,
                    "p99": 283.89370099999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 852.416882,
                    "min": 0,
                    "p50": 805.726787,
                    "p95": 852.416882,
                    "p99": 852.416882,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1621.510327,
                    "min": 0,
                    "p50": 1583.7282,
                    "p95": 1621.510327,
                    "p99": 1621.510327,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 545.8373859999999,
                    "min": 0,
                    "p50": 488.828555,
                    "p95": 545.8373859999999,
                    "p99": 545.8373859999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 560.385781,
                    "min": 0,
                    "p50": 542.6459659999999,
                    "p95": 560.385781,
                    "p99": 560.385781,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 340.012744,
                    "min": 0,
                    "p50": 296.309014,
                    "p95": 340.012744,
                    "p99": 340.012744,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 497.344813,
                    "min": 0,
                    "p50": 441.939597,
                    "p95": 497.344813,
                    "p99": 497.344813,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 749.505558,
                    "min": 0,
                    "p50": 738.05824,
                    "p95": 749.505558,
                    "p99": 749.505558,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 207.563775,
                    "min": 0,
                    "p50": 198.59317099999998,
                    "p95": 207.563775,
                    "p99": 207.563775,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1613.621621,
                    "min": 0,
                    "p50": 1520.7814899999998,
                    "p95": 1613.621621,
                    "p99": 1613.621621,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 649.5741499999999,
                    "min": 0,
                    "p50": 597.134274,
                    "p95": 649.5741499999999,
                    "p99": 649.5741499999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 702.2236849999999,
                    "min": 0,
                    "p50": 691.1988339999999,
                    "p95": 702.2236849999999,
                    "p99": 702.2236849999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 419.24353299999996,
                    "min": 0,
                    "p50": 352.163125,
                    "p95": 419.24353299999996,
                    "p99": 419.24353299999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 961.3917429999999,
                    "min": 0,
                    "p50": 910.055082,
                    "p95": 961.3917429999999,
                    "p99": 961.3917429999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 647.101487,
                    "min": 0,
                    "p50": 637.9199709999999,
                    "p95": 647.101487,
                    "p99": 647.101487,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 444.06764699999997,
                    "min": 0,
                    "p50": 397.821119,
                    "p95": 444.06764699999997,
                    "p99": 444.06764699999997,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2050.67126,
                    "min": 0,
                    "p50": 2034.8387149999999,
                    "p95": 2050.67126,
                    "p99": 2050.67126,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 258.813025,
                    "min": 0,
                    "p50": 247.737149,
                    "p95": 258.813025,
                    "p99": 258.813025,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 818.8292309999999,
                    "min": 0,
                    "p50": 787.824841,
                    "p95": 818.8292309999999,
                    "p99": 818.8292309999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1077.9043709999999,
                    "min": 0,
                    "p50": 1016.0556419999999,
                    "p95": 1077.9043709999999,
                    "p99": 1077.9043709999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        },
        "reth": {
            "name": "reth",
            "results": [
                {
                    "test_case": "GasLimit",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 359.331169,
                    "min": 0,
                    "p50": 355.32926399999997,
                    "p95": 359.331169,
                    "p99": 359.331169,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 353.066984,
                    "min": 0,
                    "p50": 306.89714599999996,
                    "p95": 353.066984,
                    "p99": 353.066984,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 486.250607,
                    "min": 0,
                    "p50": 480.92462,
                    "p95": 486.250607,
                    "p99": 486.250607,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 425.43796699999996,
                    "min": 0,
                    "p50": 420.892992,
                    "p95": 425.43796699999996,
                    "p99": 425.43796699999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 335.474786,
                    "min": 0,
                    "p50": 330.271594,
                    "p95": 335.474786,
                    "p99": 335.474786,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 455.20582099999996,
                    "min": 0,
                    "p50": 392.411295,
                    "p95": 455.20582099999996,
                    "p99": 455.20582099999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 526.46757,
                    "min": 0,
                    "p50": 451.00659199999996,
                    "p95": 526.46757,
                    "p99": 526.46757,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 128.258981,
                    "min": 0,
                    "p50": 126.402492,
                    "p95": 128.258981,
                    "p99": 128.258981,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.18416399999998,
                    "min": 0,
                    "p50": 156.895386,
                    "p95": 160.18416399999998,
                    "p99": 160.18416399999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 211.23298699999998,
                    "min": 0,
                    "p50": 186.919257,
                    "p95": 211.23298699999998,
                    "p99": 211.23298699999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 638.691059,
                    "min": 0,
                    "p50": 629.414171,
                    "p95": 638.691059,
                    "p99": 638.691059,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.75115499999998,
                    "min": 0,
                    "p50": 216.10306,
                    "p95": 217.75115499999998,
                    "p99": 217.75115499999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 560.1587519999999,
                    "min": 0,
                    "p50": 553.62209,
                    "p95": 560.1587519999999,
                    "p99": 560.1587519999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 313.753584,
                    "min": 0,
                    "p50": 275.089152,
                    "p95": 313.753584,
                    "p99": 313.753584,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasLimit",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 276.263783,
                    "min": 0,
                    "p50": 243.959073,
                    "p95": 276.263783,
                    "p99": 276.263783,
                    "n": 10,
                    "description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Transfers",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 89.789265,
                    "min": 0,
                    "p50": 85.349232,
                    "p95": 89.789265,
                    "p99": 89.789265,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 150.366376,
                    "min": 0,
                    "p50": 145.81603099999998,
                    "p95": 150.366376,
                    "p99": 150.366376,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 192.111053,
                    "min": 0,
                    "p50": 187.042641,
                    "p95": 192.111053,
                    "p99": 192.111053,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 50.648948,
                    "min": 0,
                    "p50": 48.935337999999994,
                    "p95": 50.648948,
                    "p99": 50.648948,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 98.393075,
                    "min": 0,
                    "p50": 93.62875799999999,
                    "p95": 98.393075,
                    "p99": 98.393075,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 184.998767,
                    "min": 0,
                    "p50": 172.552304,
                    "p95": 184.998767,
                    "p99": 184.998767,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 40.422608,
                    "min": 0,
                    "p50": 38.651475,
                    "p95": 40.422608,
                    "p99": 40.422608,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 68.72242899999999,
                    "min": 0,
                    "p50": 65.92694399999999,
                    "p95": 68.72242899999999,
                    "p99": 68.72242899999999,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 81.49866399999999,
                    "min": 0,
                    "p50": 77.460826,
                    "p95": 81.49866399999999,
                    "p99": 81.49866399999999,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 250.808734,
                    "min": 0,
                    "p50": 221.591504,
                    "p95": 250.808734,
                    "p99": 250.808734,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 277.464176,
                    "min": 0,
                    "p50": 254.244046,
                    "p95": 277.464176,
                    "p99": 277.464176,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 92.16613799999999,
                    "min": 0,
                    "p50": 70.000283,
                    "p95": 92.16613799999999,
                    "p99": 92.16613799999999,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 645.793248,
                    "min": 0,
                    "p50": 642.699812,
                    "p95": 645.793248,
                    "p99": 645.793248,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 27.300956,
                    "min": 0,
                    "p50": 24.813679999999998,
                    "p95": 27.300956,
                    "p99": 27.300956,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 60.079975999999995,
                    "min": 0,
                    "p50": 57.356784999999995,
                    "p95": 60.079975999999995,
                    "p99": 60.079975999999995,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "Transfers",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 352.307777,
                    "min": 0,
                    "p50": 342.209364,
                    "p95": 352.307777,
                    "p99": 352.307777,
                    "n": 10,
                    "description": "All block gas limit consumed by simple ETH transfers"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 308.596395,
                    "min": 0,
                    "p50": 281.143755,
                    "p95": 308.596395,
                    "p99": 308.596395,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 290.610451,
                    "min": 0,
                    "p50": 250.10178399999998,
                    "p95": 290.610451,
                    "p99": 290.610451,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 309.07474199999996,
                    "min": 0,
                    "p50": 290.028548,
                    "p95": 309.07474199999996,
                    "p99": 309.07474199999996,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 175.583484,
                    "min": 0,
                    "p50": 153.641715,
                    "p95": 175.583484,
                    "p99": 175.583484,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 865.7424259999999,
                    "min": 0,
                    "p50": 745.684899,
                    "p95": 865.7424259999999,
                    "p99": 865.7424259999999,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 521.5743679999999,
                    "min": 0,
                    "p50": 477.597565,
                    "p95": 521.5743679999999,
                    "p99": 521.5743679999999,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 394.094477,
                    "min": 0,
                    "p50": 359.79837699999996,
                    "p95": 394.094477,
                    "p99": 394.094477,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 345.28813399999996,
                    "min": 0,
                    "p50": 322.48198099999996,
                    "p95": 345.28813399999996,
                    "p99": 345.28813399999996,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 238.11683599999998,
                    "min": 0,
                    "p50": 210.182512,
                    "p95": 238.11683599999998,
                    "p99": 238.11683599999998,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 591.8301389999999,
                    "min": 0,
                    "p50": 522.186107,
                    "p95": 591.8301389999999,
                    "p99": 591.8301389999999,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 122.63122999999999,
                    "min": 0,
                    "p50": 110.33081899999999,
                    "p95": 122.63122999999999,
                    "p99": 122.63122999999999,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 445.777561,
                    "min": 0,
                    "p50": 405.04767899999996,
                    "p95": 445.777561,
                    "p99": 445.777561,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 259.426069,
                    "min": 0,
                    "p50": 236.05558599999998,
                    "p95": 259.426069,
                    "p99": 259.426069,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 200.487504,
                    "min": 0,
                    "p50": 182.636082,
                    "p95": 200.487504,
                    "p99": 200.487504,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 150.119305,
                    "min": 0,
                    "p50": 132.388635,
                    "p95": 150.119305,
                    "p99": 150.119305,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "BlobHashZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 430.556154,
                    "min": 0,
                    "p50": 389.699598,
                    "p95": 430.556154,
                    "p99": 430.556154,
                    "n": 10,
                    "description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 568.9429719999999,
                    "min": 0,
                    "p50": 555.811461,
                    "p95": 568.9429719999999,
                    "p99": 568.9429719999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.702374,
                    "min": 0,
                    "p50": 127.794991,
                    "p95": 144.702374,
                    "p99": 144.702374,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 457.837228,
                    "min": 0,
                    "p50": 392.460041,
                    "p95": 457.837228,
                    "p99": 457.837228,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 427.655627,
                    "min": 0,
                    "p50": 420.05323699999997,
                    "p95": 427.655627,
                    "p99": 427.655627,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 161.07219,
                    "min": 0,
                    "p50": 156.032719,
                    "p95": 161.07219,
                    "p99": 161.07219,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 418.313586,
                    "min": 0,
                    "p50": 362.77538,
                    "p95": 418.313586,
                    "p99": 418.313586,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 485.81686199999996,
                    "min": 0,
                    "p50": 477.22731899999997,
                    "p95": 485.81686199999996,
                    "p99": 485.81686199999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 247.336334,
                    "min": 0,
                    "p50": 208.65575099999998,
                    "p95": 247.336334,
                    "p99": 247.336334,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 352.649569,
                    "min": 0,
                    "p50": 303.448105,
                    "p95": 352.649569,
                    "p99": 352.649569,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 276.46423799999997,
                    "min": 0,
                    "p50": 272.901383,
                    "p95": 276.46423799999997,
                    "p99": 276.46423799999997,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 744.8141959999999,
                    "min": 0,
                    "p50": 627.830018,
                    "p95": 744.8141959999999,
                    "p99": 744.8141959999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 383.00652399999996,
                    "min": 0,
                    "p50": 334.652716,
                    "p95": 383.00652399999996,
                    "p99": 383.00652399999996,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 246.665246,
                    "min": 0,
                    "p50": 244.144649,
                    "p95": 246.665246,
                    "p99": 246.665246,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 187.197004,
                    "min": 0,
                    "p50": 184.565691,
                    "p95": 187.197004,
                    "p99": 187.197004,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Number",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 542.010266,
                    "min": 0,
                    "p50": 452.47242,
                    "p95": 542.010266,
                    "p99": 542.010266,
                    "n": 10,
                    "description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 31.679962,
                    "min": 0,
                    "p50": 29.769896,
                    "p95": 31.679962,
                    "p99": 31.679962,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.965843,
                    "min": 0,
                    "p50": 24.420333,
                    "p95": 24.965843,
                    "p99": 24.965843,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 76.321636,
                    "min": 0,
                    "p50": 73.568657,
                    "p95": 76.321636,
                    "p99": 76.321636,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 144.31783199999998,
                    "min": 0,
                    "p50": 140.867332,
                    "p95": 144.31783199999998,
                    "p99": 144.31783199999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 25.085614999999997,
                    "min": 0,
                    "p50": 24.376244999999997,
                    "p95": 25.085614999999997,
                    "p99": 25.085614999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 26.764113,
                    "min": 0,
                    "p50": 24.743174999999997,
                    "p95": 26.764113,
                    "p99": 26.764113,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 60.301583,
                    "min": 0,
                    "p50": 58.525416,
                    "p95": 60.301583,
                    "p99": 60.301583,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 24.962473,
                    "min": 0,
                    "p50": 24.394671,
                    "p95": 24.962473,
                    "p99": 24.962473,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 65.301649,
                    "min": 0,
                    "p50": 57.041607,
                    "p95": 65.301649,
                    "p99": 65.301649,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 28.267187,
                    "min": 0,
                    "p50": 25.956917999999998,
                    "p95": 28.267187,
                    "p99": 28.267187,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 47.063247,
                    "min": 0,
                    "p50": 45.136758,
                    "p95": 47.063247,
                    "p99": 47.063247,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 26.369149999999998,
                    "min": 0,
                    "p50": 24.478792,
                    "p95": 26.369149999999998,
                    "p99": 26.369149999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 26.310779999999998,
                    "min": 0,
                    "p50": 24.396154,
                    "p95": 26.310779999999998,
                    "p99": 26.310779999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.65804,
                    "min": 0,
                    "p50": 24.367525999999998,
                    "p95": 24.65804,
                    "p99": 24.65804,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.928451,
                    "min": 0,
                    "p50": 24.441941,
                    "p95": 24.928451,
                    "p99": 24.928451,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.826123,
                    "min": 0,
                    "p50": 24.247947999999997,
                    "p95": 24.826123,
                    "p99": 24.826123,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 26.665051,
                    "min": 0,
                    "p50": 24.947955999999998,
                    "p95": 26.665051,
                    "p99": 26.665051,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 25.076172999999997,
                    "min": 0,
                    "p50": 24.260697,
                    "p95": 25.076172999999997,
                    "p99": 25.076172999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsRandomKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.774254,
                    "min": 0,
                    "p50": 24.511454,
                    "p95": 24.774254,
                    "p99": 24.774254,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in random storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 142.044544,
                    "min": 0,
                    "p50": 139.60278399999999,
                    "p95": 142.044544,
                    "p99": 142.044544,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.890812,
                    "min": 0,
                    "p50": 97.435501,
                    "p95": 98.890812,
                    "p99": 98.890812,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 204.700246,
                    "min": 0,
                    "p50": 202.273314,
                    "p95": 204.700246,
                    "p99": 204.700246,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 110.830821,
                    "min": 0,
                    "p50": 109.53487,
                    "p95": 110.830821,
                    "p99": 110.830821,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 171.48623,
                    "min": 0,
                    "p50": 168.775316,
                    "p95": 171.48623,
                    "p99": 171.48623,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 641.742681,
                    "min": 0,
                    "p50": 625.655574,
                    "p95": 641.742681,
                    "p99": 641.742681,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 159.24423199999998,
                    "min": 0,
                    "p50": 156.608161,
                    "p95": 159.24423199999998,
                    "p99": 159.24423199999998,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 192.745543,
                    "min": 0,
                    "p50": 190.441777,
                    "p95": 192.745543,
                    "p99": 192.745543,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 247.941242,
                    "min": 0,
                    "p50": 244.558978,
                    "p95": 247.941242,
                    "p99": 247.941242,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 135.892137,
                    "min": 0,
                    "p50": 131.78883,
                    "p95": 135.892137,
                    "p99": 135.892137,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 510.119978,
                    "min": 0,
                    "p50": 502.90703099999996,
                    "p95": 510.119978,
                    "p99": 510.119978,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 128.847503,
                    "min": 0,
                    "p50": 120.845264,
                    "p95": 128.847503,
                    "p99": 128.847503,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 183.295416,
                    "min": 0,
                    "p50": 176.370085,
                    "p95": 183.295416,
                    "p99": 183.295416,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 395.042462,
                    "min": 0,
                    "p50": 390.440302,
                    "p95": 395.042462,
                    "p99": 395.042462,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.224099,
                    "min": 0,
                    "p50": 86.020217,
                    "p95": 87.224099,
                    "p99": 87.224099,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1224.869718,
                    "min": 0,
                    "p50": 1210.376865,
                    "p95": 1224.869718,
                    "p99": 1224.869718,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 76.24555,
                    "min": 0,
                    "p50": 69.990115,
                    "p95": 76.24555,
                    "p99": 76.24555,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 222.425963,
                    "min": 0,
                    "p50": 215.026804,
                    "p95": 222.425963,
                    "p99": 222.425963,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyConstantValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 277.023377,
                    "min": 0,
                    "p50": 274.111993,
                    "p95": 277.023377,
                    "p99": 277.023377,
                    "n": 10,
                    "description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 24.754503,
                    "min": 0,
                    "p50": 24.327195999999997,
                    "p95": 24.754503,
                    "p99": 24.754503,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 25.390461,
                    "min": 0,
                    "p50": 24.644489999999998,
                    "p95": 25.390461,
                    "p99": 25.390461,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 25.377257999999998,
                    "min": 0,
                    "p50": 24.709187,
                    "p95": 25.377257999999998,
                    "p99": 25.377257999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.905991,
                    "min": 0,
                    "p50": 24.681507999999997,
                    "p95": 24.905991,
                    "p99": 24.905991,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.432845,
                    "min": 0,
                    "p50": 24.721626,
                    "p95": 26.432845,
                    "p99": 26.432845,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 29.350717,
                    "min": 0,
                    "p50": 26.745880999999997,
                    "p95": 29.350717,
                    "p99": 29.350717,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 24.701085,
                    "min": 0,
                    "p50": 24.425915,
                    "p95": 24.701085,
                    "p99": 24.701085,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.855096,
                    "min": 0,
                    "p50": 24.437189999999998,
                    "p95": 24.855096,
                    "p99": 24.855096,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 43.951927999999995,
                    "min": 0,
                    "p50": 42.203412,
                    "p95": 43.951927999999995,
                    "p99": 43.951927999999995,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 26.552616999999998,
                    "min": 0,
                    "p50": 24.589008,
                    "p95": 26.552616999999998,
                    "p99": 26.552616999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.619726999999997,
                    "min": 0,
                    "p50": 24.324436,
                    "p95": 24.619726999999997,
                    "p99": 24.619726999999997,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 25.469471,
                    "min": 0,
                    "p50": 24.384663999999997,
                    "p95": 25.469471,
                    "p99": 25.469471,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.858286,
                    "min": 0,
                    "p50": 24.548799,
                    "p95": 26.858286,
                    "p99": 26.858286,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 25.40872,
                    "min": 0,
                    "p50": 24.785453999999998,
                    "p95": 25.40872,
                    "p99": 25.40872,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 88.298085,
                    "min": 0,
                    "p50": 87.430014,
                    "p95": 88.298085,
                    "p99": 88.298085,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 25.318849999999998,
                    "min": 0,
                    "p50": 24.364895,
                    "p95": 25.318849999999998,
                    "p99": 25.318849999999998,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 36.263062,
                    "min": 0,
                    "p50": 34.166686,
                    "p95": 36.263062,
                    "p99": 36.263062,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 25.016678,
                    "min": 0,
                    "p50": 24.612098,
                    "p95": 25.016678,
                    "p99": 25.016678,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreManyAccountsConsecutiveKeysRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 24.970499,
                    "min": 0,
                    "p50": 24.768563999999998,
                    "p95": 24.970499,
                    "p99": 24.970499,
                    "n": 10,
                    "description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 25.172145999999998,
                    "min": 0,
                    "p50": 24.652196999999997,
                    "p95": 25.172145999999998,
                    "p99": 25.172145999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 24.939573,
                    "min": 0,
                    "p50": 24.586312,
                    "p95": 24.939573,
                    "p99": 24.939573,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 25.151864,
                    "min": 0,
                    "p50": 24.456379,
                    "p95": 25.151864,
                    "p99": 25.151864,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 25.029601,
                    "min": 0,
                    "p50": 24.573967999999997,
                    "p95": 25.029601,
                    "p99": 25.029601,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 24.886917999999998,
                    "min": 0,
                    "p50": 24.62812,
                    "p95": 24.886917999999998,
                    "p99": 24.886917999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 24.683916999999997,
                    "min": 0,
                    "p50": 24.254417999999998,
                    "p95": 24.683916999999997,
                    "p99": 24.683916999999997,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 25.605681,
                    "min": 0,
                    "p50": 24.330189999999998,
                    "p95": 25.605681,
                    "p99": 25.605681,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 24.663397,
                    "min": 0,
                    "p50": 24.334816999999997,
                    "p95": 24.663397,
                    "p99": 24.663397,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 24.531088,
                    "min": 0,
                    "p50": 24.261008999999998,
                    "p95": 24.531088,
                    "p99": 24.531088,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 26.870659,
                    "min": 0,
                    "p50": 24.458102999999998,
                    "p95": 26.870659,
                    "p99": 26.870659,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 26.228673999999998,
                    "min": 0,
                    "p50": 24.507531,
                    "p95": 26.228673999999998,
                    "p99": 26.228673999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 25.021234,
                    "min": 0,
                    "p50": 24.15301,
                    "p95": 25.021234,
                    "p99": 25.021234,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 24.502003,
                    "min": 0,
                    "p50": 24.307046999999997,
                    "p95": 24.502003,
                    "p99": 24.502003,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 25.411621,
                    "min": 0,
                    "p50": 24.206239999999998,
                    "p95": 25.411621,
                    "p99": 25.411621,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 24.765090999999998,
                    "min": 0,
                    "p50": 24.449903,
                    "p95": 24.765090999999998,
                    "p99": 24.765090999999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 48.704265,
                    "min": 0,
                    "p50": 44.788562,
                    "p95": 48.704265,
                    "p99": 48.704265,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 25.157988,
                    "min": 0,
                    "p50": 24.625787,
                    "p95": 25.157988,
                    "p99": 25.157988,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 28.671626,
                    "min": 0,
                    "p50": 24.516758,
                    "p95": 28.671626,
                    "p99": 28.671626,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyTwoValues",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 24.841845,
                    "min": 0,
                    "p50": 24.535899999999998,
                    "p95": 24.841845,
                    "p99": 24.841845,
                    "n": 10,
                    "description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 152.955233,
                    "min": 0,
                    "p50": 144.344153,
                    "p95": 152.955233,
                    "p99": 152.955233,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 74.20027499999999,
                    "min": 0,
                    "p50": 69.86512499999999,
                    "p95": 74.20027499999999,
                    "p99": 74.20027499999999,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1234.444679,
                    "min": 0,
                    "p50": 1195.637008,
                    "p95": 1234.444679,
                    "p99": 1234.444679,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 278.14711,
                    "min": 0,
                    "p50": 272.796992,
                    "p95": 278.14711,
                    "p99": 278.14711,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 124.490364,
                    "min": 0,
                    "p50": 121.85839899999999,
                    "p95": 124.490364,
                    "p99": 124.490364,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 87.825029,
                    "min": 0,
                    "p50": 83.11457399999999,
                    "p95": 87.825029,
                    "p99": 87.825029,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 111.629612,
                    "min": 0,
                    "p50": 110.145027,
                    "p95": 111.629612,
                    "p99": 111.629612,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 404.46491799999995,
                    "min": 0,
                    "p50": 391.811485,
                    "p95": 404.46491799999995,
                    "p99": 404.46491799999995,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 193.637948,
                    "min": 0,
                    "p50": 191.859577,
                    "p95": 193.637948,
                    "p99": 193.637948,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 170.867728,
                    "min": 0,
                    "p50": 167.87897999999998,
                    "p95": 170.867728,
                    "p99": 170.867728,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 518.338155,
                    "min": 0,
                    "p50": 506.919512,
                    "p95": 518.338155,
                    "p99": 518.338155,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 639.1908109999999,
                    "min": 0,
                    "p50": 626.6801409999999,
                    "p95": 639.1908109999999,
                    "p99": 639.1908109999999,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 211.176245,
                    "min": 0,
                    "p50": 204.933464,
                    "p95": 211.176245,
                    "p99": 211.176245,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 100.863382,
                    "min": 0,
                    "p50": 98.83246899999999,
                    "p95": 100.863382,
                    "p99": 100.863382,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 253.63239,
                    "min": 0,
                    "p50": 245.603026,
                    "p95": 253.63239,
                    "p99": 253.63239,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 149.181188,
                    "min": 0,
                    "p50": 145.98638599999998,
                    "p95": 149.181188,
                    "p99": 149.181188,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 181.433125,
                    "min": 0,
                    "p50": 180.883402,
                    "p95": 181.433125,
                    "p99": 181.433125,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 218.80926399999998,
                    "min": 0,
                    "p50": 215.82204299999998,
                    "p95": 218.80926399999998,
                    "p99": 218.80926399999998,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyZeroValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 134.776672,
                    "min": 0,
                    "p50": 133.138593,
                    "p95": 134.776672,
                    "p99": 134.776672,
                    "n": 10,
                    "description": "SStore - repeating storing zero in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 760.347586,
                    "min": 0,
                    "p50": 754.980315,
                    "p95": 760.347586,
                    "p99": 760.347586,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 132.586954,
                    "min": 0,
                    "p50": 130.839011,
                    "p95": 132.586954,
                    "p99": 132.586954,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 252.10799899999998,
                    "min": 0,
                    "p50": 248.733592,
                    "p95": 252.10799899999998,
                    "p99": 252.10799899999998,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 384.905234,
                    "min": 0,
                    "p50": 377.281701,
                    "p95": 384.905234,
                    "p99": 384.905234,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 150.831154,
                    "min": 0,
                    "p50": 148.763563,
                    "p95": 150.831154,
                    "p99": 150.831154,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 400.821097,
                    "min": 0,
                    "p50": 395.47519,
                    "p95": 400.821097,
                    "p99": 400.821097,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 232.97590799999998,
                    "min": 0,
                    "p50": 225.986992,
                    "p95": 232.97590799999998,
                    "p99": 232.97590799999998,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 447.47216499999996,
                    "min": 0,
                    "p50": 444.32307599999996,
                    "p95": 447.47216499999996,
                    "p99": 447.47216499999996,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 190.614938,
                    "min": 0,
                    "p50": 185.51786199999998,
                    "p95": 190.614938,
                    "p99": 190.614938,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 268.245257,
                    "min": 0,
                    "p50": 266.029652,
                    "p95": 268.245257,
                    "p99": 268.245257,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 952.669232,
                    "min": 0,
                    "p50": 941.797952,
                    "p95": 952.669232,
                    "p99": 952.669232,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 286.539566,
                    "min": 0,
                    "p50": 282.785245,
                    "p95": 286.539566,
                    "p99": 286.539566,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 208.068719,
                    "min": 0,
                    "p50": 204.543478,
                    "p95": 208.068719,
                    "p99": 208.068719,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 343.624123,
                    "min": 0,
                    "p50": 334.24314,
                    "p95": 343.624123,
                    "p99": 343.624123,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 111.393045,
                    "min": 0,
                    "p50": 106.78483399999999,
                    "p95": 111.393045,
                    "p99": 111.393045,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 357.834991,
                    "min": 0,
                    "p50": 352.50136,
                    "p95": 357.834991,
                    "p99": 357.834991,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 494.631786,
                    "min": 0,
                    "p50": 489.755718,
                    "p95": 494.631786,
                    "p99": 494.631786,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "SStoreOneAccountOneKeyRandomValue",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1273.873891,
                    "min": 0,
                    "p50": 1263.214305,
                    "p95": 1273.873891,
                    "p99": 1273.873891,
                    "n": 10,
                    "description": "SStore - repeating storing random 32-byte values in single storage key of single account"
                },
                {
                    "test_case": "Origin",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 215.41376699999998,
                    "min": 0,
                    "p50": 212.10701799999998,
                    "p95": 215.41376699999998,
                    "p99": 215.41376699999998,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 389.74996999999996,
                    "min": 0,
                    "p50": 385.27067999999997,
                    "p95": 389.74996999999996,
                    "p99": 389.74996999999996,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 334.021326,
                    "min": 0,
                    "p50": 323.11297099999996,
                    "p95": 334.021326,
                    "p99": 334.021326,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 620.32204,
                    "min": 0,
                    "p50": 608.975794,
                    "p95": 620.32204,
                    "p99": 620.32204,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 558.561641,
                    "min": 0,
                    "p50": 554.018734,
                    "p95": 558.561641,
                    "p99": 558.561641,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 737.5817619999999,
                    "min": 0,
                    "p50": 729.8520589999999,
                    "p95": 737.5817619999999,
                    "p99": 737.5817619999999,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 913.590423,
                    "min": 0,
                    "p50": 895.5556869999999,
                    "p95": 913.590423,
                    "p99": 913.590423,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 794.554027,
                    "min": 0,
                    "p50": 779.093993,
                    "p95": 794.554027,
                    "p99": 794.554027,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 679.015795,
                    "min": 0,
                    "p50": 666.39409,
                    "p95": 679.015795,
                    "p99": 679.015795,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1211.074744,
                    "min": 0,
                    "p50": 1187.4792559999999,
                    "p95": 1211.074744,
                    "p99": 1211.074744,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 447.889076,
                    "min": 0,
                    "p50": 441.73899,
                    "p95": 447.889076,
                    "p99": 447.889076,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 272.248019,
                    "min": 0,
                    "p50": 269.713931,
                    "p95": 272.248019,
                    "p99": 272.248019,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1053.943534,
                    "min": 0,
                    "p50": 1041.4643019999999,
                    "p95": 1053.943534,
                    "p99": 1053.943534,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 503.04209,
                    "min": 0,
                    "p50": 495.34365199999996,
                    "p95": 503.04209,
                    "p99": 503.04209,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Origin",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 849.761588,
                    "min": 0,
                    "p50": 840.469334,
                    "p95": 849.761588,
                    "p99": 849.761588,
                    "n": 10,
                    "description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 947.5206499999999,
                    "min": 0,
                    "p50": 934.730693,
                    "p95": 947.5206499999999,
                    "p99": 947.5206499999999,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2039.767905,
                    "min": 0,
                    "p50": 2012.7617779999998,
                    "p95": 2039.767905,
                    "p99": 2039.767905,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2898.9014859999997,
                    "min": 0,
                    "p50": 2855.724761,
                    "p95": 2898.9014859999997,
                    "p99": 2898.9014859999997,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5753.154297,
                    "min": 0,
                    "p50": 5693.0680059999995,
                    "p95": 5753.154297,
                    "p99": 5753.154297,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1608.245058,
                    "min": 0,
                    "p50": 1590.363689,
                    "p95": 1608.245058,
                    "p99": 1608.245058,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 753.003257,
                    "min": 0,
                    "p50": 741.092458,
                    "p95": 753.003257,
                    "p99": 753.003257,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 608.882287,
                    "min": 0,
                    "p50": 603.528695,
                    "p95": 608.882287,
                    "p99": 608.882287,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1751.442845,
                    "min": 0,
                    "p50": 1727.479713,
                    "p95": 1751.442845,
                    "p99": 1751.442845,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 4293.853183,
                    "min": 0,
                    "p50": 4268.757082,
                    "p95": 4293.853183,
                    "p99": 4293.853183,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2523.270303,
                    "min": 0,
                    "p50": 2508.378925,
                    "p95": 2523.270303,
                    "p99": 2523.270303,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2180.535808,
                    "min": 0,
                    "p50": 2158.187716,
                    "p95": 2180.535808,
                    "p99": 2180.535808,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1180.443467,
                    "min": 0,
                    "p50": 1165.373032,
                    "p95": 1180.443467,
                    "p99": 1180.443467,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1471.174342,
                    "min": 0,
                    "p50": 1447.1071929999998,
                    "p95": 1471.174342,
                    "p99": 1471.174342,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1044.053472,
                    "min": 0,
                    "p50": 1024.4455329999998,
                    "p95": 1044.053472,
                    "p99": 1044.053472,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 467.032925,
                    "min": 0,
                    "p50": 462.90425799999997,
                    "p95": 467.032925,
                    "p99": 467.032925,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1882.86493,
                    "min": 0,
                    "p50": 1868.0097759999999,
                    "p95": 1882.86493,
                    "p99": 1882.86493,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "PointEvaluationOneData",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1332.900612,
                    "min": 0,
                    "p50": 1310.45495,
                    "p95": 1332.900612,
                    "p99": 1332.900612,
                    "n": 10,
                    "description": "Point evaluation precompile repeating computations on the same data"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 434.094786,
                    "min": 0,
                    "p50": 428.177324,
                    "p95": 434.094786,
                    "p99": 434.094786,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1320.0812469999998,
                    "min": 0,
                    "p50": 1306.1567089999999,
                    "p95": 1320.0812469999998,
                    "p99": 1320.0812469999998,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 2660.377582,
                    "min": 0,
                    "p50": 2615.310604,
                    "p95": 2660.377582,
                    "p99": 2660.377582,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 1472.4793049999998,
                    "min": 0,
                    "p50": 1448.9176109999999,
                    "p95": 1472.4793049999998,
                    "p99": 1472.4793049999998,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 3859.2808229999996,
                    "min": 0,
                    "p50": 3801.438722,
                    "p95": 3859.2808229999996,
                    "p99": 3859.2808229999996,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 820.830564,
                    "min": 0,
                    "p50": 809.3167149999999,
                    "p95": 820.830564,
                    "p99": 820.830564,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1217.8088289999998,
                    "min": 0,
                    "p50": 1203.559407,
                    "p95": 1217.8088289999998,
                    "p99": 1217.8088289999998,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 5042.976763,
                    "min": 0,
                    "p50": 5009.326607999999,
                    "p95": 5042.976763,
                    "p99": 5042.976763,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 700.40572,
                    "min": 0,
                    "p50": 691.790043,
                    "p95": 700.40572,
                    "p99": 700.40572,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 1755.4147679999999,
                    "min": 0,
                    "p50": 1727.551864,
                    "p95": 1755.4147679999999,
                    "p99": 1755.4147679999999,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 931.731541,
                    "min": 0,
                    "p50": 921.3407609999999,
                    "p95": 931.731541,
                    "p99": 931.731541,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 553.2571839999999,
                    "min": 0,
                    "p50": 547.659893,
                    "p95": 553.2571839999999,
                    "p99": 553.2571839999999,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2002.157927,
                    "min": 0,
                    "p50": 1967.9531279999999,
                    "p95": 2002.157927,
                    "p99": 2002.157927,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1865.057116,
                    "min": 0,
                    "p50": 1847.43194,
                    "p95": 1865.057116,
                    "p99": 1865.057116,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 2282.438127,
                    "min": 0,
                    "p50": 2241.175062,
                    "p95": 2282.438127,
                    "p99": 2282.438127,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1063.238067,
                    "min": 0,
                    "p50": 1047.1197829999999,
                    "p95": 1063.238067,
                    "p99": 1063.238067,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcRecover",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 1588.424865,
                    "min": 0,
                    "p50": 1572.765465,
                    "p95": 1588.424865,
                    "p99": 1588.424865,
                    "n": 10,
                    "description": "EcRecover precompile calculations"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 912.813399,
                    "min": 0,
                    "p50": 894.257534,
                    "p95": 912.813399,
                    "p99": 912.813399,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 656.677196,
                    "min": 0,
                    "p50": 646.6283099999999,
                    "p95": 656.677196,
                    "p99": 656.677196,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1265.4467769999999,
                    "min": 0,
                    "p50": 1259.343784,
                    "p95": 1265.4467769999999,
                    "p99": 1265.4467769999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1908.968549,
                    "min": 0,
                    "p50": 1863.767615,
                    "p95": 1908.968549,
                    "p99": 1908.968549,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 6228.549202,
                    "min": 0,
                    "p50": 6137.372807,
                    "p95": 6228.549202,
                    "p99": 6228.549202,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2531.115348,
                    "min": 0,
                    "p50": 2477.2683589999997,
                    "p95": 2531.115348,
                    "p99": 2531.115348,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 723.049414,
                    "min": 0,
                    "p50": 707.074161,
                    "p95": 723.049414,
                    "p99": 723.049414,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 227.850227,
                    "min": 0,
                    "p50": 224.380864,
                    "p95": 227.850227,
                    "p99": 227.850227,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 3140.10484,
                    "min": 0,
                    "p50": 3108.929811,
                    "p95": 3140.10484,
                    "p99": 3140.10484,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 475.622432,
                    "min": 0,
                    "p50": 468.776014,
                    "p95": 475.622432,
                    "p99": 475.622432,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 536.447103,
                    "min": 0,
                    "p50": 528.835548,
                    "p95": 536.447103,
                    "p99": 536.447103,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 597.412603,
                    "min": 0,
                    "p50": 588.992224,
                    "p95": 597.412603,
                    "p99": 597.412603,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1131.379537,
                    "min": 0,
                    "p50": 1110.734046,
                    "p95": 1131.379537,
                    "p99": 1131.379537,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 350.232799,
                    "min": 0,
                    "p50": 345.536182,
                    "p95": 350.232799,
                    "p99": 350.232799,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 420.98756799999995,
                    "min": 0,
                    "p50": 407.751013,
                    "p95": 420.98756799999995,
                    "p99": 420.98756799999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 980.058954,
                    "min": 0,
                    "p50": 955.449667,
                    "p95": 980.058954,
                    "p99": 980.058954,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 792.35888,
                    "min": 0,
                    "p50": 771.575256,
                    "p95": 792.35888,
                    "p99": 792.35888,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 292.527411,
                    "min": 0,
                    "p50": 284.198316,
                    "p95": 292.527411,
                    "p99": 292.527411,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMulInfinities32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 845.591633,
                    "min": 0,
                    "p50": 831.949075,
                    "p95": 845.591633,
                    "p99": 845.591633,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3430.581957,
                    "min": 0,
                    "p50": 3367.139275,
                    "p95": 3430.581957,
                    "p99": 3430.581957,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1390.131449,
                    "min": 0,
                    "p50": 1377.604924,
                    "p95": 1390.131449,
                    "p99": 1390.131449,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1009.131551,
                    "min": 0,
                    "p50": 994.288295,
                    "p95": 1009.131551,
                    "p99": 1009.131551,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2374.5233359999997,
                    "min": 0,
                    "p50": 2312.530844,
                    "p95": 2374.5233359999997,
                    "p99": 2374.5233359999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1587.3920249999999,
                    "min": 0,
                    "p50": 1561.336687,
                    "p95": 1587.3920249999999,
                    "p99": 1587.3920249999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 7690.9549879999995,
                    "min": 0,
                    "p50": 7653.212602,
                    "p95": 7690.9549879999995,
                    "p99": 7690.9549879999995,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2154.903186,
                    "min": 0,
                    "p50": 2137.858979,
                    "p95": 2154.903186,
                    "p99": 2154.903186,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1201.930437,
                    "min": 0,
                    "p50": 1184.762532,
                    "p95": 1201.930437,
                    "p99": 1201.930437,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2549.8711249999997,
                    "min": 0,
                    "p50": 2505.0323719999997,
                    "p95": 2549.8711249999997,
                    "p99": 2549.8711249999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5819.512267,
                    "min": 0,
                    "p50": 5747.909508,
                    "p95": 5819.512267,
                    "p99": 5819.512267,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2963.36389,
                    "min": 0,
                    "p50": 2882.847409,
                    "p95": 2963.36389,
                    "p99": 2963.36389,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3928.9052469999997,
                    "min": 0,
                    "p50": 3843.769437,
                    "p95": 3928.9052469999997,
                    "p99": 3928.9052469999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 622.447738,
                    "min": 0,
                    "p50": 600.879153,
                    "p95": 622.447738,
                    "p99": 622.447738,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2797.027075,
                    "min": 0,
                    "p50": 2707.9532609999997,
                    "p95": 2797.027075,
                    "p99": 2797.027075,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 819.897039,
                    "min": 0,
                    "p50": 803.0190779999999,
                    "p95": 819.897039,
                    "p99": 819.897039,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1979.7710869999999,
                    "min": 0,
                    "p50": 1947.6135749999999,
                    "p95": 1979.7710869999999,
                    "p99": 1979.7710869999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1785.432357,
                    "min": 0,
                    "p50": 1769.148436,
                    "p95": 1785.432357,
                    "p99": 1785.432357,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 2936.105882,
                    "min": 0,
                    "p50": 2890.2189479999997,
                    "p95": 2936.105882,
                    "p99": 2936.105882,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 806.328507,
                    "min": 0,
                    "p50": 797.0451979999999,
                    "p95": 806.328507,
                    "p99": 806.328507,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1762.895943,
                    "min": 0,
                    "p50": 1747.9399039999998,
                    "p95": 1762.895943,
                    "p99": 1762.895943,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 2532.064195,
                    "min": 0,
                    "p50": 2520.131661,
                    "p95": 2532.064195,
                    "p99": 2532.064195,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1962.0483689999999,
                    "min": 0,
                    "p50": 1936.637778,
                    "p95": 1962.0483689999999,
                    "p99": 1962.0483689999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 2150.545916,
                    "min": 0,
                    "p50": 2127.456217,
                    "p95": 2150.545916,
                    "p99": 2150.545916,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 3887.130852,
                    "min": 0,
                    "p50": 3835.512304,
                    "p95": 3887.130852,
                    "p99": 3887.130852,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 5829.421582999999,
                    "min": 0,
                    "p50": 5706.9561539999995,
                    "p95": 5829.421582999999,
                    "p99": 5829.421582999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 2396.2005879999997,
                    "min": 0,
                    "p50": 2318.040247,
                    "p95": 2396.2005879999997,
                    "p99": 2396.2005879999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 1026.002339,
                    "min": 0,
                    "p50": 998.340204,
                    "p95": 1026.002339,
                    "p99": 1026.002339,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 620.504636,
                    "min": 0,
                    "p50": 607.694407,
                    "p95": 620.504636,
                    "p99": 620.504636,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 1209.5409459999998,
                    "min": 0,
                    "p50": 1174.330588,
                    "p95": 1209.5409459999998,
                    "p99": 1209.5409459999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 3400.229836,
                    "min": 0,
                    "p50": 3361.533167,
                    "p95": 3400.229836,
                    "p99": 3400.229836,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1403.9061729999999,
                    "min": 0,
                    "p50": 1371.87508,
                    "p95": 1403.9061729999999,
                    "p99": 1403.9061729999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 2761.399748,
                    "min": 0,
                    "p50": 2698.8879079999997,
                    "p95": 2761.399748,
                    "p99": 2761.399748,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul12And32ByteScalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1586.2313299999998,
                    "min": 0,
                    "p50": 1558.70011,
                    "p95": 1586.2313299999998,
                    "p99": 1586.2313299999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 929.8213099999999,
                    "min": 0,
                    "p50": 922.7670929999999,
                    "p95": 929.8213099999999,
                    "p99": 929.8213099999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 164.17994299999998,
                    "min": 0,
                    "p50": 161.974662,
                    "p95": 164.17994299999998,
                    "p99": 164.17994299999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 481.966706,
                    "min": 0,
                    "p50": 476.132771,
                    "p95": 481.966706,
                    "p99": 481.966706,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 103.82509399999999,
                    "min": 0,
                    "p50": 100.45766599999999,
                    "p95": 103.82509399999999,
                    "p99": 103.82509399999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.838006,
                    "min": 0,
                    "p50": 70.061798,
                    "p95": 78.838006,
                    "p99": 78.838006,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 148.06542299999998,
                    "min": 0,
                    "p50": 140.220905,
                    "p95": 148.06542299999998,
                    "p99": 148.06542299999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 396.31321099999997,
                    "min": 0,
                    "p50": 391.598258,
                    "p95": 396.31321099999997,
                    "p99": 396.31321099999997,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 179.314503,
                    "min": 0,
                    "p50": 172.521214,
                    "p95": 179.314503,
                    "p99": 179.314503,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 154.406411,
                    "min": 0,
                    "p50": 151.90569299999999,
                    "p95": 154.406411,
                    "p99": 154.406411,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 195.720349,
                    "min": 0,
                    "p50": 188.915615,
                    "p95": 195.720349,
                    "p99": 195.720349,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 86.087058,
                    "min": 0,
                    "p50": 83.221057,
                    "p95": 86.087058,
                    "p99": 86.087058,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 139.77058399999999,
                    "min": 0,
                    "p50": 134.319443,
                    "p95": 139.77058399999999,
                    "p99": 139.77058399999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 61.659563999999996,
                    "min": 0,
                    "p50": 52.966837,
                    "p95": 61.659563999999996,
                    "p99": 61.659563999999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 114.895071,
                    "min": 0,
                    "p50": 109.483058,
                    "p95": 114.895071,
                    "p99": 114.895071,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 96.550963,
                    "min": 0,
                    "p50": 94.73739599999999,
                    "p95": 96.550963,
                    "p99": 96.550963,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 121.315452,
                    "min": 0,
                    "p50": 118.710476,
                    "p95": 121.315452,
                    "p99": 121.315452,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 129.145747,
                    "min": 0,
                    "p50": 127.21134699999999,
                    "p95": 129.145747,
                    "p99": 129.145747,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 310.155507,
                    "min": 0,
                    "p50": 305.20480599999996,
                    "p95": 310.155507,
                    "p99": 310.155507,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMul32ByteCoordinates2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 217.12881199999998,
                    "min": 0,
                    "p50": 202.476342,
                    "p95": 217.12881199999998,
                    "p99": 217.12881199999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 28.985853,
                    "min": 0,
                    "p50": 26.499658,
                    "p95": 28.985853,
                    "p99": 28.985853,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 127.97066099999999,
                    "min": 0,
                    "p50": 123.511158,
                    "p95": 127.97066099999999,
                    "p99": 127.97066099999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 106.78055599999999,
                    "min": 0,
                    "p50": 103.324809,
                    "p95": 106.78055599999999,
                    "p99": 106.78055599999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 83.07262999999999,
                    "min": 0,
                    "p50": 82.529118,
                    "p95": 83.07262999999999,
                    "p99": 83.07262999999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 45.46037,
                    "min": 0,
                    "p50": 43.117455,
                    "p95": 45.46037,
                    "p99": 45.46037,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 267.73452499999996,
                    "min": 0,
                    "p50": 263.713374,
                    "p95": 267.73452499999996,
                    "p99": 267.73452499999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 152.688963,
                    "min": 0,
                    "p50": 149.70694,
                    "p95": 152.688963,
                    "p99": 152.688963,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 61.39772,
                    "min": 0,
                    "p50": 52.574224,
                    "p95": 61.39772,
                    "p99": 61.39772,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 64.138223,
                    "min": 0,
                    "p50": 61.289401,
                    "p95": 64.138223,
                    "p99": 64.138223,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 39.365542,
                    "min": 0,
                    "p50": 35.601816,
                    "p95": 39.365542,
                    "p99": 39.365542,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 45.477835,
                    "min": 0,
                    "p50": 33.043312,
                    "p95": 45.477835,
                    "p99": 45.477835,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 26.203884,
                    "min": 0,
                    "p50": 24.777155999999998,
                    "p95": 26.203884,
                    "p99": 26.203884,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 84.411785,
                    "min": 0,
                    "p50": 74.316131,
                    "p95": 84.411785,
                    "p99": 84.411785,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 51.735493999999996,
                    "min": 0,
                    "p50": 49.175596999999996,
                    "p95": 51.735493999999996,
                    "p99": 51.735493999999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 73.868839,
                    "min": 0,
                    "p50": 65.42822699999999,
                    "p95": 73.868839,
                    "p99": 73.868839,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 34.885325,
                    "min": 0,
                    "p50": 30.917334999999998,
                    "p95": 34.885325,
                    "p99": 34.885325,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 58.623886999999996,
                    "min": 0,
                    "p50": 55.907942,
                    "p95": 58.623886999999996,
                    "p99": 58.623886999999996,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 26.737005,
                    "min": 0,
                    "p50": 24.383969999999998,
                    "p95": 26.737005,
                    "p99": 26.737005,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMulInfinities2Scalar",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 28.380684,
                    "min": 0,
                    "p50": 24.440196999999998,
                    "p95": 28.380684,
                    "p99": 28.380684,
                    "n": 10,
                    "description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 217.999921,
                    "min": 0,
                    "p50": 213.721769,
                    "p95": 217.999921,
                    "p99": 217.999921,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 123.095886,
                    "min": 0,
                    "p50": 119.70725399999999,
                    "p95": 123.095886,
                    "p99": 123.095886,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 244.150588,
                    "min": 0,
                    "p50": 240.248305,
                    "p95": 244.150588,
                    "p99": 244.150588,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 111.14518199999999,
                    "min": 0,
                    "p50": 109.76433899999999,
                    "p95": 111.14518199999999,
                    "p99": 111.14518199999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.834673,
                    "min": 0,
                    "p50": 95.162888,
                    "p95": 103.834673,
                    "p99": 103.834673,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 82.857868,
                    "min": 0,
                    "p50": 79.741198,
                    "p95": 82.857868,
                    "p99": 82.857868,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 186.44062699999998,
                    "min": 0,
                    "p50": 181.24992999999998,
                    "p95": 186.44062699999998,
                    "p99": 186.44062699999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 154.701054,
                    "min": 0,
                    "p50": 150.241967,
                    "p95": 154.701054,
                    "p99": 154.701054,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 348.708867,
                    "min": 0,
                    "p50": 340.613088,
                    "p95": 348.708867,
                    "p99": 348.708867,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 132.211918,
                    "min": 0,
                    "p50": 130.178533,
                    "p95": 132.211918,
                    "p99": 132.211918,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1067.845128,
                    "min": 0,
                    "p50": 1054.092383,
                    "p95": 1067.845128,
                    "p99": 1067.845128,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 98.017423,
                    "min": 0,
                    "p50": 89.779023,
                    "p95": 98.017423,
                    "p99": 98.017423,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 174.91154699999998,
                    "min": 0,
                    "p50": 169.937358,
                    "p95": 174.91154699999998,
                    "p99": 174.91154699999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 162.50710899999999,
                    "min": 0,
                    "p50": 156.324751,
                    "p95": 162.50710899999999,
                    "p99": 162.50710899999999,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 447.996804,
                    "min": 0,
                    "p50": 441.499219,
                    "p95": 447.996804,
                    "p99": 447.996804,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.92946,
                    "min": 0,
                    "p50": 60.611701,
                    "p95": 63.92946,
                    "p99": 63.92946,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 193.47931599999998,
                    "min": 0,
                    "p50": 190.23408799999999,
                    "p95": 193.47931599999998,
                    "p99": 193.47931599999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 141.65759599999998,
                    "min": 0,
                    "p50": 139.882953,
                    "p95": 141.65759599999998,
                    "p99": 141.65759599999998,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "EcMul122",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 549.985456,
                    "min": 0,
                    "p50": 542.59673,
                    "p95": 549.985456,
                    "p99": 549.985456,
                    "n": 10,
                    "description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1150.408146,
                    "min": 0,
                    "p50": 1133.120019,
                    "p95": 1150.408146,
                    "p99": 1150.408146,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 996.866819,
                    "min": 0,
                    "p50": 972.016315,
                    "p95": 996.866819,
                    "p99": 996.866819,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1466.812203,
                    "min": 0,
                    "p50": 1451.8999959999999,
                    "p95": 1466.812203,
                    "p99": 1466.812203,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 506.57496399999997,
                    "min": 0,
                    "p50": 501.51820499999997,
                    "p95": 506.57496399999997,
                    "p99": 506.57496399999997,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 665.9401349999999,
                    "min": 0,
                    "p50": 652.658999,
                    "p95": 665.9401349999999,
                    "p99": 665.9401349999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1302.4035959999999,
                    "min": 0,
                    "p50": 1286.503148,
                    "p95": 1302.4035959999999,
                    "p99": 1302.4035959999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 835.228608,
                    "min": 0,
                    "p50": 816.185258,
                    "p95": 835.228608,
                    "p99": 835.228608,
                    "n": 10,
                    "description": "Blake2f precompile with 1_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 1536.503233,
                    "min": 0,
                    "p50": 1524.030924,
                    "p95": 1536.503233,
                    "p99": 1536.503233,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 485.94839399999995,
                    "min": 0,
                    "p50": 480.784069,
                    "p95": 485.94839399999995,
                    "p99": 485.94839399999995,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1241.222992,
                    "min": 0,
                    "p50": 1222.782984,
                    "p95": 1241.222992,
                    "p99": 1241.222992,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 938.2125229999999,
                    "min": 0,
                    "p50": 916.4844969999999,
                    "p95": 938.2125229999999,
                    "p99": 938.2125229999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1080.7364989999999,
                    "min": 0,
                    "p50": 1063.068659,
                    "p95": 1080.7364989999999,
                    "p99": 1080.7364989999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1400.796151,
                    "min": 0,
                    "p50": 1367.166153,
                    "p95": 1400.796151,
                    "p99": 1400.796151,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 638.266621,
                    "min": 0,
                    "p50": 627.382616,
                    "p95": 638.266621,
                    "p99": 638.266621,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1KRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 781.640146,
                    "min": 0,
                    "p50": 774.176742,
                    "p95": 781.640146,
                    "p99": 781.640146,
                    "n": 10,
                    "description": "Blake2f precompile with 1000 rounds of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 292.561756,
                    "min": 0,
                    "p50": 278.381325,
                    "p95": 292.561756,
                    "p99": 292.561756,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 484.968957,
                    "min": 0,
                    "p50": 457.755248,
                    "p95": 484.968957,
                    "p99": 484.968957,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 596.4847609999999,
                    "min": 0,
                    "p50": 568.349277,
                    "p95": 596.4847609999999,
                    "p99": 596.4847609999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 410.587357,
                    "min": 0,
                    "p50": 406.55918099999997,
                    "p95": 410.587357,
                    "p99": 410.587357,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 783.3992109999999,
                    "min": 0,
                    "p50": 773.512246,
                    "p95": 783.3992109999999,
                    "p99": 783.3992109999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 224.704914,
                    "min": 0,
                    "p50": 220.585083,
                    "p95": 224.704914,
                    "p99": 224.704914,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 666.751939,
                    "min": 0,
                    "p50": 658.540203,
                    "p95": 666.751939,
                    "p99": 666.751939,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 535.552513,
                    "min": 0,
                    "p50": 531.0560389999999,
                    "p95": 535.552513,
                    "p99": 535.552513,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 324.40365499999996,
                    "min": 0,
                    "p50": 317.685999,
                    "p95": 324.40365499999996,
                    "p99": 324.40365499999996,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake1Round",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 683.2224659999999,
                    "min": 0,
                    "p50": 668.903358,
                    "p95": 683.2224659999999,
                    "p99": 683.2224659999999,
                    "n": 10,
                    "description": "Blake2f precompile with 1 round of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 1010.7410649999999,
                    "min": 0,
                    "p50": 988.1253509999999,
                    "p95": 1010.7410649999999,
                    "p99": 1010.7410649999999,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 1322.525011,
                    "min": 0,
                    "p50": 1302.151764,
                    "p95": 1322.525011,
                    "p99": 1322.525011,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 360.288121,
                    "min": 0,
                    "p50": 355.67609999999996,
                    "p95": 360.288121,
                    "p99": 360.288121,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 684.49945,
                    "min": 0,
                    "p50": 670.485914,
                    "p95": 684.49945,
                    "p99": 684.49945,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 1174.393067,
                    "min": 0,
                    "p50": 1143.6591899999999,
                    "p95": 1174.393067,
                    "p99": 1174.393067,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 521.6394399999999,
                    "min": 0,
                    "p50": 515.693071,
                    "p95": 521.6394399999999,
                    "p99": 521.6394399999999,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "Blake10MRounds",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 846.877713,
                    "min": 0,
                    "p50": 830.4352,
                    "p95": 846.877713,
                    "p99": 846.877713,
                    "n": 10,
                    "description": "Blake2f precompile with 10_000_000 rounds of computations"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 631.193177,
                    "min": 0,
                    "p50": 615.9077679999999,
                    "p95": 631.193177,
                    "p99": 631.193177,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 326.72402999999997,
                    "min": 0,
                    "p50": 309.73658,
                    "p95": 326.72402999999997,
                    "p99": 326.72402999999997,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 204.62881,
                    "min": 0,
                    "p50": 186.553653,
                    "p95": 204.62881,
                    "p99": 204.62881,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 583.833459,
                    "min": 0,
                    "p50": 544.95436,
                    "p95": 583.833459,
                    "p99": 583.833459,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 457.85661899999997,
                    "min": 0,
                    "p50": 446.020229,
                    "p95": 457.85661899999997,
                    "p99": 457.85661899999997,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 370.893527,
                    "min": 0,
                    "p50": 336.89124,
                    "p95": 370.893527,
                    "p99": 370.893527,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 532.1885219999999,
                    "min": 0,
                    "p50": 505.66699,
                    "p95": 532.1885219999999,
                    "p99": 532.1885219999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 241.644644,
                    "min": 0,
                    "p50": 224.438034,
                    "p95": 241.644644,
                    "p99": 241.644644,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 156.333349,
                    "min": 0,
                    "p50": 145.034776,
                    "p95": 156.333349,
                    "p99": 156.333349,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 771.0809059999999,
                    "min": 0,
                    "p50": 715.177101,
                    "p95": 771.0809059999999,
                    "p99": 771.0809059999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 660.259421,
                    "min": 0,
                    "p50": 621.520733,
                    "p95": 660.259421,
                    "p99": 660.259421,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 872.950284,
                    "min": 0,
                    "p50": 809.280185,
                    "p95": 872.950284,
                    "p99": 872.950284,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 408.551611,
                    "min": 0,
                    "p50": 374.126217,
                    "p95": 408.551611,
                    "p99": 408.551611,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 466.080408,
                    "min": 0,
                    "p50": 457.188984,
                    "p95": 466.080408,
                    "p99": 466.080408,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 279.514631,
                    "min": 0,
                    "p50": 267.736858,
                    "p95": 279.514631,
                    "p99": 279.514631,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 517.478293,
                    "min": 0,
                    "p50": 470.64651999999995,
                    "p95": 517.478293,
                    "p99": 517.478293,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 207.89351399999998,
                    "min": 0,
                    "p50": 205.28442099999998,
                    "p95": 207.89351399999998,
                    "p99": 207.89351399999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 601.264055,
                    "min": 0,
                    "p50": 545.5301479999999,
                    "p95": 601.264055,
                    "p99": 601.264055,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 413.80949799999996,
                    "min": 0,
                    "p50": 371.90321,
                    "p95": 413.80949799999996,
                    "p99": 413.80949799999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.18402,
                    "min": 0,
                    "p50": 176.592988,
                    "p95": 181.18402,
                    "p99": 181.18402,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 240.214544,
                    "min": 0,
                    "p50": 236.41887899999998,
                    "p95": 240.214544,
                    "p99": 240.214544,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 488.841999,
                    "min": 0,
                    "p50": 446.05093,
                    "p95": 488.841999,
                    "p99": 488.841999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 556.9703939999999,
                    "min": 0,
                    "p50": 519.766433,
                    "p95": 556.9703939999999,
                    "p99": 556.9703939999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 786.580102,
                    "min": 0,
                    "p50": 725.855735,
                    "p95": 786.580102,
                    "p99": 786.580102,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 290.21806699999996,
                    "min": 0,
                    "p50": 270.972767,
                    "p95": 290.21806699999996,
                    "p99": 290.21806699999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 689.153291,
                    "min": 0,
                    "p50": 625.66289,
                    "p95": 689.153291,
                    "p99": 689.153291,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 329.673114,
                    "min": 0,
                    "p50": 308.843249,
                    "p95": 329.673114,
                    "p99": 329.673114,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 440.70564299999995,
                    "min": 0,
                    "p50": 415.595667,
                    "p95": 440.70564299999995,
                    "p99": 440.70564299999995,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 376.273547,
                    "min": 0,
                    "p50": 363.316057,
                    "p95": 376.273547,
                    "p99": 376.273547,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 145.656893,
                    "min": 0,
                    "p50": 138.151513,
                    "p95": 145.656893,
                    "p99": 145.656893,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 242.606269,
                    "min": 0,
                    "p50": 219.504496,
                    "p95": 242.606269,
                    "p99": 242.606269,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 363.163049,
                    "min": 0,
                    "p50": 331.902839,
                    "p95": 363.163049,
                    "p99": 363.163049,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 321.82280399999996,
                    "min": 0,
                    "p50": 298.059419,
                    "p95": 321.82280399999996,
                    "p99": 321.82280399999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 742.493396,
                    "min": 0,
                    "p50": 698.188457,
                    "p95": 742.493396,
                    "p99": 742.493396,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 648.156533,
                    "min": 0,
                    "p50": 585.589079,
                    "p95": 648.156533,
                    "p99": 648.156533,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 151.70559699999998,
                    "min": 0,
                    "p50": 145.704847,
                    "p95": 151.70559699999998,
                    "p99": 151.70559699999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 478.46937199999996,
                    "min": 0,
                    "p50": 444.18449699999996,
                    "p95": 478.46937199999996,
                    "p99": 478.46937199999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 439.160347,
                    "min": 0,
                    "p50": 430.220381,
                    "p95": 439.160347,
                    "p99": 439.160347,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 190.651195,
                    "min": 0,
                    "p50": 181.938977,
                    "p95": 190.651195,
                    "p99": 190.651195,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 531.5936409999999,
                    "min": 0,
                    "p50": 477.381621,
                    "p95": 531.5936409999999,
                    "p99": 531.5936409999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 398.727306,
                    "min": 0,
                    "p50": 363.658751,
                    "p95": 398.727306,
                    "p99": 398.727306,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 856.145764,
                    "min": 0,
                    "p50": 816.501145,
                    "p95": 856.145764,
                    "p99": 856.145764,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 611.183688,
                    "min": 0,
                    "p50": 552.399226,
                    "p95": 611.183688,
                    "p99": 611.183688,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 285.848211,
                    "min": 0,
                    "p50": 258.260269,
                    "p95": 285.848211,
                    "p99": 285.848211,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 558.8455379999999,
                    "min": 0,
                    "p50": 540.281491,
                    "p95": 558.8455379999999,
                    "p99": 558.8455379999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 859.79214,
                    "min": 0,
                    "p50": 829.9154699999999,
                    "p95": 859.79214,
                    "p99": 859.79214,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 201.71164399999998,
                    "min": 0,
                    "p50": 187.420468,
                    "p95": 201.71164399999998,
                    "p99": 201.71164399999998,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 408.520859,
                    "min": 0,
                    "p50": 377.087092,
                    "p95": 408.520859,
                    "p99": 408.520859,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 442.47146699999996,
                    "min": 0,
                    "p50": 411.62557599999997,
                    "p95": 442.47146699999996,
                    "p99": 442.47146699999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 485.626624,
                    "min": 0,
                    "p50": 452.119556,
                    "p95": 485.626624,
                    "p99": 485.626624,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 765.648383,
                    "min": 0,
                    "p50": 712.089103,
                    "p95": 765.648383,
                    "p99": 765.648383,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 532.794528,
                    "min": 0,
                    "p50": 489.47990699999997,
                    "p95": 532.794528,
                    "p99": 532.794528,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 582.6725809999999,
                    "min": 0,
                    "p50": 559.521919,
                    "p95": 582.6725809999999,
                    "p99": 582.6725809999999,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.834866,
                    "min": 0,
                    "p50": 147.425129,
                    "p95": 153.834866,
                    "p99": 153.834866,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 276.171254,
                    "min": 0,
                    "p50": 250.30511399999997,
                    "p95": 276.171254,
                    "p99": 276.171254,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 243.025017,
                    "min": 0,
                    "p50": 221.621117,
                    "p95": 243.025017,
                    "p99": 243.025017,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 656.466322,
                    "min": 0,
                    "p50": 599.805116,
                    "p95": 656.466322,
                    "p99": 656.466322,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 366.48231899999996,
                    "min": 0,
                    "p50": 331.5297,
                    "p95": 366.48231899999996,
                    "p99": 366.48231899999996,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 616.871309,
                    "min": 0,
                    "p50": 566.0437969999999,
                    "p95": 616.871309,
                    "p99": 616.871309,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "SHA2From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 328.801629,
                    "min": 0,
                    "p50": 294.76148,
                    "p95": 328.801629,
                    "p99": 328.801629,
                    "n": 10,
                    "description": "SHA-2 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 219.95616199999998,
                    "min": 0,
                    "p50": 213.99678899999998,
                    "p95": 219.95616199999998,
                    "p99": 219.95616199999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 86.574212,
                    "min": 0,
                    "p50": 78.71328799999999,
                    "p95": 86.574212,
                    "p99": 86.574212,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1152.563121,
                    "min": 0,
                    "p50": 1132.327957,
                    "p95": 1152.563121,
                    "p99": 1152.563121,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 255.09224799999998,
                    "min": 0,
                    "p50": 240.07188499999998,
                    "p95": 255.09224799999998,
                    "p99": 255.09224799999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 370.510811,
                    "min": 0,
                    "p50": 352.808878,
                    "p95": 370.510811,
                    "p99": 370.510811,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 141.267934,
                    "min": 0,
                    "p50": 136.548731,
                    "p95": 141.267934,
                    "p99": 141.267934,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 475.981301,
                    "min": 0,
                    "p50": 450.90603699999997,
                    "p95": 475.981301,
                    "p99": 475.981301,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 102.540804,
                    "min": 0,
                    "p50": 99.564329,
                    "p95": 102.540804,
                    "p99": 102.540804,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 123.713713,
                    "min": 0,
                    "p50": 120.29327199999999,
                    "p95": 123.713713,
                    "p99": 123.713713,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.229786999999995,
                    "min": 0,
                    "p50": 60.034475,
                    "p95": 63.229786999999995,
                    "p99": 63.229786999999995,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 133.226376,
                    "min": 0,
                    "p50": 126.634648,
                    "p95": 133.226376,
                    "p99": 133.226376,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 112.46762299999999,
                    "min": 0,
                    "p50": 108.763621,
                    "p95": 112.46762299999999,
                    "p99": 112.46762299999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 151.61264699999998,
                    "min": 0,
                    "p50": 148.53816,
                    "p95": 151.61264699999998,
                    "p99": 151.61264699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 172.271277,
                    "min": 0,
                    "p50": 170.160282,
                    "p95": 172.271277,
                    "p99": 172.271277,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 161.71742999999998,
                    "min": 0,
                    "p50": 159.2836,
                    "p95": 161.71742999999998,
                    "p99": 161.71742999999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 589.881954,
                    "min": 0,
                    "p50": 582.606917,
                    "p95": 589.881954,
                    "p99": 589.881954,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 89.54291099999999,
                    "min": 0,
                    "p50": 88.094371,
                    "p95": 89.54291099999999,
                    "p99": 89.54291099999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 191.077651,
                    "min": 0,
                    "p50": 186.341443,
                    "p95": 191.077651,
                    "p99": 191.077651,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 194.464658,
                    "min": 0,
                    "p50": 191.59397099999998,
                    "p95": 194.464658,
                    "p99": 194.464658,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 32-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 178.636993,
                    "min": 0,
                    "p50": 170.01996499999998,
                    "p95": 178.636993,
                    "p99": 178.636993,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1155.167628,
                    "min": 0,
                    "p50": 1144.572019,
                    "p95": 1155.167628,
                    "p99": 1155.167628,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 191.876815,
                    "min": 0,
                    "p50": 185.063342,
                    "p95": 191.876815,
                    "p99": 191.876815,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 131.049844,
                    "min": 0,
                    "p50": 129.513418,
                    "p95": 131.049844,
                    "p99": 131.049844,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 218.03596199999998,
                    "min": 0,
                    "p50": 214.74217,
                    "p95": 218.03596199999998,
                    "p99": 218.03596199999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 239.561883,
                    "min": 0,
                    "p50": 237.68114899999998,
                    "p95": 239.561883,
                    "p99": 239.561883,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 93.367342,
                    "min": 0,
                    "p50": 90.233396,
                    "p95": 93.367342,
                    "p99": 93.367342,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 142.996152,
                    "min": 0,
                    "p50": 140.46766499999998,
                    "p95": 142.996152,
                    "p99": 142.996152,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 111.527254,
                    "min": 0,
                    "p50": 109.387417,
                    "p95": 111.527254,
                    "p99": 111.527254,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 203.299468,
                    "min": 0,
                    "p50": 200.48791799999998,
                    "p95": 203.299468,
                    "p99": 203.299468,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 166.733858,
                    "min": 0,
                    "p50": 161.376116,
                    "p95": 166.733858,
                    "p99": 166.733858,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 483.216047,
                    "min": 0,
                    "p50": 478.70491899999996,
                    "p95": 483.216047,
                    "p99": 483.216047,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 372.340473,
                    "min": 0,
                    "p50": 344.422478,
                    "p95": 372.340473,
                    "p99": 372.340473,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 160.468811,
                    "min": 0,
                    "p50": 149.675817,
                    "p95": 160.468811,
                    "p99": 160.468811,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 63.006667,
                    "min": 0,
                    "p50": 60.640653,
                    "p95": 63.006667,
                    "p99": 63.006667,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 120.83269999999999,
                    "min": 0,
                    "p50": 119.393486,
                    "p95": 120.83269999999999,
                    "p99": 120.83269999999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.54088899999999,
                    "min": 0,
                    "p50": 78.755494,
                    "p95": 80.54088899999999,
                    "p99": 80.54088899999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 104.85132399999999,
                    "min": 0,
                    "p50": 99.470733,
                    "p95": 104.85132399999999,
                    "p99": 104.85132399999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom8Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 594.363371,
                    "min": 0,
                    "p50": 573.2262969999999,
                    "p95": 594.363371,
                    "p99": 594.363371,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 8-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 108.61232899999999,
                    "min": 0,
                    "p50": 107.141337,
                    "p95": 108.61232899999999,
                    "p99": 108.61232899999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 170.486009,
                    "min": 0,
                    "p50": 167.524374,
                    "p95": 170.486009,
                    "p99": 170.486009,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 149.945539,
                    "min": 0,
                    "p50": 146.786421,
                    "p95": 149.945539,
                    "p99": 149.945539,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 99.496189,
                    "min": 0,
                    "p50": 98.394887,
                    "p95": 99.496189,
                    "p99": 99.496189,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 240.815238,
                    "min": 0,
                    "p50": 238.58442599999998,
                    "p95": 240.815238,
                    "p99": 240.815238,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 78.16384,
                    "min": 0,
                    "p50": 76.605474,
                    "p95": 78.16384,
                    "p99": 78.16384,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 124.474947,
                    "min": 0,
                    "p50": 117.289548,
                    "p95": 124.474947,
                    "p99": 124.474947,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 142.74331999999998,
                    "min": 0,
                    "p50": 133.047724,
                    "p95": 142.74331999999998,
                    "p99": 142.74331999999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 194.015906,
                    "min": 0,
                    "p50": 191.983147,
                    "p95": 194.015906,
                    "p99": 194.015906,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 350.052285,
                    "min": 0,
                    "p50": 345.62001399999997,
                    "p95": 350.052285,
                    "p99": 350.052285,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 162.16458599999999,
                    "min": 0,
                    "p50": 158.093077,
                    "p95": 162.16458599999999,
                    "p99": 162.16458599999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 130.81843899999998,
                    "min": 0,
                    "p50": 127.09130499999999,
                    "p95": 130.81843899999998,
                    "p99": 130.81843899999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 94.89293699999999,
                    "min": 0,
                    "p50": 88.777018,
                    "p95": 94.89293699999999,
                    "p99": 94.89293699999999,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 180.762846,
                    "min": 0,
                    "p50": 177.00515,
                    "p95": 180.762846,
                    "p99": 180.762846,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 217.250681,
                    "min": 0,
                    "p50": 210.16537699999998,
                    "p95": 217.250681,
                    "p99": 217.250681,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 451.929778,
                    "min": 0,
                    "p50": 433.811876,
                    "p95": 451.929778,
                    "p99": 451.929778,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 558.338435,
                    "min": 0,
                    "p50": 533.389551,
                    "p95": 558.338435,
                    "p99": 558.338435,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1068.255037,
                    "min": 0,
                    "p50": 1031.606389,
                    "p95": 1068.255037,
                    "p99": 1068.255037,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 60.331751,
                    "min": 0,
                    "p50": 59.062791999999995,
                    "p95": 60.331751,
                    "p99": 60.331751,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 128-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 591.68075,
                    "min": 0,
                    "p50": 586.612138,
                    "p95": 591.68075,
                    "p99": 591.68075,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 180.83057,
                    "min": 0,
                    "p50": 175.229927,
                    "p95": 180.83057,
                    "p99": 180.83057,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 143.073106,
                    "min": 0,
                    "p50": 140.17100399999998,
                    "p95": 143.073106,
                    "p99": 143.073106,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 200.98215299999998,
                    "min": 0,
                    "p50": 193.045042,
                    "p95": 200.98215299999998,
                    "p99": 200.98215299999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 114.669123,
                    "min": 0,
                    "p50": 109.899143,
                    "p95": 114.669123,
                    "p99": 114.669123,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 96.429717,
                    "min": 0,
                    "p50": 89.665829,
                    "p95": 96.429717,
                    "p99": 96.429717,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 62.529081,
                    "min": 0,
                    "p50": 60.684450999999996,
                    "p95": 62.529081,
                    "p99": 62.529081,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 155.748496,
                    "min": 0,
                    "p50": 151.178179,
                    "p95": 155.748496,
                    "p99": 155.748496,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 237.695687,
                    "min": 0,
                    "p50": 226.687819,
                    "p95": 237.695687,
                    "p99": 237.695687,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 103.244453,
                    "min": 0,
                    "p50": 99.404676,
                    "p95": 103.244453,
                    "p99": 103.244453,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 126.13631,
                    "min": 0,
                    "p50": 114.783706,
                    "p95": 126.13631,
                    "p99": 126.13631,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 196.09877699999998,
                    "min": 0,
                    "p50": 186.481155,
                    "p95": 196.09877699999998,
                    "p99": 196.09877699999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 481.43420499999996,
                    "min": 0,
                    "p50": 451.156801,
                    "p95": 481.43420499999996,
                    "p99": 481.43420499999996,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "1000",
                    "method": "engine_newPayloadV3",
                    "max": 1162.758801,
                    "min": 0,
                    "p50": 1105.120056,
                    "p95": 1162.758801,
                    "p99": 1162.758801,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 133.693579,
                    "min": 0,
                    "p50": 130.073113,
                    "p95": 133.693579,
                    "p99": 133.693579,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 254.79816599999998,
                    "min": 0,
                    "p50": 249.74654199999998,
                    "p95": 254.79816599999998,
                    "p99": 254.79816599999998,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 167.165345,
                    "min": 0,
                    "p50": 162.990791,
                    "p95": 167.165345,
                    "p99": 167.165345,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 80.783828,
                    "min": 0,
                    "p50": 78.7662,
                    "p95": 80.783828,
                    "p99": 80.783828,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "RipemdFrom1Byte",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 368.123315,
                    "min": 0,
                    "p50": 365.219918,
                    "p95": 368.123315,
                    "p99": 368.123315,
                    "n": 10,
                    "description": "Ripemd-160 precompile calculations based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 239.747366,
                    "min": 0,
                    "p50": 222.96664299999998,
                    "p95": 239.747366,
                    "p99": 239.747366,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 183.57029699999998,
                    "min": 0,
                    "p50": 173.886078,
                    "p95": 183.57029699999998,
                    "p99": 183.57029699999998,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 290.324523,
                    "min": 0,
                    "p50": 263.341947,
                    "p95": 290.324523,
                    "p99": 290.324523,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1077.966936,
                    "min": 0,
                    "p50": 998.4875949999999,
                    "p95": 1077.966936,
                    "p99": 1077.966936,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 670.658738,
                    "min": 0,
                    "p50": 632.1615939999999,
                    "p95": 670.658738,
                    "p99": 670.658738,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 815.172555,
                    "min": 0,
                    "p50": 796.865512,
                    "p95": 815.172555,
                    "p99": 815.172555,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 930.706322,
                    "min": 0,
                    "p50": 839.8756119999999,
                    "p95": 930.706322,
                    "p99": 930.706322,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 495.17573999999996,
                    "min": 0,
                    "p50": 451.22209799999996,
                    "p95": 495.17573999999996,
                    "p99": 495.17573999999996,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 340.665616,
                    "min": 0,
                    "p50": 323.275623,
                    "p95": 340.665616,
                    "p99": 340.665616,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 407.83433199999996,
                    "min": 0,
                    "p50": 401.585153,
                    "p95": 407.83433199999996,
                    "p99": 407.83433199999996,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 392.22298,
                    "min": 0,
                    "p50": 357.55418399999996,
                    "p95": 392.22298,
                    "p99": 392.22298,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 554.725878,
                    "min": 0,
                    "p50": 510.523628,
                    "p95": 554.725878,
                    "p99": 554.725878,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 610.374053,
                    "min": 0,
                    "p50": 543.115699,
                    "p95": 610.374053,
                    "p99": 610.374053,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 765.0543349999999,
                    "min": 0,
                    "p50": 733.6652339999999,
                    "p95": 765.0543349999999,
                    "p99": 765.0543349999999,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 640.664307,
                    "min": 0,
                    "p50": 589.271448,
                    "p95": 640.664307,
                    "p99": 640.664307,
                    "n": 10,
                    "description": "Identity precompile call based on 8-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 596.60978,
                    "min": 0,
                    "p50": 577.198307,
                    "p95": 596.60978,
                    "p99": 596.60978,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 704.013998,
                    "min": 0,
                    "p50": 648.158832,
                    "p95": 704.013998,
                    "p99": 704.013998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 755.16899,
                    "min": 0,
                    "p50": 681.528096,
                    "p95": 755.16899,
                    "p99": 755.16899,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 235.09774099999998,
                    "min": 0,
                    "p50": 222.63136,
                    "p95": 235.09774099999998,
                    "p99": 235.09774099999998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 283.85099199999996,
                    "min": 0,
                    "p50": 269.114536,
                    "p95": 283.85099199999996,
                    "p99": 283.85099199999996,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 361.58480299999997,
                    "min": 0,
                    "p50": 355.494943,
                    "p95": 361.58480299999997,
                    "p99": 361.58480299999997,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 333.701869,
                    "min": 0,
                    "p50": 313.371258,
                    "p95": 333.701869,
                    "p99": 333.701869,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 548.052998,
                    "min": 0,
                    "p50": 514.0588759999999,
                    "p95": 548.052998,
                    "p99": 548.052998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 184.79441599999998,
                    "min": 0,
                    "p50": 163.173259,
                    "p95": 184.79441599999998,
                    "p99": 184.79441599999998,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 444.72274799999997,
                    "min": 0,
                    "p50": 419.60590399999995,
                    "p95": 444.72274799999997,
                    "p99": 444.72274799999997,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 952.327961,
                    "min": 0,
                    "p50": 895.0402479999999,
                    "p95": 952.327961,
                    "p99": 952.327961,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1090.012418,
                    "min": 0,
                    "p50": 1014.9411339999999,
                    "p95": 1090.012418,
                    "p99": 1090.012418,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 782.6488889999999,
                    "min": 0,
                    "p50": 736.769717,
                    "p95": 782.6488889999999,
                    "p99": 782.6488889999999,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 505.696173,
                    "min": 0,
                    "p50": 453.209007,
                    "p95": 505.696173,
                    "p99": 505.696173,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 663.613078,
                    "min": 0,
                    "p50": 607.613034,
                    "p95": 663.613078,
                    "p99": 663.613078,
                    "n": 10,
                    "description": "Identity precompile call based on 32-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 716.2382709999999,
                    "min": 0,
                    "p50": 644.4939439999999,
                    "p95": 716.2382709999999,
                    "p99": 716.2382709999999,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 662.702935,
                    "min": 0,
                    "p50": 598.257708,
                    "p95": 662.702935,
                    "p99": 662.702935,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 695.9976879999999,
                    "min": 0,
                    "p50": 683.629419,
                    "p95": 695.9976879999999,
                    "p99": 695.9976879999999,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 902.030977,
                    "min": 0,
                    "p50": 796.9045249999999,
                    "p95": 902.030977,
                    "p99": 902.030977,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 620.513574,
                    "min": 0,
                    "p50": 558.0170529999999,
                    "p95": 620.513574,
                    "p99": 620.513574,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 569.387101,
                    "min": 0,
                    "p50": 515.962254,
                    "p95": 569.387101,
                    "p99": 569.387101,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 176.957419,
                    "min": 0,
                    "p50": 165.307459,
                    "p95": 176.957419,
                    "p99": 176.957419,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 945.999549,
                    "min": 0,
                    "p50": 921.944446,
                    "p95": 945.999549,
                    "p99": 945.999549,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 529.690504,
                    "min": 0,
                    "p50": 466.963242,
                    "p95": 529.690504,
                    "p99": 529.690504,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 469.31375699999995,
                    "min": 0,
                    "p50": 437.392662,
                    "p95": 469.31375699999995,
                    "p99": 469.31375699999995,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 323.78374099999996,
                    "min": 0,
                    "p50": 296.64782199999996,
                    "p95": 323.78374099999996,
                    "p99": 323.78374099999996,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 422.814533,
                    "min": 0,
                    "p50": 385.74465399999997,
                    "p95": 422.814533,
                    "p99": 422.814533,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 346.99933799999997,
                    "min": 0,
                    "p50": 337.96733,
                    "p95": 346.99933799999997,
                    "p99": 346.99933799999997,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 226.70753599999998,
                    "min": 0,
                    "p50": 210.445574,
                    "p95": 226.70753599999998,
                    "p99": 226.70753599999998,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom128Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 260.39473599999997,
                    "min": 0,
                    "p50": 254.19579499999998,
                    "p95": 260.39473599999997,
                    "p99": 260.39473599999997,
                    "n": 10,
                    "description": "Identity precompile call based on 128-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 729.883295,
                    "min": 0,
                    "p50": 686.734429,
                    "p95": 729.883295,
                    "p99": 729.883295,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 817.863661,
                    "min": 0,
                    "p50": 731.93944,
                    "p95": 817.863661,
                    "p99": 817.863661,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 658.713369,
                    "min": 0,
                    "p50": 627.491948,
                    "p95": 658.713369,
                    "p99": 658.713369,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 954.557642,
                    "min": 0,
                    "p50": 858.4365879999999,
                    "p95": 954.557642,
                    "p99": 954.557642,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 239.732129,
                    "min": 0,
                    "p50": 232.68446,
                    "p95": 239.732129,
                    "p99": 239.732129,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 608.611531,
                    "min": 0,
                    "p50": 576.622606,
                    "p95": 608.611531,
                    "p99": 608.611531,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1072.315347,
                    "min": 0,
                    "p50": 1016.0345679999999,
                    "p95": 1072.315347,
                    "p99": 1072.315347,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 310.21761799999996,
                    "min": 0,
                    "p50": 295.66376299999996,
                    "p95": 310.21761799999996,
                    "p99": 310.21761799999996,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 451.887133,
                    "min": 0,
                    "p50": 414.91216299999996,
                    "p95": 451.887133,
                    "p99": 451.887133,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 390.207366,
                    "min": 0,
                    "p50": 359.551267,
                    "p95": 390.207366,
                    "p99": 390.207366,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 290.390981,
                    "min": 0,
                    "p50": 266.88751099999996,
                    "p95": 290.390981,
                    "p99": 290.390981,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 500.860439,
                    "min": 0,
                    "p50": 458.02131099999997,
                    "p95": 500.860439,
                    "p99": 500.860439,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 545.9196499999999,
                    "min": 0,
                    "p50": 504.383828,
                    "p95": 545.9196499999999,
                    "p99": 545.9196499999999,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 181.517396,
                    "min": 0,
                    "p50": 174.375832,
                    "p95": 181.517396,
                    "p99": 181.517396,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "IdentityFrom1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 710.5549659999999,
                    "min": 0,
                    "p50": 629.7710089999999,
                    "p95": 710.5549659999999,
                    "p99": 710.5549659999999,
                    "n": 10,
                    "description": "Identity precompile call based on 1-byte source data"
                },
                {
                    "test_case": "Address",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 841.0475369999999,
                    "min": 0,
                    "p50": 834.716951,
                    "p95": 841.0475369999999,
                    "p99": 841.0475369999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 521.134609,
                    "min": 0,
                    "p50": 514.747929,
                    "p95": 521.134609,
                    "p99": 521.134609,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 624.3652999999999,
                    "min": 0,
                    "p50": 617.8151369999999,
                    "p95": 624.3652999999999,
                    "p99": 624.3652999999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 409.66897,
                    "min": 0,
                    "p50": 406.095914,
                    "p95": 409.66897,
                    "p99": 409.66897,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 358.029874,
                    "min": 0,
                    "p50": 355.518595,
                    "p95": 358.029874,
                    "p99": 358.029874,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 571.118403,
                    "min": 0,
                    "p50": 561.3299509999999,
                    "p95": 571.118403,
                    "p99": 571.118403,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 201.37419,
                    "min": 0,
                    "p50": 191.27767799999998,
                    "p95": 201.37419,
                    "p99": 201.37419,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 253.601091,
                    "min": 0,
                    "p50": 250.788651,
                    "p95": 253.601091,
                    "p99": 253.601091,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 463.85576699999996,
                    "min": 0,
                    "p50": 458.113146,
                    "p95": 463.85576699999996,
                    "p99": 463.85576699999996,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 306.467979,
                    "min": 0,
                    "p50": 303.64203,
                    "p95": 306.467979,
                    "p99": 306.467979,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1115.409054,
                    "min": 0,
                    "p50": 1097.1480629999999,
                    "p95": 1115.409054,
                    "p99": 1115.409054,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 683.069343,
                    "min": 0,
                    "p50": 669.6964439999999,
                    "p95": 683.069343,
                    "p99": 683.069343,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 968.8669759999999,
                    "min": 0,
                    "p50": 960.9344649999999,
                    "p95": 968.8669759999999,
                    "p99": 968.8669759999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 792.4433829999999,
                    "min": 0,
                    "p50": 776.666254,
                    "p95": 792.4433829999999,
                    "p99": 792.4433829999999,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 733.196791,
                    "min": 0,
                    "p50": 726.5482089999999,
                    "p95": 733.196791,
                    "p99": 733.196791,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Address",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1654.972974,
                    "min": 0,
                    "p50": 1628.154216,
                    "p95": 1654.972974,
                    "p99": 1654.972974,
                    "n": 10,
                    "description": "Endlessly pushing account address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 511.460646,
                    "min": 0,
                    "p50": 429.971791,
                    "p95": 511.460646,
                    "p99": 511.460646,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 358.704165,
                    "min": 0,
                    "p50": 320.822653,
                    "p95": 358.704165,
                    "p99": 358.704165,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 410.648664,
                    "min": 0,
                    "p50": 376.371133,
                    "p95": 410.648664,
                    "p99": 410.648664,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 670.731874,
                    "min": 0,
                    "p50": 551.921713,
                    "p95": 670.731874,
                    "p99": 670.731874,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 535.790695,
                    "min": 0,
                    "p50": 492.003537,
                    "p95": 535.790695,
                    "p99": 535.790695,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 372.57052999999996,
                    "min": 0,
                    "p50": 343.98069899999996,
                    "p95": 372.57052999999996,
                    "p99": 372.57052999999996,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 132.908461,
                    "min": 0,
                    "p50": 122.29302399999999,
                    "p95": 132.908461,
                    "p99": 132.908461,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.027642,
                    "min": 0,
                    "p50": 142.126734,
                    "p95": 162.027642,
                    "p99": 162.027642,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 347.975706,
                    "min": 0,
                    "p50": 296.726566,
                    "p95": 347.975706,
                    "p99": 347.975706,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 221.64108,
                    "min": 0,
                    "p50": 190.754602,
                    "p95": 221.64108,
                    "p99": 221.64108,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 321.418977,
                    "min": 0,
                    "p50": 270.45831599999997,
                    "p95": 321.418977,
                    "p99": 321.418977,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 200.34189899999998,
                    "min": 0,
                    "p50": 170.473234,
                    "p95": 200.34189899999998,
                    "p99": 200.34189899999998,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 455.942526,
                    "min": 0,
                    "p50": 390.98234199999996,
                    "p95": 455.942526,
                    "p99": 455.942526,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 265.019044,
                    "min": 0,
                    "p50": 244.620319,
                    "p95": 265.019044,
                    "p99": 265.019044,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreZero",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 256.633553,
                    "min": 0,
                    "p50": 218.556996,
                    "p95": 256.633553,
                    "p99": 256.633553,
                    "n": 10,
                    "description": "Endlessly pushing zero value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 305.48803699999996,
                    "min": 0,
                    "p50": 274.513327,
                    "p95": 305.48803699999996,
                    "p99": 305.48803699999996,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 144.496557,
                    "min": 0,
                    "p50": 128.266807,
                    "p95": 144.496557,
                    "p99": 144.496557,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 274.879804,
                    "min": 0,
                    "p50": 228.164111,
                    "p95": 274.879804,
                    "p99": 274.879804,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 224.427403,
                    "min": 0,
                    "p50": 202.800871,
                    "p95": 224.427403,
                    "p99": 224.427403,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 217.422101,
                    "min": 0,
                    "p50": 179.751559,
                    "p95": 217.422101,
                    "p99": 217.422101,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 397.957153,
                    "min": 0,
                    "p50": 383.010746,
                    "p95": 397.957153,
                    "p99": 397.957153,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 413.551107,
                    "min": 0,
                    "p50": 344.007808,
                    "p95": 413.551107,
                    "p99": 413.551107,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 515.2534049999999,
                    "min": 0,
                    "p50": 508.989422,
                    "p95": 515.2534049999999,
                    "p99": 515.2534049999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 752.328416,
                    "min": 0,
                    "p50": 732.236007,
                    "p95": 752.328416,
                    "p99": 752.328416,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 325.582852,
                    "min": 0,
                    "p50": 317.832473,
                    "p95": 325.582852,
                    "p99": 325.582852,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 157.347915,
                    "min": 0,
                    "p50": 155.685771,
                    "p95": 157.347915,
                    "p99": 157.347915,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 338.97747999999996,
                    "min": 0,
                    "p50": 295.318351,
                    "p95": 338.97747999999996,
                    "p99": 338.97747999999996,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 123.33812999999999,
                    "min": 0,
                    "p50": 109.224418,
                    "p95": 123.33812999999999,
                    "p99": 123.33812999999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 445.41779099999997,
                    "min": 0,
                    "p50": 368.79358299999996,
                    "p95": 445.41779099999997,
                    "p99": 445.41779099999997,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 552.7962709999999,
                    "min": 0,
                    "p50": 446.11134899999996,
                    "p95": 552.7962709999999,
                    "p99": 552.7962709999999,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "MStoreRandom",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 252.145672,
                    "min": 0,
                    "p50": 249.38785,
                    "p95": 252.145672,
                    "p99": 252.145672,
                    "n": 10,
                    "description": "Endlessly pushing random value to memory with offset zero"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 2207.5570009999997,
                    "min": 0,
                    "p50": 2164.72162,
                    "p95": 2207.5570009999997,
                    "p99": 2207.5570009999997,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 532.723669,
                    "min": 0,
                    "p50": 520.046191,
                    "p95": 532.723669,
                    "p99": 532.723669,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 362.93265399999996,
                    "min": 0,
                    "p50": 355.48766,
                    "p95": 362.93265399999996,
                    "p99": 362.93265399999996,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 691.4644969999999,
                    "min": 0,
                    "p50": 678.3726429999999,
                    "p95": 691.4644969999999,
                    "p99": 691.4644969999999,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 255.64962699999998,
                    "min": 0,
                    "p50": 246.209417,
                    "p95": 255.64962699999998,
                    "p99": 255.64962699999998,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1121.914343,
                    "min": 0,
                    "p50": 1106.340706,
                    "p95": 1121.914343,
                    "p99": 1121.914343,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 850.970031,
                    "min": 0,
                    "p50": 839.761275,
                    "p95": 850.970031,
                    "p99": 850.970031,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 810.6536269999999,
                    "min": 0,
                    "p50": 784.8016359999999,
                    "p95": 810.6536269999999,
                    "p99": 810.6536269999999,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 203.05243299999998,
                    "min": 0,
                    "p50": 201.107171,
                    "p95": 203.05243299999998,
                    "p99": 203.05243299999998,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 314.33763999999996,
                    "min": 0,
                    "p50": 309.55229099999997,
                    "p95": 314.33763999999996,
                    "p99": 314.33763999999996,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 984.332582,
                    "min": 0,
                    "p50": 973.7814569999999,
                    "p95": 984.332582,
                    "p99": 984.332582,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 471.03704799999997,
                    "min": 0,
                    "p50": 467.107084,
                    "p95": 471.03704799999997,
                    "p99": 471.03704799999997,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 633.190535,
                    "min": 0,
                    "p50": 623.0904879999999,
                    "p95": 633.190535,
                    "p99": 633.190535,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 421.284466,
                    "min": 0,
                    "p50": 414.871645,
                    "p95": 421.284466,
                    "p99": 421.284466,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 742.927954,
                    "min": 0,
                    "p50": 734.842239,
                    "p95": 742.927954,
                    "p99": 742.927954,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1675.173108,
                    "min": 0,
                    "p50": 1636.295813,
                    "p95": 1675.173108,
                    "p99": 1675.173108,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 2741.314355,
                    "min": 0,
                    "p50": 2696.795185,
                    "p95": 2741.314355,
                    "p99": 2741.314355,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "JumpDest",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 581.972277,
                    "min": 0,
                    "p50": 574.4554439999999,
                    "p95": 581.972277,
                    "p99": 581.972277,
                    "n": 10,
                    "description": "Block full of JumpDest opcode only"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 258.38921799999997,
                    "min": 0,
                    "p50": 233.753524,
                    "p95": 258.38921799999997,
                    "p99": 258.38921799999997,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 601.067609,
                    "min": 0,
                    "p50": 590.005636,
                    "p95": 601.067609,
                    "p99": 601.067609,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 948.185574,
                    "min": 0,
                    "p50": 862.5963469999999,
                    "p95": 948.185574,
                    "p99": 948.185574,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1484.071872,
                    "min": 0,
                    "p50": 1408.924086,
                    "p95": 1484.071872,
                    "p99": 1484.071872,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1256.265465,
                    "min": 0,
                    "p50": 1140.710355,
                    "p95": 1256.265465,
                    "p99": 1256.265465,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 273.879912,
                    "min": 0,
                    "p50": 259.938259,
                    "p95": 273.879912,
                    "p99": 273.879912,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 572.284808,
                    "min": 0,
                    "p50": 530.464252,
                    "p95": 572.284808,
                    "p99": 572.284808,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 224.62311599999998,
                    "min": 0,
                    "p50": 205.535043,
                    "p95": 224.62311599999998,
                    "p99": 224.62311599999998,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 477.954054,
                    "min": 0,
                    "p50": 424.742917,
                    "p95": 477.954054,
                    "p99": 477.954054,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 482.50064899999995,
                    "min": 0,
                    "p50": 446.08914699999997,
                    "p95": 482.50064899999995,
                    "p99": 482.50064899999995,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 162.658458,
                    "min": 0,
                    "p50": 144.897191,
                    "p95": 162.658458,
                    "p99": 162.658458,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 376.24688799999996,
                    "min": 0,
                    "p50": 336.734946,
                    "p95": 376.24688799999996,
                    "p99": 376.24688799999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 382.235239,
                    "min": 0,
                    "p50": 365.2181,
                    "p95": 382.235239,
                    "p99": 382.235239,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 191.934258,
                    "min": 0,
                    "p50": 175.925444,
                    "p95": 191.934258,
                    "p99": 191.934258,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 125.717045,
                    "min": 0,
                    "p50": 119.85132899999999,
                    "p95": 125.717045,
                    "p99": 125.717045,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 408.638902,
                    "min": 0,
                    "p50": 395.143802,
                    "p95": 408.638902,
                    "p99": 408.638902,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 329.34788399999996,
                    "min": 0,
                    "p50": 312.58337,
                    "p95": 329.34788399999996,
                    "p99": 329.34788399999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "Push0Pop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 302.246511,
                    "min": 0,
                    "p50": 286.37296499999997,
                    "p95": 302.246511,
                    "p99": 302.246511,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack, then popping it"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 363.916707,
                    "min": 0,
                    "p50": 350.072763,
                    "p95": 363.916707,
                    "p99": 363.916707,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 529.737366,
                    "min": 0,
                    "p50": 519.292057,
                    "p95": 529.737366,
                    "p99": 529.737366,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 461.25485199999997,
                    "min": 0,
                    "p50": 449.692428,
                    "p95": 461.25485199999997,
                    "p99": 461.25485199999997,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 142.63371899999999,
                    "min": 0,
                    "p50": 141.06417399999998,
                    "p95": 142.63371899999999,
                    "p99": 142.63371899999999,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 752.556609,
                    "min": 0,
                    "p50": 720.083049,
                    "p95": 752.556609,
                    "p99": 752.556609,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 320.115822,
                    "min": 0,
                    "p50": 311.08829199999997,
                    "p95": 320.115822,
                    "p99": 320.115822,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 217.348536,
                    "min": 0,
                    "p50": 209.537057,
                    "p95": 217.348536,
                    "p99": 217.348536,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 430.20971499999996,
                    "min": 0,
                    "p50": 414.080846,
                    "p95": 430.20971499999996,
                    "p99": 430.20971499999996,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 252.21833999999998,
                    "min": 0,
                    "p50": 241.954375,
                    "p95": 252.21833999999998,
                    "p99": 252.21833999999998,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 648.181343,
                    "min": 0,
                    "p50": 635.543942,
                    "p95": 648.181343,
                    "p99": 648.181343,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.13322599999998,
                    "min": 0,
                    "p50": 175.089764,
                    "p95": 181.13322599999998,
                    "p99": 181.13322599999998,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 570.811154,
                    "min": 0,
                    "p50": 554.451627,
                    "p95": 570.811154,
                    "p99": 570.811154,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 279.807327,
                    "min": 0,
                    "p50": 276.269753,
                    "p95": 279.807327,
                    "p99": 279.807327,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 496.942249,
                    "min": 0,
                    "p50": 481.009799,
                    "p95": 496.942249,
                    "p99": 496.942249,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "PrevRandao",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 391.852353,
                    "min": 0,
                    "p50": 380.822208,
                    "p95": 391.852353,
                    "p99": 391.852353,
                    "n": 10,
                    "description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 145.08392,
                    "min": 0,
                    "p50": 139.626945,
                    "p95": 145.08392,
                    "p99": 145.08392,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 396.815178,
                    "min": 0,
                    "p50": 349.70574,
                    "p95": 396.815178,
                    "p99": 396.815178,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 232.90288999999999,
                    "min": 0,
                    "p50": 221.23738899999998,
                    "p95": 232.90288999999999,
                    "p99": 232.90288999999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 354.563469,
                    "min": 0,
                    "p50": 304.416798,
                    "p95": 354.563469,
                    "p99": 354.563469,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 493.662673,
                    "min": 0,
                    "p50": 442.141038,
                    "p95": 493.662673,
                    "p99": 493.662673,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 310.995651,
                    "min": 0,
                    "p50": 260.00460499999997,
                    "p95": 310.995651,
                    "p99": 310.995651,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 384.23704699999996,
                    "min": 0,
                    "p50": 325.582758,
                    "p95": 384.23704699999996,
                    "p99": 384.23704699999996,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 729.7332719999999,
                    "min": 0,
                    "p50": 653.690616,
                    "p95": 729.7332719999999,
                    "p99": 729.7332719999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 210.62982,
                    "min": 0,
                    "p50": 180.921142,
                    "p95": 210.62982,
                    "p99": 210.62982,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 108.10507899999999,
                    "min": 0,
                    "p50": 97.837757,
                    "p95": 108.10507899999999,
                    "p99": 108.10507899999999,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 283.03920999999997,
                    "min": 0,
                    "p50": 239.54413399999999,
                    "p95": 283.03920999999997,
                    "p99": 283.03920999999997,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 184.476883,
                    "min": 0,
                    "p50": 158.812415,
                    "p95": 184.476883,
                    "p99": 184.476883,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 136.27982,
                    "min": 0,
                    "p50": 115.230128,
                    "p95": 136.27982,
                    "p99": 136.27982,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 224.35113099999998,
                    "min": 0,
                    "p50": 203.358522,
                    "p95": 224.35113099999998,
                    "p99": 224.35113099999998,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 449.85610399999996,
                    "min": 0,
                    "p50": 393.02109099999996,
                    "p95": 449.85610399999996,
                    "p99": 449.85610399999996,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "CodeCopy",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 331.658061,
                    "min": 0,
                    "p50": 276.789607,
                    "p95": 331.658061,
                    "p99": 331.658061,
                    "n": 10,
                    "description": "Endlessly loading 32-bytes of code to the memory"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 453.992352,
                    "min": 0,
                    "p50": 399.386054,
                    "p95": 453.992352,
                    "p99": 453.992352,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 531.092942,
                    "min": 0,
                    "p50": 436.842207,
                    "p95": 531.092942,
                    "p99": 531.092942,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 559.121432,
                    "min": 0,
                    "p50": 477.011109,
                    "p95": 559.121432,
                    "p99": 559.121432,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 356.44429299999996,
                    "min": 0,
                    "p50": 302.958978,
                    "p95": 356.44429299999996,
                    "p99": 356.44429299999996,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.91803199999998,
                    "min": 0,
                    "p50": 212.660372,
                    "p95": 220.91803199999998,
                    "p99": 220.91803199999998,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 281.828247,
                    "min": 0,
                    "p50": 274.943567,
                    "p95": 281.828247,
                    "p99": 281.828247,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 166.002717,
                    "min": 0,
                    "p50": 157.415552,
                    "p95": 166.002717,
                    "p99": 166.002717,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 205.209981,
                    "min": 0,
                    "p50": 184.77333,
                    "p95": 205.209981,
                    "p99": 205.209981,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 364.791234,
                    "min": 0,
                    "p50": 334.41261199999997,
                    "p95": 364.791234,
                    "p99": 364.791234,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 275.721627,
                    "min": 0,
                    "p50": 244.499473,
                    "p95": 275.721627,
                    "p99": 275.721627,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 748.44908,
                    "min": 0,
                    "p50": 638.582455,
                    "p95": 748.44908,
                    "p99": 748.44908,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 406.41384999999997,
                    "min": 0,
                    "p50": 361.45644899999996,
                    "p95": 406.41384999999997,
                    "p99": 406.41384999999997,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 662.378254,
                    "min": 0,
                    "p50": 558.03289,
                    "p95": 662.378254,
                    "p99": 662.378254,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.655802,
                    "min": 0,
                    "p50": 126.937463,
                    "p95": 131.655802,
                    "p99": 131.655802,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "BaseFee",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 503.19233599999995,
                    "min": 0,
                    "p50": 491.587026,
                    "p95": 503.19233599999995,
                    "p99": 503.19233599999995,
                    "n": 10,
                    "description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "GasPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 395.676916,
                    "min": 0,
                    "p50": 365.34196299999996,
                    "p95": 395.676916,
                    "p99": 395.676916,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.368336,
                    "min": 0,
                    "p50": 200.058603,
                    "p95": 220.368336,
                    "p99": 220.368336,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 149.11649,
                    "min": 0,
                    "p50": 146.349008,
                    "p95": 149.11649,
                    "p99": 149.11649,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 130.04344,
                    "min": 0,
                    "p50": 119.491723,
                    "p95": 130.04344,
                    "p99": 130.04344,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 443.18103299999996,
                    "min": 0,
                    "p50": 388.781751,
                    "p95": 443.18103299999996,
                    "p99": 443.18103299999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 455.323148,
                    "min": 0,
                    "p50": 442.74943099999996,
                    "p95": 455.323148,
                    "p99": 455.323148,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 316.447791,
                    "min": 0,
                    "p50": 282.105029,
                    "p95": 316.447791,
                    "p99": 316.447791,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 590.8938969999999,
                    "min": 0,
                    "p50": 576.8317109999999,
                    "p95": 590.8938969999999,
                    "p99": 590.8938969999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 313.069927,
                    "min": 0,
                    "p50": 308.448384,
                    "p95": 313.069927,
                    "p99": 313.069927,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 230.95502399999998,
                    "min": 0,
                    "p50": 222.107026,
                    "p95": 230.95502399999998,
                    "p99": 230.95502399999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 545.923721,
                    "min": 0,
                    "p50": 509.35272499999996,
                    "p95": 545.923721,
                    "p99": 545.923721,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 420.505017,
                    "min": 0,
                    "p50": 414.14419399999997,
                    "p95": 420.505017,
                    "p99": 420.505017,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 175.241129,
                    "min": 0,
                    "p50": 171.41607399999998,
                    "p95": 175.241129,
                    "p99": 175.241129,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 260.522311,
                    "min": 0,
                    "p50": 253.29927099999998,
                    "p95": 260.522311,
                    "p99": 260.522311,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 965.4910759999999,
                    "min": 0,
                    "p50": 846.16859,
                    "p95": 965.4910759999999,
                    "p99": 965.4910759999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 341.187992,
                    "min": 0,
                    "p50": 334.984309,
                    "p95": 341.187992,
                    "p99": 341.187992,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "GasPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1134.28411,
                    "min": 0,
                    "p50": 1104.371144,
                    "p95": 1134.28411,
                    "p99": 1134.28411,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack, then popping it"
                },
                {
                    "test_case": "Caller",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 577.361781,
                    "min": 0,
                    "p50": 570.533453,
                    "p95": 577.361781,
                    "p99": 577.361781,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 310.909917,
                    "min": 0,
                    "p50": 302.78673,
                    "p95": 310.909917,
                    "p99": 310.909917,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1102.6880039999999,
                    "min": 0,
                    "p50": 1086.844967,
                    "p95": 1102.6880039999999,
                    "p99": 1102.6880039999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 780.793093,
                    "min": 0,
                    "p50": 772.067105,
                    "p95": 780.793093,
                    "p99": 780.793093,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 356.858843,
                    "min": 0,
                    "p50": 352.884981,
                    "p95": 356.858843,
                    "p99": 356.858843,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 834.393347,
                    "min": 0,
                    "p50": 829.158113,
                    "p95": 834.393347,
                    "p99": 834.393347,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 408.117282,
                    "min": 0,
                    "p50": 401.205672,
                    "p95": 408.117282,
                    "p99": 408.117282,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 677.024272,
                    "min": 0,
                    "p50": 667.658787,
                    "p95": 677.024272,
                    "p99": 677.024272,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 517.1897359999999,
                    "min": 0,
                    "p50": 510.136954,
                    "p95": 517.1897359999999,
                    "p99": 517.1897359999999,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 730.722101,
                    "min": 0,
                    "p50": 705.751142,
                    "p95": 730.722101,
                    "p99": 730.722101,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 970.077063,
                    "min": 0,
                    "p50": 956.019149,
                    "p95": 970.077063,
                    "p99": 970.077063,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 464.353843,
                    "min": 0,
                    "p50": 460.079859,
                    "p95": 464.353843,
                    "p99": 464.353843,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 618.766974,
                    "min": 0,
                    "p50": 614.209298,
                    "p95": 618.766974,
                    "p99": 618.766974,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 200.972041,
                    "min": 0,
                    "p50": 198.339878,
                    "p95": 200.972041,
                    "p99": 200.972041,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Caller",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 254.57503599999998,
                    "min": 0,
                    "p50": 249.55207199999998,
                    "p95": 254.57503599999998,
                    "p99": 254.57503599999998,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 340.792506,
                    "min": 0,
                    "p50": 333.390991,
                    "p95": 340.792506,
                    "p99": 340.792506,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 181.118021,
                    "min": 0,
                    "p50": 157.21877999999998,
                    "p95": 181.118021,
                    "p99": 181.118021,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 460.589177,
                    "min": 0,
                    "p50": 394.584366,
                    "p95": 460.589177,
                    "p99": 460.589177,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 499.22119299999997,
                    "min": 0,
                    "p50": 453.70464,
                    "p95": 499.22119299999997,
                    "p99": 499.22119299999997,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 193.842525,
                    "min": 0,
                    "p50": 185.848235,
                    "p95": 193.842525,
                    "p99": 193.842525,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 351.95786699999996,
                    "min": 0,
                    "p50": 304.463416,
                    "p95": 351.95786699999996,
                    "p99": 351.95786699999996,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 322.834347,
                    "min": 0,
                    "p50": 274.66605899999996,
                    "p95": 322.834347,
                    "p99": 322.834347,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.343118,
                    "min": 0,
                    "p50": 216.865796,
                    "p95": 220.343118,
                    "p99": 220.343118,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.401594,
                    "min": 0,
                    "p50": 128.928767,
                    "p95": 131.401594,
                    "p99": 131.401594,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 561.4500019999999,
                    "min": 0,
                    "p50": 556.680972,
                    "p95": 561.4500019999999,
                    "p99": 561.4500019999999,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 377.93803399999996,
                    "min": 0,
                    "p50": 361.253318,
                    "p95": 377.93803399999996,
                    "p99": 377.93803399999996,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 491.2809,
                    "min": 0,
                    "p50": 422.66060699999997,
                    "p95": 491.2809,
                    "p99": 491.2809,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 639.456811,
                    "min": 0,
                    "p50": 629.5715359999999,
                    "p95": 639.456811,
                    "p99": 639.456811,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 561.214531,
                    "min": 0,
                    "p50": 483.07066,
                    "p95": 561.214531,
                    "p99": 561.214531,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "MSize",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 282.824454,
                    "min": 0,
                    "p50": 246.33221799999998,
                    "p95": 282.824454,
                    "p99": 282.824454,
                    "n": 10,
                    "description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 661.598696,
                    "min": 0,
                    "p50": 563.012117,
                    "p95": 661.598696,
                    "p99": 661.598696,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 390.23504599999995,
                    "min": 0,
                    "p50": 335.869533,
                    "p95": 390.23504599999995,
                    "p99": 390.23504599999995,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 464.650426,
                    "min": 0,
                    "p50": 452.77192099999996,
                    "p95": 464.650426,
                    "p99": 464.650426,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 488.37708999999995,
                    "min": 0,
                    "p50": 483.756783,
                    "p95": 488.37708999999995,
                    "p99": 488.37708999999995,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 745.942498,
                    "min": 0,
                    "p50": 632.112336,
                    "p95": 745.942498,
                    "p99": 745.942498,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 419.880698,
                    "min": 0,
                    "p50": 364.50128,
                    "p95": 419.880698,
                    "p99": 419.880698,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 248.70258099999998,
                    "min": 0,
                    "p50": 216.797957,
                    "p95": 248.70258099999998,
                    "p99": 248.70258099999998,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 320.119828,
                    "min": 0,
                    "p50": 276.493951,
                    "p95": 320.119828,
                    "p99": 320.119828,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 429.399135,
                    "min": 0,
                    "p50": 425.093419,
                    "p95": 429.399135,
                    "p99": 429.399135,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 398.29948199999995,
                    "min": 0,
                    "p50": 395.939531,
                    "p95": 398.29948199999995,
                    "p99": 398.29948199999995,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1108.35305,
                    "min": 0,
                    "p50": 951.710421,
                    "p95": 1108.35305,
                    "p99": 1108.35305,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 281.405289,
                    "min": 0,
                    "p50": 247.902727,
                    "p95": 281.405289,
                    "p99": 281.405289,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 131.502727,
                    "min": 0,
                    "p50": 128.316149,
                    "p95": 131.502727,
                    "p99": 131.502727,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 215.349158,
                    "min": 0,
                    "p50": 186.469428,
                    "p95": 215.349158,
                    "p99": 215.349158,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 310.515793,
                    "min": 0,
                    "p50": 304.800699,
                    "p95": 310.515793,
                    "p99": 310.515793,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "ChainId",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 158.75545499999998,
                    "min": 0,
                    "p50": 153.19027699999998,
                    "p95": 158.75545499999998,
                    "p99": 158.75545499999998,
                    "n": 10,
                    "description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 900.1800549999999,
                    "min": 0,
                    "p50": 885.176619,
                    "p95": 900.1800549999999,
                    "p99": 900.1800549999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 443.397404,
                    "min": 0,
                    "p50": 436.83059799999995,
                    "p95": 443.397404,
                    "p99": 443.397404,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 212.131306,
                    "min": 0,
                    "p50": 208.620513,
                    "p95": 212.131306,
                    "p99": 212.131306,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 270.597228,
                    "min": 0,
                    "p50": 266.037115,
                    "p95": 270.597228,
                    "p99": 270.597228,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 616.4455379999999,
                    "min": 0,
                    "p50": 608.473717,
                    "p95": 616.4455379999999,
                    "p99": 616.4455379999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 387.92514,
                    "min": 0,
                    "p50": 379.785936,
                    "p95": 387.92514,
                    "p99": 387.92514,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1202.207034,
                    "min": 0,
                    "p50": 1180.301989,
                    "p95": 1202.207034,
                    "p99": 1202.207034,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 330.183269,
                    "min": 0,
                    "p50": 319.251915,
                    "p95": 330.183269,
                    "p99": 330.183269,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 674.376526,
                    "min": 0,
                    "p50": 662.14527,
                    "p95": 674.376526,
                    "p99": 674.376526,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 494.65896499999997,
                    "min": 0,
                    "p50": 488.876632,
                    "p95": 494.65896499999997,
                    "p99": 494.65896499999997,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 725.3339,
                    "min": 0,
                    "p50": 716.106324,
                    "p95": 725.3339,
                    "p99": 725.3339,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 786.894224,
                    "min": 0,
                    "p50": 769.268753,
                    "p95": 786.894224,
                    "p99": 786.894224,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1037.4295869999999,
                    "min": 0,
                    "p50": 1023.953547,
                    "p95": 1037.4295869999999,
                    "p99": 1037.4295869999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 835.142514,
                    "min": 0,
                    "p50": 826.6811319999999,
                    "p95": 835.142514,
                    "p99": 835.142514,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "CoinBase",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 549.8751629999999,
                    "min": 0,
                    "p50": 542.1581209999999,
                    "p95": 549.8751629999999,
                    "p99": 549.8751629999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 159.00266399999998,
                    "min": 0,
                    "p50": 152.49091099999998,
                    "p95": 159.00266399999998,
                    "p99": 159.00266399999998,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 568.880353,
                    "min": 0,
                    "p50": 480.491744,
                    "p95": 568.880353,
                    "p99": 568.880353,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 367.918347,
                    "min": 0,
                    "p50": 360.753787,
                    "p95": 367.918347,
                    "p99": 367.918347,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 307.899687,
                    "min": 0,
                    "p50": 302.876089,
                    "p95": 307.899687,
                    "p99": 307.899687,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 220.071465,
                    "min": 0,
                    "p50": 215.04545,
                    "p95": 220.071465,
                    "p99": 220.071465,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.508453,
                    "min": 0,
                    "p50": 127.391916,
                    "p95": 143.508453,
                    "p99": 143.508453,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 212.664232,
                    "min": 0,
                    "p50": 186.00497299999998,
                    "p95": 212.664232,
                    "p99": 212.664232,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 462.543434,
                    "min": 0,
                    "p50": 454.34113199999996,
                    "p95": 462.543434,
                    "p99": 462.543434,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 653.056878,
                    "min": 0,
                    "p50": 563.30862,
                    "p95": 653.056878,
                    "p99": 653.056878,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 280.908684,
                    "min": 0,
                    "p50": 244.54553399999998,
                    "p95": 280.908684,
                    "p99": 280.908684,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 390.377812,
                    "min": 0,
                    "p50": 332.06994,
                    "p95": 390.377812,
                    "p99": 390.377812,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 748.0990479999999,
                    "min": 0,
                    "p50": 636.723256,
                    "p95": 748.0990479999999,
                    "p99": 748.0990479999999,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 464.035751,
                    "min": 0,
                    "p50": 392.40155599999997,
                    "p95": 464.035751,
                    "p99": 464.035751,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 279.579471,
                    "min": 0,
                    "p50": 276.141979,
                    "p95": 279.579471,
                    "p99": 279.579471,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Timestamp",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 494.829564,
                    "min": 0,
                    "p50": 426.159361,
                    "p95": 494.829564,
                    "p99": 494.829564,
                    "n": 10,
                    "description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1110.068096,
                    "min": 0,
                    "p50": 1105.2792379999999,
                    "p95": 1110.068096,
                    "p99": 1110.068096,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 612.612845,
                    "min": 0,
                    "p50": 605.852484,
                    "p95": 612.612845,
                    "p99": 612.612845,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 763.6345729999999,
                    "min": 0,
                    "p50": 745.1978349999999,
                    "p95": 763.6345729999999,
                    "p99": 763.6345729999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 830.3300079999999,
                    "min": 0,
                    "p50": 815.529329,
                    "p95": 830.3300079999999,
                    "p99": 830.3300079999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1043.901852,
                    "min": 0,
                    "p50": 1021.971828,
                    "p95": 1043.901852,
                    "p99": 1043.901852,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 968.223203,
                    "min": 0,
                    "p50": 956.171159,
                    "p95": 968.223203,
                    "p99": 968.223203,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 329.402331,
                    "min": 0,
                    "p50": 321.30049099999997,
                    "p95": 329.402331,
                    "p99": 329.402331,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 683.1658639999999,
                    "min": 0,
                    "p50": 676.070806,
                    "p95": 683.1658639999999,
                    "p99": 683.1658639999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 899.437419,
                    "min": 0,
                    "p50": 886.678322,
                    "p95": 899.437419,
                    "p99": 899.437419,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1295.937528,
                    "min": 0,
                    "p50": 1279.313473,
                    "p95": 1295.937528,
                    "p99": 1295.937528,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 400.10119399999996,
                    "min": 0,
                    "p50": 392.957751,
                    "p95": 400.10119399999996,
                    "p99": 400.10119399999996,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 541.8962799999999,
                    "min": 0,
                    "p50": 535.80656,
                    "p95": 541.8962799999999,
                    "p99": 541.8962799999999,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 257.403861,
                    "min": 0,
                    "p50": 252.11871,
                    "p95": 257.403861,
                    "p99": 257.403861,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 469.93988099999996,
                    "min": 0,
                    "p50": 463.051184,
                    "p95": 469.93988099999996,
                    "p99": 469.93988099999996,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From1Byte",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1467.241685,
                    "min": 0,
                    "p50": 1455.5855669999999,
                    "p95": 1467.241685,
                    "p99": 1467.241685,
                    "n": 10,
                    "description": "Keccak calculations based on 1-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1480.579397,
                    "min": 0,
                    "p50": 1439.4605669999999,
                    "p95": 1480.579397,
                    "p99": 1480.579397,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1040.634018,
                    "min": 0,
                    "p50": 1022.7656629999999,
                    "p95": 1040.634018,
                    "p99": 1040.634018,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 899.940295,
                    "min": 0,
                    "p50": 884.7335079999999,
                    "p95": 899.940295,
                    "p99": 899.940295,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 684.291777,
                    "min": 0,
                    "p50": 673.646882,
                    "p95": 684.291777,
                    "p99": 684.291777,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 614.9867889999999,
                    "min": 0,
                    "p50": 604.056081,
                    "p95": 614.9867889999999,
                    "p99": 614.9867889999999,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 465.356881,
                    "min": 0,
                    "p50": 453.745837,
                    "p95": 465.356881,
                    "p99": 465.356881,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 967.95341,
                    "min": 0,
                    "p50": 943.197247,
                    "p95": 967.95341,
                    "p99": 967.95341,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 327.536317,
                    "min": 0,
                    "p50": 319.59779199999997,
                    "p95": 327.536317,
                    "p99": 327.536317,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 829.241714,
                    "min": 0,
                    "p50": 813.674623,
                    "p95": 829.241714,
                    "p99": 829.241714,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 395.626877,
                    "min": 0,
                    "p50": 387.93463199999997,
                    "p95": 395.626877,
                    "p99": 395.626877,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1290.809904,
                    "min": 0,
                    "p50": 1259.2729279999999,
                    "p95": 1290.809904,
                    "p99": 1290.809904,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 254.79983199999998,
                    "min": 0,
                    "p50": 251.664023,
                    "p95": 254.79983199999998,
                    "p99": 254.79983199999998,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 537.555289,
                    "min": 0,
                    "p50": 530.547141,
                    "p95": 537.555289,
                    "p99": 537.555289,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1102.6337959999998,
                    "min": 0,
                    "p50": 1090.251037,
                    "p95": 1102.6337959999998,
                    "p99": 1102.6337959999998,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From8Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 750.252165,
                    "min": 0,
                    "p50": 744.2479999999999,
                    "p95": 750.252165,
                    "p99": 750.252165,
                    "n": 10,
                    "description": "Keccak calculations based on 8-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 829.1268239999999,
                    "min": 0,
                    "p50": 808.376257,
                    "p95": 829.1268239999999,
                    "p99": 829.1268239999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 470.250857,
                    "min": 0,
                    "p50": 462.091525,
                    "p95": 470.250857,
                    "p99": 470.250857,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 392.184603,
                    "min": 0,
                    "p50": 388.38964599999997,
                    "p95": 392.184603,
                    "p99": 392.184603,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 762.665978,
                    "min": 0,
                    "p50": 738.001232,
                    "p95": 762.665978,
                    "p99": 762.665978,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 1460.583451,
                    "min": 0,
                    "p50": 1434.117978,
                    "p95": 1460.583451,
                    "p99": 1460.583451,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 325.800439,
                    "min": 0,
                    "p50": 319.092046,
                    "p95": 325.800439,
                    "p99": 325.800439,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 538.9785889999999,
                    "min": 0,
                    "p50": 533.315873,
                    "p95": 538.9785889999999,
                    "p99": 538.9785889999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 256.79621099999997,
                    "min": 0,
                    "p50": 248.985663,
                    "p95": 256.79621099999997,
                    "p99": 256.79621099999997,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 1125.916288,
                    "min": 0,
                    "p50": 1091.032207,
                    "p95": 1125.916288,
                    "p99": 1125.916288,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 1034.697809,
                    "min": 0,
                    "p50": 1023.1886949999999,
                    "p95": 1034.697809,
                    "p99": 1034.697809,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 902.7346349999999,
                    "min": 0,
                    "p50": 879.222624,
                    "p95": 902.7346349999999,
                    "p99": 902.7346349999999,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 964.616105,
                    "min": 0,
                    "p50": 952.8862399999999,
                    "p95": 964.616105,
                    "p99": 964.616105,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 681.933533,
                    "min": 0,
                    "p50": 668.714332,
                    "p95": 681.933533,
                    "p99": 681.933533,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 1286.3559699999998,
                    "min": 0,
                    "p50": 1262.4492189999999,
                    "p95": 1286.3559699999998,
                    "p99": 1286.3559699999998,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "Keccak256From32Bytes",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 611.548865,
                    "min": 0,
                    "p50": 596.5520339999999,
                    "p95": 611.548865,
                    "p99": 611.548865,
                    "n": 10,
                    "description": "Keccak calculations based on 32-byte source data"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 532.616535,
                    "min": 0,
                    "p50": 523.329401,
                    "p95": 532.616535,
                    "p99": 532.616535,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 306.296299,
                    "min": 0,
                    "p50": 300.985732,
                    "p95": 306.296299,
                    "p99": 306.296299,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 612.619057,
                    "min": 0,
                    "p50": 599.311982,
                    "p95": 612.619057,
                    "p99": 612.619057,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 701.616997,
                    "min": 0,
                    "p50": 692.7836659999999,
                    "p95": 701.616997,
                    "p99": 701.616997,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 153.637348,
                    "min": 0,
                    "p50": 151.478064,
                    "p95": 153.637348,
                    "p99": 153.637348,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 498.129368,
                    "min": 0,
                    "p50": 490.34338099999997,
                    "p95": 498.129368,
                    "p99": 498.129368,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 266.828262,
                    "min": 0,
                    "p50": 263.395038,
                    "p95": 266.828262,
                    "p99": 266.828262,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 194.107831,
                    "min": 0,
                    "p50": 189.174057,
                    "p95": 194.107831,
                    "p99": 194.107831,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1174.932438,
                    "min": 0,
                    "p50": 1155.7973259999999,
                    "p95": 1174.932438,
                    "p99": 1174.932438,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 380.60387199999997,
                    "min": 0,
                    "p50": 376.404005,
                    "p95": 380.60387199999997,
                    "p99": 380.60387199999997,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 456.588373,
                    "min": 0,
                    "p50": 449.600873,
                    "p95": 456.588373,
                    "p99": 456.588373,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 571.079614,
                    "min": 0,
                    "p50": 563.670405,
                    "p95": 571.079614,
                    "p99": 571.079614,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 231.084812,
                    "min": 0,
                    "p50": 223.841803,
                    "p95": 231.084812,
                    "p99": 231.084812,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "500",
                    "method": "engine_newPayloadV3",
                    "max": 1939.977453,
                    "min": 0,
                    "p50": 1902.2322829999998,
                    "p95": 1939.977453,
                    "p99": 1939.977453,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 798.650353,
                    "min": 0,
                    "p50": 783.1244389999999,
                    "p95": 798.650353,
                    "p99": 798.650353,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 419.638851,
                    "min": 0,
                    "p50": 411.961344,
                    "p95": 419.638851,
                    "p99": 419.638851,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 345.679891,
                    "min": 0,
                    "p50": 340.020281,
                    "p95": 345.679891,
                    "p99": 345.679891,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "CallerPop",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1563.240663,
                    "min": 0,
                    "p50": 1531.1315559999998,
                    "p95": 1563.240663,
                    "p99": 1563.240663,
                    "n": 10,
                    "description": "Endlessly pushing caller address to stack, then popping it"
                },
                {
                    "test_case": "Gas",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 643.198552,
                    "min": 0,
                    "p50": 637.168295,
                    "p95": 643.198552,
                    "p99": 643.198552,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 241.691315,
                    "min": 0,
                    "p50": 215.040831,
                    "p95": 241.691315,
                    "p99": 241.691315,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 496.04517699999997,
                    "min": 0,
                    "p50": 423.63639,
                    "p95": 496.04517699999997,
                    "p99": 496.04517699999997,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 352.251919,
                    "min": 0,
                    "p50": 304.234002,
                    "p95": 352.251919,
                    "p99": 352.251919,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 389.62779,
                    "min": 0,
                    "p50": 333.986253,
                    "p95": 389.62779,
                    "p99": 389.62779,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 143.413499,
                    "min": 0,
                    "p50": 127.743476,
                    "p95": 143.413499,
                    "p99": 143.413499,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 387.888558,
                    "min": 0,
                    "p50": 362.603091,
                    "p95": 387.888558,
                    "p99": 387.888558,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 189.269824,
                    "min": 0,
                    "p50": 184.846608,
                    "p95": 189.269824,
                    "p99": 189.269824,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 457.19659099999996,
                    "min": 0,
                    "p50": 453.932894,
                    "p95": 457.19659099999996,
                    "p99": 457.19659099999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 280.409017,
                    "min": 0,
                    "p50": 271.207701,
                    "p95": 280.409017,
                    "p99": 280.409017,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 648.3592629999999,
                    "min": 0,
                    "p50": 553.750736,
                    "p95": 648.3592629999999,
                    "p99": 648.3592629999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 462.42929599999997,
                    "min": 0,
                    "p50": 391.72736199999997,
                    "p95": 462.42929599999997,
                    "p99": 462.42929599999997,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 286.198485,
                    "min": 0,
                    "p50": 246.10041299999997,
                    "p95": 286.198485,
                    "p99": 286.198485,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 160.56923799999998,
                    "min": 0,
                    "p50": 157.529651,
                    "p95": 160.56923799999998,
                    "p99": 160.56923799999998,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 488.96746099999996,
                    "min": 0,
                    "p50": 484.01104,
                    "p95": 488.96746099999996,
                    "p99": 488.96746099999996,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Gas",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 1100.0852499999999,
                    "min": 0,
                    "p50": 938.578138,
                    "p95": 1100.0852499999999,
                    "p99": 1100.0852499999999,
                    "n": 10,
                    "description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "90",
                    "method": "engine_newPayloadV3",
                    "max": 339.62519399999996,
                    "min": 0,
                    "p50": 306.73114899999996,
                    "p95": 339.62519399999996,
                    "p99": 339.62519399999996,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "100",
                    "method": "engine_newPayloadV3",
                    "max": 394.14739299999997,
                    "min": 0,
                    "p50": 337.380605,
                    "p95": 394.14739299999997,
                    "p99": 394.14739299999997,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "50",
                    "method": "engine_newPayloadV3",
                    "max": 211.21398499999998,
                    "min": 0,
                    "p50": 188.363758,
                    "p95": 211.21398499999998,
                    "p99": 211.21398499999998,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "80",
                    "method": "engine_newPayloadV3",
                    "max": 285.991991,
                    "min": 0,
                    "p50": 278.454275,
                    "p95": 285.991991,
                    "p99": 285.991991,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "140",
                    "method": "engine_newPayloadV3",
                    "max": 520.7247689999999,
                    "min": 0,
                    "p50": 457.804284,
                    "p95": 520.7247689999999,
                    "p99": 520.7247689999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "30",
                    "method": "engine_newPayloadV3",
                    "max": 144.393725,
                    "min": 0,
                    "p50": 128.59342999999998,
                    "p95": 144.393725,
                    "p99": 144.393725,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "300",
                    "method": "engine_newPayloadV3",
                    "max": 954.469875,
                    "min": 0,
                    "p50": 940.936506,
                    "p95": 954.469875,
                    "p99": 954.469875,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "110",
                    "method": "engine_newPayloadV3",
                    "max": 413.757122,
                    "min": 0,
                    "p50": 368.643584,
                    "p95": 413.757122,
                    "p99": 413.757122,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "130",
                    "method": "engine_newPayloadV3",
                    "max": 486.23227699999995,
                    "min": 0,
                    "p50": 429.60351499999996,
                    "p95": 486.23227699999995,
                    "p99": 486.23227699999995,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "60",
                    "method": "engine_newPayloadV3",
                    "max": 271.257334,
                    "min": 0,
                    "p50": 219.513162,
                    "p95": 271.257334,
                    "p99": 271.257334,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "175",
                    "method": "engine_newPayloadV3",
                    "max": 661.225384,
                    "min": 0,
                    "p50": 562.582213,
                    "p95": 661.225384,
                    "p99": 661.225384,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "120",
                    "method": "engine_newPayloadV3",
                    "max": 465.49721999999997,
                    "min": 0,
                    "p50": 398.28957099999997,
                    "p95": 465.49721999999997,
                    "p99": 465.49721999999997,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "70",
                    "method": "engine_newPayloadV3",
                    "max": 297.163262,
                    "min": 0,
                    "p50": 248.43894999999998,
                    "p95": 297.163262,
                    "p99": 297.163262,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "400",
                    "method": "engine_newPayloadV3",
                    "max": 1484.0637179999999,
                    "min": 0,
                    "p50": 1249.3916829999998,
                    "p95": 1484.0637179999999,
                    "p99": 1484.0637179999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "40",
                    "method": "engine_newPayloadV3",
                    "max": 185.372927,
                    "min": 0,
                    "p50": 157.951877,
                    "p95": 185.372927,
                    "p99": 185.372927,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "150",
                    "method": "engine_newPayloadV3",
                    "max": 560.8643509999999,
                    "min": 0,
                    "p50": 489.25265299999995,
                    "p95": 560.8643509999999,
                    "p99": 560.8643509999999,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                },
                {
                    "test_case": "Push0",
                    "gas": "200",
                    "method": "engine_newPayloadV3",
                    "max": 763.07506,
                    "min": 0,
                    "p50": 636.5092549999999,
                    "p95": 763.07506,
                    "p99": 763.07506,
                    "n": 10,
                    "description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
                }
            ]
        }
    },
    "metadata": {
        "Warmup": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Warmup",
            "Title": "Warmup",
            "Description": "Warmup"
        },
        "Transfers": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Transfers",
            "Title": "ETH transfers",
            "Description": "All block gas limit consumed by simple ETH transfers"
        },
        "TxDataZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "TxDataZero",
            "Title": "Tx with big zero data",
            "Description": "Single transaction with large extra data full of zeros"
        },
        "Keccak256From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From1Byte",
            "Title": "Keccak256 from 1 byte",
            "Description": "Keccak calculations based on 1-byte source data"
        },
        "Keccak256From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From8Bytes",
            "Title": "Keccak256 from 8 bytes",
            "Description": "Keccak calculations based on 8-byte source data"
        },
        "Keccak256From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Keccak256From32Bytes",
            "Title": "Keccak256 from 32 bytes",
            "Description": "Keccak calculations based on 32-byte source data"
        },
        "Push0": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0",
            "Title": "Push0",
            "Description": "Endlessly pushing zeros to stack (1000 per 1 contract)"
        },
        "Push0Pop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Push0Pop",
            "Title": "Push0-Pop",
            "Description": "Endlessly pushing zeros to stack, then popping it"
        },
        "Gas": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Gas",
            "Title": "Gas",
            "Description": "Endlessly pushing amount of remaining gas to stack (1000 per 1 contract)"
        },
        "GasPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasPop",
            "Title": "Gas-Pop",
            "Description": "Endlessly pushing amount of remaining gas to stack, then popping it"
        },
        "SelfBalance": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SelfBalance",
            "Title": "SelfBalance",
            "Description": "Endlessly pushing self balance to stack (1000 per 1 contract)"
        },
        "JumpDest": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "JumpDest",
            "Title": "JumpDest",
            "Description": "Block full of JumpDest opcode only"
        },
        "MSize": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MSize",
            "Title": "MSize",
            "Description": "Endlessly pushing memory size to stack (1000 per 1 contract)"
        },
        "MStoreZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreZero",
            "Title": "MStore - zero",
            "Description": "Endlessly pushing zero value to memory with offset zero"
        },
        "MStoreRandom": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "MStoreRandom",
            "Title": "MStore - random",
            "Description": "Endlessly pushing random value to memory with offset zero"
        },
        "Caller": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Caller",
            "Title": "Caller",
            "Description": "Endlessly pushing caller address to stack (1000 per 1 contract)"
        },
        "CallerPop": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CallerPop",
            "Title": "Caller-Pop",
            "Description": "Endlessly pushing caller address to stack, then popping it"
        },
        "Address": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Address",
            "Title": "Address",
            "Description": "Endlessly pushing account address to stack (1000 per 1 contract)"
        },
        "Origin": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Origin",
            "Title": "Origin",
            "Description": "Endlessly pushing execution origination address to stack (1000 per 1 contract)"
        },
        "CoinBase": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CoinBase",
            "Title": "CoinBase",
            "Description": "Endlessly pushing current block's coinbase to stack (1000 per 1 contract)"
        },
        "Timestamp": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Timestamp",
            "Title": "Timestamp",
            "Description": "Endlessly pushing current block's timestamp to stack (1000 per 1 contract)"
        },
        "Number": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Number",
            "Title": "Number",
            "Description": "Endlessly pushing current block's number to stack (1000 per 1 contract)"
        },
        "PrevRandao": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PrevRandao",
            "Title": "PrevRandao",
            "Description": "Endlessly pushing previous block's randao mix to stack (1000 per 1 contract)"
        },
        "GasLimit": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "GasLimit",
            "Title": "GasLimit",
            "Description": "Endlessly pushing current block's gas limit to stack (1000 per 1 contract)"
        },
        "ChainId": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ChainId",
            "Title": "ChainId",
            "Description": "Endlessly pushing chain ID to stack (1000 per 1 contract)"
        },
        "BaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BaseFee",
            "Title": "BaseFee",
            "Description": "Endlessly pushing current base fee to stack (1000 per 1 contract)"
        },
        "BlobBaseFee": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobBaseFee",
            "Title": "BlobBaseFee",
            "Description": "Endlessly pushing current blob base fee to stack (1000 per 1 contract)"
        },
        "BlobHashZero": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "BlobHashZero",
            "Title": "BlobHash",
            "Description": "Endlessly pushing zero as index and BlobHash opcode to stack when there were no blobs (1000 per 1 contract)"
        },
        "CodeCopy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "CodeCopy",
            "Title": "CodeCopy",
            "Description": "Endlessly loading 32-bytes of code to the memory"
        },
        "EcRecover": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcRecover",
            "Title": "EcRecover precompile",
            "Description": "EcRecover precompile calculations"
        },
        "SHA2From1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From1Byte",
            "Title": "SHA-2 precompile from 1 byte",
            "Description": "SHA-2 precompile calculations based on 1-byte source data"
        },
        "SHA2From8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From8Bytes",
            "Title": "SHA-2 precompile from 8 bytes",
            "Description": "SHA-2 precompile calculations based on 8-byte source data"
        },
        "SHA2From32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From32Bytes",
            "Title": "SHA-2 precompile from 32 bytes",
            "Description": "SHA-2 precompile calculations based on 32-byte source data"
        },
        "SHA2From128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SHA2From128Bytes",
            "Title": "SHA-2 precompile from 128 bytes",
            "Description": "SHA-2 precompile calculations based on 128-byte source data"
        },
        "RipemdFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom1Byte",
            "Title": "Ripemd-160 precompile from 1 byte",
            "Description": "Ripemd-160 precompile calculations based on 1-byte source data"
        },
        "RipemdFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom8Bytes",
            "Title": "Ripemd-160 precompile from 8 bytes",
            "Description": "Ripemd-160 precompile calculations based on 8-byte source data"
        },
        "RipemdFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom32Bytes",
            "Title": "Ripemd-160 precompile from 32 bytes",
            "Description": "Ripemd-160 precompile calculations based on 32-byte source data"
        },
        "RipemdFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "RipemdFrom128Bytes",
            "Title": "Ripemd-160 precompile from 128 bytes",
            "Description": "Ripemd-160 precompile calculations based on 128-byte source data"
        },
        "IdentityFrom1Byte": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom1Byte",
            "Title": "Identity precompile from 1 byte",
            "Description": "Identity precompile call based on 1-byte source data"
        },
        "IdentityFrom8Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom8Bytes",
            "Title": "Identity precompile from 8 bytes",
            "Description": "Identity precompile call based on 8-byte source data"
        },
        "IdentityFrom32Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom32Bytes",
            "Title": "Identity precompile from 32 bytes",
            "Description": "Identity precompile call based on 32-byte source data"
        },
        "IdentityFrom128Bytes": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "IdentityFrom128Bytes",
            "Title": "Identity precompile from 128 bytes",
            "Description": "Identity precompile call based on 128-byte source data"
        },
        "ModexpMinGasBaseHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBaseHeavy",
            "Title": "Modexp min gas, base heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 192 and exponent equal 3 (0b11 - 2x 1s in binary)"
        },
        "ModexpMinGasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasExpHeavy",
            "Title": "Modexp min gas, exp heavy",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 8 and exponent equal (603x 1s in binary)"
        },
        "ModexpMinGasBalanced": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpMinGasBalanced",
            "Title": "Modexp min gas, balanced",
            "Description": "Modexp precompile consuming 200 gas (minimum value), with base and modulo byte size equal 40 and exponent equal 2^25 - 1 (25x 1s in binary)"
        },
        "Modexp215GasExpHeavy": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Modexp215GasExpHeavy",
            "Title": "Modexp 215 gas, exp heavy",
            "Description": "Modexp precompile consuming 215 gas, with base and modulo byte size equal 8 and exponent equal 2^648 - 1 (648x 1s in binary, which is max possible exponent value)"
        },
        "ModexpVulnerabilityExample1": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample1",
            "Title": "Modexp \"eip_example1\"",
            "Description": "Modexp precompile test case \"eip_example1\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityExample2": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityExample2",
            "Title": "Modexp \"eip_example2\"",
            "Description": "Modexp precompile test case \"eip_example2\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Square",
            "Title": "Modexp \"nagydani-1-square\"",
            "Description": "Modexp precompile test case \"nagydani-1-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Qube",
            "Title": "Modexp \"nagydani-1-qube\"",
            "Description": "Modexp precompile test case \"nagydani-1-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani1Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani1Pow0x10001",
            "Title": "Modexp \"nagydani-1-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-1-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Square",
            "Title": "Modexp \"nagydani-2-square\"",
            "Description": "Modexp precompile test case \"nagydani-2-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Qube",
            "Title": "Modexp \"nagydani-2-qube\"",
            "Description": "Modexp precompile test case \"nagydani-2-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani2Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani2Pow0x10001",
            "Title": "Modexp \"nagydani-2-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-2-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Square",
            "Title": "Modexp \"nagydani-3-square\"",
            "Description": "Modexp precompile test case \"nagydani-3-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Qube",
            "Title": "Modexp \"nagydani-3-qube\"",
            "Description": "Modexp precompile test case \"nagydani-3-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani3Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani3Pow0x10001",
            "Title": "Modexp \"nagydani-3-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-3-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Square",
            "Title": "Modexp \"nagydani-4-square\"",
            "Description": "Modexp precompile test case \"nagydani-4-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Qube",
            "Title": "Modexp \"nagydani-4-qube\"",
            "Description": "Modexp precompile test case \"nagydani-4-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani4Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani4Pow0x10001",
            "Title": "Modexp \"nagydani-4-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-4-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Square": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Square",
            "Title": "Modexp \"nagydani-5-square\"",
            "Description": "Modexp precompile test case \"nagydani-5-square\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Qube": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Qube",
            "Title": "Modexp \"nagydani-5-qube\"",
            "Description": "Modexp precompile test case \"nagydani-5-qube\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityNagydani5Pow0x10001": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityNagydani5Pow0x10001",
            "Title": "Modexp \"nagydani-5-pow0x10001\"",
            "Description": "Modexp precompile test case \"nagydani-5-pow0x10001\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityMarius1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityMarius1Even",
            "Title": "Modexp \"marius-1-even\"",
            "Description": "Modexp precompile test case \"marius-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido1Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido1Even",
            "Title": "Modexp \"guido-1-even\"",
            "Description": "Modexp precompile test case \"guido-1-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido2Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido2Even",
            "Title": "Modexp \"guido-2-even\"",
            "Description": "Modexp precompile test case \"guido-2-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido3Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido3Even",
            "Title": "Modexp \"guido-3-even\"",
            "Description": "Modexp precompile test case \"guido-3-even\" reported as potential vulnerability"
        },
        "ModexpVulnerabilityGuido4Even": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "ModexpVulnerabilityGuido4Even",
            "Title": "Modexp \"guido-4-even\"",
            "Description": "Modexp precompile test case \"guido-4-even\" reported as potential vulnerability"
        },
        "EcAddInfinities": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAddInfinities",
            "Title": "EcAdd with (0, 0)",
            "Description": "EcAdd precompile with both initial points with x = 0 and y = 0"
        },
        "EcAdd12": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd12",
            "Title": "EcAdd with (1, 2)",
            "Description": "EcAdd precompile with both initial points with x = 1 and y = 2"
        },
        "EcAdd32ByteCoordinates": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcAdd32ByteCoordinates",
            "Title": "EcAdd with 32-byte coordinates",
            "Description": "EcAdd precompile with both initial points with x and y as 32-byte values"
        },
        "EcMulInfinities2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities2Scalar",
            "Title": "EcMul with (0, 0) and scalar 2",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar equal 2"
        },
        "EcMulInfinities32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMulInfinities32ByteScalar",
            "Title": "EcMul with (0, 0) and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x = 0 and y = 0 and scalar as 32-byte values"
        },
        "EcMul122": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul122",
            "Title": "EcMul with (1, 2) and scalar 2",
            "Description": "EcMul precompile with initial point x = 1, y = 2 and scalar equal 2"
        },
        "EcMul12And32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul12And32ByteScalar",
            "Title": "EcMul with (1, 2) and 32-byte scalar",
            "Description": "EcMul precompile with initial point x = 1, y = 2 scalar as 32-byte values"
        },
        "EcMul32ByteCoordinates2Scalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates2Scalar",
            "Title": "EcMul with 32-byte coordinates and scalar 2",
            "Description": "EcMul precompile with initial point with x and y as 32-byte values and scalar equal 2"
        },
        "EcMul32ByteCoordinates32ByteScalar": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcMul32ByteCoordinates32ByteScalar",
            "Title": "EcMul with 32-byte coordinates and 32-byte scalar",
            "Description": "EcMul precompile with initial point with x, y and scalar as 32-byte values"
        },
        "EcPairing0Input": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing0Input",
            "Title": "EcPairing with empty input",
            "Description": "EcPairing precompile with empty input"
        },
        "EcPairing2Sets": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "EcPairing2Sets",
            "Title": "EcPairing with 2 sets of data",
            "Description": "EcPairing precompile with 2 sets of valid input data (6x 32-byte value)"
        },
        "Blake1Round": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1Round",
            "Title": "Blake2f 1 round",
            "Description": "Blake2f precompile with 1 round of computations"
        },
        "Blake1KRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1KRounds",
            "Title": "Blake2f 1k rounds",
            "Description": "Blake2f precompile with 1000 rounds of computations"
        },
        "Blake1MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake1MRounds",
            "Title": "Blake2f 1M rounds",
            "Description": "Blake2f precompile with 1_000_000 rounds of computations"
        },
        "Blake10MRounds": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "Blake10MRounds",
            "Title": "Blake2f 10M rounds",
            "Description": "Blake2f precompile with 10_000_000 rounds of computations"
        },
        "PointEvaluationOneData": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "PointEvaluationOneData",
            "Title": "Point evaluation - one data",
            "Description": "Point evaluation precompile repeating computations on the same data"
        },
        "SStoreOneAccountOneKeyZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyZeroValue",
            "Title": "SStore - one storage key, repeating zero value",
            "Description": "SStore - repeating storing zero in single storage key of single account"
        },
        "SStoreOneAccountOneKeyConstantValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyConstantValue",
            "Title": "SStore - one storage key, repeating constant value",
            "Description": "SStore - repeating storing the same 32-byte word in single storage key of single account"
        },
        "SStoreOneAccountOneKeyRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyRandomValue",
            "Title": "SStore - one storage key, repeating random values",
            "Description": "SStore - repeating storing random 32-byte values in single storage key of single account"
        },
        "SStoreOneAccountOneKeyTwoValues": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreOneAccountOneKeyTwoValues",
            "Title": "SStore - one storage key, repeating two values, zero and non-zero",
            "Description": "SStore - repeating storing zero and then storing 32-byte word in single storage key of single account"
        },
        "SStoreManyAccountsConsecutiveKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysRandomValue",
            "Title": "SStore - many accounts, consecutive storage keys, random values",
            "Description": "SStore - storing random 32-byte values in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysRandomValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysRandomValue",
            "Title": "SStore - many accounts, random storage keys, random values",
            "Description": "SStore - storing random 32-byte values in random storage keys of many accounts"
        },
        "SStoreManyAccountsConsecutiveKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsConsecutiveKeysZeroValue",
            "Title": "SStore - many accounts, consecutive storage keys, zero values",
            "Description": "SStore - storing zeros in consecutive storage keys of many accounts"
        },
        "SStoreManyAccountsRandomKeysZeroValue": {
            "GasUsed": [
                30000000,
                40000000,
                50000000,
                60000000,
                70000000,
                80000000,
                90000000,
                100000000,
                110000000,
                120000000,
                130000000,
                140000000,
                150000000,
                175000000,
                200000000,
                300000000,
                400000000,
                500000000,
                1000000000
            ],
            "Name": "SStoreManyAccountsRandomKeysZeroValue",
            "Title": "SStore - many accounts, random storage keys, zero values",
            "Description": "SStore - storing zeros in random storage keys of many accounts"
        }
    },
    "test_cases": [
        "GasLimit",
        "Transfers",
        "BlobHashZero",
        "Number",
        "SStoreManyAccountsRandomKeysRandomValue",
        "SStoreOneAccountOneKeyConstantValue",
        "SStoreManyAccountsConsecutiveKeysRandomValue",
        "SStoreOneAccountOneKeyTwoValues",
        "SStoreOneAccountOneKeyZeroValue",
        "SStoreOneAccountOneKeyRandomValue",
        "Origin",
        "PointEvaluationOneData",
        "EcRecover",
        "EcMulInfinities32ByteScalar",
        "EcMul32ByteCoordinates32ByteScalar",
        "EcMul12And32ByteScalar",
        "EcMul32ByteCoordinates2Scalar",
        "EcMulInfinities2Scalar",
        "EcMul122",
        "Blake1MRounds",
        "Blake1KRounds",
        "Blake1Round",
        "Blake10MRounds",
        "SHA2From1Byte",
        "SHA2From128Bytes",
        "SHA2From32Bytes",
        "SHA2From8Bytes",
        "RipemdFrom32Bytes",
        "RipemdFrom8Bytes",
        "RipemdFrom128Bytes",
        "RipemdFrom1Byte",
        "IdentityFrom8Bytes",
        "IdentityFrom32Bytes",
        "IdentityFrom128Bytes",
        "IdentityFrom1Byte",
        "Address",
        "MStoreZero",
        "MStoreRandom",
        "JumpDest",
        "Push0Pop",
        "PrevRandao",
        "CodeCopy",
        "BaseFee",
        "GasPop",
        "Caller",
        "MSize",
        "ChainId",
        "CoinBase",
        "Timestamp",
        "Keccak256From1Byte",
        "Keccak256From8Bytes",
        "Keccak256From32Bytes",
        "CallerPop",
        "Gas",
        "Push0"
    ]
}