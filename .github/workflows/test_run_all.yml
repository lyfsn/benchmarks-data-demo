name: Test Run All Benchmarks

on:
  workflow_dispatch:
    inputs:
      task:
        description: 'Select the task to run'
        required: true
        default: 'Run all'
        type: choice
        options:
          - Run all
          - Run gas benchmarks
          - Run genesis init speed benchmarks
          - Run genesis init memory benchmarks
          - Run burntpix benchmarks
      date:
        description: 'Enter a specific date (optional, format: YYYY-MM-DD)'
        required: false
        default: ''

jobs:
  run-benchmarks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}

    - name: Set DATE variable
      run: |
        if [ -z "${{ github.event.inputs.date }}" ]; then
          DATE=$(date +%Y-%m-%d)
        else
          DATE=${{ github.event.inputs.date }}
        fi
        echo "DATE=$DATE" >> $GITHUB_ENV

    - name: Debug DATE variable
      run: echo "DATE is ${{ env.DATE }}"

    - name: Stop existing benchmarks and prepare environment
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.REMOTE_IP }} << 'EOF'
          set +e
          cd /root/benchmarks/benchmarks-data-demo
          ./stop.sh
          resultDir="results-${DATE}"
          mkdir -p logs
          logFile="logs/${DATE}.log"
          python3 ./update_time.py ${DATE}
          echo "Debug: DATE is ${DATE}"
          set -e
        EOF

    - name: Run gas benchmarks
      if: ${{ github.event.inputs.task == 'Run gas benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.REMOTE_IP }} << 'EOF'
          set +e
          cd /root/benchmarks/gas-benchmarks
          resultDir="results-${DATE}"
          mkdir -p logs
          logFile="logs/${DATE}.log"
          git pull
          ./run.sh \
            -t "tests/" \
            -w "warmup/warmup-1000bl-16wi-24tx.txt" \
            -c "nethermind,geth,reth,erigon,besu" \
            -r 1 \
            -o $resultDir >> $logFile 2>&1
          cp $resultDir/reports/index.html ../benchmarks-data-demo/gas/${DATE}.html
          cp $resultDir/reports/result.json ../benchmarks-data-demo/gas/${DATE}.json
          set -e
        EOF

    - name: Run genesis init speed benchmarks
      if: ${{ github.event.inputs.task == 'Run genesis init speed benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.REMOTE_IP }} << 'EOF'
          set +e
          cd /root/benchmarks/genesis-init-benchmarks
          resultDir="results-${DATE}"
          mkdir -p speed-logs
          logFile="speed-logs/${DATE}.log"
          git pull
          ./runSpeed.sh \
            -t "tests/" \
            -c "nethermind,reth,besu" \
            -r 1 \
            -o "$resultDir/speed" \
            -s 1,10 >> $logFile 2>&1
          cp $resultDir/speed/reports/speed.html ../benchmarks-data-demo/genesis-init-speed/${DATE}.html
          cp $resultDir/speed/reports/speed.json ../benchmarks-data-demo/genesis-init-speed/${DATE}.json

          python3 report_metadata.py ${DATE} speed
          cp $resultDir/speed/reports/metadata.json ../benchmarks-data-demo/genesis-init-speed/${DATE}.metadata.json
          set -e
        EOF

    - name: Run genesis init memory benchmarks
      if: ${{ github.event.inputs.task == 'Run genesis init memory benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.REMOTE_IP }} << 'EOF'
          set +e
          cd /root/benchmarks/genesis-init-benchmarks
          resultDir="results-${DATE}"
          mkdir -p memory-logs
          logFile="memory-logs/${DATE}.log"
          git pull
          ./runMemory.sh \
            -t "tests/" \
            -c "nethermind,reth,besu" \
            -r 1 \
            -o "$resultDir/memory" \
            -s 1,10 >> $logFile 2>&1
          cp $resultDir/memory/reports/memory.html ../benchmarks-data-demo/genesis-init-memory/${DATE}.html
          cp $resultDir/memory/reports/memory.json ../benchmarks-data-demo/genesis-init-memory/${DATE}.json

          python3 report_metadata.py ${DATE} memory
          cp $resultDir/memory/reports/metadata.json ../benchmarks-data-demo/genesis-init-memory/${DATE}.metadata.json
          set -e
        EOF

    - name: Run burntpix benchmarks
      if: ${{ github.event.inputs.task == 'Run burntpix benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.REMOTE_IP }} << 'EOF'
          set +e
          cd /root/benchmarks/burntpix-benchmarks
          resultDir="results-${DATE}"
          mkdir -p logs
          logFile="logs/${DATE}.log"
          git pull
          ./run.sh \
            -t "testburnt/" \
            -w "./testburntwarm/warm.txt" \
            -c "nethermind,reth,besu" \
            -r 1 \
            -o $resultDir >> $logFile 2>&1
          cp $resultDir/reports/index.html ../benchmarks-data-demo/burntpix/${DATE}.html
          cp $resultDir/reports/result.json ../benchmarks-data-demo/burntpix/${DATE}.json

          python3 report_metadata.py ${DATE}
          cp $resultDir/reports/metadata.json ../benchmarks-data-demo/gas/${DATE}.metadata.json
          set -e
        EOF

    - name: Push results
      if: ${{ github.event.inputs.task != 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ env.REMOTE_IP }} << 'EOF'
          set +e
          cd /root/benchmarks/benchmarks-data-demo
          logFile="logs/${DATE}.log"
          ./push.sh
          set -e
        EOF