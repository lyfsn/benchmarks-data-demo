name: Run Benchmarks

on:
  workflow_dispatch:
    inputs:
      task:
        description: 'Select the task to run'
        required: true
        default: 'Run all'
        type: choice
        options:
          - Run all
          - Run gas benchmarks
          - Run genesis init speed benchmarks
          - Run genesis init memory benchmarks
          - Run burntpix benchmarks
      date:
        description: 'Enter a specific date (optional, format: YYYY-MM-DD)'
        required: false
        default: ''
      clients:
        description: 'Enter clients to use (comma-separated, e.g., nethermind,geth,reth,erigon,besu)'
        required: true
        default: 'nethermind'
      repetitions:
        description: 'Enter the number of repetitions'
        required: true
        default: '1'
      sizes:
        description: 'Enter sizes (comma-separated, e.g., 1,10,100,500,1000)'
        required: false
        default: '1,10'
      root_dir:
        description: 'Enter the root directory for benchmarks'
        required: true
        default: '/root/benchmarks/'

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.set-date.outputs.date }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}

    - name: Set DATE variable
      id: set-date
      run: |
        if [ -z "${{ github.event.inputs.date }}" ]; then
          DATE=$(date +%Y-%m-%d)
        else
          DATE=${{ github.event.inputs.date }}
        fi
        echo "date=$DATE" >> $GITHUB_ENV

    - name: Stop existing benchmarks and prepare environment
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=60 \
            root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          cd ${{ github.event.inputs.root_dir }}/benchmarks-data-demo
          ./stop.sh
          resultDir="results-${{ env.date }}"
          mkdir -p logs
          logFile="logs/${{ env.date }}.log"
          python3 ./update_time.py ${{ env.date }}
          echo "Debug: DATE is ${{ env.date }}"
          set -e
        EOF

  run-benchmarks:
    runs-on: ubuntu-latest
    needs: setup-environment
    strategy:
      matrix:
        client: [${{ fromJson('["' + github.event.inputs.clients.replace(',', '","') + '"]') }}]
        size: [${{ fromJson('["' + github.event.inputs.sizes.replace(',', '","') + '"]') }}]
    steps:
    - name: Run gas benchmarks
      if: ${{ github.event.inputs.task == 'Run gas benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=60 \
            root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          cd ${{ github.event.inputs.root_dir }}/gas-benchmarks
          resultDir="results-${{ needs.setup-environment.outputs.date }}"
          mkdir -p logs
          logFile="logs/${{ needs.setup-environment.outputs.date }}.log"
          git pull
          ./run.sh \
            -t "tests/" \
            -w "warmup/warmup-1000bl-16wi-24tx.txt" \
            -c "${{ matrix.client }}" \
            -r ${{ github.event.inputs.repetitions }} \
            -o $resultDir >> $logFile 2>&1
          cp $resultDir/reports/index.html ../benchmarks-data-demo/gas/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.html
          cp $resultDir/reports/result.json ../benchmarks-data-demo/gas/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.json

          python3 report_metadata.py ${{ needs.setup-environment.outputs.date }}
          cp $resultDir/reports/metadata.json ../benchmarks-data-demo/gas/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.metadata.json
          set -e
        EOF

    - name: Run genesis init speed benchmarks
      if: ${{ github.event.inputs.task == 'Run genesis init speed benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=60 \
            root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          cd ${{ github.event.inputs.root_dir }}/genesis-init-benchmarks
          resultDir="results-${{ needs.setup-environment.outputs.date }}"
          mkdir -p speed-logs
          logFile="speed-logs/${{ needs.setup-environment.outputs.date }}.log"
          git pull
          ./runSpeed.sh \
            -t "tests/" \
            -c "${{ matrix.client }}" \
            -r ${{ github.event.inputs.repetitions }} \
            -o "$resultDir/speed" \
            -s "${{ matrix.size }}" >> $logFile 2>&1
          cp $resultDir/speed/reports/speed.html ../benchmarks-data-demo/genesis-init-speed/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.html
          cp $resultDir/speed/reports/speed.json ../benchmarks-data-demo/genesis-init-speed/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.json

          python3 report_metadata.py ${{ needs.setup-environment.outputs.date }} speed
          cp $resultDir/speed/reports/metadata.json ../benchmarks-data-demo/genesis-init-speed/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.metadata.json
          set -e
        EOF

    - name: Run genesis init memory benchmarks
      if: ${{ github.event.inputs.task == 'Run genesis init memory benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=60 \
            root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          cd ${{ github.event.inputs.root_dir }}/genesis-init-benchmarks
          resultDir="results-${{ needs.setup-environment.outputs.date }}"
          mkdir -p memory-logs
          logFile="memory-logs/${{ needs.setup-environment.outputs.date }}.log"
          git pull
          ./runMemory.sh \
            -t "tests/" \
            -c "${{ matrix.client }}" \
            -r ${{ github.event.inputs.repetitions }} \
            -o "$resultDir/memory" \
            -s "${{ matrix.size }}" >> $logFile 2>&1
          cp $resultDir/memory/reports/memory.html ../benchmarks-data-demo/genesis-init-memory/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.html
          cp $resultDir/memory/reports/memory.json ../benchmarks-data-demo/genesis-init-memory/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.json

          python3 report_metadata.py ${{ needs.setup-environment.outputs.date }} memory
          cp $resultDir/memory/reports/metadata.json ../benchmarks-data-demo/genesis-init-memory/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.metadata.json
          set -e
        EOF

    - name: Run burntpix benchmarks
      if: ${{ github.event.inputs.task == 'Run burntpix benchmarks' || github.event.inputs.task == 'Run all' }}
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=60 \
            root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          cd ${{ github.event.inputs.root_dir }}/burntpix-benchmarks
          resultDir="results-${{ needs.setup-environment.outputs.date }}"
          mkdir -p logs
          logFile="logs/${{ needs.setup-environment.outputs.date }}.log"
          git pull
          ./run.sh \
            -t "testburnt/" \
            -w "./testburntwarm/warm.txt" \
            -c "${{ matrix.client }}" \
            -r $resultDir >> $logFile 2>&1
          cp $resultDir/reports/index.html ../benchmarks-data-demo/burntpix/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.html
          cp $resultDir/reports/result.json ../benchmarks-data-demo/burntpix/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.json

          python3 report_metadata.py ${{ needs.setup-environment.outputs.date }}
          cp $resultDir/reports/metadata.json ../benchmarks-data-demo/burntpix/${{ needs.setup-environment.outputs.date }}_${{ matrix.client }}_${{ matrix.size }}.metadata.json
          set -e
        EOF

  push-results:
    runs-on: ubuntu-latest
    needs: run-benchmarks
    steps:
    - name: Push results
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=60 \
            root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          cd ${{ github.event.inputs.root_dir }}/benchmarks-data-demo
          ./push.sh
          set -e
        EOF