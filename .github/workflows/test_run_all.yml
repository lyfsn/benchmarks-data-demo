name: Run Benchmarks

on:
  workflow_dispatch:
    inputs:
      root_dir:
        description: 'Enter the root directory for benchmarks'
        required: true
        default: '/root/benchmarks/'
      date:
        description: 'Enter a specific date (optional, format: YYYY-MM-DD)'
        required: false
        default: ''
      clients:
        description: 'Enter clients to use (JSON array format, e.g., ["nethermind","geth","reth","erigon","besu"])'
        required: true
        default: '["nethermind"]'
      sizes:
        description: 'Enter sizes (JSON array format, e.g., [1,10,100,500,1000])'
        required: false
        default: '[1]'
      repetitions:
        description: 'Enter the number of repetitions'
        required: true
        default: 1

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.set-date.outputs.date }}
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}
    - name: Set DATE variable
      id: set-date
      run: |
        if [ -z "${{ github.event.inputs.date }}" ]; then
          DATE=$(date +%Y-%m-%d)
        else
          DATE=${{ github.event.inputs.date }}
        fi
        echo "DATE=$DATE" >> $GITHUB_OUTPUT

  stop-existing-benchmarks:
    runs-on: ubuntu-latest
    needs: setup-environment
    outputs:
      date: ${{ steps.set-date.outputs.date }}
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}
    - name: Stop existing benchmarks and prepare environment
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          echo "=== Run with date ${{ needs.setup-environment.outputs.date }} === "
          cd ${{ github.event.inputs.root_dir }}/benchmarks-data-demo
          ./stop.sh
          python3 ./update_time.py ${{ needs.setup-environment.outputs.date }}
          cat ./date.json
          set -e
        EOF
    - name: Set DATE variable
      id: set-date
      run: |
        echo "DATE=${{ needs.setup-environment.outputs.date }}" >> $GITHUB_OUTPUT

  run-gas-benchmarks:
    runs-on: ubuntu-latest
    needs: stop-existing-benchmarks
    strategy:
      matrix:
        client: ${{ fromJson(github.event.inputs.clients) }}
        size: ${{ fromJson(github.event.inputs.sizes) }}
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}
    - name: Run gas benchmarks
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          echo "=== Run with date ${{ needs.stop-existing-benchmarks.outputs.date }} === "
          cd ${{ github.event.inputs.root_dir }}/gas-benchmarks
          resultDir="results-${{ needs.stop-existing-benchmarks.outputs.date }}"
          mkdir -p logs
          logFile="logs/${{ needs.stop-existing-benchmarks.outputs.date }}.log"
          git pull
          ./run.sh -t "tests3/" -w "warmup/warmup-1000bl-16wi-24tx.txt" -c "${{ matrix.client }}" -r ${{ github.event.inputs.repetitions }} -o $resultDir
          python3 report_metadata.py ${{ needs.stop-existing-benchmarks.outputs.date }}
          cp $resultDir/reports/index.html ../benchmarks-data-demo/gas/${{ needs.stop-existing-benchmarks.outputs.date }}.html
          cp $resultDir/reports/result.json ../benchmarks-data-demo/gas/${{ needs.stop-existing-benchmarks.outputs.date }}.json
          cp $resultDir/reports/metadata.json ../benchmarks-data-demo/gas/${{ needs.stop-existing-benchmarks.outputs.date }}.metadata.json
          set -e
        EOF

  run-genesis-init-speed-benchmarks:
    runs-on: ubuntu-latest
    needs: run-gas-benchmarks
    strategy:
      matrix:
        client: ${{ fromJson(github.event.inputs.clients) }}
        size: ${{ fromJson(github.event.inputs.sizes) }}
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}
    - name: Run genesis init speed benchmarks
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          echo "=== Run with date ${{ needs.run-gas-benchmarks.outputs.date }} === "
          cd ${{ github.event.inputs.root_dir }}/genesis-init-benchmarks
          resultDir="results-${{ needs.run-gas-benchmarks.outputs.date }}"
          mkdir -p speed-logs
          logFile="speed-logs/${{ needs.run-gas-benchmarks.outputs.date }}.log"
          git pull
          ./runSpeed.sh -t "tests/" -c "${{ matrix.client }}" -r ${{ github.event.inputs.repetitions }} -o "$resultDir/speed" -s "${{ matrix.size }}"
          python3 report_metadata.py ${{ needs.run-gas-benchmarks.outputs.date }} speed
          cp $resultDir/speed/reports/speed.html ../benchmarks-data-demo/genesis-init-speed/${{ needs.run-gas-benchmarks.outputs.date }}.html
          cp $resultDir/speed/reports/speed.json ../benchmarks-data-demo/genesis-init-speed/${{ needs.run-gas-benchmarks.outputs.date }}.json
          cp $resultDir/speed/reports/metadata.json ../benchmarks-data-demo/genesis-init-speed/${{ needs.run-gas-benchmarks.outputs.date }}.metadata.json
          set -e
        EOF

  run-genesis-init-memory-benchmarks:
    runs-on: ubuntu-latest
    needs: run-genesis-init-speed-benchmarks
    strategy:
      matrix:
        client: ${{ fromJson(github.event.inputs.clients) }}
        size: ${{ fromJson(github.event.inputs.sizes) }}
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}
    - name: Run genesis init memory benchmarks
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          echo "=== Run with date ${{ needs.run-genesis-init-memory-benchmarks.outputs.date }} === "
          cd ${{ github.event.inputs.root_dir }}/genesis-init-benchmarks
          resultDir="results-${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}"
          mkdir -p memory-logs
          logFile="memory-logs/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.log"
          git pull
          ./runMemory.sh -t "tests/" -c "${{ matrix.client }}" -r ${{ github.event.inputs.repetitions }} -o "$resultDir/memory" -s "${{ matrix.size }}"
          python3 report_metadata.py ${{ needs.run-genesis-init-memory-benchmarks.outputs.date }} memory
          cp $resultDir/memory/reports/memory.html ../benchmarks-data-demo/genesis-init-memory/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.html
          cp $resultDir/memory/reports/memory.json ../benchmarks-data-demo/genesis-init-memory/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.json
          cp $resultDir/memory/reports/metadata.json ../benchmarks-data-demo/genesis-init-memory/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.metadata.json
          set -e
        EOF

  run-burntpix-benchmarks:
    runs-on: ubuntu-latest
    needs: run-genesis-init-memory-benchmarks
    strategy:
      matrix:
        client: ${{ fromJson(github.event.inputs.clients) }}
        size: ${{ fromJson(github.event.inputs.sizes) }}
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}

    - name: Run burntpix benchmarks
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          echo "=== Run with date ${{ needs.run-genesis-init-memory-benchmarks.outputs.date }} === "
          cd ${{ github.event.inputs.root_dir }}/burntpix-benchmarks
          resultDir="results-${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}"
          mkdir -p logs
          logFile="logs/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.log"
          git pull
          ./run.sh -t "testburnt/" -w "./testburntwarm/warm.txt" -c "${{ matrix.client }}" -r ${{ github.event.inputs.repetitions }} -o $resultDir
          python3 report_metadata.py ${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}
          cp $resultDir/reports/index.html ../benchmarks-data-demo/burntpix/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.html
          cp $resultDir/reports/result.json ../benchmarks-data-demo/burntpix/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.json
          cp $resultDir/reports/metadata.json ../benchmarks-data-demo/burntpix/${{ needs.run-genesis-init-memory-benchmarks.outputs.date }}.metadata.json
          set -e
        EOF

  push-results:
    runs-on: ubuntu-latest
    needs: run-burntpix-benchmarks
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.PRIVKEY }}

    - name: Push results
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 root@${{ secrets.REMOTE_IP }} << 'EOF'
          set +e
          echo "=== Run with date ${{ needs.run-burntpix-benchmarks.outputs.date }} === "
          cd ${{ github.event.inputs.root_dir }}/benchmarks-data-demo
          git status
          ./push.sh
          set -e
        EOF